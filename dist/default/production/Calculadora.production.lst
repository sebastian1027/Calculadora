

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Thu Aug 31 16:27:15 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 1.43
    39                           ; Generated 25/07/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150                           
   151                           	psect	idataBANK0
   152  0800                     __pidataBANK0:	
   153                           
   154                           ;initializer for _b
   155  0800  3400               	retlw	0
   156  0801  34A0               	retlw	160
   157  0802  3440               	retlw	64
   158                           
   159                           ;initializer for _a
   160  0803  3400               	retlw	0
   161  0804  3420               	retlw	32
   162  0805  3441               	retlw	65
   163                           
   164                           	psect	stringtext
   165  1000                     __pstringtext:	
   166  1000                     stringtab:	
   167  1000                     __stringtab:	
   168                           
   169                           ;	String table - string pointers are 2 bytes each
   170  1000  1BFF               	btfsc	btemp+1,7
   171  1001  280A               	ljmp	stringcode
   172  1002  1383               	bcf	3,7
   173  1003  187F               	btfsc	btemp+1,0
   174  1004  1783               	bsf	3,7
   175  1005  0800               	movf	0,w
   176  1006  0A84               	incf	4,f
   177  1007  1903               	skipnz
   178  1008  0AFF               	incf	btemp+1,f
   179  1009  0008               	return
   180  100A                     stringcode:	
   181  100A  087F               	movf	btemp+1,w
   182  100B  397F               	andlw	127
   183  100C  008A               	movwf	10
   184  100D  0804               	movf	4,w
   185  100E  0A84               	incf	4,f
   186  100F  1903               	skipnz
   187  1010  0AFF               	incf	btemp+1,f
   188  1011  0082               	movwf	2
   189  1012                     __stringbase:	
   190  1012                     __end_of__stringtab:	
   191  1012                     _dpowers:	
   192  1012  3401               	retlw	1
   193  1013  3400               	retlw	0
   194  1014  3400               	retlw	0
   195  1015  3400               	retlw	0
   196  1016  340A               	retlw	10
   197  1017  3400               	retlw	0
   198  1018  3400               	retlw	0
   199  1019  3400               	retlw	0
   200  101A  3464               	retlw	100
   201  101B  3400               	retlw	0
   202  101C  3400               	retlw	0
   203  101D  3400               	retlw	0
   204  101E  34E8               	retlw	232
   205  101F  3403               	retlw	3
   206  1020  3400               	retlw	0
   207  1021  3400               	retlw	0
   208  1022  3410               	retlw	16
   209  1023  3427               	retlw	39
   210  1024  3400               	retlw	0
   211  1025  3400               	retlw	0
   212  1026  34A0               	retlw	160
   213  1027  3486               	retlw	134
   214  1028  3401               	retlw	1
   215  1029  3400               	retlw	0
   216  102A  3440               	retlw	64
   217  102B  3442               	retlw	66
   218  102C  340F               	retlw	15
   219  102D  3400               	retlw	0
   220  102E  3480               	retlw	128
   221  102F  3496               	retlw	150
   222  1030  3498               	retlw	152
   223  1031  3400               	retlw	0
   224  1032  3400               	retlw	0
   225  1033  34E1               	retlw	225
   226  1034  34F5               	retlw	245
   227  1035  3405               	retlw	5
   228  1036  3400               	retlw	0
   229  1037  34CA               	retlw	202
   230  1038  349A               	retlw	154
   231  1039  343B               	retlw	59
   232  103A                     __end_of_dpowers:	
   233  103A                     __powers_:	
   234  103A  3400               	retlw	0
   235  103B  3480               	retlw	128
   236  103C  343F               	retlw	63
   237  103D  3400               	retlw	0
   238  103E  3420               	retlw	32
   239  103F  3441               	retlw	65
   240  1040  3400               	retlw	0
   241  1041  34C8               	retlw	200
   242  1042  3442               	retlw	66
   243  1043  3400               	retlw	0
   244  1044  347A               	retlw	122
   245  1045  3444               	retlw	68
   246  1046  3440               	retlw	64
   247  1047  341C               	retlw	28
   248  1048  3446               	retlw	70
   249  1049  3450               	retlw	80
   250  104A  34C3               	retlw	195
   251  104B  3447               	retlw	71
   252  104C  3424               	retlw	36
   253  104D  3474               	retlw	116
   254  104E  3449               	retlw	73
   255  104F  3497               	retlw	151
   256  1050  3418               	retlw	24
   257  1051  344B               	retlw	75
   258  1052  34BC               	retlw	188
   259  1053  34BE               	retlw	190
   260  1054  344C               	retlw	76
   261  1055  346B               	retlw	107
   262  1056  346E               	retlw	110
   263  1057  344E               	retlw	78
   264  1058  3403               	retlw	3
   265  1059  3415               	retlw	21
   266  105A  3450               	retlw	80
   267  105B  3479               	retlw	121
   268  105C  34AD               	retlw	173
   269  105D  3460               	retlw	96
   270  105E  34F3               	retlw	243
   271  105F  3449               	retlw	73
   272  1060  3471               	retlw	113
   273  1061                     __end_of__powers_:	
   274  1061                     __npowers_:	
   275  1061  3400               	retlw	0
   276  1062  3480               	retlw	128
   277  1063  343F               	retlw	63
   278  1064  34CD               	retlw	205
   279  1065  34CC               	retlw	204
   280  1066  343D               	retlw	61
   281  1067  34D7               	retlw	215
   282  1068  3423               	retlw	35
   283  1069  343C               	retlw	60
   284  106A  3412               	retlw	18
   285  106B  3483               	retlw	131
   286  106C  343A               	retlw	58
   287  106D  34B7               	retlw	183
   288  106E  34D1               	retlw	209
   289  106F  3438               	retlw	56
   290  1070  34C6               	retlw	198
   291  1071  3427               	retlw	39
   292  1072  3437               	retlw	55
   293  1073  3438               	retlw	56
   294  1074  3486               	retlw	134
   295  1075  3435               	retlw	53
   296  1076  34C0               	retlw	192
   297  1077  34D6               	retlw	214
   298  1078  3433               	retlw	51
   299  1079  34CC               	retlw	204
   300  107A  342B               	retlw	43
   301  107B  3432               	retlw	50
   302  107C  3470               	retlw	112
   303  107D  3489               	retlw	137
   304  107E  3430               	retlw	48
   305  107F  34E7               	retlw	231
   306  1080  34DB               	retlw	219
   307  1081  342E               	retlw	46
   308  1082  34E5               	retlw	229
   309  1083  343C               	retlw	60
   310  1084  341E               	retlw	30
   311  1085  3442               	retlw	66
   312  1086  34A2               	retlw	162
   313  1087  340D               	retlw	13
   314  1088                     __end_of__npowers_:	
   315  0006                     _PORTBbits	set	6
   316  0006                     _PORTB	set	6
   317  0018                     _RCSTAbits	set	24
   318  0019                     _TXREG	set	25
   319  000C                     _PIR1bits	set	12
   320  0086                     _TRISB	set	134
   321  0098                     _TXSTAbits	set	152
   322  1088                     STR_9:	
   323  1088  3445               	retlw	69	;'E'
   324  1089  346C               	retlw	108	;'l'
   325  108A  3420               	retlw	32	;' '
   326  108B  3472               	retlw	114	;'r'
   327  108C  3465               	retlw	101	;'e'
   328  108D  3473               	retlw	115	;'s'
   329  108E  3475               	retlw	117	;'u'
   330  108F  346C               	retlw	108	;'l'
   331  1090  3474               	retlw	116	;'t'
   332  1091  3461               	retlw	97	;'a'
   333  1092  3464               	retlw	100	;'d'
   334  1093  346F               	retlw	111	;'o'
   335  1094  3420               	retlw	32	;' '
   336  1095  3464               	retlw	100	;'d'
   337  1096  3465               	retlw	101	;'e'
   338  1097  3420               	retlw	32	;' '
   339  1098  346C               	retlw	108	;'l'
   340  1099  3461               	retlw	97	;'a'
   341  109A  3420               	retlw	32	;' '
   342  109B  344D               	retlw	77	;'M'
   343  109C  3475               	retlw	117	;'u'
   344  109D  346C               	retlw	108	;'l'
   345  109E  3474               	retlw	116	;'t'
   346  109F  3469               	retlw	105	;'i'
   347  10A0  3470               	retlw	112	;'p'
   348  10A1  346C               	retlw	108	;'l'
   349  10A2  3469               	retlw	105	;'i'
   350  10A3  3463               	retlw	99	;'c'
   351  10A4  3461               	retlw	97	;'a'
   352  10A5  3463               	retlw	99	;'c'
   353  10A6  3469               	retlw	105	;'i'
   354  10A7  346F               	retlw	111	;'o'
   355  10A8  346E               	retlw	110	;'n'
   356  10A9  3420               	retlw	32	;' '
   357  10AA  3465               	retlw	101	;'e'
   358  10AB  3473               	retlw	115	;'s'
   359  10AC  343A               	retlw	58	;':'
   360  10AD  3420               	retlw	32	;' '
   361  10AE  3425               	retlw	37	;'%'
   362  10AF  3466               	retlw	102	;'f'
   363  10B0  340A               	retlw	10
   364  10B1  3400               	retlw	0
   365  10B2                     STR_10:	
   366  10B2  3445               	retlw	69	;'E'
   367  10B3  3472               	retlw	114	;'r'
   368  10B4  3472               	retlw	114	;'r'
   369  10B5  346F               	retlw	111	;'o'
   370  10B6  3472               	retlw	114	;'r'
   371  10B7  342C               	retlw	44	;','
   372  10B8  3420               	retlw	32	;' '
   373  10B9  346E               	retlw	110	;'n'
   374  10BA  346F               	retlw	111	;'o'
   375  10BB  3420               	retlw	32	;' '
   376  10BC  3465               	retlw	101	;'e'
   377  10BD  3473               	retlw	115	;'s'
   378  10BE  3420               	retlw	32	;' '
   379  10BF  3470               	retlw	112	;'p'
   380  10C0  346F               	retlw	111	;'o'
   381  10C1  3473               	retlw	115	;'s'
   382  10C2  3469               	retlw	105	;'i'
   383  10C3  3462               	retlw	98	;'b'
   384  10C4  346C               	retlw	108	;'l'
   385  10C5  3465               	retlw	101	;'e'
   386  10C6  3420               	retlw	32	;' '
   387  10C7  3464               	retlw	100	;'d'
   388  10C8  3469               	retlw	105	;'i'
   389  10C9  3476               	retlw	118	;'v'
   390  10CA  3469               	retlw	105	;'i'
   391  10CB  3464               	retlw	100	;'d'
   392  10CC  3469               	retlw	105	;'i'
   393  10CD  3472               	retlw	114	;'r'
   394  10CE  3420               	retlw	32	;' '
   395  10CF  3465               	retlw	101	;'e'
   396  10D0  346E               	retlw	110	;'n'
   397  10D1  3474               	retlw	116	;'t'
   398  10D2  3472               	retlw	114	;'r'
   399  10D3  3465               	retlw	101	;'e'
   400  10D4  3420               	retlw	32	;' '
   401  10D5  3430               	retlw	48	;'0'
   402  10D6  342E               	retlw	46	;'.'
   403  10D7  340A               	retlw	10
   404  10D8  3400               	retlw	0
   405  10D9                     STR_1:	
   406  10D9  342A               	retlw	42	;'*'
   407  10DA  342A               	retlw	42	;'*'
   408  10DB  342A               	retlw	42	;'*'
   409  10DC  342A               	retlw	42	;'*'
   410  10DD  342A               	retlw	42	;'*'
   411  10DE  342A               	retlw	42	;'*'
   412  10DF  342A               	retlw	42	;'*'
   413  10E0  342A               	retlw	42	;'*'
   414  10E1  342A               	retlw	42	;'*'
   415  10E2  342A               	retlw	42	;'*'
   416  10E3  342A               	retlw	42	;'*'
   417  10E4  342A               	retlw	42	;'*'
   418  10E5  342A               	retlw	42	;'*'
   419  10E6  342A               	retlw	42	;'*'
   420  10E7  342A               	retlw	42	;'*'
   421  10E8  342A               	retlw	42	;'*'
   422  10E9  342A               	retlw	42	;'*'
   423  10EA  342A               	retlw	42	;'*'
   424  10EB  342A               	retlw	42	;'*'
   425  10EC  342A               	retlw	42	;'*'
   426  10ED  342A               	retlw	42	;'*'
   427  10EE  342A               	retlw	42	;'*'
   428  10EF  342A               	retlw	42	;'*'
   429  10F0  342A               	retlw	42	;'*'
   430  10F1  342A               	retlw	42	;'*'
   431  10F2  342A               	retlw	42	;'*'
   432  10F3  342A               	retlw	42	;'*'
   433  10F4  342A               	retlw	42	;'*'
   434  10F5  342A               	retlw	42	;'*'
   435  10F6  342A               	retlw	42	;'*'
   436  10F7  342A               	retlw	42	;'*'
   437  10F8  342A               	retlw	42	;'*'
   438  10F9  342A               	retlw	42	;'*'
   439  10FA  342A               	retlw	42	;'*'
   440  10FB  342A               	retlw	42	;'*'
   441  10FC  342A               	retlw	42	;'*'
   442  10FD  340A               	retlw	10
   443  10FE  3400               	retlw	0
   444  10FF                     STR_4:	
   445  10FF  342A               	retlw	42	;'*'
   446  1100  342A               	retlw	42	;'*'
   447  1101  342A               	retlw	42	;'*'
   448  1102  342A               	retlw	42	;'*'
   449  1103  342A               	retlw	42	;'*'
   450  1104  3420               	retlw	32	;' '
   451  1105  3420               	retlw	32	;' '
   452  1106  3433               	retlw	51	;'3'
   453  1107  342E               	retlw	46	;'.'
   454  1108  3420               	retlw	32	;' '
   455  1109  344D               	retlw	77	;'M'
   456  110A  3475               	retlw	117	;'u'
   457  110B  346C               	retlw	108	;'l'
   458  110C  3474               	retlw	116	;'t'
   459  110D  3469               	retlw	105	;'i'
   460  110E  3470               	retlw	112	;'p'
   461  110F  346C               	retlw	108	;'l'
   462  1110  3469               	retlw	105	;'i'
   463  1111  3463               	retlw	99	;'c'
   464  1112  3461               	retlw	97	;'a'
   465  1113  3463               	retlw	99	;'c'
   466  1114  3469               	retlw	105	;'i'
   467  1115  346F               	retlw	111	;'o'
   468  1116  346E               	retlw	110	;'n'
   469  1117  3420               	retlw	32	;' '
   470  1118  3420               	retlw	32	;' '
   471  1119  342A               	retlw	42	;'*'
   472  111A  342A               	retlw	42	;'*'
   473  111B  342A               	retlw	42	;'*'
   474  111C  342A               	retlw	42	;'*'
   475  111D  342A               	retlw	42	;'*'
   476  111E  342A               	retlw	42	;'*'
   477  111F  342A               	retlw	42	;'*'
   478  1120  342A               	retlw	42	;'*'
   479  1121  340A               	retlw	10
   480  1122  3400               	retlw	0
   481  1123                     STR_2:	
   482  1123  342A               	retlw	42	;'*'
   483  1124  342A               	retlw	42	;'*'
   484  1125  342A               	retlw	42	;'*'
   485  1126  342A               	retlw	42	;'*'
   486  1127  342A               	retlw	42	;'*'
   487  1128  342A               	retlw	42	;'*'
   488  1129  3420               	retlw	32	;' '
   489  112A  3420               	retlw	32	;' '
   490  112B  3420               	retlw	32	;' '
   491  112C  3420               	retlw	32	;' '
   492  112D  3420               	retlw	32	;' '
   493  112E  3420               	retlw	32	;' '
   494  112F  3431               	retlw	49	;'1'
   495  1130  342E               	retlw	46	;'.'
   496  1131  3420               	retlw	32	;' '
   497  1132  3453               	retlw	83	;'S'
   498  1133  3475               	retlw	117	;'u'
   499  1134  346D               	retlw	109	;'m'
   500  1135  3461               	retlw	97	;'a'
   501  1136  3420               	retlw	32	;' '
   502  1137  3420               	retlw	32	;' '
   503  1138  3420               	retlw	32	;' '
   504  1139  3420               	retlw	32	;' '
   505  113A  3420               	retlw	32	;' '
   506  113B  3420               	retlw	32	;' '
   507  113C  342A               	retlw	42	;'*'
   508  113D  342A               	retlw	42	;'*'
   509  113E  342A               	retlw	42	;'*'
   510  113F  342A               	retlw	42	;'*'
   511  1140  342A               	retlw	42	;'*'
   512  1141  342A               	retlw	42	;'*'
   513  1142  342A               	retlw	42	;'*'
   514  1143  342A               	retlw	42	;'*'
   515  1144  342A               	retlw	42	;'*'
   516  1145  340A               	retlw	10
   517  1146  3400               	retlw	0
   518  1147                     STR_3:	
   519  1147  342A               	retlw	42	;'*'
   520  1148  342A               	retlw	42	;'*'
   521  1149  342A               	retlw	42	;'*'
   522  114A  342A               	retlw	42	;'*'
   523  114B  342A               	retlw	42	;'*'
   524  114C  342A               	retlw	42	;'*'
   525  114D  3420               	retlw	32	;' '
   526  114E  3420               	retlw	32	;' '
   527  114F  3420               	retlw	32	;' '
   528  1150  3420               	retlw	32	;' '
   529  1151  3420               	retlw	32	;' '
   530  1152  3420               	retlw	32	;' '
   531  1153  3432               	retlw	50	;'2'
   532  1154  342E               	retlw	46	;'.'
   533  1155  3420               	retlw	32	;' '
   534  1156  3452               	retlw	82	;'R'
   535  1157  3465               	retlw	101	;'e'
   536  1158  3473               	retlw	115	;'s'
   537  1159  3474               	retlw	116	;'t'
   538  115A  3461               	retlw	97	;'a'
   539  115B  3420               	retlw	32	;' '
   540  115C  3420               	retlw	32	;' '
   541  115D  3420               	retlw	32	;' '
   542  115E  3420               	retlw	32	;' '
   543  115F  3420               	retlw	32	;' '
   544  1160  342A               	retlw	42	;'*'
   545  1161  342A               	retlw	42	;'*'
   546  1162  342A               	retlw	42	;'*'
   547  1163  342A               	retlw	42	;'*'
   548  1164  342A               	retlw	42	;'*'
   549  1165  342A               	retlw	42	;'*'
   550  1166  342A               	retlw	42	;'*'
   551  1167  342A               	retlw	42	;'*'
   552  1168  342A               	retlw	42	;'*'
   553  1169  340A               	retlw	10
   554  116A  3400               	retlw	0
   555  116B                     STR_5:	
   556  116B  342A               	retlw	42	;'*'
   557  116C  342A               	retlw	42	;'*'
   558  116D  342A               	retlw	42	;'*'
   559  116E  342A               	retlw	42	;'*'
   560  116F  342A               	retlw	42	;'*'
   561  1170  342A               	retlw	42	;'*'
   562  1171  3420               	retlw	32	;' '
   563  1172  3420               	retlw	32	;' '
   564  1173  3420               	retlw	32	;' '
   565  1174  3420               	retlw	32	;' '
   566  1175  3420               	retlw	32	;' '
   567  1176  3434               	retlw	52	;'4'
   568  1177  342E               	retlw	46	;'.'
   569  1178  3420               	retlw	32	;' '
   570  1179  3444               	retlw	68	;'D'
   571  117A  3469               	retlw	105	;'i'
   572  117B  3476               	retlw	118	;'v'
   573  117C  3469               	retlw	105	;'i'
   574  117D  3473               	retlw	115	;'s'
   575  117E  3469               	retlw	105	;'i'
   576  117F  346F               	retlw	111	;'o'
   577  1180  346E               	retlw	110	;'n'
   578  1181  3420               	retlw	32	;' '
   579  1182  3420               	retlw	32	;' '
   580  1183  3420               	retlw	32	;' '
   581  1184  342A               	retlw	42	;'*'
   582  1185  342A               	retlw	42	;'*'
   583  1186  342A               	retlw	42	;'*'
   584  1187  342A               	retlw	42	;'*'
   585  1188  342A               	retlw	42	;'*'
   586  1189  342A               	retlw	42	;'*'
   587  118A  342A               	retlw	42	;'*'
   588  118B  342A               	retlw	42	;'*'
   589  118C  342A               	retlw	42	;'*'
   590  118D  340A               	retlw	10
   591  118E  3400               	retlw	0
   592  118F                     STR_11:	
   593  118F  3445               	retlw	69	;'E'
   594  1190  346C               	retlw	108	;'l'
   595  1191  3420               	retlw	32	;' '
   596  1192  3472               	retlw	114	;'r'
   597  1193  3465               	retlw	101	;'e'
   598  1194  3473               	retlw	115	;'s'
   599  1195  3475               	retlw	117	;'u'
   600  1196  346C               	retlw	108	;'l'
   601  1197  3474               	retlw	116	;'t'
   602  1198  3461               	retlw	97	;'a'
   603  1199  3464               	retlw	100	;'d'
   604  119A  346F               	retlw	111	;'o'
   605  119B  3420               	retlw	32	;' '
   606  119C  3464               	retlw	100	;'d'
   607  119D  3465               	retlw	101	;'e'
   608  119E  3420               	retlw	32	;' '
   609  119F  346C               	retlw	108	;'l'
   610  11A0  3461               	retlw	97	;'a'
   611  11A1  3420               	retlw	32	;' '
   612  11A2  3444               	retlw	68	;'D'
   613  11A3  3469               	retlw	105	;'i'
   614  11A4  3476               	retlw	118	;'v'
   615  11A5  3469               	retlw	105	;'i'
   616  11A6  3473               	retlw	115	;'s'
   617  11A7  3469               	retlw	105	;'i'
   618  11A8  346F               	retlw	111	;'o'
   619  11A9  346E               	retlw	110	;'n'
   620  11AA  3420               	retlw	32	;' '
   621  11AB  3465               	retlw	101	;'e'
   622  11AC  3473               	retlw	115	;'s'
   623  11AD  343A               	retlw	58	;':'
   624  11AE  3420               	retlw	32	;' '
   625  11AF  3425               	retlw	37	;'%'
   626  11B0  3466               	retlw	102	;'f'
   627  11B1  340A               	retlw	10
   628  11B2  3400               	retlw	0
   629  11B3                     STR_8:	
   630  11B3  3445               	retlw	69	;'E'
   631  11B4  346C               	retlw	108	;'l'
   632  11B5  3420               	retlw	32	;' '
   633  11B6  3472               	retlw	114	;'r'
   634  11B7  3465               	retlw	101	;'e'
   635  11B8  3473               	retlw	115	;'s'
   636  11B9  3475               	retlw	117	;'u'
   637  11BA  346C               	retlw	108	;'l'
   638  11BB  3474               	retlw	116	;'t'
   639  11BC  3461               	retlw	97	;'a'
   640  11BD  3464               	retlw	100	;'d'
   641  11BE  346F               	retlw	111	;'o'
   642  11BF  3420               	retlw	32	;' '
   643  11C0  3464               	retlw	100	;'d'
   644  11C1  3465               	retlw	101	;'e'
   645  11C2  3420               	retlw	32	;' '
   646  11C3  346C               	retlw	108	;'l'
   647  11C4  3461               	retlw	97	;'a'
   648  11C5  3420               	retlw	32	;' '
   649  11C6  3452               	retlw	82	;'R'
   650  11C7  3465               	retlw	101	;'e'
   651  11C8  3473               	retlw	115	;'s'
   652  11C9  3474               	retlw	116	;'t'
   653  11CA  3461               	retlw	97	;'a'
   654  11CB  3420               	retlw	32	;' '
   655  11CC  3465               	retlw	101	;'e'
   656  11CD  3473               	retlw	115	;'s'
   657  11CE  343A               	retlw	58	;':'
   658  11CF  3420               	retlw	32	;' '
   659  11D0  3425               	retlw	37	;'%'
   660  11D1  3466               	retlw	102	;'f'
   661  11D2  340A               	retlw	10
   662  11D3  3400               	retlw	0
   663  11D4                     STR_7:	
   664  11D4  3445               	retlw	69	;'E'
   665  11D5  346C               	retlw	108	;'l'
   666  11D6  3420               	retlw	32	;' '
   667  11D7  3472               	retlw	114	;'r'
   668  11D8  3465               	retlw	101	;'e'
   669  11D9  3473               	retlw	115	;'s'
   670  11DA  3475               	retlw	117	;'u'
   671  11DB  346C               	retlw	108	;'l'
   672  11DC  3474               	retlw	116	;'t'
   673  11DD  3461               	retlw	97	;'a'
   674  11DE  3464               	retlw	100	;'d'
   675  11DF  346F               	retlw	111	;'o'
   676  11E0  3420               	retlw	32	;' '
   677  11E1  3464               	retlw	100	;'d'
   678  11E2  3465               	retlw	101	;'e'
   679  11E3  3420               	retlw	32	;' '
   680  11E4  346C               	retlw	108	;'l'
   681  11E5  3461               	retlw	97	;'a'
   682  11E6  3420               	retlw	32	;' '
   683  11E7  3453               	retlw	83	;'S'
   684  11E8  3475               	retlw	117	;'u'
   685  11E9  346D               	retlw	109	;'m'
   686  11EA  3461               	retlw	97	;'a'
   687  11EB  3420               	retlw	32	;' '
   688  11EC  3465               	retlw	101	;'e'
   689  11ED  3473               	retlw	115	;'s'
   690  11EE  343A               	retlw	58	;':'
   691  11EF  3420               	retlw	32	;' '
   692  11F0  3425               	retlw	37	;'%'
   693  11F1  3466               	retlw	102	;'f'
   694  11F2  340A               	retlw	10
   695  11F3  3400               	retlw	0
   696  11F4                     STR_12:	
   697  11F4  344F               	retlw	79	;'O'
   698  11F5  3470               	retlw	112	;'p'
   699  11F6  3463               	retlw	99	;'c'
   700  11F7  3469               	retlw	105	;'i'
   701  11F8  346F               	retlw	111	;'o'
   702  11F9  346E               	retlw	110	;'n'
   703  11FA  3420               	retlw	32	;' '
   704  11FB  3449               	retlw	73	;'I'
   705  11FC  346E               	retlw	110	;'n'
   706  11FD  3463               	retlw	99	;'c'
   707  11FE  346F               	retlw	111	;'o'
   708  11FF  3472               	retlw	114	;'r'
   709  1200  3472               	retlw	114	;'r'
   710  1201  3465               	retlw	101	;'e'
   711  1202  3463               	retlw	99	;'c'
   712  1203  3474               	retlw	116	;'t'
   713  1204  3461               	retlw	97	;'a'
   714  1205  340A               	retlw	10
   715  1206  3420               	retlw	32	;' '
   716  1207  3400               	retlw	0
   717  10D9                     
   718                           	psect	cinit
   719  07C7                     start_initialization:	
   720                           ; #config settings
   721                           
   722  07C7                     __initialization:	
   723                           
   724                           ; Initialize objects allocated to BANK0
   725  07C7  120A  158A  2000  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   726  07CC  00E5               	movwf	__pdataBANK0& (0+127)
   727  07CD  120A  158A  2001  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   728  07D2  00E6               	movwf	(__pdataBANK0+1)& (0+127)
   729  07D3  120A  158A  2002  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   730  07D8  00E7               	movwf	(__pdataBANK0+2)& (0+127)
   731  07D9  120A  158A  2003  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   732  07DE  00E8               	movwf	(__pdataBANK0+3)& (0+127)
   733  07DF  120A  158A  2004  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   734  07E4  00E9               	movwf	(__pdataBANK0+4)& (0+127)
   735  07E5  120A  158A  2005   	fcall	__pidataBANK0+5	;fetch initializer
   736  07E8  00EA               	movwf	(__pdataBANK0+5)& (0+127)
   737                           
   738                           ; Clear objects allocated to BANK1
   739  07E9  1683               	bsf	3,5	;RP0=1, select bank1
   740  07EA  1303               	bcf	3,6	;RP1=0, select bank1
   741  07EB  01B6               	clrf	__pbssBANK1& (0+127)
   742  07EC  01B7               	clrf	(__pbssBANK1+1)& (0+127)
   743  07ED  01B8               	clrf	(__pbssBANK1+2)& (0+127)
   744  07EE  01B9               	clrf	(__pbssBANK1+3)& (0+127)
   745  07EF  01BA               	clrf	(__pbssBANK1+4)& (0+127)
   746  07F0  01BB               	clrf	(__pbssBANK1+5)& (0+127)
   747  07F1  01BC               	clrf	(__pbssBANK1+6)& (0+127)
   748  07F2  01BD               	clrf	(__pbssBANK1+7)& (0+127)
   749  07F3  01BE               	clrf	(__pbssBANK1+8)& (0+127)
   750  07F4  01BF               	clrf	(__pbssBANK1+9)& (0+127)
   751  07F5  01C0               	clrf	(__pbssBANK1+10)& (0+127)
   752  07F6  01C1               	clrf	(__pbssBANK1+11)& (0+127)
   753                           
   754                           ; Clear objects allocated to BANK0
   755  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   756  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   757  07F9  01EB               	clrf	__pbssBANK0& (0+127)
   758  07FA  01EC               	clrf	(__pbssBANK0+1)& (0+127)
   759  07FB  01ED               	clrf	(__pbssBANK0+2)& (0+127)
   760  07FC                     end_of_initialization:	
   761                           ;End of C runtime variable initialization code
   762                           
   763  07FC                     __end_of__initialization:	
   764  07FC  0183               	clrf	3
   765  07FD  120A  158A  2BB3   	ljmp	_main	;jump to C main() function
   766                           
   767                           	psect	bssBANK0
   768  006B                     __pbssBANK0:	
   769  006B                     _suma:	
   770  006B                     	ds	3
   771                           
   772                           	psect	dataBANK0
   773  0065                     __pdataBANK0:	
   774  0065                     _b:	
   775  0065                     	ds	3
   776  0068                     _a:	
   777  0068                     	ds	3
   778                           
   779                           	psect	bssBANK1
   780  00B6                     __pbssBANK1:	
   781  00B6                     _division:	
   782  00B6                     	ds	3
   783  00B9                     _multiplicacion:	
   784  00B9                     	ds	3
   785  00BC                     _resta:	
   786  00BC                     	ds	3
   787  00BF                     _resultado:	
   788  00BF                     	ds	3
   789                           
   790                           	psect	cstackBANK1
   791  00A0                     __pcstackBANK1:	
   792  00A0                     _printf$663:	
   793                           
   794                           ; 3 bytes @ 0x0
   795  00A0                     	ds	3
   796  00A3                     printf@ap:	
   797                           
   798                           ; 1 bytes @ 0x3
   799  00A3                     	ds	1
   800  00A4                     printf@flag:	
   801                           
   802                           ; 2 bytes @ 0x4
   803  00A4                     	ds	2
   804  00A6                     printf@prec:	
   805                           
   806                           ; 2 bytes @ 0x6
   807  00A6                     	ds	2
   808  00A8                     printf@val:	
   809                           
   810                           ; 4 bytes @ 0x8
   811  00A8                     	ds	4
   812  00AC                     printf@exp:	
   813                           
   814                           ; 2 bytes @ 0xC
   815  00AC                     	ds	2
   816  00AE                     printf@tmpval:	
   817                           
   818                           ; 4 bytes @ 0xE
   819  00AE                     	ds	4
   820  00B2                     printf@fval:	
   821                           
   822                           ; 3 bytes @ 0x12
   823  00B2                     	ds	3
   824  00B5                     printf@c:	
   825                           
   826                           ; 1 bytes @ 0x15
   827  00B5                     	ds	1
   828                           
   829                           	psect	cstackCOMMON
   830  0070                     __pcstackCOMMON:	
   831  0070                     ?___ftge:	
   832  0070                     ?_putch:	
   833                           ; 1 bit 
   834                           
   835  0070                     ??_putch:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     ?_iniciar_uart:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ??_iniciar_uart:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?_main:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ?___wmul:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ?___awmod:	
   851                           ; 2 bytes @ 0x0
   852                           
   853  0070                     ?___ftpack:	
   854                           ; 2 bytes @ 0x0
   855                           
   856  0070                     ?___ftneg:	
   857                           ; 3 bytes @ 0x0
   858                           
   859  0070                     ?__tdiv_to_l_:	
   860                           ; 3 bytes @ 0x0
   861                           
   862  0070                     ?__div_to_l_:	
   863                           ; 4 bytes @ 0x0
   864                           
   865  0070                     ?___lldiv:	
   866                           ; 4 bytes @ 0x0
   867                           
   868  0070                     ?___llmod:	
   869                           ; 4 bytes @ 0x0
   870                           
   871  0070                     putch@dato:	
   872                           ; 4 bytes @ 0x0
   873                           
   874  0070                     ___wmul@multiplier:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ___awmod@divisor:	
   878                           ; 2 bytes @ 0x0
   879                           
   880  0070                     __div_to_l_@f1:	
   881                           ; 2 bytes @ 0x0
   882                           
   883  0070                     ___ftpack@arg:	
   884                           ; 3 bytes @ 0x0
   885                           
   886  0070                     __tdiv_to_l_@f1:	
   887                           ; 3 bytes @ 0x0
   888                           
   889  0070                     ___ftge@ff1:	
   890                           ; 3 bytes @ 0x0
   891                           
   892  0070                     ___ftneg@f1:	
   893                           ; 3 bytes @ 0x0
   894                           
   895  0070                     ___lldiv@divisor:	
   896                           ; 3 bytes @ 0x0
   897                           
   898  0070                     ___llmod@divisor:	
   899                           ; 4 bytes @ 0x0
   900                           
   901                           
   902                           ; 4 bytes @ 0x0
   903  0070                     	ds	2
   904  0072                     ___wmul@multiplicand:	
   905  0072                     ___awmod@dividend:	
   906                           ; 2 bytes @ 0x2
   907                           
   908                           
   909                           ; 2 bytes @ 0x2
   910  0072                     	ds	1
   911  0073                     ??___ftneg:	
   912  0073                     ___ftpack@exp:	
   913                           ; 1 bytes @ 0x3
   914                           
   915  0073                     __div_to_l_@f2:	
   916                           ; 1 bytes @ 0x3
   917                           
   918  0073                     __tdiv_to_l_@f2:	
   919                           ; 3 bytes @ 0x3
   920                           
   921  0073                     ___ftge@ff2:	
   922                           ; 3 bytes @ 0x3
   923                           
   924                           
   925                           ; 3 bytes @ 0x3
   926  0073                     	ds	1
   927  0074                     ??___wmul:	
   928  0074                     ??___awmod:	
   929                           ; 1 bytes @ 0x4
   930                           
   931  0074                     ___ftpack@sign:	
   932                           ; 1 bytes @ 0x4
   933                           
   934  0074                     ___wmul@product:	
   935                           ; 1 bytes @ 0x4
   936                           
   937  0074                     ___lldiv@dividend:	
   938                           ; 2 bytes @ 0x4
   939                           
   940  0074                     ___llmod@dividend:	
   941                           ; 4 bytes @ 0x4
   942                           
   943                           
   944                           ; 4 bytes @ 0x4
   945  0074                     	ds	1
   946  0075                     ??___ftpack:	
   947  0075                     ___awmod@counter:	
   948                           ; 1 bytes @ 0x5
   949                           
   950                           
   951                           ; 1 bytes @ 0x5
   952  0075                     	ds	1
   953  0076                     ??__tdiv_to_l_:	
   954  0076                     ??__div_to_l_:	
   955                           ; 1 bytes @ 0x6
   956                           
   957  0076                     ??___ftge:	
   958                           ; 1 bytes @ 0x6
   959                           
   960  0076                     ___awmod@sign:	
   961                           ; 1 bytes @ 0x6
   962                           
   963                           
   964                           ; 1 bytes @ 0x6
   965  0076                     	ds	1
   966  0077                     ?___awdiv:	
   967  0077                     ___awdiv@divisor:	
   968                           ; 2 bytes @ 0x7
   969                           
   970                           
   971                           ; 2 bytes @ 0x7
   972  0077                     	ds	1
   973  0078                     ??___lldiv:	
   974  0078                     ??___llmod:	
   975                           ; 1 bytes @ 0x8
   976                           
   977  0078                     ?___ftdiv:	
   978                           ; 1 bytes @ 0x8
   979                           
   980  0078                     ?___lltoft:	
   981                           ; 3 bytes @ 0x8
   982                           
   983  0078                     ___ftdiv@f2:	
   984                           ; 3 bytes @ 0x8
   985                           
   986  0078                     ___lltoft@c:	
   987                           ; 3 bytes @ 0x8
   988                           
   989                           
   990                           ; 4 bytes @ 0x8
   991  0078                     	ds	1
   992  0079                     ___llmod@counter:	
   993  0079                     ___awdiv@dividend:	
   994                           ; 1 bytes @ 0x9
   995                           
   996  0079                     ___lldiv@quotient:	
   997                           ; 2 bytes @ 0x9
   998                           
   999                           
  1000                           ; 4 bytes @ 0x9
  1001  0079                     	ds	2
  1002  007B                     ??___awdiv:	
  1003  007B                     ___ftdiv@f1:	
  1004                           ; 1 bytes @ 0xB
  1005                           
  1006                           
  1007                           ; 3 bytes @ 0xB
  1008  007B                     	ds	1
  1009  007C                     ??___bmul:	
  1010  007C                     ??___lltoft:	
  1011                           ; 1 bytes @ 0xC
  1012                           
  1013                           
  1014                           ; 1 bytes @ 0xC
  1015  007C                     	ds	1
  1016  007D                     ___lldiv@counter:	
  1017  007D                     ___lltoft@exp:	
  1018                           ; 1 bytes @ 0xD
  1019                           
  1020                           
  1021                           ; 1 bytes @ 0xD
  1022  007D                     	ds	1
  1023  007E                     ??_main:	
  1024  007E                     ??___ftsub:	
  1025                           ; 1 bytes @ 0xE
  1026                           
  1027                           
  1028                           	psect	cstackBANK0
  1029  0020                     __pcstackBANK0:	
  1030                           ; 1 bytes @ 0xE
  1031                           
  1032  0020                     ??___ftdiv:	
  1033  0020                     ___awdiv@counter:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036  0020                     __div_to_l_@quot:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039  0020                     __tdiv_to_l_@quot:	
  1040                           ; 4 bytes @ 0x0
  1041                           
  1042                           
  1043                           ; 4 bytes @ 0x0
  1044  0020                     	ds	1
  1045  0021                     ___awdiv@sign:	
  1046                           
  1047                           ; 1 bytes @ 0x1
  1048  0021                     	ds	1
  1049  0022                     ___awdiv@quotient:	
  1050                           
  1051                           ; 2 bytes @ 0x2
  1052  0022                     	ds	2
  1053  0024                     ?___bmul:	
  1054  0024                     ___bmul@multiplicand:	
  1055                           ; 1 bytes @ 0x4
  1056                           
  1057  0024                     __div_to_l_@cntr:	
  1058                           ; 1 bytes @ 0x4
  1059                           
  1060  0024                     ___ftdiv@cntr:	
  1061                           ; 1 bytes @ 0x4
  1062                           
  1063  0024                     __tdiv_to_l_@cntr:	
  1064                           ; 1 bytes @ 0x4
  1065                           
  1066                           
  1067                           ; 1 bytes @ 0x4
  1068  0024                     	ds	1
  1069  0025                     ___bmul@product:	
  1070  0025                     __div_to_l_@exp1:	
  1071                           ; 1 bytes @ 0x5
  1072                           
  1073  0025                     __tdiv_to_l_@exp1:	
  1074                           ; 1 bytes @ 0x5
  1075                           
  1076  0025                     ___ftdiv@f3:	
  1077                           ; 1 bytes @ 0x5
  1078                           
  1079                           
  1080                           ; 3 bytes @ 0x5
  1081  0025                     	ds	1
  1082  0026                     ___bmul@multiplier:	
  1083                           
  1084                           ; 1 bytes @ 0x6
  1085  0026                     	ds	1
  1086  0027                     ?___ftmul:	
  1087  0027                     ___ftmul@f1:	
  1088                           ; 3 bytes @ 0x7
  1089                           
  1090                           
  1091                           ; 3 bytes @ 0x7
  1092  0027                     	ds	1
  1093  0028                     ___ftdiv@exp:	
  1094                           
  1095                           ; 1 bytes @ 0x8
  1096  0028                     	ds	1
  1097  0029                     ___ftdiv@sign:	
  1098                           
  1099                           ; 1 bytes @ 0x9
  1100  0029                     	ds	1
  1101  002A                     ___ftmul@f2:	
  1102                           
  1103                           ; 3 bytes @ 0xA
  1104  002A                     	ds	3
  1105  002D                     ??___ftmul:	
  1106                           
  1107                           ; 1 bytes @ 0xD
  1108  002D                     	ds	4
  1109  0031                     ___ftmul@exp:	
  1110                           
  1111                           ; 1 bytes @ 0x11
  1112  0031                     	ds	1
  1113  0032                     ___ftmul@f3_as_product:	
  1114                           
  1115                           ; 3 bytes @ 0x12
  1116  0032                     	ds	3
  1117  0035                     ___ftmul@cntr:	
  1118                           
  1119                           ; 1 bytes @ 0x15
  1120  0035                     	ds	1
  1121  0036                     ___ftmul@sign:	
  1122                           
  1123                           ; 1 bytes @ 0x16
  1124  0036                     	ds	1
  1125  0037                     ?_fround:	
  1126  0037                     ?_scale:	
  1127                           ; 3 bytes @ 0x17
  1128                           
  1129                           
  1130                           ; 3 bytes @ 0x17
  1131  0037                     	ds	3
  1132  003A                     ??_fround:	
  1133  003A                     ??_scale:	
  1134                           ; 1 bytes @ 0x1A
  1135                           
  1136                           
  1137                           ; 1 bytes @ 0x1A
  1138  003A                     	ds	2
  1139  003C                     _scale$662:	
  1140                           
  1141                           ; 3 bytes @ 0x1C
  1142  003C                     	ds	3
  1143  003F                     scale@scl:	
  1144                           
  1145                           ; 1 bytes @ 0x1F
  1146  003F                     	ds	1
  1147  0040                     ?___fttol:	
  1148  0040                     ___fttol@f1:	
  1149                           ; 4 bytes @ 0x20
  1150                           
  1151  0040                     _fround$661:	
  1152                           ; 3 bytes @ 0x20
  1153                           
  1154                           
  1155                           ; 3 bytes @ 0x20
  1156  0040                     	ds	3
  1157  0043                     _fround$660:	
  1158                           
  1159                           ; 3 bytes @ 0x23
  1160  0043                     	ds	1
  1161  0044                     ??___fttol:	
  1162                           
  1163                           ; 1 bytes @ 0x24
  1164  0044                     	ds	2
  1165  0046                     fround@prec:	
  1166                           
  1167                           ; 1 bytes @ 0x26
  1168  0046                     	ds	1
  1169  0047                     ?___ftadd:	
  1170  0047                     ___ftadd@f1:	
  1171                           ; 3 bytes @ 0x27
  1172                           
  1173                           
  1174                           ; 3 bytes @ 0x27
  1175  0047                     	ds	1
  1176  0048                     ___fttol@sign1:	
  1177                           
  1178                           ; 1 bytes @ 0x28
  1179  0048                     	ds	1
  1180  0049                     ___fttol@lval:	
  1181                           
  1182                           ; 4 bytes @ 0x29
  1183  0049                     	ds	1
  1184  004A                     ___ftadd@f2:	
  1185                           
  1186                           ; 3 bytes @ 0x2A
  1187  004A                     	ds	3
  1188  004D                     ??___ftadd:	
  1189  004D                     ___fttol@exp1:	
  1190                           ; 1 bytes @ 0x2D
  1191                           
  1192                           
  1193                           ; 1 bytes @ 0x2D
  1194  004D                     	ds	4
  1195  0051                     ___ftadd@sign:	
  1196                           
  1197                           ; 1 bytes @ 0x31
  1198  0051                     	ds	1
  1199  0052                     ___ftadd@exp2:	
  1200                           
  1201                           ; 1 bytes @ 0x32
  1202  0052                     	ds	1
  1203  0053                     ___ftadd@exp1:	
  1204                           
  1205                           ; 1 bytes @ 0x33
  1206  0053                     	ds	1
  1207  0054                     ?___ftsub:	
  1208  0054                     ___ftsub@f2:	
  1209                           ; 3 bytes @ 0x34
  1210                           
  1211                           
  1212                           ; 3 bytes @ 0x34
  1213  0054                     	ds	3
  1214  0057                     ___ftsub@f1:	
  1215                           
  1216                           ; 3 bytes @ 0x37
  1217  0057                     	ds	3
  1218  005A                     ?_printf:	
  1219  005A                     printf@f:	
  1220                           ; 2 bytes @ 0x3A
  1221                           
  1222                           
  1223                           ; 2 bytes @ 0x3A
  1224  005A                     	ds	5
  1225  005F                     ??_printf:	
  1226                           
  1227                           ; 1 bytes @ 0x3F
  1228  005F                     	ds	6
  1229                           
  1230                           	psect	maintext
  1231  0BB3                     __pmaintext:	
  1232 ;;
  1233 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1234 ;;
  1235 ;; *************** function _main *****************
  1236 ;; Defined at:
  1237 ;;		line 19 in file "Calculadora.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;		None
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;		None
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : B00/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1251 ;;      Params:         0       0       0       0       0
  1252 ;;      Locals:         0       0       0       0       0
  1253 ;;      Temps:          0       0       0       0       0
  1254 ;;      Totals:         0       0       0       0       0
  1255 ;;Total ram usage:        0 bytes
  1256 ;; Hardware stack levels required when called:    4
  1257 ;; This function calls:
  1258 ;;		___ftadd
  1259 ;;		___ftdiv
  1260 ;;		___ftmul
  1261 ;;		___ftneg
  1262 ;;		_iniciar_uart
  1263 ;;		_printf
  1264 ;; This function is called by:
  1265 ;;		Startup code after reset
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           
  1270                           ;psect for function _main
  1271  0BB3                     _main:	
  1272                           
  1273                           ;Calculadora.c: 21: TRISB = 0b11111111;
  1274                           
  1275                           ;incstack = 0
  1276                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1277  0BB3  30FF               	movlw	255
  1278  0BB4  1683               	bsf	3,5	;RP0=1, select bank1
  1279  0BB5  1303               	bcf	3,6	;RP1=0, select bank1
  1280  0BB6  0086               	movwf	6	;volatile
  1281                           
  1282                           ;Calculadora.c: 22: PORTB = 0;
  1283  0BB7  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0BB8  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0BB9  0186               	clrf	6	;volatile
  1286  0BBA                     l2217:	
  1287                           ;Calculadora.c: 23: while (1) {
  1288                           
  1289                           
  1290                           ;Calculadora.c: 25: iniciar_uart();
  1291  0BBA  160A  118A  2497  120A  158A  	fcall	_iniciar_uart
  1292                           
  1293                           ;Calculadora.c: 26: printf("************************************\n");
  1294  0BBF  30D9               	movlw	low (STR_1| (0+32768))
  1295  0BC0  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0BC1  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0BC2  00DA               	movwf	printf@f
  1298  0BC3  3090               	movlw	high (STR_1| (0+32768))
  1299  0BC4  00DB               	movwf	printf@f+1
  1300  0BC5  120A  118A  2266  120A  158A  	fcall	_printf
  1301                           
  1302                           ;Calculadora.c: 27: printf("******      1. Suma      *********\n");
  1303  0BCA  3023               	movlw	low (STR_2| (0+32768))
  1304  0BCB  1283               	bcf	3,5	;RP0=0, select bank0
  1305  0BCC  1303               	bcf	3,6	;RP1=0, select bank0
  1306  0BCD  00DA               	movwf	printf@f
  1307  0BCE  3091               	movlw	high (STR_2| (0+32768))
  1308  0BCF  00DB               	movwf	printf@f+1
  1309  0BD0  120A  118A  2266  120A  158A  	fcall	_printf
  1310                           
  1311                           ;Calculadora.c: 28: printf("******      2. Resta     *********\n");
  1312  0BD5  3047               	movlw	low (STR_3| (0+32768))
  1313  0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  1314  0BD7  1303               	bcf	3,6	;RP1=0, select bank0
  1315  0BD8  00DA               	movwf	printf@f
  1316  0BD9  3091               	movlw	high (STR_3| (0+32768))
  1317  0BDA  00DB               	movwf	printf@f+1
  1318  0BDB  120A  118A  2266  120A  158A  	fcall	_printf
  1319                           
  1320                           ;Calculadora.c: 29: printf("*****  3. Multiplicacion  ********\n");
  1321  0BE0  30FF               	movlw	low (STR_4| (0+32768))
  1322  0BE1  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0BE2  1303               	bcf	3,6	;RP1=0, select bank0
  1324  0BE3  00DA               	movwf	printf@f
  1325  0BE4  3090               	movlw	high (STR_4| (0+32768))
  1326  0BE5  00DB               	movwf	printf@f+1
  1327  0BE6  120A  118A  2266  120A  158A  	fcall	_printf
  1328                           
  1329                           ;Calculadora.c: 30: printf("******     4. Division   *********\n");
  1330  0BEB  306B               	movlw	low (STR_5| (0+32768))
  1331  0BEC  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0BED  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0BEE  00DA               	movwf	printf@f
  1334  0BEF  3091               	movlw	high (STR_5| (0+32768))
  1335  0BF0  00DB               	movwf	printf@f+1
  1336  0BF1  120A  118A  2266  120A  158A  	fcall	_printf
  1337                           
  1338                           ;Calculadora.c: 31: printf("************************************\n");
  1339  0BF6  30D9               	movlw	low (STR_1| (0+32768))
  1340  0BF7  1283               	bcf	3,5	;RP0=0, select bank0
  1341  0BF8  1303               	bcf	3,6	;RP1=0, select bank0
  1342  0BF9  00DA               	movwf	printf@f
  1343  0BFA  3090               	movlw	high (STR_1| (0+32768))
  1344  0BFB  00DB               	movwf	printf@f+1
  1345  0BFC  120A  118A  2266  120A  158A  	fcall	_printf
  1346                           
  1347                           ;Calculadora.c: 33: suma = a+b;
  1348  0C01  1283               	bcf	3,5	;RP0=0, select bank0
  1349  0C02  1303               	bcf	3,6	;RP1=0, select bank0
  1350  0C03  0865               	movf	_b,w
  1351  0C04  00C7               	movwf	___ftadd@f1
  1352  0C05  0866               	movf	_b+1,w
  1353  0C06  00C8               	movwf	___ftadd@f1+1
  1354  0C07  0867               	movf	_b+2,w
  1355  0C08  00C9               	movwf	___ftadd@f1+2
  1356  0C09  0868               	movf	_a,w
  1357  0C0A  00CA               	movwf	___ftadd@f2
  1358  0C0B  0869               	movf	_a+1,w
  1359  0C0C  00CB               	movwf	___ftadd@f2+1
  1360  0C0D  086A               	movf	_a+2,w
  1361  0C0E  00CC               	movwf	___ftadd@f2+2
  1362  0C0F  120A  158A  2178  120A  158A  	fcall	___ftadd
  1363  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  1364  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  1365  0C16  0847               	movf	?___ftadd,w
  1366  0C17  00EB               	movwf	_suma
  1367  0C18  0848               	movf	?___ftadd+1,w
  1368  0C19  00EC               	movwf	_suma+1
  1369  0C1A  0849               	movf	?___ftadd+2,w
  1370  0C1B  00ED               	movwf	_suma+2
  1371                           
  1372                           ;Calculadora.c: 34: resta = a-b;
  1373  0C1C  0868               	movf	_a,w
  1374  0C1D  00C7               	movwf	___ftadd@f1
  1375  0C1E  0869               	movf	_a+1,w
  1376  0C1F  00C8               	movwf	___ftadd@f1+1
  1377  0C20  086A               	movf	_a+2,w
  1378  0C21  00C9               	movwf	___ftadd@f1+2
  1379  0C22  0865               	movf	_b,w
  1380  0C23  00F0               	movwf	___ftneg@f1
  1381  0C24  0866               	movf	_b+1,w
  1382  0C25  00F1               	movwf	___ftneg@f1+1
  1383  0C26  0867               	movf	_b+2,w
  1384  0C27  00F2               	movwf	___ftneg@f1+2
  1385  0C28  160A  118A  249E  120A  158A  	fcall	___ftneg
  1386  0C2D  0870               	movf	?___ftneg,w
  1387  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  1388  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  1389  0C30  00CA               	movwf	___ftadd@f2
  1390  0C31  0871               	movf	?___ftneg+1,w
  1391  0C32  00CB               	movwf	___ftadd@f2+1
  1392  0C33  0872               	movf	?___ftneg+2,w
  1393  0C34  00CC               	movwf	___ftadd@f2+2
  1394  0C35  120A  158A  2178  120A  158A  	fcall	___ftadd
  1395  0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  1396  0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  1397  0C3C  0847               	movf	?___ftadd,w
  1398  0C3D  1683               	bsf	3,5	;RP0=1, select bank1
  1399  0C3E  1303               	bcf	3,6	;RP1=0, select bank1
  1400  0C3F  00BC               	movwf	_resta^(0+128)
  1401  0C40  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0C41  1303               	bcf	3,6	;RP1=0, select bank0
  1403  0C42  0848               	movf	?___ftadd+1,w
  1404  0C43  1683               	bsf	3,5	;RP0=1, select bank1
  1405  0C44  1303               	bcf	3,6	;RP1=0, select bank1
  1406  0C45  00BD               	movwf	(_resta+1)^(0+128)
  1407  0C46  1283               	bcf	3,5	;RP0=0, select bank0
  1408  0C47  1303               	bcf	3,6	;RP1=0, select bank0
  1409  0C48  0849               	movf	?___ftadd+2,w
  1410  0C49  1683               	bsf	3,5	;RP0=1, select bank1
  1411  0C4A  1303               	bcf	3,6	;RP1=0, select bank1
  1412  0C4B  00BE               	movwf	(_resta+2)^(0+128)
  1413                           
  1414                           ;Calculadora.c: 35: multiplicacion = a*b;
  1415  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  1416  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  1417  0C4E  0865               	movf	_b,w
  1418  0C4F  00A7               	movwf	___ftmul@f1
  1419  0C50  0866               	movf	_b+1,w
  1420  0C51  00A8               	movwf	___ftmul@f1+1
  1421  0C52  0867               	movf	_b+2,w
  1422  0C53  00A9               	movwf	___ftmul@f1+2
  1423  0C54  0868               	movf	_a,w
  1424  0C55  00AA               	movwf	___ftmul@f2
  1425  0C56  0869               	movf	_a+1,w
  1426  0C57  00AB               	movwf	___ftmul@f2+1
  1427  0C58  086A               	movf	_a+2,w
  1428  0C59  00AC               	movwf	___ftmul@f2+2
  1429  0C5A  120A  158A  20A5  120A  158A  	fcall	___ftmul
  1430  0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  1431  0C60  1303               	bcf	3,6	;RP1=0, select bank0
  1432  0C61  0827               	movf	?___ftmul,w
  1433  0C62  1683               	bsf	3,5	;RP0=1, select bank1
  1434  0C63  1303               	bcf	3,6	;RP1=0, select bank1
  1435  0C64  00B9               	movwf	_multiplicacion^(0+128)
  1436  0C65  1283               	bcf	3,5	;RP0=0, select bank0
  1437  0C66  1303               	bcf	3,6	;RP1=0, select bank0
  1438  0C67  0828               	movf	?___ftmul+1,w
  1439  0C68  1683               	bsf	3,5	;RP0=1, select bank1
  1440  0C69  1303               	bcf	3,6	;RP1=0, select bank1
  1441  0C6A  00BA               	movwf	(_multiplicacion+1)^(0+128)
  1442  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  1443  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  1444  0C6D  0829               	movf	?___ftmul+2,w
  1445  0C6E  1683               	bsf	3,5	;RP0=1, select bank1
  1446  0C6F  1303               	bcf	3,6	;RP1=0, select bank1
  1447  0C70  00BB               	movwf	(_multiplicacion+2)^(0+128)
  1448                           
  1449                           ;Calculadora.c: 36: division = a/b;
  1450  0C71  1283               	bcf	3,5	;RP0=0, select bank0
  1451  0C72  1303               	bcf	3,6	;RP1=0, select bank0
  1452  0C73  0865               	movf	_b,w
  1453  0C74  00F8               	movwf	___ftdiv@f2
  1454  0C75  0866               	movf	_b+1,w
  1455  0C76  00F9               	movwf	___ftdiv@f2+1
  1456  0C77  0867               	movf	_b+2,w
  1457  0C78  00FA               	movwf	___ftdiv@f2+2
  1458  0C79  0868               	movf	_a,w
  1459  0C7A  00FB               	movwf	___ftdiv@f1
  1460  0C7B  0869               	movf	_a+1,w
  1461  0C7C  00FC               	movwf	___ftdiv@f1+1
  1462  0C7D  086A               	movf	_a+2,w
  1463  0C7E  00FD               	movwf	___ftdiv@f1+2
  1464  0C7F  160A  118A  2687  120A  158A  	fcall	___ftdiv
  1465  0C84  0878               	movf	?___ftdiv,w
  1466  0C85  1683               	bsf	3,5	;RP0=1, select bank1
  1467  0C86  1303               	bcf	3,6	;RP1=0, select bank1
  1468  0C87  00B6               	movwf	_division^(0+128)
  1469  0C88  0879               	movf	?___ftdiv+1,w
  1470  0C89  00B7               	movwf	(_division+1)^(0+128)
  1471  0C8A  087A               	movf	?___ftdiv+2,w
  1472  0C8B  00B8               	movwf	(_division+2)^(0+128)
  1473                           
  1474                           ;Calculadora.c: 38: if (PORTBbits.RB0 == 1){
  1475  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  1476  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  1477  0C8E  1C06               	btfss	6,0	;volatile
  1478  0C8F  2C9F               	goto	l2243
  1479                           
  1480                           ;Calculadora.c: 39: printf("El resultado de la Suma es: %f\n", suma);
  1481  0C90  30D4               	movlw	low (STR_7| (0+32768))
  1482  0C91  00DA               	movwf	printf@f
  1483  0C92  3091               	movlw	high (STR_7| (0+32768))
  1484  0C93  00DB               	movwf	printf@f+1
  1485  0C94  086B               	movf	_suma,w
  1486  0C95  00DC               	movwf	?_printf+2
  1487  0C96  086C               	movf	_suma+1,w
  1488  0C97  00DD               	movwf	?_printf+3
  1489  0C98  086D               	movf	_suma+2,w
  1490  0C99  00DE               	movwf	?_printf+4
  1491  0C9A  120A  118A  2266  120A  158A  	fcall	_printf
  1492  0C9F                     l2243:	
  1493                           
  1494                           ;Calculadora.c: 40: }
  1495                           ;Calculadora.c: 41: if (PORTBbits.RB1 == 1){
  1496  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  1497  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  1498  0CA1  1C86               	btfss	6,1	;volatile
  1499  0CA2  2CBE               	goto	l2247
  1500                           
  1501                           ;Calculadora.c: 42: printf("El resultado de la Resta es: %f\n", resta);
  1502  0CA3  30B3               	movlw	low (STR_8| (0+32768))
  1503  0CA4  00DA               	movwf	printf@f
  1504  0CA5  3091               	movlw	high (STR_8| (0+32768))
  1505  0CA6  00DB               	movwf	printf@f+1
  1506  0CA7  1683               	bsf	3,5	;RP0=1, select bank1
  1507  0CA8  1303               	bcf	3,6	;RP1=0, select bank1
  1508  0CA9  083C               	movf	_resta^(0+128),w
  1509  0CAA  1283               	bcf	3,5	;RP0=0, select bank0
  1510  0CAB  1303               	bcf	3,6	;RP1=0, select bank0
  1511  0CAC  00DC               	movwf	?_printf+2
  1512  0CAD  1683               	bsf	3,5	;RP0=1, select bank1
  1513  0CAE  1303               	bcf	3,6	;RP1=0, select bank1
  1514  0CAF  083D               	movf	(_resta+1)^(0+128),w
  1515  0CB0  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0CB1  1303               	bcf	3,6	;RP1=0, select bank0
  1517  0CB2  00DD               	movwf	?_printf+3
  1518  0CB3  1683               	bsf	3,5	;RP0=1, select bank1
  1519  0CB4  1303               	bcf	3,6	;RP1=0, select bank1
  1520  0CB5  083E               	movf	(_resta+2)^(0+128),w
  1521  0CB6  1283               	bcf	3,5	;RP0=0, select bank0
  1522  0CB7  1303               	bcf	3,6	;RP1=0, select bank0
  1523  0CB8  00DE               	movwf	?_printf+4
  1524  0CB9  120A  118A  2266  120A  158A  	fcall	_printf
  1525  0CBE                     l2247:	
  1526                           
  1527                           ;Calculadora.c: 44: }
  1528                           ;Calculadora.c: 45: if (PORTBbits.RB2 == 1){
  1529  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  1530  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  1531  0CC0  1D06               	btfss	6,2	;volatile
  1532  0CC1  2CDD               	goto	l2251
  1533                           
  1534                           ;Calculadora.c: 46: printf("El resultado de la Multiplicacion es: %f\n", multiplicacion)
      +                          ;
  1535  0CC2  3088               	movlw	low (STR_9| (0+32768))
  1536  0CC3  00DA               	movwf	printf@f
  1537  0CC4  3090               	movlw	high (STR_9| (0+32768))
  1538  0CC5  00DB               	movwf	printf@f+1
  1539  0CC6  1683               	bsf	3,5	;RP0=1, select bank1
  1540  0CC7  1303               	bcf	3,6	;RP1=0, select bank1
  1541  0CC8  0839               	movf	_multiplicacion^(0+128),w
  1542  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  1543  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  1544  0CCB  00DC               	movwf	?_printf+2
  1545  0CCC  1683               	bsf	3,5	;RP0=1, select bank1
  1546  0CCD  1303               	bcf	3,6	;RP1=0, select bank1
  1547  0CCE  083A               	movf	(_multiplicacion+1)^(0+128),w
  1548  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0CD1  00DD               	movwf	?_printf+3
  1551  0CD2  1683               	bsf	3,5	;RP0=1, select bank1
  1552  0CD3  1303               	bcf	3,6	;RP1=0, select bank1
  1553  0CD4  083B               	movf	(_multiplicacion+2)^(0+128),w
  1554  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  1555  0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0CD7  00DE               	movwf	?_printf+4
  1557  0CD8  120A  118A  2266  120A  158A  	fcall	_printf
  1558  0CDD                     l2251:	
  1559                           
  1560                           ;Calculadora.c: 47: }
  1561                           ;Calculadora.c: 48: if (PORTBbits.RB3 == 1){
  1562  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  1563  0CDE  1303               	bcf	3,6	;RP1=0, select bank0
  1564  0CDF  1D86               	btfss	6,3	;volatile
  1565  0CE0  2D29               	goto	l2261
  1566                           
  1567                           ;Calculadora.c: 49: if (b==0){
  1568  0CE1  0867               	movf	_b+2,w
  1569  0CE2  0466               	iorwf	_b+1,w
  1570  0CE3  0465               	iorwf	_b,w
  1571  0CE4  1D03               	skipz
  1572  0CE5  2CF0               	goto	l2257
  1573                           
  1574                           ;Calculadora.c: 50: printf("Error, no es posible dividir entre 0.\n");
  1575  0CE6  30B2               	movlw	low (STR_10| (0+32768))
  1576  0CE7  00DA               	movwf	printf@f
  1577  0CE8  3090               	movlw	high (STR_10| (0+32768))
  1578  0CE9  00DB               	movwf	printf@f+1
  1579  0CEA  120A  118A  2266  120A  158A  	fcall	_printf
  1580                           
  1581                           ;Calculadora.c: 51: }
  1582  0CEF  2BBA               	goto	l2217
  1583  0CF0                     l2257:	
  1584                           
  1585                           ;Calculadora.c: 52: else {
  1586                           ;Calculadora.c: 53: resultado = a/b;
  1587  0CF0  1283               	bcf	3,5	;RP0=0, select bank0
  1588  0CF1  1303               	bcf	3,6	;RP1=0, select bank0
  1589  0CF2  0865               	movf	_b,w
  1590  0CF3  00F8               	movwf	___ftdiv@f2
  1591  0CF4  0866               	movf	_b+1,w
  1592  0CF5  00F9               	movwf	___ftdiv@f2+1
  1593  0CF6  0867               	movf	_b+2,w
  1594  0CF7  00FA               	movwf	___ftdiv@f2+2
  1595  0CF8  0868               	movf	_a,w
  1596  0CF9  00FB               	movwf	___ftdiv@f1
  1597  0CFA  0869               	movf	_a+1,w
  1598  0CFB  00FC               	movwf	___ftdiv@f1+1
  1599  0CFC  086A               	movf	_a+2,w
  1600  0CFD  00FD               	movwf	___ftdiv@f1+2
  1601  0CFE  160A  118A  2687  120A  158A  	fcall	___ftdiv
  1602  0D03  0878               	movf	?___ftdiv,w
  1603  0D04  1683               	bsf	3,5	;RP0=1, select bank1
  1604  0D05  1303               	bcf	3,6	;RP1=0, select bank1
  1605  0D06  00BF               	movwf	_resultado^(0+128)
  1606  0D07  0879               	movf	?___ftdiv+1,w
  1607  0D08  00C0               	movwf	(_resultado+1)^(0+128)
  1608  0D09  087A               	movf	?___ftdiv+2,w
  1609  0D0A  00C1               	movwf	(_resultado+2)^(0+128)
  1610                           
  1611                           ;Calculadora.c: 54: printf("El resultado de la Division es: %f\n", division);
  1612  0D0B  308F               	movlw	low (STR_11| (0+32768))
  1613  0D0C  1283               	bcf	3,5	;RP0=0, select bank0
  1614  0D0D  1303               	bcf	3,6	;RP1=0, select bank0
  1615  0D0E  00DA               	movwf	printf@f
  1616  0D0F  3091               	movlw	high (STR_11| (0+32768))
  1617  0D10  00DB               	movwf	printf@f+1
  1618  0D11  1683               	bsf	3,5	;RP0=1, select bank1
  1619  0D12  1303               	bcf	3,6	;RP1=0, select bank1
  1620  0D13  0836               	movf	_division^(0+128),w
  1621  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  1622  0D15  1303               	bcf	3,6	;RP1=0, select bank0
  1623  0D16  00DC               	movwf	?_printf+2
  1624  0D17  1683               	bsf	3,5	;RP0=1, select bank1
  1625  0D18  1303               	bcf	3,6	;RP1=0, select bank1
  1626  0D19  0837               	movf	(_division+1)^(0+128),w
  1627  0D1A  1283               	bcf	3,5	;RP0=0, select bank0
  1628  0D1B  1303               	bcf	3,6	;RP1=0, select bank0
  1629  0D1C  00DD               	movwf	?_printf+3
  1630  0D1D  1683               	bsf	3,5	;RP0=1, select bank1
  1631  0D1E  1303               	bcf	3,6	;RP1=0, select bank1
  1632  0D1F  0838               	movf	(_division+2)^(0+128),w
  1633  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  1634  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  1635  0D22  00DE               	movwf	?_printf+4
  1636  0D23  120A  118A  2266  120A  158A  	fcall	_printf
  1637                           
  1638                           ;Calculadora.c: 55: }
  1639                           ;Calculadora.c: 56: }
  1640  0D28  2BBA               	goto	l2217
  1641  0D29                     l2261:	
  1642                           
  1643                           ;Calculadora.c: 57: else {
  1644                           ;Calculadora.c: 58: printf("Opcion Incorrecta\n ");
  1645  0D29  30F4               	movlw	low (STR_12| (0+32768))
  1646  0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  1647  0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  1648  0D2C  00DA               	movwf	printf@f
  1649  0D2D  3091               	movlw	high (STR_12| (0+32768))
  1650  0D2E  00DB               	movwf	printf@f+1
  1651  0D2F  120A  118A  2266  120A  158A  	fcall	_printf
  1652  0D34  2BBA               	goto	l2217
  1653  0D35                     __end_of_main:	
  1654                           
  1655                           	psect	text1
  1656  0266                     __ptext1:	
  1657 ;; *************** function _printf *****************
  1658 ;; Defined at:
  1659 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;  f               2   58[BANK0 ] PTR const unsigned char 
  1662 ;;		 -> STR_12(20), STR_11(36), STR_10(39), STR_9(42), 
  1663 ;;		 -> STR_8(33), STR_7(32), STR_6(38), STR_5(36), 
  1664 ;;		 -> STR_4(36), STR_3(36), STR_2(36), STR_1(38), 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  tmpval          4   14[BANK1 ] struct .
  1667 ;;  val             4    8[BANK1 ] unsigned long 
  1668 ;;  fval            3   18[BANK1 ] unsigned long 
  1669 ;;  exp             2   12[BANK1 ] int 
  1670 ;;  prec            2    6[BANK1 ] int 
  1671 ;;  flag            2    4[BANK1 ] unsigned short 
  1672 ;;  cp              2    0        PTR const unsigned char 
  1673 ;;  len             2    0        unsigned int 
  1674 ;;  width           2    0        int 
  1675 ;;  c               1   21[BANK1 ] char 
  1676 ;;  ap              1    3[BANK1 ] PTR void [1]
  1677 ;;		 -> ?_printf(2), 
  1678 ;;  d               1    0        unsigned char 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  2   58[BANK0 ] int 
  1681 ;; Registers used:
  1682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1688 ;;      Params:         0       5       0       0       0
  1689 ;;      Locals:         0       0      22       0       0
  1690 ;;      Temps:          0       6       0       0       0
  1691 ;;      Totals:         0      11      22       0       0
  1692 ;;Total ram usage:       33 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    3
  1695 ;; This function calls:
  1696 ;;		___awdiv
  1697 ;;		___ftadd
  1698 ;;		___ftge
  1699 ;;		___ftmul
  1700 ;;		___ftneg
  1701 ;;		___ftsub
  1702 ;;		___fttol
  1703 ;;		___lldiv
  1704 ;;		___llmod
  1705 ;;		___lltoft
  1706 ;;		___wmul
  1707 ;;		__div_to_l_
  1708 ;;		__tdiv_to_l_
  1709 ;;		_fround
  1710 ;;		_putch
  1711 ;;		_scale
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           
  1718                           ;psect for function _printf
  1719  0266                     _printf:	
  1720                           
  1721                           ;doprnt.c: 466: va_list ap;
  1722                           ;doprnt.c: 499: signed char c;
  1723                           ;doprnt.c: 501: int width;
  1724                           ;doprnt.c: 504: int prec;
  1725                           ;doprnt.c: 508: unsigned short flag;
  1726                           ;doprnt.c: 515: char d;
  1727                           ;doprnt.c: 516: double fval;
  1728                           ;doprnt.c: 517: int exp;
  1729                           ;doprnt.c: 523: union {
  1730                           ;doprnt.c: 524: unsigned long vd;
  1731                           ;doprnt.c: 525: double integ;
  1732                           ;doprnt.c: 526: } tmpval;
  1733                           ;doprnt.c: 528: unsigned long val;
  1734                           ;doprnt.c: 529: unsigned len;
  1735                           ;doprnt.c: 530: const char * cp;
  1736                           ;doprnt.c: 533: *ap = __va_start();
  1737                           
  1738                           ;incstack = 0
  1739                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1740  0266  305C               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1741  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1742  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1743  0269  00DF               	movwf	??_printf
  1744  026A  085F               	movf	??_printf,w
  1745  026B  1683               	bsf	3,5	;RP0=1, select bank1
  1746  026C  1303               	bcf	3,6	;RP1=0, select bank1
  1747  026D  00A3               	movwf	printf@ap^(0+128)
  1748  026E                     l2169:	
  1749                           ;doprnt.c: 536: while(c = *f++) {
  1750                           
  1751  026E  1283               	bcf	3,5	;RP0=0, select bank0
  1752  026F  1303               	bcf	3,6	;RP1=0, select bank0
  1753  0270  085B               	movf	printf@f+1,w
  1754  0271  00E0               	movwf	??_printf+1
  1755  0272  085A               	movf	printf@f,w
  1756  0273  00DF               	movwf	??_printf
  1757  0274  0ADA               	incf	printf@f,f
  1758  0275  1903               	skipnz
  1759  0276  0ADB               	incf	printf@f+1,f
  1760  0277  0860               	movf	??_printf+1,w
  1761  0278  00FF               	movwf	127
  1762  0279  085F               	movf	??_printf,w
  1763  027A  0084               	movwf	4
  1764  027B  160A  118A  2000  120A  118A  	fcall	stringtab
  1765  0280  00E1               	movwf	??_printf+2
  1766  0281  0861               	movf	??_printf+2,w
  1767  0282  1683               	bsf	3,5	;RP0=1, select bank1
  1768  0283  1303               	bcf	3,6	;RP1=0, select bank1
  1769  0284  00B5               	movwf	printf@c^(0+128)
  1770  0285  0835               	movf	printf@c^(0+128),w
  1771  0286  1903               	btfsc	3,2
  1772  0287  0008               	return
  1773                           
  1774                           ;doprnt.c: 538: if(c != '%')
  1775  0288  3025               	movlw	37
  1776  0289  0635               	xorwf	printf@c^(0+128),w
  1777  028A  1903               	btfsc	3,2
  1778  028B  2A93               	goto	l2029
  1779                           
  1780                           ;doprnt.c: 540: {
  1781                           ;doprnt.c: 541: (putch(c) );
  1782  028C  0835               	movf	printf@c^(0+128),w
  1783  028D  120A  158A  2006  120A  118A  	fcall	_putch
  1784                           
  1785                           ;doprnt.c: 542: continue;
  1786  0292  2A6E               	goto	l2169
  1787  0293                     l2029:	
  1788                           
  1789                           ;doprnt.c: 543: }
  1790                           ;doprnt.c: 548: flag = 0;
  1791  0293  1683               	bsf	3,5	;RP0=1, select bank1
  1792  0294  1303               	bcf	3,6	;RP1=0, select bank1
  1793  0295  01A4               	clrf	printf@flag^(0+128)
  1794  0296  01A5               	clrf	(printf@flag+1)^(0+128)
  1795                           
  1796                           ;doprnt.c: 635: switch(c = *f++) {
  1797  0297  2A9A               	goto	l2033
  1798  0298                     l95:	
  1799                           ;doprnt.c: 662: case 'f':
  1800                           
  1801                           ;doprnt.c: 638: goto alldone;
  1802                           
  1803                           ;doprnt.c: 637: case 0:
  1804                           
  1805                           
  1806                           ;doprnt.c: 663: flag |= 0x400;
  1807  0298  1525               	bsf	(printf@flag^(0+128)+1),2
  1808                           
  1809                           ;doprnt.c: 664: break;
  1810  0299  2AB6               	goto	l2035
  1811  029A                     l2033:	
  1812                           ;doprnt.c: 822: }
  1813                           
  1814                           ;doprnt.c: 813: continue;
  1815                           
  1816                           ;doprnt.c: 802: default:
  1817                           
  1818  029A  1283               	bcf	3,5	;RP0=0, select bank0
  1819  029B  1303               	bcf	3,6	;RP1=0, select bank0
  1820  029C  085B               	movf	printf@f+1,w
  1821  029D  00E0               	movwf	??_printf+1
  1822  029E  085A               	movf	printf@f,w
  1823  029F  00DF               	movwf	??_printf
  1824  02A0  0ADA               	incf	printf@f,f
  1825  02A1  1903               	skipnz
  1826  02A2  0ADB               	incf	printf@f+1,f
  1827  02A3  0860               	movf	??_printf+1,w
  1828  02A4  00FF               	movwf	127
  1829  02A5  085F               	movf	??_printf,w
  1830  02A6  0084               	movwf	4
  1831  02A7  160A  118A  2000  120A  118A  	fcall	stringtab
  1832  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  1833  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  1834  02AE  00B5               	movwf	printf@c^(0+128)
  1835                           
  1836                           ; Switch size 1, requested type "space"
  1837                           ; Number of cases is 2, Range of values is 0 to 102
  1838                           ; switch strategies available:
  1839                           ; Name         Instructions Cycles
  1840                           ; simple_byte            7     4 (average)
  1841                           ; jumptable            260     6 (fixed)
  1842                           ;	Chosen strategy is simple_byte
  1843  02AF  3A00               	xorlw	0	; case 0
  1844  02B0  1903               	skipnz
  1845  02B1  2FC6               	goto	l137
  1846  02B2  3A66               	xorlw	102	; case 102
  1847  02B3  1903               	skipnz
  1848  02B4  2A98               	goto	l95
  1849  02B5  2A6E               	goto	l2169
  1850  02B6                     l2035:	
  1851                           
  1852                           ;doprnt.c: 825: if(flag & (0x700)) {
  1853  02B6  3000               	movlw	0
  1854  02B7  0524               	andwf	printf@flag^(0+128),w
  1855  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1856  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1857  02BA  00DF               	movwf	??_printf
  1858  02BB  3007               	movlw	7
  1859  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  1860  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  1861  02BE  0525               	andwf	(printf@flag+1)^(0+128),w
  1862  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  1863  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  1864  02C1  00E0               	movwf	??_printf+1
  1865  02C2  085F               	movf	??_printf,w
  1866  02C3  0460               	iorwf	??_printf+1,w
  1867  02C4  1903               	btfsc	3,2
  1868  02C5  2FAD               	goto	l2165
  1869                           
  1870                           ;doprnt.c: 829: prec = 6;
  1871  02C6  3006               	movlw	6
  1872  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  1873  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  1874  02C9  00A6               	movwf	printf@prec^(0+128)
  1875  02CA  3000               	movlw	0
  1876  02CB  00A7               	movwf	(printf@prec^(0+128)+1)
  1877                           
  1878                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1879  02CC  0823               	movf	printf@ap^(0+128),w
  1880  02CD  0084               	movwf	4
  1881  02CE  1383               	bcf	3,7	;select IRP bank0
  1882  02CF  0800               	movf	0,w
  1883  02D0  00B2               	movwf	printf@fval^(0+128)
  1884  02D1  0A84               	incf	4,f
  1885  02D2  0800               	movf	0,w
  1886  02D3  00B3               	movwf	(printf@fval+1)^(0+128)
  1887  02D4  0A84               	incf	4,f
  1888  02D5  0800               	movf	0,w
  1889  02D6  00B4               	movwf	(printf@fval+2)^(0+128)
  1890  02D7  3003               	movlw	3
  1891  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1892  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1893  02DA  00DF               	movwf	??_printf
  1894  02DB  085F               	movf	??_printf,w
  1895  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  1896  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  1897  02DE  07A3               	addwf	printf@ap^(0+128),f
  1898                           
  1899                           ;doprnt.c: 831: if(fval < 0.0) {
  1900  02DF  0832               	movf	printf@fval^(0+128),w
  1901  02E0  00F0               	movwf	___ftge@ff1
  1902  02E1  0833               	movf	(printf@fval+1)^(0+128),w
  1903  02E2  00F1               	movwf	___ftge@ff1+1
  1904  02E3  0834               	movf	(printf@fval+2)^(0+128),w
  1905  02E4  00F2               	movwf	___ftge@ff1+2
  1906  02E5  3000               	movlw	0
  1907  02E6  00F3               	movwf	___ftge@ff2
  1908  02E7  3000               	movlw	0
  1909  02E8  00F4               	movwf	___ftge@ff2+1
  1910  02E9  3000               	movlw	0
  1911  02EA  00F5               	movwf	___ftge@ff2+2
  1912  02EB  160A  118A  25CC  120A  118A  	fcall	___ftge
  1913  02F0  1803               	btfsc	3,0
  1914  02F1  2B0B               	goto	l2049
  1915                           
  1916                           ;doprnt.c: 832: fval = -fval;
  1917  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  1918  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  1919  02F4  0832               	movf	printf@fval^(0+128),w
  1920  02F5  00F0               	movwf	___ftneg@f1
  1921  02F6  0833               	movf	(printf@fval+1)^(0+128),w
  1922  02F7  00F1               	movwf	___ftneg@f1+1
  1923  02F8  0834               	movf	(printf@fval+2)^(0+128),w
  1924  02F9  00F2               	movwf	___ftneg@f1+2
  1925  02FA  160A  118A  249E  120A  118A  	fcall	___ftneg
  1926  02FF  0870               	movf	?___ftneg,w
  1927  0300  1683               	bsf	3,5	;RP0=1, select bank1
  1928  0301  1303               	bcf	3,6	;RP1=0, select bank1
  1929  0302  00B2               	movwf	printf@fval^(0+128)
  1930  0303  0871               	movf	?___ftneg+1,w
  1931  0304  00B3               	movwf	(printf@fval+1)^(0+128)
  1932  0305  0872               	movf	?___ftneg+2,w
  1933  0306  00B4               	movwf	(printf@fval+2)^(0+128)
  1934                           
  1935                           ;doprnt.c: 833: flag |= 0x03;
  1936  0307  3003               	movlw	3
  1937  0308  04A4               	iorwf	printf@flag^(0+128),f
  1938  0309  3000               	movlw	0
  1939  030A  04A5               	iorwf	(printf@flag+1)^(0+128),f
  1940  030B                     l2049:	
  1941                           
  1942                           ;doprnt.c: 834: }
  1943                           ;doprnt.c: 835: exp = 0;
  1944  030B  1683               	bsf	3,5	;RP0=1, select bank1
  1945  030C  1303               	bcf	3,6	;RP1=0, select bank1
  1946  030D  01AC               	clrf	printf@exp^(0+128)
  1947  030E  01AD               	clrf	(printf@exp+1)^(0+128)
  1948                           
  1949                           ;doprnt.c: 836: if( fval!=0) {
  1950  030F  0834               	movf	(printf@fval+2)^(0+128),w
  1951  0310  0433               	iorwf	(printf@fval+1)^(0+128),w
  1952  0311  0432               	iorwf	printf@fval^(0+128),w
  1953  0312  1903               	skipnz
  1954  0313  2BFF               	goto	l2077
  1955                           
  1956                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1957  0314  30B2               	movlw	low (printf@fval| 0)
  1958  0315  0084               	movwf	4
  1959  0316  1383               	bcf	3,7	;select IRP bank1
  1960  0317  0800               	movf	0,w
  1961  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1963  031A  00DF               	movwf	??_printf
  1964  031B  0A84               	incf	4,f
  1965  031C  0800               	movf	0,w
  1966  031D  00E0               	movwf	??_printf+1
  1967  031E  0A84               	incf	4,f
  1968  031F  0800               	movf	0,w
  1969  0320  00E1               	movwf	??_printf+2
  1970  0321  0A84               	incf	4,f
  1971  0322  0800               	movf	0,w
  1972  0323  00E2               	movwf	??_printf+3
  1973  0324  300F               	movlw	15
  1974  0325                     u3285:	
  1975  0325  1003               	clrc
  1976  0326  0CE2               	rrf	??_printf+3,f
  1977  0327  0CE1               	rrf	??_printf+2,f
  1978  0328  0CE0               	rrf	??_printf+1,f
  1979  0329  0CDF               	rrf	??_printf,f
  1980  032A  3EFF               	addlw	-1
  1981  032B  1D03               	skipz
  1982  032C  2B25               	goto	u3285
  1983  032D  30FF               	movlw	255
  1984  032E  055F               	andwf	??_printf,w
  1985  032F  00E3               	movwf	??_printf+4
  1986  0330  3000               	movlw	0
  1987  0331  0560               	andwf	??_printf+1,w
  1988  0332  00E4               	movwf	??_printf+5
  1989  0333  0863               	movf	??_printf+4,w
  1990  0334  3E82               	addlw	130
  1991  0335  1683               	bsf	3,5	;RP0=1, select bank1
  1992  0336  1303               	bcf	3,6	;RP1=0, select bank1
  1993  0337  00AC               	movwf	printf@exp^(0+128)
  1994  0338  1283               	bcf	3,5	;RP0=0, select bank0
  1995  0339  1303               	bcf	3,6	;RP1=0, select bank0
  1996  033A  0864               	movf	??_printf+5,w
  1997  033B  1803               	skipnc
  1998  033C  3E01               	addlw	1
  1999  033D  3EFF               	addlw	255
  2000  033E  1683               	bsf	3,5	;RP0=1, select bank1
  2001  033F  1303               	bcf	3,6	;RP1=0, select bank1
  2002  0340  00AD               	movwf	(printf@exp+1)^(0+128)
  2003                           
  2004                           ;doprnt.c: 838: exp--;
  2005  0341  30FF               	movlw	255
  2006  0342  07AC               	addwf	printf@exp^(0+128),f
  2007  0343  1803               	skipnc
  2008  0344  0AAD               	incf	(printf@exp+1)^(0+128),f
  2009  0345  30FF               	movlw	255
  2010  0346  07AD               	addwf	(printf@exp+1)^(0+128),f
  2011                           
  2012                           ;doprnt.c: 839: exp *= 3;
  2013  0347  3003               	movlw	3
  2014  0348  00F0               	movwf	___wmul@multiplier
  2015  0349  3000               	movlw	0
  2016  034A  00F1               	movwf	___wmul@multiplier+1
  2017  034B  082D               	movf	(printf@exp+1)^(0+128),w
  2018  034C  00F3               	movwf	___wmul@multiplicand+1
  2019  034D  082C               	movf	printf@exp^(0+128),w
  2020  034E  00F2               	movwf	___wmul@multiplicand
  2021  034F  120A  118A  2005  120A  118A  	fcall	___wmul
  2022  0354  0871               	movf	?___wmul+1,w
  2023  0355  1683               	bsf	3,5	;RP0=1, select bank1
  2024  0356  1303               	bcf	3,6	;RP1=0, select bank1
  2025  0357  00AD               	movwf	(printf@exp+1)^(0+128)
  2026  0358  0870               	movf	?___wmul,w
  2027  0359  00AC               	movwf	printf@exp^(0+128)
  2028                           
  2029                           ;doprnt.c: 840: exp /= 10;
  2030  035A  300A               	movlw	10
  2031  035B  00F7               	movwf	___awdiv@divisor
  2032  035C  3000               	movlw	0
  2033  035D  00F8               	movwf	___awdiv@divisor+1
  2034  035E  082D               	movf	(printf@exp+1)^(0+128),w
  2035  035F  00FA               	movwf	___awdiv@dividend+1
  2036  0360  082C               	movf	printf@exp^(0+128),w
  2037  0361  00F9               	movwf	___awdiv@dividend
  2038  0362  160A  118A  2571  120A  118A  	fcall	___awdiv
  2039  0367  0878               	movf	?___awdiv+1,w
  2040  0368  1683               	bsf	3,5	;RP0=1, select bank1
  2041  0369  1303               	bcf	3,6	;RP1=0, select bank1
  2042  036A  00AD               	movwf	(printf@exp+1)^(0+128)
  2043  036B  0877               	movf	?___awdiv,w
  2044  036C  00AC               	movwf	printf@exp^(0+128)
  2045                           
  2046                           ;doprnt.c: 841: if(exp < 0)
  2047  036D  1FAD               	btfss	(printf@exp+1)^(0+128),7
  2048  036E  2B75               	goto	l2065
  2049                           
  2050                           ;doprnt.c: 842: exp--;
  2051  036F  30FF               	movlw	255
  2052  0370  07AC               	addwf	printf@exp^(0+128),f
  2053  0371  1803               	skipnc
  2054  0372  0AAD               	incf	(printf@exp+1)^(0+128),f
  2055  0373  30FF               	movlw	255
  2056  0374  07AD               	addwf	(printf@exp+1)^(0+128),f
  2057  0375                     l2065:	
  2058                           
  2059                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2060  0375  032C               	decf	printf@exp^(0+128),w
  2061  0376  3AFF               	xorlw	255
  2062  0377  120A  158A  2535  120A  118A  	fcall	_scale
  2063  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2064  037D  1303               	bcf	3,6	;RP1=0, select bank0
  2065  037E  0837               	movf	?_scale,w
  2066  037F  1683               	bsf	3,5	;RP0=1, select bank1
  2067  0380  1303               	bcf	3,6	;RP1=0, select bank1
  2068  0381  00AE               	movwf	printf@tmpval^(0+128)
  2069  0382  1283               	bcf	3,5	;RP0=0, select bank0
  2070  0383  1303               	bcf	3,6	;RP1=0, select bank0
  2071  0384  0838               	movf	?_scale+1,w
  2072  0385  1683               	bsf	3,5	;RP0=1, select bank1
  2073  0386  1303               	bcf	3,6	;RP1=0, select bank1
  2074  0387  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2075  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2076  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2077  038A  0839               	movf	?_scale+2,w
  2078  038B  1683               	bsf	3,5	;RP0=1, select bank1
  2079  038C  1303               	bcf	3,6	;RP1=0, select bank1
  2080  038D  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2081                           
  2082                           ;doprnt.c: 847: tmpval.integ *= fval;
  2083  038E  0832               	movf	printf@fval^(0+128),w
  2084  038F  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0390  1303               	bcf	3,6	;RP1=0, select bank0
  2086  0391  00A7               	movwf	___ftmul@f1
  2087  0392  1683               	bsf	3,5	;RP0=1, select bank1
  2088  0393  1303               	bcf	3,6	;RP1=0, select bank1
  2089  0394  0833               	movf	(printf@fval+1)^(0+128),w
  2090  0395  1283               	bcf	3,5	;RP0=0, select bank0
  2091  0396  1303               	bcf	3,6	;RP1=0, select bank0
  2092  0397  00A8               	movwf	___ftmul@f1+1
  2093  0398  1683               	bsf	3,5	;RP0=1, select bank1
  2094  0399  1303               	bcf	3,6	;RP1=0, select bank1
  2095  039A  0834               	movf	(printf@fval+2)^(0+128),w
  2096  039B  1283               	bcf	3,5	;RP0=0, select bank0
  2097  039C  1303               	bcf	3,6	;RP1=0, select bank0
  2098  039D  00A9               	movwf	___ftmul@f1+2
  2099  039E  1683               	bsf	3,5	;RP0=1, select bank1
  2100  039F  1303               	bcf	3,6	;RP1=0, select bank1
  2101  03A0  082E               	movf	printf@tmpval^(0+128),w
  2102  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2103  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2104  03A3  00AA               	movwf	___ftmul@f2
  2105  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  2106  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  2107  03A6  082F               	movf	(printf@tmpval+1)^(0+128),w
  2108  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2109  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2110  03A9  00AB               	movwf	___ftmul@f2+1
  2111  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  2112  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  2113  03AC  0830               	movf	(printf@tmpval+2)^(0+128),w
  2114  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2115  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2116  03AF  00AC               	movwf	___ftmul@f2+2
  2117  03B0  120A  158A  20A5  120A  118A  	fcall	___ftmul
  2118  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  2119  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  2120  03B7  0827               	movf	?___ftmul,w
  2121  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  2122  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  2123  03BA  00AE               	movwf	printf@tmpval^(0+128)
  2124  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2125  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  2126  03BD  0828               	movf	?___ftmul+1,w
  2127  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  2128  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  2129  03C0  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2130  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  2131  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  2132  03C3  0829               	movf	?___ftmul+2,w
  2133  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  2134  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  2135  03C6  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2136                           
  2137                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2138  03C7  082E               	movf	printf@tmpval^(0+128),w
  2139  03C8  00F0               	movwf	___ftge@ff1
  2140  03C9  082F               	movf	(printf@tmpval+1)^(0+128),w
  2141  03CA  00F1               	movwf	___ftge@ff1+1
  2142  03CB  0830               	movf	(printf@tmpval+2)^(0+128),w
  2143  03CC  00F2               	movwf	___ftge@ff1+2
  2144  03CD  3000               	movlw	0
  2145  03CE  00F3               	movwf	___ftge@ff2
  2146  03CF  3080               	movlw	128
  2147  03D0  00F4               	movwf	___ftge@ff2+1
  2148  03D1  303F               	movlw	63
  2149  03D2  00F5               	movwf	___ftge@ff2+2
  2150  03D3  160A  118A  25CC  120A  118A  	fcall	___ftge
  2151  03D8  1803               	btfsc	3,0
  2152  03D9  2BE2               	goto	l2073
  2153                           
  2154                           ;doprnt.c: 849: exp--;
  2155  03DA  30FF               	movlw	255
  2156  03DB  1683               	bsf	3,5	;RP0=1, select bank1
  2157  03DC  1303               	bcf	3,6	;RP1=0, select bank1
  2158  03DD  07AC               	addwf	printf@exp^(0+128),f
  2159  03DE  1803               	skipnc
  2160  03DF  0AAD               	incf	(printf@exp+1)^(0+128),f
  2161  03E0  30FF               	movlw	255
  2162  03E1  2BFE               	goto	L1
  2163  03E2                     l2073:	
  2164                           
  2165                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2166  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  2167  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  2168  03E4  082E               	movf	printf@tmpval^(0+128),w
  2169  03E5  00F0               	movwf	___ftge@ff1
  2170  03E6  082F               	movf	(printf@tmpval+1)^(0+128),w
  2171  03E7  00F1               	movwf	___ftge@ff1+1
  2172  03E8  0830               	movf	(printf@tmpval+2)^(0+128),w
  2173  03E9  00F2               	movwf	___ftge@ff1+2
  2174  03EA  3000               	movlw	0
  2175  03EB  00F3               	movwf	___ftge@ff2
  2176  03EC  3020               	movlw	32
  2177  03ED  00F4               	movwf	___ftge@ff2+1
  2178  03EE  3041               	movlw	65
  2179  03EF  00F5               	movwf	___ftge@ff2+2
  2180  03F0  160A  118A  25CC  120A  118A  	fcall	___ftge
  2181  03F5  1C03               	btfss	3,0
  2182  03F6  2BFF               	goto	l2077
  2183                           
  2184                           ;doprnt.c: 851: exp++;
  2185  03F7  3001               	movlw	1
  2186  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2187  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2188  03FA  07AC               	addwf	printf@exp^(0+128),f
  2189  03FB  1803               	skipnc
  2190  03FC  0AAD               	incf	(printf@exp+1)^(0+128),f
  2191  03FD  3000               	movlw	0
  2192  03FE                     L1:	
  2193  03FE  07AD               	addwf	(printf@exp+1)^(0+128),f
  2194  03FF                     l2077:	
  2195                           
  2196                           ;doprnt.c: 852: }
  2197                           ;doprnt.c: 1112: if(prec <= 12)
  2198  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  2199  0400  1303               	bcf	3,6	;RP1=0, select bank1
  2200  0401  0827               	movf	(printf@prec+1)^(0+128),w
  2201  0402  3A80               	xorlw	128
  2202  0403  00FF               	movwf	127
  2203  0404  3080               	movlw	128
  2204  0405  027F               	subwf	127,w
  2205  0406  1D03               	skipz
  2206  0407  2C0A               	goto	u3325
  2207  0408  300D               	movlw	13
  2208  0409  0226               	subwf	printf@prec^(0+128),w
  2209  040A                     u3325:	
  2210  040A  1803               	skipnc
  2211  040B  2C45               	goto	l2081
  2212                           
  2213                           ;doprnt.c: 1113: fval += fround(prec);
  2214  040C  1683               	bsf	3,5	;RP0=1, select bank1
  2215  040D  1303               	bcf	3,6	;RP1=0, select bank1
  2216  040E  0826               	movf	printf@prec^(0+128),w
  2217  040F  120A  118A  20B4  120A  118A  	fcall	_fround
  2218  0414  1283               	bcf	3,5	;RP0=0, select bank0
  2219  0415  1303               	bcf	3,6	;RP1=0, select bank0
  2220  0416  0837               	movf	?_fround,w
  2221  0417  00C7               	movwf	___ftadd@f1
  2222  0418  0838               	movf	?_fround+1,w
  2223  0419  00C8               	movwf	___ftadd@f1+1
  2224  041A  0839               	movf	?_fround+2,w
  2225  041B  00C9               	movwf	___ftadd@f1+2
  2226  041C  1683               	bsf	3,5	;RP0=1, select bank1
  2227  041D  1303               	bcf	3,6	;RP1=0, select bank1
  2228  041E  0832               	movf	printf@fval^(0+128),w
  2229  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0420  1303               	bcf	3,6	;RP1=0, select bank0
  2231  0421  00CA               	movwf	___ftadd@f2
  2232  0422  1683               	bsf	3,5	;RP0=1, select bank1
  2233  0423  1303               	bcf	3,6	;RP1=0, select bank1
  2234  0424  0833               	movf	(printf@fval+1)^(0+128),w
  2235  0425  1283               	bcf	3,5	;RP0=0, select bank0
  2236  0426  1303               	bcf	3,6	;RP1=0, select bank0
  2237  0427  00CB               	movwf	___ftadd@f2+1
  2238  0428  1683               	bsf	3,5	;RP0=1, select bank1
  2239  0429  1303               	bcf	3,6	;RP1=0, select bank1
  2240  042A  0834               	movf	(printf@fval+2)^(0+128),w
  2241  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2242  042C  1303               	bcf	3,6	;RP1=0, select bank0
  2243  042D  00CC               	movwf	___ftadd@f2+2
  2244  042E  120A  158A  2178  120A  118A  	fcall	___ftadd
  2245  0433  1283               	bcf	3,5	;RP0=0, select bank0
  2246  0434  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0435  0847               	movf	?___ftadd,w
  2248  0436  1683               	bsf	3,5	;RP0=1, select bank1
  2249  0437  1303               	bcf	3,6	;RP1=0, select bank1
  2250  0438  00B2               	movwf	printf@fval^(0+128)
  2251  0439  1283               	bcf	3,5	;RP0=0, select bank0
  2252  043A  1303               	bcf	3,6	;RP1=0, select bank0
  2253  043B  0848               	movf	?___ftadd+1,w
  2254  043C  1683               	bsf	3,5	;RP0=1, select bank1
  2255  043D  1303               	bcf	3,6	;RP1=0, select bank1
  2256  043E  00B3               	movwf	(printf@fval+1)^(0+128)
  2257  043F  1283               	bcf	3,5	;RP0=0, select bank0
  2258  0440  1303               	bcf	3,6	;RP1=0, select bank0
  2259  0441  0849               	movf	?___ftadd+2,w
  2260  0442  1683               	bsf	3,5	;RP0=1, select bank1
  2261  0443  1303               	bcf	3,6	;RP1=0, select bank1
  2262  0444  00B4               	movwf	(printf@fval+2)^(0+128)
  2263  0445                     l2081:	
  2264                           
  2265                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2266  0445  1683               	bsf	3,5	;RP0=1, select bank1
  2267  0446  1303               	bcf	3,6	;RP1=0, select bank1
  2268  0447  082D               	movf	(printf@exp+1)^(0+128),w
  2269  0448  3A80               	xorlw	128
  2270  0449  00FF               	movwf	127
  2271  044A  3080               	movlw	128
  2272  044B  027F               	subwf	127,w
  2273  044C  1D03               	skipz
  2274  044D  2C50               	goto	u3335
  2275  044E  300A               	movlw	10
  2276  044F  022C               	subwf	printf@exp^(0+128),w
  2277  0450                     u3335:	
  2278  0450  1803               	skipnc
  2279  0451  2C83               	goto	l2089
  2280  0452  1683               	bsf	3,5	;RP0=1, select bank1
  2281  0453  1303               	bcf	3,6	;RP1=0, select bank1
  2282  0454  0834               	movf	(printf@fval+2)^(0+128),w
  2283  0455  0433               	iorwf	(printf@fval+1)^(0+128),w
  2284  0456  0432               	iorwf	printf@fval^(0+128),w
  2285  0457  1903               	skipnz
  2286  0458  2CDC               	goto	l2103
  2287  0459  0832               	movf	printf@fval^(0+128),w
  2288  045A  1283               	bcf	3,5	;RP0=0, select bank0
  2289  045B  1303               	bcf	3,6	;RP1=0, select bank0
  2290  045C  00C0               	movwf	___fttol@f1
  2291  045D  1683               	bsf	3,5	;RP0=1, select bank1
  2292  045E  1303               	bcf	3,6	;RP1=0, select bank1
  2293  045F  0833               	movf	(printf@fval+1)^(0+128),w
  2294  0460  1283               	bcf	3,5	;RP0=0, select bank0
  2295  0461  1303               	bcf	3,6	;RP1=0, select bank0
  2296  0462  00C1               	movwf	___fttol@f1+1
  2297  0463  1683               	bsf	3,5	;RP0=1, select bank1
  2298  0464  1303               	bcf	3,6	;RP1=0, select bank1
  2299  0465  0834               	movf	(printf@fval+2)^(0+128),w
  2300  0466  1283               	bcf	3,5	;RP0=0, select bank0
  2301  0467  1303               	bcf	3,6	;RP1=0, select bank0
  2302  0468  00C2               	movwf	___fttol@f1+2
  2303  0469  120A  118A  2026  120A  118A  	fcall	___fttol
  2304  046E  1283               	bcf	3,5	;RP0=0, select bank0
  2305  046F  1303               	bcf	3,6	;RP1=0, select bank0
  2306  0470  0843               	movf	?___fttol+3,w
  2307  0471  0442               	iorwf	?___fttol+2,w
  2308  0472  0441               	iorwf	?___fttol+1,w
  2309  0473  0440               	iorwf	?___fttol,w
  2310  0474  1D03               	skipz
  2311  0475  2CDC               	goto	l2103
  2312  0476  1683               	bsf	3,5	;RP0=1, select bank1
  2313  0477  1303               	bcf	3,6	;RP1=0, select bank1
  2314  0478  082D               	movf	(printf@exp+1)^(0+128),w
  2315  0479  3A80               	xorlw	128
  2316  047A  00FF               	movwf	127
  2317  047B  3080               	movlw	128
  2318  047C  027F               	subwf	127,w
  2319  047D  1D03               	skipz
  2320  047E  2C81               	goto	u3365
  2321  047F  3002               	movlw	2
  2322  0480  022C               	subwf	printf@exp^(0+128),w
  2323  0481                     u3365:	
  2324  0481  1C03               	skipc
  2325  0482  2CDC               	goto	l2103
  2326  0483                     l2089:	
  2327                           
  2328                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2329  0483  1683               	bsf	3,5	;RP0=1, select bank1
  2330  0484  1303               	bcf	3,6	;RP1=0, select bank1
  2331  0485  082E               	movf	printf@tmpval^(0+128),w
  2332  0486  00F0               	movwf	___ftge@ff1
  2333  0487  082F               	movf	(printf@tmpval+1)^(0+128),w
  2334  0488  00F1               	movwf	___ftge@ff1+1
  2335  0489  0830               	movf	(printf@tmpval+2)^(0+128),w
  2336  048A  00F2               	movwf	___ftge@ff1+2
  2337  048B  3070               	movlw	112
  2338  048C  00F3               	movwf	___ftge@ff2
  2339  048D  3089               	movlw	137
  2340  048E  00F4               	movwf	___ftge@ff2+1
  2341  048F  3040               	movlw	64
  2342  0490  00F5               	movwf	___ftge@ff2+2
  2343  0491  160A  118A  25CC  120A  118A  	fcall	___ftge
  2344  0496  1803               	btfsc	3,0
  2345  0497  2C9A               	goto	l2093
  2346                           
  2347                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2348  0498  30F7               	movlw	247
  2349  0499  2C9B               	goto	L2
  2350  049A                     l2093:	
  2351                           ;doprnt.c: 1122: }else{
  2352                           
  2353                           
  2354                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2355  049A  30F8               	movlw	248
  2356  049B                     L2:	
  2357  049B  1683               	bsf	3,5	;RP0=1, select bank1
  2358  049C  1303               	bcf	3,6	;RP1=0, select bank1
  2359  049D  07AC               	addwf	printf@exp^(0+128),f
  2360  049E  1803               	skipnc
  2361  049F  0AAD               	incf	(printf@exp+1)^(0+128),f
  2362  04A0  30FF               	movlw	255
  2363  04A1  07AD               	addwf	(printf@exp+1)^(0+128),f
  2364                           
  2365                           ;doprnt.c: 1124: }
  2366                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2367  04A2  082C               	movf	printf@exp^(0+128),w
  2368  04A3  120A  158A  2535  120A  118A  	fcall	_scale
  2369  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2370  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2371  04AA  0837               	movf	?_scale,w
  2372  04AB  1683               	bsf	3,5	;RP0=1, select bank1
  2373  04AC  1303               	bcf	3,6	;RP1=0, select bank1
  2374  04AD  00AE               	movwf	printf@tmpval^(0+128)
  2375  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2376  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  2377  04B0  0838               	movf	?_scale+1,w
  2378  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  2379  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  2380  04B3  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2381  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2382  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2383  04B6  0839               	movf	?_scale+2,w
  2384  04B7  1683               	bsf	3,5	;RP0=1, select bank1
  2385  04B8  1303               	bcf	3,6	;RP1=0, select bank1
  2386  04B9  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2387                           
  2388                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2389  04BA  0832               	movf	printf@fval^(0+128),w
  2390  04BB  00F0               	movwf	__tdiv_to_l_@f1
  2391  04BC  0833               	movf	(printf@fval+1)^(0+128),w
  2392  04BD  00F1               	movwf	__tdiv_to_l_@f1+1
  2393  04BE  0834               	movf	(printf@fval+2)^(0+128),w
  2394  04BF  00F2               	movwf	__tdiv_to_l_@f1+2
  2395  04C0  082E               	movf	printf@tmpval^(0+128),w
  2396  04C1  00F3               	movwf	__tdiv_to_l_@f2
  2397  04C2  082F               	movf	(printf@tmpval+1)^(0+128),w
  2398  04C3  00F4               	movwf	__tdiv_to_l_@f2+1
  2399  04C4  0830               	movf	(printf@tmpval+2)^(0+128),w
  2400  04C5  00F5               	movwf	__tdiv_to_l_@f2+2
  2401  04C6  160A  118A  273D  120A  118A  	fcall	__tdiv_to_l_
  2402  04CB  0873               	movf	?__tdiv_to_l_+3,w
  2403  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  2404  04CD  1303               	bcf	3,6	;RP1=0, select bank1
  2405  04CE  00AB               	movwf	(printf@val+3)^(0+128)
  2406  04CF  0872               	movf	?__tdiv_to_l_+2,w
  2407  04D0  00AA               	movwf	(printf@val+2)^(0+128)
  2408  04D1  0871               	movf	?__tdiv_to_l_+1,w
  2409  04D2  00A9               	movwf	(printf@val+1)^(0+128)
  2410  04D3  0870               	movf	?__tdiv_to_l_,w
  2411  04D4  00A8               	movwf	printf@val^(0+128)
  2412                           
  2413                           ;doprnt.c: 1129: fval = 0.0;
  2414  04D5  3000               	movlw	0
  2415  04D6  00B2               	movwf	printf@fval^(0+128)
  2416  04D7  3000               	movlw	0
  2417  04D8  00B3               	movwf	(printf@fval+1)^(0+128)
  2418  04D9  3000               	movlw	0
  2419  04DA  00B4               	movwf	(printf@fval+2)^(0+128)
  2420                           
  2421                           ;doprnt.c: 1130: } else {
  2422  04DB  2D4B               	goto	l2107
  2423  04DC                     l2103:	
  2424                           
  2425                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2426  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  2427  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  2428  04DE  0832               	movf	printf@fval^(0+128),w
  2429  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  2430  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  2431  04E1  00C0               	movwf	___fttol@f1
  2432  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  2433  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  2434  04E4  0833               	movf	(printf@fval+1)^(0+128),w
  2435  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  2436  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  2437  04E7  00C1               	movwf	___fttol@f1+1
  2438  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  2439  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  2440  04EA  0834               	movf	(printf@fval+2)^(0+128),w
  2441  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2442  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2443  04ED  00C2               	movwf	___fttol@f1+2
  2444  04EE  120A  118A  2026  120A  118A  	fcall	___fttol
  2445  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  2446  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  2447  04F5  0843               	movf	?___fttol+3,w
  2448  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  2449  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  2450  04F8  00AB               	movwf	(printf@val+3)^(0+128)
  2451  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  2452  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  2453  04FB  0842               	movf	?___fttol+2,w
  2454  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  2455  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  2456  04FE  00AA               	movwf	(printf@val+2)^(0+128)
  2457  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  2458  0500  1303               	bcf	3,6	;RP1=0, select bank0
  2459  0501  0841               	movf	?___fttol+1,w
  2460  0502  1683               	bsf	3,5	;RP0=1, select bank1
  2461  0503  1303               	bcf	3,6	;RP1=0, select bank1
  2462  0504  00A9               	movwf	(printf@val+1)^(0+128)
  2463  0505  1283               	bcf	3,5	;RP0=0, select bank0
  2464  0506  1303               	bcf	3,6	;RP1=0, select bank0
  2465  0507  0840               	movf	?___fttol,w
  2466  0508  1683               	bsf	3,5	;RP0=1, select bank1
  2467  0509  1303               	bcf	3,6	;RP1=0, select bank1
  2468  050A  00A8               	movwf	printf@val^(0+128)
  2469                           
  2470                           ;doprnt.c: 1132: fval -= (double)val;
  2471  050B  082B               	movf	(printf@val+3)^(0+128),w
  2472  050C  00FB               	movwf	___lltoft@c+3
  2473  050D  082A               	movf	(printf@val+2)^(0+128),w
  2474  050E  00FA               	movwf	___lltoft@c+2
  2475  050F  0829               	movf	(printf@val+1)^(0+128),w
  2476  0510  00F9               	movwf	___lltoft@c+1
  2477  0511  0828               	movf	printf@val^(0+128),w
  2478  0512  00F8               	movwf	___lltoft@c
  2479  0513  120A  158A  200E  120A  118A  	fcall	___lltoft
  2480  0518  0878               	movf	?___lltoft,w
  2481  0519  1283               	bcf	3,5	;RP0=0, select bank0
  2482  051A  1303               	bcf	3,6	;RP1=0, select bank0
  2483  051B  00D4               	movwf	___ftsub@f2
  2484  051C  0879               	movf	?___lltoft+1,w
  2485  051D  00D5               	movwf	___ftsub@f2+1
  2486  051E  087A               	movf	?___lltoft+2,w
  2487  051F  00D6               	movwf	___ftsub@f2+2
  2488  0520  1683               	bsf	3,5	;RP0=1, select bank1
  2489  0521  1303               	bcf	3,6	;RP1=0, select bank1
  2490  0522  0832               	movf	printf@fval^(0+128),w
  2491  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2492  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2493  0525  00D7               	movwf	___ftsub@f1
  2494  0526  1683               	bsf	3,5	;RP0=1, select bank1
  2495  0527  1303               	bcf	3,6	;RP1=0, select bank1
  2496  0528  0833               	movf	(printf@fval+1)^(0+128),w
  2497  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2498  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2499  052B  00D8               	movwf	___ftsub@f1+1
  2500  052C  1683               	bsf	3,5	;RP0=1, select bank1
  2501  052D  1303               	bcf	3,6	;RP1=0, select bank1
  2502  052E  0834               	movf	(printf@fval+2)^(0+128),w
  2503  052F  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0530  1303               	bcf	3,6	;RP1=0, select bank0
  2505  0531  00D9               	movwf	___ftsub@f1+2
  2506  0532  160A  118A  24B9  120A  118A  	fcall	___ftsub
  2507  0537  1283               	bcf	3,5	;RP0=0, select bank0
  2508  0538  1303               	bcf	3,6	;RP1=0, select bank0
  2509  0539  0854               	movf	?___ftsub,w
  2510  053A  1683               	bsf	3,5	;RP0=1, select bank1
  2511  053B  1303               	bcf	3,6	;RP1=0, select bank1
  2512  053C  00B2               	movwf	printf@fval^(0+128)
  2513  053D  1283               	bcf	3,5	;RP0=0, select bank0
  2514  053E  1303               	bcf	3,6	;RP1=0, select bank0
  2515  053F  0855               	movf	?___ftsub+1,w
  2516  0540  1683               	bsf	3,5	;RP0=1, select bank1
  2517  0541  1303               	bcf	3,6	;RP1=0, select bank1
  2518  0542  00B3               	movwf	(printf@fval+1)^(0+128)
  2519  0543  1283               	bcf	3,5	;RP0=0, select bank0
  2520  0544  1303               	bcf	3,6	;RP1=0, select bank0
  2521  0545  0856               	movf	?___ftsub+2,w
  2522  0546  1683               	bsf	3,5	;RP0=1, select bank1
  2523  0547  1303               	bcf	3,6	;RP1=0, select bank1
  2524  0548  00B4               	movwf	(printf@fval+2)^(0+128)
  2525                           
  2526                           ;doprnt.c: 1133: exp = 0;
  2527  0549  01AC               	clrf	printf@exp^(0+128)
  2528  054A  01AD               	clrf	(printf@exp+1)^(0+128)
  2529  054B                     l2107:	
  2530                           
  2531                           ;doprnt.c: 1134: }
  2532                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2533  054B  01B5               	clrf	printf@c^(0+128)
  2534  054C  0AB5               	incf	printf@c^(0+128),f
  2535  054D  300A               	movlw	10
  2536  054E  0635               	xorwf	printf@c^(0+128),w
  2537  054F  1903               	btfsc	3,2
  2538  0550  2DA5               	goto	l2119
  2539  0551                     l2113:	
  2540                           
  2541                           ;doprnt.c: 1137: if(val < dpowers[c])
  2542  0551  0835               	movf	printf@c^(0+128),w
  2543  0552  1283               	bcf	3,5	;RP0=0, select bank0
  2544  0553  1303               	bcf	3,6	;RP1=0, select bank0
  2545  0554  00DF               	movwf	??_printf
  2546  0555  3001               	movlw	1
  2547  0556                     u3395:	
  2548  0556  1003               	clrc
  2549  0557  0DDF               	rlf	??_printf,f
  2550  0558  3EFF               	addlw	-1
  2551  0559  1D03               	skipz
  2552  055A  2D56               	goto	u3395
  2553  055B  1003               	clrc
  2554  055C  0D5F               	rlf	??_printf,w
  2555  055D  3E12               	addlw	low (_dpowers| (0+32768))
  2556  055E  0084               	movwf	4
  2557  055F  3090               	movlw	high (_dpowers| (0+32768))
  2558  0560  1803               	skipnc
  2559  0561  3E01               	addlw	1
  2560  0562  00FF               	movwf	127
  2561  0563  160A  118A  2000  120A  118A  	fcall	stringtab
  2562  0568  00E0               	movwf	??_printf+1
  2563  0569  160A  118A  2000  120A  118A  	fcall	stringtab
  2564  056E  00E1               	movwf	??_printf+2
  2565  056F  160A  118A  2000  120A  118A  	fcall	stringtab
  2566  0574  00E2               	movwf	??_printf+3
  2567  0575  160A  118A  2000  120A  118A  	fcall	stringtab
  2568  057A  00E3               	movwf	??_printf+4
  2569  057B  0863               	movf	??_printf+4,w
  2570  057C  1683               	bsf	3,5	;RP0=1, select bank1
  2571  057D  1303               	bcf	3,6	;RP1=0, select bank1
  2572  057E  022B               	subwf	(printf@val+3)^(0+128),w
  2573  057F  1D03               	skipz
  2574  0580  2D97               	goto	u3405
  2575  0581  1283               	bcf	3,5	;RP0=0, select bank0
  2576  0582  1303               	bcf	3,6	;RP1=0, select bank0
  2577  0583  0862               	movf	??_printf+3,w
  2578  0584  1683               	bsf	3,5	;RP0=1, select bank1
  2579  0585  1303               	bcf	3,6	;RP1=0, select bank1
  2580  0586  022A               	subwf	(printf@val+2)^(0+128),w
  2581  0587  1D03               	skipz
  2582  0588  2D97               	goto	u3405
  2583  0589  1283               	bcf	3,5	;RP0=0, select bank0
  2584  058A  1303               	bcf	3,6	;RP1=0, select bank0
  2585  058B  0861               	movf	??_printf+2,w
  2586  058C  1683               	bsf	3,5	;RP0=1, select bank1
  2587  058D  1303               	bcf	3,6	;RP1=0, select bank1
  2588  058E  0229               	subwf	(printf@val+1)^(0+128),w
  2589  058F  1D03               	skipz
  2590  0590  2D97               	goto	u3405
  2591  0591  1283               	bcf	3,5	;RP0=0, select bank0
  2592  0592  1303               	bcf	3,6	;RP1=0, select bank0
  2593  0593  0860               	movf	??_printf+1,w
  2594  0594  1683               	bsf	3,5	;RP0=1, select bank1
  2595  0595  1303               	bcf	3,6	;RP1=0, select bank1
  2596  0596  0228               	subwf	printf@val^(0+128),w
  2597  0597                     u3405:	
  2598  0597  1C03               	btfss	3,0
  2599  0598  2DA5               	goto	l2119
  2600                           
  2601                           ;doprnt.c: 1138: break;
  2602  0599  3001               	movlw	1
  2603  059A  1283               	bcf	3,5	;RP0=0, select bank0
  2604  059B  1303               	bcf	3,6	;RP1=0, select bank0
  2605  059C  00DF               	movwf	??_printf
  2606  059D  085F               	movf	??_printf,w
  2607  059E  1683               	bsf	3,5	;RP0=1, select bank1
  2608  059F  1303               	bcf	3,6	;RP1=0, select bank1
  2609  05A0  07B5               	addwf	printf@c^(0+128),f
  2610  05A1  300A               	movlw	10
  2611  05A2  0635               	xorwf	printf@c^(0+128),w
  2612  05A3  1D03               	btfss	3,2
  2613  05A4  2D51               	goto	l2113
  2614  05A5                     l2119:	
  2615                           
  2616                           ;doprnt.c: 1175: {
  2617                           ;doprnt.c: 1188: if(flag & 0x03)
  2618  05A5  3003               	movlw	3
  2619  05A6  0524               	andwf	printf@flag^(0+128),w
  2620  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  2621  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  2622  05A9  00DF               	movwf	??_printf
  2623  05AA  3000               	movlw	0
  2624  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  2625  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  2626  05AD  0525               	andwf	(printf@flag+1)^(0+128),w
  2627  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  2628  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  2629  05B0  00E0               	movwf	??_printf+1
  2630  05B1  085F               	movf	??_printf,w
  2631  05B2  0460               	iorwf	??_printf+1,w
  2632  05B3  1903               	btfsc	3,2
  2633  05B4  2DBB               	goto	l2129
  2634                           
  2635                           ;doprnt.c: 1190: (putch('-') );
  2636  05B5  302D               	movlw	45
  2637  05B6                     L5:	
  2638  05B6  120A  158A  2006  120A  118A  	fcall	_putch
  2639  05BB                     l2129:	
  2640                           ;doprnt.c: 1195: }
  2641                           ;doprnt.c: 1196: while(c--) {
  2642                           
  2643  05BB  30FF               	movlw	255
  2644  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  2645  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  2646  05BE  00DF               	movwf	??_printf
  2647  05BF  085F               	movf	??_printf,w
  2648  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  2649  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  2650  05C2  07B5               	addwf	printf@c^(0+128),f
  2651  05C3  0A35               	incf	printf@c^(0+128),w
  2652  05C4  1903               	btfsc	3,2
  2653  05C5  2E3B               	goto	l2135
  2654                           
  2655                           ;doprnt.c: 1200: {
  2656                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  2657  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  2658  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  2659  05C8  0835               	movf	printf@c^(0+128),w
  2660  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  2661  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  2662  05CB  00DF               	movwf	??_printf
  2663  05CC  3001               	movlw	1
  2664  05CD                     u3435:	
  2665  05CD  1003               	clrc
  2666  05CE  0DDF               	rlf	??_printf,f
  2667  05CF  3EFF               	addlw	-1
  2668  05D0  1D03               	skipz
  2669  05D1  2DCD               	goto	u3435
  2670  05D2  1003               	clrc
  2671  05D3  0D5F               	rlf	??_printf,w
  2672  05D4  3E12               	addlw	low (_dpowers| (0+32768))
  2673  05D5  0084               	movwf	4
  2674  05D6  3090               	movlw	high (_dpowers| (0+32768))
  2675  05D7  1803               	skipnc
  2676  05D8  3E01               	addlw	1
  2677  05D9  00FF               	movwf	127
  2678  05DA  160A  118A  2000  120A  118A  	fcall	stringtab
  2679  05DF  00F0               	movwf	___lldiv@divisor
  2680  05E0  160A  118A  2000  120A  118A  	fcall	stringtab
  2681  05E5  00F1               	movwf	___lldiv@divisor+1
  2682  05E6  160A  118A  2000  120A  118A  	fcall	stringtab
  2683  05EB  00F2               	movwf	___lldiv@divisor+2
  2684  05EC  160A  118A  2000  120A  118A  	fcall	stringtab
  2685  05F1  00F3               	movwf	___lldiv@divisor+3
  2686  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  2687  05F3  1303               	bcf	3,6	;RP1=0, select bank1
  2688  05F4  082B               	movf	(printf@val+3)^(0+128),w
  2689  05F5  00F7               	movwf	___lldiv@dividend+3
  2690  05F6  082A               	movf	(printf@val+2)^(0+128),w
  2691  05F7  00F6               	movwf	___lldiv@dividend+2
  2692  05F8  0829               	movf	(printf@val+1)^(0+128),w
  2693  05F9  00F5               	movwf	___lldiv@dividend+1
  2694  05FA  0828               	movf	printf@val^(0+128),w
  2695  05FB  00F4               	movwf	___lldiv@dividend
  2696  05FC  160A  118A  2629  120A  118A  	fcall	___lldiv
  2697  0601  0873               	movf	?___lldiv+3,w
  2698  0602  1683               	bsf	3,5	;RP0=1, select bank1
  2699  0603  1303               	bcf	3,6	;RP1=0, select bank1
  2700  0604  00B1               	movwf	(printf@tmpval+3)^(0+128)
  2701  0605  0872               	movf	?___lldiv+2,w
  2702  0606  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2703  0607  0871               	movf	?___lldiv+1,w
  2704  0608  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2705  0609  0870               	movf	?___lldiv,w
  2706  060A  00AE               	movwf	printf@tmpval^(0+128)
  2707                           
  2708                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2709  060B  3000               	movlw	0
  2710  060C  00F3               	movwf	___llmod@divisor+3
  2711  060D  3000               	movlw	0
  2712  060E  00F2               	movwf	___llmod@divisor+2
  2713  060F  3000               	movlw	0
  2714  0610  00F1               	movwf	___llmod@divisor+1
  2715  0611  300A               	movlw	10
  2716  0612  00F0               	movwf	___llmod@divisor
  2717  0613  0831               	movf	(printf@tmpval+3)^(0+128),w
  2718  0614  00F7               	movwf	___llmod@dividend+3
  2719  0615  0830               	movf	(printf@tmpval+2)^(0+128),w
  2720  0616  00F6               	movwf	___llmod@dividend+2
  2721  0617  082F               	movf	(printf@tmpval+1)^(0+128),w
  2722  0618  00F5               	movwf	___llmod@dividend+1
  2723  0619  082E               	movf	printf@tmpval^(0+128),w
  2724  061A  00F4               	movwf	___llmod@dividend
  2725  061B  160A  118A  2525  120A  118A  	fcall	___llmod
  2726  0620  0873               	movf	?___llmod+3,w
  2727  0621  1683               	bsf	3,5	;RP0=1, select bank1
  2728  0622  1303               	bcf	3,6	;RP1=0, select bank1
  2729  0623  00B1               	movwf	(printf@tmpval+3)^(0+128)
  2730  0624  0872               	movf	?___llmod+2,w
  2731  0625  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2732  0626  0871               	movf	?___llmod+1,w
  2733  0627  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2734  0628  0870               	movf	?___llmod,w
  2735  0629  00AE               	movwf	printf@tmpval^(0+128)
  2736                           
  2737                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  2738  062A  082E               	movf	printf@tmpval^(0+128),w
  2739  062B  3E30               	addlw	48
  2740  062C  2DB6               	goto	L5
  2741  062D                     l2131:	
  2742                           ;doprnt.c: 1204: }
  2743                           ;doprnt.c: 1206: }
  2744                           ;doprnt.c: 1207: while(exp > 0) {
  2745                           
  2746                           
  2747                           ;doprnt.c: 1208: (putch('0') );
  2748  062D  3030               	movlw	48
  2749  062E  120A  158A  2006  120A  118A  	fcall	_putch
  2750                           
  2751                           ;doprnt.c: 1209: exp--;
  2752  0633  30FF               	movlw	255
  2753  0634  1683               	bsf	3,5	;RP0=1, select bank1
  2754  0635  1303               	bcf	3,6	;RP1=0, select bank1
  2755  0636  07AC               	addwf	printf@exp^(0+128),f
  2756  0637  1803               	skipnc
  2757  0638  0AAD               	incf	(printf@exp+1)^(0+128),f
  2758  0639  30FF               	movlw	255
  2759  063A  07AD               	addwf	(printf@exp+1)^(0+128),f
  2760  063B                     l2135:	
  2761  063B  082D               	movf	(printf@exp+1)^(0+128),w
  2762  063C  3A80               	xorlw	128
  2763  063D  00FF               	movwf	127
  2764  063E  3080               	movlw	128
  2765  063F  027F               	subwf	127,w
  2766  0640  1D03               	skipz
  2767  0641  2E44               	goto	u3455
  2768  0642  3001               	movlw	1
  2769  0643  022C               	subwf	printf@exp^(0+128),w
  2770  0644                     u3455:	
  2771  0644  1803               	skipnc
  2772  0645  2E2D               	goto	l2131
  2773                           
  2774                           ;doprnt.c: 1210: }
  2775                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2776  0646  1683               	bsf	3,5	;RP0=1, select bank1
  2777  0647  1303               	bcf	3,6	;RP1=0, select bank1
  2778  0648  0827               	movf	(printf@prec+1)^(0+128),w
  2779  0649  3A80               	xorlw	128
  2780  064A  00FF               	movwf	127
  2781  064B  3080               	movlw	128
  2782  064C  027F               	subwf	127,w
  2783  064D  1D03               	skipz
  2784  064E  2E51               	goto	u3465
  2785  064F  3009               	movlw	9
  2786  0650  0226               	subwf	printf@prec^(0+128),w
  2787  0651                     u3465:	
  2788  0651  1C03               	skipc
  2789  0652  2E55               	goto	l2141
  2790                           
  2791                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2792  0653  3008               	movlw	8
  2793  0654  2E58               	goto	L3
  2794  0655                     l2141:	
  2795                           
  2796                           ;doprnt.c: 1213: else
  2797                           ;doprnt.c: 1214: c = prec;
  2798  0655  1683               	bsf	3,5	;RP0=1, select bank1
  2799  0656  1303               	bcf	3,6	;RP1=0, select bank1
  2800  0657  0826               	movf	printf@prec^(0+128),w
  2801  0658                     L3:	
  2802  0658  1283               	bcf	3,5	;RP0=0, select bank0
  2803  0659  1303               	bcf	3,6	;RP1=0, select bank0
  2804  065A  00DF               	movwf	??_printf
  2805  065B  085F               	movf	??_printf,w
  2806  065C  1683               	bsf	3,5	;RP0=1, select bank1
  2807  065D  1303               	bcf	3,6	;RP1=0, select bank1
  2808  065E  00B5               	movwf	printf@c^(0+128)
  2809                           
  2810                           ;doprnt.c: 1215: prec -= c;
  2811  065F  0835               	movf	printf@c^(0+128),w
  2812  0660  1283               	bcf	3,5	;RP0=0, select bank0
  2813  0661  1303               	bcf	3,6	;RP1=0, select bank0
  2814  0662  00DF               	movwf	??_printf
  2815  0663  01E0               	clrf	??_printf+1
  2816  0664  1BDF               	btfsc	??_printf,7
  2817  0665  03E0               	decf	??_printf+1,f
  2818  0666  085F               	movf	??_printf,w
  2819  0667  1683               	bsf	3,5	;RP0=1, select bank1
  2820  0668  1303               	bcf	3,6	;RP1=0, select bank1
  2821  0669  02A6               	subwf	printf@prec^(0+128),f
  2822  066A  1283               	bcf	3,5	;RP0=0, select bank0
  2823  066B  1303               	bcf	3,6	;RP1=0, select bank0
  2824  066C  0860               	movf	??_printf+1,w
  2825  066D  1683               	bsf	3,5	;RP0=1, select bank1
  2826  066E  1303               	bcf	3,6	;RP1=0, select bank1
  2827  066F  1C03               	skipc
  2828  0670  03A7               	decf	(printf@prec+1)^(0+128),f
  2829  0671  02A7               	subwf	(printf@prec+1)^(0+128),f
  2830                           
  2831                           ;doprnt.c: 1219: if(c)
  2832  0672  0835               	movf	printf@c^(0+128),w
  2833  0673  1903               	btfsc	3,2
  2834  0674  2E7B               	goto	l2147
  2835                           
  2836                           ;doprnt.c: 1221: (putch('.') );
  2837  0675  302E               	movlw	46
  2838  0676  120A  158A  2006  120A  118A  	fcall	_putch
  2839  067B                     l2147:	
  2840                           
  2841                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2842  067B  1683               	bsf	3,5	;RP0=1, select bank1
  2843  067C  1303               	bcf	3,6	;RP1=0, select bank1
  2844  067D  0835               	movf	printf@c^(0+128),w
  2845  067E  120A  158A  2535  120A  118A  	fcall	_scale
  2846  0683  1283               	bcf	3,5	;RP0=0, select bank0
  2847  0684  1303               	bcf	3,6	;RP1=0, select bank0
  2848  0685  0837               	movf	?_scale,w
  2849  0686  1683               	bsf	3,5	;RP0=1, select bank1
  2850  0687  1303               	bcf	3,6	;RP1=0, select bank1
  2851  0688  00A0               	movwf	_printf$663^(0+128)
  2852  0689  1283               	bcf	3,5	;RP0=0, select bank0
  2853  068A  1303               	bcf	3,6	;RP1=0, select bank0
  2854  068B  0838               	movf	?_scale+1,w
  2855  068C  1683               	bsf	3,5	;RP0=1, select bank1
  2856  068D  1303               	bcf	3,6	;RP1=0, select bank1
  2857  068E  00A1               	movwf	(_printf$663+1)^(0+128)
  2858  068F  1283               	bcf	3,5	;RP0=0, select bank0
  2859  0690  1303               	bcf	3,6	;RP1=0, select bank0
  2860  0691  0839               	movf	?_scale+2,w
  2861  0692  1683               	bsf	3,5	;RP0=1, select bank1
  2862  0693  1303               	bcf	3,6	;RP1=0, select bank1
  2863  0694  00A2               	movwf	(_printf$663+2)^(0+128)
  2864                           
  2865                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2866  0695  0820               	movf	_printf$663^(0+128),w
  2867  0696  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0697  1303               	bcf	3,6	;RP1=0, select bank0
  2869  0698  00AA               	movwf	___ftmul@f2
  2870  0699  1683               	bsf	3,5	;RP0=1, select bank1
  2871  069A  1303               	bcf	3,6	;RP1=0, select bank1
  2872  069B  0821               	movf	(_printf$663+1)^(0+128),w
  2873  069C  1283               	bcf	3,5	;RP0=0, select bank0
  2874  069D  1303               	bcf	3,6	;RP1=0, select bank0
  2875  069E  00AB               	movwf	___ftmul@f2+1
  2876  069F  1683               	bsf	3,5	;RP0=1, select bank1
  2877  06A0  1303               	bcf	3,6	;RP1=0, select bank1
  2878  06A1  0822               	movf	(_printf$663+2)^(0+128),w
  2879  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  2880  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  2881  06A4  00AC               	movwf	___ftmul@f2+2
  2882  06A5  1683               	bsf	3,5	;RP0=1, select bank1
  2883  06A6  1303               	bcf	3,6	;RP1=0, select bank1
  2884  06A7  0832               	movf	printf@fval^(0+128),w
  2885  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  2886  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  2887  06AA  00A7               	movwf	___ftmul@f1
  2888  06AB  1683               	bsf	3,5	;RP0=1, select bank1
  2889  06AC  1303               	bcf	3,6	;RP1=0, select bank1
  2890  06AD  0833               	movf	(printf@fval+1)^(0+128),w
  2891  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  2892  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  2893  06B0  00A8               	movwf	___ftmul@f1+1
  2894  06B1  1683               	bsf	3,5	;RP0=1, select bank1
  2895  06B2  1303               	bcf	3,6	;RP1=0, select bank1
  2896  06B3  0834               	movf	(printf@fval+2)^(0+128),w
  2897  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  2898  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  2899  06B6  00A9               	movwf	___ftmul@f1+2
  2900  06B7  120A  158A  20A5  120A  118A  	fcall	___ftmul
  2901  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  2902  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  2903  06BE  0827               	movf	?___ftmul,w
  2904  06BF  00C0               	movwf	___fttol@f1
  2905  06C0  0828               	movf	?___ftmul+1,w
  2906  06C1  00C1               	movwf	___fttol@f1+1
  2907  06C2  0829               	movf	?___ftmul+2,w
  2908  06C3  00C2               	movwf	___fttol@f1+2
  2909  06C4  120A  118A  2026  120A  118A  	fcall	___fttol
  2910  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  2911  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  2912  06CB  0843               	movf	?___fttol+3,w
  2913  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  2914  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  2915  06CE  00AB               	movwf	(printf@val+3)^(0+128)
  2916  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  2917  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  2918  06D1  0842               	movf	?___fttol+2,w
  2919  06D2  1683               	bsf	3,5	;RP0=1, select bank1
  2920  06D3  1303               	bcf	3,6	;RP1=0, select bank1
  2921  06D4  00AA               	movwf	(printf@val+2)^(0+128)
  2922  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  2923  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  2924  06D7  0841               	movf	?___fttol+1,w
  2925  06D8  1683               	bsf	3,5	;RP0=1, select bank1
  2926  06D9  1303               	bcf	3,6	;RP1=0, select bank1
  2927  06DA  00A9               	movwf	(printf@val+1)^(0+128)
  2928  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  2929  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  2930  06DD  0840               	movf	?___fttol,w
  2931  06DE  1683               	bsf	3,5	;RP0=1, select bank1
  2932  06DF  1303               	bcf	3,6	;RP1=0, select bank1
  2933  06E0                     L4:	
  2934  06E0  00A8               	movwf	printf@val^(0+128)
  2935  06E1  30FF               	movlw	255
  2936  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  2937  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  2938  06E4  00DF               	movwf	??_printf
  2939  06E5  085F               	movf	??_printf,w
  2940  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  2941  06E7  1303               	bcf	3,6	;RP1=0, select bank1
  2942  06E8  07B5               	addwf	printf@c^(0+128),f
  2943  06E9  0A35               	incf	printf@c^(0+128),w
  2944  06EA  1903               	btfsc	3,2
  2945  06EB  2FA8               	goto	l2163
  2946                           
  2947                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2948                           
  2949                           ;doprnt.c: 1228: while(c--) {
  2950  06EC  0835               	movf	printf@c^(0+128),w
  2951  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  2952  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  2953  06EF  00DF               	movwf	??_printf
  2954  06F0  3001               	movlw	1
  2955  06F1                     u3485:	
  2956  06F1  1003               	clrc
  2957  06F2  0DDF               	rlf	??_printf,f
  2958  06F3  3EFF               	addlw	-1
  2959  06F4  1D03               	skipz
  2960  06F5  2EF1               	goto	u3485
  2961  06F6  1003               	clrc
  2962  06F7  0D5F               	rlf	??_printf,w
  2963  06F8  3E12               	addlw	low (_dpowers| (0+32768))
  2964  06F9  0084               	movwf	4
  2965  06FA  3090               	movlw	high (_dpowers| (0+32768))
  2966  06FB  1803               	skipnc
  2967  06FC  3E01               	addlw	1
  2968  06FD  00FF               	movwf	127
  2969  06FE  160A  118A  2000  120A  118A  	fcall	stringtab
  2970  0703  00F0               	movwf	___lldiv@divisor
  2971  0704  160A  118A  2000  120A  118A  	fcall	stringtab
  2972  0709  00F1               	movwf	___lldiv@divisor+1
  2973  070A  160A  118A  2000  120A  118A  	fcall	stringtab
  2974  070F  00F2               	movwf	___lldiv@divisor+2
  2975  0710  160A  118A  2000  120A  118A  	fcall	stringtab
  2976  0715  00F3               	movwf	___lldiv@divisor+3
  2977  0716  1683               	bsf	3,5	;RP0=1, select bank1
  2978  0717  1303               	bcf	3,6	;RP1=0, select bank1
  2979  0718  082B               	movf	(printf@val+3)^(0+128),w
  2980  0719  00F7               	movwf	___lldiv@dividend+3
  2981  071A  082A               	movf	(printf@val+2)^(0+128),w
  2982  071B  00F6               	movwf	___lldiv@dividend+2
  2983  071C  0829               	movf	(printf@val+1)^(0+128),w
  2984  071D  00F5               	movwf	___lldiv@dividend+1
  2985  071E  0828               	movf	printf@val^(0+128),w
  2986  071F  00F4               	movwf	___lldiv@dividend
  2987  0720  160A  118A  2629  120A  118A  	fcall	___lldiv
  2988  0725  0873               	movf	?___lldiv+3,w
  2989  0726  1683               	bsf	3,5	;RP0=1, select bank1
  2990  0727  1303               	bcf	3,6	;RP1=0, select bank1
  2991  0728  00B1               	movwf	(printf@tmpval+3)^(0+128)
  2992  0729  0872               	movf	?___lldiv+2,w
  2993  072A  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2994  072B  0871               	movf	?___lldiv+1,w
  2995  072C  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2996  072D  0870               	movf	?___lldiv,w
  2997  072E  00AE               	movwf	printf@tmpval^(0+128)
  2998                           
  2999                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3000  072F  3000               	movlw	0
  3001  0730  00F3               	movwf	___llmod@divisor+3
  3002  0731  3000               	movlw	0
  3003  0732  00F2               	movwf	___llmod@divisor+2
  3004  0733  3000               	movlw	0
  3005  0734  00F1               	movwf	___llmod@divisor+1
  3006  0735  300A               	movlw	10
  3007  0736  00F0               	movwf	___llmod@divisor
  3008  0737  0831               	movf	(printf@tmpval+3)^(0+128),w
  3009  0738  00F7               	movwf	___llmod@dividend+3
  3010  0739  0830               	movf	(printf@tmpval+2)^(0+128),w
  3011  073A  00F6               	movwf	___llmod@dividend+2
  3012  073B  082F               	movf	(printf@tmpval+1)^(0+128),w
  3013  073C  00F5               	movwf	___llmod@dividend+1
  3014  073D  082E               	movf	printf@tmpval^(0+128),w
  3015  073E  00F4               	movwf	___llmod@dividend
  3016  073F  160A  118A  2525  120A  118A  	fcall	___llmod
  3017  0744  0873               	movf	?___llmod+3,w
  3018  0745  1683               	bsf	3,5	;RP0=1, select bank1
  3019  0746  1303               	bcf	3,6	;RP1=0, select bank1
  3020  0747  00B1               	movwf	(printf@tmpval+3)^(0+128)
  3021  0748  0872               	movf	?___llmod+2,w
  3022  0749  00B0               	movwf	(printf@tmpval+2)^(0+128)
  3023  074A  0871               	movf	?___llmod+1,w
  3024  074B  00AF               	movwf	(printf@tmpval+1)^(0+128)
  3025  074C  0870               	movf	?___llmod,w
  3026  074D  00AE               	movwf	printf@tmpval^(0+128)
  3027                           
  3028                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  3029  074E  082E               	movf	printf@tmpval^(0+128),w
  3030  074F  3E30               	addlw	48
  3031  0750  120A  158A  2006  120A  118A  	fcall	_putch
  3032                           
  3033                           ;doprnt.c: 1232: val %= dpowers[c];
  3034  0755  1683               	bsf	3,5	;RP0=1, select bank1
  3035  0756  1303               	bcf	3,6	;RP1=0, select bank1
  3036  0757  0835               	movf	printf@c^(0+128),w
  3037  0758  1283               	bcf	3,5	;RP0=0, select bank0
  3038  0759  1303               	bcf	3,6	;RP1=0, select bank0
  3039  075A  00DF               	movwf	??_printf
  3040  075B  3001               	movlw	1
  3041  075C                     u3495:	
  3042  075C  1003               	clrc
  3043  075D  0DDF               	rlf	??_printf,f
  3044  075E  3EFF               	addlw	-1
  3045  075F  1D03               	skipz
  3046  0760  2F5C               	goto	u3495
  3047  0761  1003               	clrc
  3048  0762  0D5F               	rlf	??_printf,w
  3049  0763  3E12               	addlw	low (_dpowers| (0+32768))
  3050  0764  0084               	movwf	4
  3051  0765  3090               	movlw	high (_dpowers| (0+32768))
  3052  0766  1803               	skipnc
  3053  0767  3E01               	addlw	1
  3054  0768  00FF               	movwf	127
  3055  0769  160A  118A  2000  120A  118A  	fcall	stringtab
  3056  076E  00F0               	movwf	___llmod@divisor
  3057  076F  160A  118A  2000  120A  118A  	fcall	stringtab
  3058  0774  00F1               	movwf	___llmod@divisor+1
  3059  0775  160A  118A  2000  120A  118A  	fcall	stringtab
  3060  077A  00F2               	movwf	___llmod@divisor+2
  3061  077B  160A  118A  2000  120A  118A  	fcall	stringtab
  3062  0780  00F3               	movwf	___llmod@divisor+3
  3063  0781  1683               	bsf	3,5	;RP0=1, select bank1
  3064  0782  1303               	bcf	3,6	;RP1=0, select bank1
  3065  0783  082B               	movf	(printf@val+3)^(0+128),w
  3066  0784  00F7               	movwf	___llmod@dividend+3
  3067  0785  082A               	movf	(printf@val+2)^(0+128),w
  3068  0786  00F6               	movwf	___llmod@dividend+2
  3069  0787  0829               	movf	(printf@val+1)^(0+128),w
  3070  0788  00F5               	movwf	___llmod@dividend+1
  3071  0789  0828               	movf	printf@val^(0+128),w
  3072  078A  00F4               	movwf	___llmod@dividend
  3073  078B  160A  118A  2525  120A  118A  	fcall	___llmod
  3074  0790  0873               	movf	?___llmod+3,w
  3075  0791  1683               	bsf	3,5	;RP0=1, select bank1
  3076  0792  1303               	bcf	3,6	;RP1=0, select bank1
  3077  0793  00AB               	movwf	(printf@val+3)^(0+128)
  3078  0794  0872               	movf	?___llmod+2,w
  3079  0795  00AA               	movwf	(printf@val+2)^(0+128)
  3080  0796  0871               	movf	?___llmod+1,w
  3081  0797  00A9               	movwf	(printf@val+1)^(0+128)
  3082  0798  0870               	movf	?___llmod,w
  3083  0799  2EE0               	goto	L4
  3084  079A                     l2159:	
  3085                           ;doprnt.c: 1233: }
  3086                           ;doprnt.c: 1235: while(prec) {
  3087                           
  3088                           
  3089                           ;doprnt.c: 1236: (putch('0') );
  3090  079A  3030               	movlw	48
  3091  079B  120A  158A  2006  120A  118A  	fcall	_putch
  3092                           
  3093                           ;doprnt.c: 1237: prec--;
  3094  07A0  30FF               	movlw	255
  3095  07A1  1683               	bsf	3,5	;RP0=1, select bank1
  3096  07A2  1303               	bcf	3,6	;RP1=0, select bank1
  3097  07A3  07A6               	addwf	printf@prec^(0+128),f
  3098  07A4  1803               	skipnc
  3099  07A5  0AA7               	incf	(printf@prec+1)^(0+128),f
  3100  07A6  30FF               	movlw	255
  3101  07A7  07A7               	addwf	(printf@prec+1)^(0+128),f
  3102  07A8                     l2163:	
  3103  07A8  0826               	movf	printf@prec^(0+128),w
  3104  07A9  0427               	iorwf	(printf@prec+1)^(0+128),w
  3105  07AA  1903               	btfsc	3,2
  3106  07AB  2A6E               	goto	l2169
  3107  07AC  2F9A               	goto	l2159
  3108  07AD                     l2165:	
  3109                           ;doprnt.c: 1238: }
  3110                           ;doprnt.c: 1245: continue;
  3111                           
  3112                           
  3113                           ;doprnt.c: 1246: }
  3114                           ;doprnt.c: 1422: {
  3115                           ;doprnt.c: 1438: if(flag & 0x03)
  3116  07AD  3003               	movlw	3
  3117  07AE  1683               	bsf	3,5	;RP0=1, select bank1
  3118  07AF  1303               	bcf	3,6	;RP1=0, select bank1
  3119  07B0  0524               	andwf	printf@flag^(0+128),w
  3120  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  3121  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  3122  07B3  00DF               	movwf	??_printf
  3123  07B4  3000               	movlw	0
  3124  07B5  1683               	bsf	3,5	;RP0=1, select bank1
  3125  07B6  1303               	bcf	3,6	;RP1=0, select bank1
  3126  07B7  0525               	andwf	(printf@flag+1)^(0+128),w
  3127  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  3128  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  3129  07BA  00E0               	movwf	??_printf+1
  3130  07BB  085F               	movf	??_printf,w
  3131  07BC  0460               	iorwf	??_printf+1,w
  3132  07BD  1903               	btfsc	3,2
  3133  07BE  2A6E               	goto	l2169
  3134                           
  3135                           ;doprnt.c: 1439: (putch('-') );
  3136  07BF  302D               	movlw	45
  3137  07C0  120A  158A  2006  120A  118A  	fcall	_putch
  3138  07C5  2A6E               	goto	l2169
  3139  07C6                     l137:	
  3140                           ;doprnt.c: 1540: return 0;
  3141                           ;	Return value of _printf is never used
  3142                           
  3143                           ;doprnt.c: 1469: }
  3144                           ;doprnt.c: 1533: }
  3145                           ;doprnt.c: 1535: alldone:
  3146                           
  3147  07C6  0008               	return
  3148  07C7                     __end_of_printf:	
  3149                           
  3150                           	psect	text2
  3151  0D35                     __ptext2:	
  3152 ;; *************** function _scale *****************
  3153 ;; Defined at:
  3154 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  scl             1    wreg     char 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  scl             1   31[BANK0 ] char 
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  3   23[BANK0 ] char 
  3161 ;; Registers used:
  3162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3168 ;;      Params:         0       3       0       0       0
  3169 ;;      Locals:         0       4       0       0       0
  3170 ;;      Temps:          0       2       0       0       0
  3171 ;;      Totals:         0       9       0       0       0
  3172 ;;Total ram usage:        9 bytes
  3173 ;; Hardware stack levels used:    1
  3174 ;; Hardware stack levels required when called:    2
  3175 ;; This function calls:
  3176 ;;		___awdiv
  3177 ;;		___awmod
  3178 ;;		___bmul
  3179 ;;		___ftmul
  3180 ;; This function is called by:
  3181 ;;		_printf
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           
  3186                           ;psect for function _scale
  3187  0D35                     _scale:	
  3188                           
  3189                           ;incstack = 0
  3190                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3191                           ;scale@scl stored from wreg
  3192  0D35  1283               	bcf	3,5	;RP0=0, select bank0
  3193  0D36  1303               	bcf	3,6	;RP1=0, select bank0
  3194  0D37  00BF               	movwf	scale@scl
  3195                           
  3196                           ;doprnt.c: 428: if(scl < 0) {
  3197  0D38  1FBF               	btfss	scale@scl,7
  3198  0D39  2E9E               	goto	l1753
  3199                           
  3200                           ;doprnt.c: 429: scl = -scl;
  3201  0D3A  09BF               	comf	scale@scl,f
  3202  0D3B  0ABF               	incf	scale@scl,f
  3203                           
  3204                           ;doprnt.c: 430: if(scl>=110)
  3205  0D3C  083F               	movf	scale@scl,w
  3206  0D3D  3A80               	xorlw	128
  3207  0D3E  3E12               	addlw	-238
  3208  0D3F  1C03               	skipc
  3209  0D40  2E05               	goto	l1743
  3210                           
  3211                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3212  0D41  3003               	movlw	3
  3213  0D42  00BA               	movwf	??_scale
  3214  0D43  083A               	movf	??_scale,w
  3215  0D44  00A4               	movwf	___bmul@multiplicand
  3216  0D45  300A               	movlw	10
  3217  0D46  00F7               	movwf	___awdiv@divisor
  3218  0D47  3000               	movlw	0
  3219  0D48  00F8               	movwf	___awdiv@divisor+1
  3220  0D49  083F               	movf	scale@scl,w
  3221  0D4A  00F2               	movwf	___awmod@dividend
  3222  0D4B  01F3               	clrf	___awmod@dividend+1
  3223  0D4C  1BF2               	btfsc	___awmod@dividend,7
  3224  0D4D  03F3               	decf	___awmod@dividend+1,f
  3225  0D4E  3064               	movlw	100
  3226  0D4F  00F0               	movwf	___awmod@divisor
  3227  0D50  3000               	movlw	0
  3228  0D51  00F1               	movwf	___awmod@divisor+1
  3229  0D52  160A  118A  24DA  120A  158A  	fcall	___awmod
  3230  0D57  0871               	movf	?___awmod+1,w
  3231  0D58  00FA               	movwf	___awdiv@dividend+1
  3232  0D59  0870               	movf	?___awmod,w
  3233  0D5A  00F9               	movwf	___awdiv@dividend
  3234  0D5B  160A  118A  2571  120A  158A  	fcall	___awdiv
  3235  0D60  0877               	movf	?___awdiv,w
  3236  0D61  3E09               	addlw	9
  3237  0D62  160A  118A  24A6  120A  158A  	fcall	___bmul
  3238  0D67  3E61               	addlw	low (__npowers_| (0+32768))
  3239  0D68  0084               	movwf	4
  3240  0D69  3090               	movlw	high (__npowers_| (0+32768))
  3241  0D6A  1803               	skipnc
  3242  0D6B  3E01               	addlw	1
  3243  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  3244  0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  3245  0D6E  00FF               	movwf	127
  3246  0D6F  160A  118A  2000  120A  158A  	fcall	stringtab
  3247  0D74  00A7               	movwf	___ftmul@f1
  3248  0D75  160A  118A  2000  120A  158A  	fcall	stringtab
  3249  0D7A  00A8               	movwf	___ftmul@f1+1
  3250  0D7B  160A  118A  2000  120A  158A  	fcall	stringtab
  3251  0D80  00A9               	movwf	___ftmul@f1+2
  3252  0D81  3003               	movlw	3
  3253  0D82  00BB               	movwf	??_scale+1
  3254  0D83  083B               	movf	??_scale+1,w
  3255  0D84  00A4               	movwf	___bmul@multiplicand
  3256  0D85  3064               	movlw	100
  3257  0D86  00F7               	movwf	___awdiv@divisor
  3258  0D87  3000               	movlw	0
  3259  0D88  00F8               	movwf	___awdiv@divisor+1
  3260  0D89  083F               	movf	scale@scl,w
  3261  0D8A  00F9               	movwf	___awdiv@dividend
  3262  0D8B  01FA               	clrf	___awdiv@dividend+1
  3263  0D8C  1BF9               	btfsc	___awdiv@dividend,7
  3264  0D8D  03FA               	decf	___awdiv@dividend+1,f
  3265  0D8E  160A  118A  2571  120A  158A  	fcall	___awdiv
  3266  0D93  0877               	movf	?___awdiv,w
  3267  0D94  3E12               	addlw	18
  3268  0D95  160A  118A  24A6  120A  158A  	fcall	___bmul
  3269  0D9A  3E61               	addlw	low (__npowers_| (0+32768))
  3270  0D9B  0084               	movwf	4
  3271  0D9C  3090               	movlw	high (__npowers_| (0+32768))
  3272  0D9D  1803               	skipnc
  3273  0D9E  3E01               	addlw	1
  3274  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  3275  0DA0  1303               	bcf	3,6	;RP1=0, select bank0
  3276  0DA1  00FF               	movwf	127
  3277  0DA2  160A  118A  2000  120A  158A  	fcall	stringtab
  3278  0DA7  00AA               	movwf	___ftmul@f2
  3279  0DA8  160A  118A  2000  120A  158A  	fcall	stringtab
  3280  0DAD  00AB               	movwf	___ftmul@f2+1
  3281  0DAE  160A  118A  2000  120A  158A  	fcall	stringtab
  3282  0DB3  00AC               	movwf	___ftmul@f2+2
  3283  0DB4  120A  158A  20A5  120A  158A  	fcall	___ftmul
  3284  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0DBA  1303               	bcf	3,6	;RP1=0, select bank0
  3286  0DBB  0827               	movf	?___ftmul,w
  3287  0DBC  00BC               	movwf	_scale$662
  3288  0DBD  0828               	movf	?___ftmul+1,w
  3289  0DBE  00BD               	movwf	_scale$662+1
  3290  0DBF  0829               	movf	?___ftmul+2,w
  3291  0DC0  00BE               	movwf	_scale$662+2
  3292                           
  3293                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3294  0DC1  3003               	movlw	3
  3295  0DC2  00BA               	movwf	??_scale
  3296  0DC3  083A               	movf	??_scale,w
  3297  0DC4  00A4               	movwf	___bmul@multiplicand
  3298  0DC5  083F               	movf	scale@scl,w
  3299  0DC6  00F2               	movwf	___awmod@dividend
  3300  0DC7  01F3               	clrf	___awmod@dividend+1
  3301  0DC8  1BF2               	btfsc	___awmod@dividend,7
  3302  0DC9  03F3               	decf	___awmod@dividend+1,f
  3303  0DCA  300A               	movlw	10
  3304  0DCB  00F0               	movwf	___awmod@divisor
  3305  0DCC  3000               	movlw	0
  3306  0DCD  00F1               	movwf	___awmod@divisor+1
  3307  0DCE  160A  118A  24DA  120A  158A  	fcall	___awmod
  3308  0DD3  0870               	movf	?___awmod,w
  3309  0DD4  160A  118A  24A6  120A  158A  	fcall	___bmul
  3310  0DD9  3E61               	addlw	low (__npowers_| (0+32768))
  3311  0DDA  0084               	movwf	4
  3312  0DDB  3090               	movlw	high (__npowers_| (0+32768))
  3313  0DDC  1803               	skipnc
  3314  0DDD  3E01               	addlw	1
  3315  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  3316  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  3317  0DE0  00FF               	movwf	127
  3318  0DE1  160A  118A  2000  120A  158A  	fcall	stringtab
  3319  0DE6  00A7               	movwf	___ftmul@f1
  3320  0DE7  160A  118A  2000  120A  158A  	fcall	stringtab
  3321  0DEC  00A8               	movwf	___ftmul@f1+1
  3322  0DED  160A  118A  2000  120A  158A  	fcall	stringtab
  3323  0DF2  00A9               	movwf	___ftmul@f1+2
  3324  0DF3  083C               	movf	_scale$662,w
  3325  0DF4  00AA               	movwf	___ftmul@f2
  3326  0DF5  083D               	movf	_scale$662+1,w
  3327  0DF6  00AB               	movwf	___ftmul@f2+1
  3328  0DF7  083E               	movf	_scale$662+2,w
  3329  0DF8  00AC               	movwf	___ftmul@f2+2
  3330  0DF9  120A  158A  20A5   	fcall	___ftmul
  3331  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  3332  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  3333  0DFE  0827               	movf	?___ftmul,w
  3334  0DFF  00B7               	movwf	?_scale
  3335  0E00  0828               	movf	?___ftmul+1,w
  3336  0E01  00B8               	movwf	?_scale+1
  3337  0E02  0829               	movf	?___ftmul+2,w
  3338  0E03  00B9               	movwf	?_scale+2
  3339  0E04  0008               	return
  3340  0E05                     l1743:	
  3341                           
  3342                           ;doprnt.c: 432: else if(scl > 10)
  3343  0E05  083F               	movf	scale@scl,w
  3344  0E06  3A80               	xorlw	128
  3345  0E07  3E75               	addlw	-139
  3346  0E08  1C03               	skipc
  3347  0E09  2E7B               	goto	l1749
  3348                           
  3349                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3350  0E0A  3003               	movlw	3
  3351  0E0B  00BA               	movwf	??_scale
  3352  0E0C  083A               	movf	??_scale,w
  3353  0E0D  00A4               	movwf	___bmul@multiplicand
  3354  0E0E  083F               	movf	scale@scl,w
  3355  0E0F  00F2               	movwf	___awmod@dividend
  3356  0E10  01F3               	clrf	___awmod@dividend+1
  3357  0E11  1BF2               	btfsc	___awmod@dividend,7
  3358  0E12  03F3               	decf	___awmod@dividend+1,f
  3359  0E13  300A               	movlw	10
  3360  0E14  00F0               	movwf	___awmod@divisor
  3361  0E15  3000               	movlw	0
  3362  0E16  00F1               	movwf	___awmod@divisor+1
  3363  0E17  160A  118A  24DA  120A  158A  	fcall	___awmod
  3364  0E1C  0870               	movf	?___awmod,w
  3365  0E1D  160A  118A  24A6  120A  158A  	fcall	___bmul
  3366  0E22  3E61               	addlw	low (__npowers_| (0+32768))
  3367  0E23  0084               	movwf	4
  3368  0E24  3090               	movlw	high (__npowers_| (0+32768))
  3369  0E25  1803               	skipnc
  3370  0E26  3E01               	addlw	1
  3371  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  3372  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  3373  0E29  00FF               	movwf	127
  3374  0E2A  160A  118A  2000  120A  158A  	fcall	stringtab
  3375  0E2F  00A7               	movwf	___ftmul@f1
  3376  0E30  160A  118A  2000  120A  158A  	fcall	stringtab
  3377  0E35  00A8               	movwf	___ftmul@f1+1
  3378  0E36  160A  118A  2000  120A  158A  	fcall	stringtab
  3379  0E3B  00A9               	movwf	___ftmul@f1+2
  3380  0E3C  3003               	movlw	3
  3381  0E3D  00BB               	movwf	??_scale+1
  3382  0E3E  083B               	movf	??_scale+1,w
  3383  0E3F  00A4               	movwf	___bmul@multiplicand
  3384  0E40  300A               	movlw	10
  3385  0E41  00F7               	movwf	___awdiv@divisor
  3386  0E42  3000               	movlw	0
  3387  0E43  00F8               	movwf	___awdiv@divisor+1
  3388  0E44  083F               	movf	scale@scl,w
  3389  0E45  00F9               	movwf	___awdiv@dividend
  3390  0E46  01FA               	clrf	___awdiv@dividend+1
  3391  0E47  1BF9               	btfsc	___awdiv@dividend,7
  3392  0E48  03FA               	decf	___awdiv@dividend+1,f
  3393  0E49  160A  118A  2571  120A  158A  	fcall	___awdiv
  3394  0E4E  0877               	movf	?___awdiv,w
  3395  0E4F  3E09               	addlw	9
  3396  0E50  160A  118A  24A6  120A  158A  	fcall	___bmul
  3397  0E55  3E61               	addlw	low (__npowers_| (0+32768))
  3398  0E56  0084               	movwf	4
  3399  0E57  3090               	movlw	high (__npowers_| (0+32768))
  3400  0E58  1803               	skipnc
  3401  0E59  3E01               	addlw	1
  3402  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  3403  0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  3404  0E5C  00FF               	movwf	127
  3405  0E5D  160A  118A  2000  120A  158A  	fcall	stringtab
  3406  0E62  00AA               	movwf	___ftmul@f2
  3407  0E63  160A  118A  2000  120A  158A  	fcall	stringtab
  3408  0E68  00AB               	movwf	___ftmul@f2+1
  3409  0E69  160A  118A  2000  120A  158A  	fcall	stringtab
  3410  0E6E  00AC               	movwf	___ftmul@f2+2
  3411  0E6F  120A  158A  20A5   	fcall	___ftmul
  3412  0E72  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0E73  1303               	bcf	3,6	;RP1=0, select bank0
  3414  0E74  0827               	movf	?___ftmul,w
  3415  0E75  00B7               	movwf	?_scale
  3416  0E76  0828               	movf	?___ftmul+1,w
  3417  0E77  00B8               	movwf	?_scale+1
  3418  0E78  0829               	movf	?___ftmul+2,w
  3419  0E79  00B9               	movwf	?_scale+2
  3420  0E7A  0008               	return
  3421  0E7B                     l1749:	
  3422                           
  3423                           ;doprnt.c: 434: return _npowers_[scl];
  3424  0E7B  3003               	movlw	3
  3425  0E7C  00BA               	movwf	??_scale
  3426  0E7D  083A               	movf	??_scale,w
  3427  0E7E  00A4               	movwf	___bmul@multiplicand
  3428  0E7F  083F               	movf	scale@scl,w
  3429  0E80  160A  118A  24A6  120A  158A  	fcall	___bmul
  3430  0E85  3E61               	addlw	low (__npowers_| (0+32768))
  3431  0E86  0084               	movwf	4
  3432  0E87  3090               	movlw	high (__npowers_| (0+32768))
  3433  0E88  1803               	skipnc
  3434  0E89  3E01               	addlw	1
  3435  0E8A  1283               	bcf	3,5	;RP0=0, select bank0
  3436  0E8B  1303               	bcf	3,6	;RP1=0, select bank0
  3437  0E8C  00FF               	movwf	127
  3438  0E8D  160A  118A  2000  120A  158A  	fcall	stringtab
  3439  0E92  00B7               	movwf	?_scale
  3440  0E93  160A  118A  2000  120A  158A  	fcall	stringtab
  3441  0E98  00B8               	movwf	?_scale+1
  3442  0E99  160A  118A  2000   	fcall	stringtab
  3443  0E9C  00B9               	movwf	?_scale+2
  3444  0E9D  0008               	return
  3445  0E9E                     l1753:	
  3446                           
  3447                           ;doprnt.c: 435: }
  3448                           ;doprnt.c: 436: if(scl>=110)
  3449  0E9E  083F               	movf	scale@scl,w
  3450  0E9F  3A80               	xorlw	128
  3451  0EA0  3E12               	addlw	-238
  3452  0EA1  1C03               	skipc
  3453  0EA2  2F67               	goto	l1761
  3454                           
  3455                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3456  0EA3  3003               	movlw	3
  3457  0EA4  00BA               	movwf	??_scale
  3458  0EA5  083A               	movf	??_scale,w
  3459  0EA6  00A4               	movwf	___bmul@multiplicand
  3460  0EA7  300A               	movlw	10
  3461  0EA8  00F7               	movwf	___awdiv@divisor
  3462  0EA9  3000               	movlw	0
  3463  0EAA  00F8               	movwf	___awdiv@divisor+1
  3464  0EAB  083F               	movf	scale@scl,w
  3465  0EAC  00F2               	movwf	___awmod@dividend
  3466  0EAD  01F3               	clrf	___awmod@dividend+1
  3467  0EAE  1BF2               	btfsc	___awmod@dividend,7
  3468  0EAF  03F3               	decf	___awmod@dividend+1,f
  3469  0EB0  3064               	movlw	100
  3470  0EB1  00F0               	movwf	___awmod@divisor
  3471  0EB2  3000               	movlw	0
  3472  0EB3  00F1               	movwf	___awmod@divisor+1
  3473  0EB4  160A  118A  24DA  120A  158A  	fcall	___awmod
  3474  0EB9  0871               	movf	?___awmod+1,w
  3475  0EBA  00FA               	movwf	___awdiv@dividend+1
  3476  0EBB  0870               	movf	?___awmod,w
  3477  0EBC  00F9               	movwf	___awdiv@dividend
  3478  0EBD  160A  118A  2571  120A  158A  	fcall	___awdiv
  3479  0EC2  0877               	movf	?___awdiv,w
  3480  0EC3  3E09               	addlw	9
  3481  0EC4  160A  118A  24A6  120A  158A  	fcall	___bmul
  3482  0EC9  3E3A               	addlw	low (__powers_| (0+32768))
  3483  0ECA  0084               	movwf	4
  3484  0ECB  3090               	movlw	high (__powers_| (0+32768))
  3485  0ECC  1803               	skipnc
  3486  0ECD  3E01               	addlw	1
  3487  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  3488  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  3489  0ED0  00FF               	movwf	127
  3490  0ED1  160A  118A  2000  120A  158A  	fcall	stringtab
  3491  0ED6  00A7               	movwf	___ftmul@f1
  3492  0ED7  160A  118A  2000  120A  158A  	fcall	stringtab
  3493  0EDC  00A8               	movwf	___ftmul@f1+1
  3494  0EDD  160A  118A  2000  120A  158A  	fcall	stringtab
  3495  0EE2  00A9               	movwf	___ftmul@f1+2
  3496  0EE3  3003               	movlw	3
  3497  0EE4  00BB               	movwf	??_scale+1
  3498  0EE5  083B               	movf	??_scale+1,w
  3499  0EE6  00A4               	movwf	___bmul@multiplicand
  3500  0EE7  3064               	movlw	100
  3501  0EE8  00F7               	movwf	___awdiv@divisor
  3502  0EE9  3000               	movlw	0
  3503  0EEA  00F8               	movwf	___awdiv@divisor+1
  3504  0EEB  083F               	movf	scale@scl,w
  3505  0EEC  00F9               	movwf	___awdiv@dividend
  3506  0EED  01FA               	clrf	___awdiv@dividend+1
  3507  0EEE  1BF9               	btfsc	___awdiv@dividend,7
  3508  0EEF  03FA               	decf	___awdiv@dividend+1,f
  3509  0EF0  160A  118A  2571  120A  158A  	fcall	___awdiv
  3510  0EF5  0877               	movf	?___awdiv,w
  3511  0EF6  3E12               	addlw	18
  3512  0EF7  160A  118A  24A6  120A  158A  	fcall	___bmul
  3513  0EFC  3E3A               	addlw	low (__powers_| (0+32768))
  3514  0EFD  0084               	movwf	4
  3515  0EFE  3090               	movlw	high (__powers_| (0+32768))
  3516  0EFF  1803               	skipnc
  3517  0F00  3E01               	addlw	1
  3518  0F01  1283               	bcf	3,5	;RP0=0, select bank0
  3519  0F02  1303               	bcf	3,6	;RP1=0, select bank0
  3520  0F03  00FF               	movwf	127
  3521  0F04  160A  118A  2000  120A  158A  	fcall	stringtab
  3522  0F09  00AA               	movwf	___ftmul@f2
  3523  0F0A  160A  118A  2000  120A  158A  	fcall	stringtab
  3524  0F0F  00AB               	movwf	___ftmul@f2+1
  3525  0F10  160A  118A  2000  120A  158A  	fcall	stringtab
  3526  0F15  00AC               	movwf	___ftmul@f2+2
  3527  0F16  120A  158A  20A5  120A  158A  	fcall	___ftmul
  3528  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  3529  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  3530  0F1D  0827               	movf	?___ftmul,w
  3531  0F1E  00BC               	movwf	_scale$662
  3532  0F1F  0828               	movf	?___ftmul+1,w
  3533  0F20  00BD               	movwf	_scale$662+1
  3534  0F21  0829               	movf	?___ftmul+2,w
  3535  0F22  00BE               	movwf	_scale$662+2
  3536                           
  3537                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3538  0F23  3003               	movlw	3
  3539  0F24  00BA               	movwf	??_scale
  3540  0F25  083A               	movf	??_scale,w
  3541  0F26  00A4               	movwf	___bmul@multiplicand
  3542  0F27  083F               	movf	scale@scl,w
  3543  0F28  00F2               	movwf	___awmod@dividend
  3544  0F29  01F3               	clrf	___awmod@dividend+1
  3545  0F2A  1BF2               	btfsc	___awmod@dividend,7
  3546  0F2B  03F3               	decf	___awmod@dividend+1,f
  3547  0F2C  300A               	movlw	10
  3548  0F2D  00F0               	movwf	___awmod@divisor
  3549  0F2E  3000               	movlw	0
  3550  0F2F  00F1               	movwf	___awmod@divisor+1
  3551  0F30  160A  118A  24DA  120A  158A  	fcall	___awmod
  3552  0F35  0870               	movf	?___awmod,w
  3553  0F36  160A  118A  24A6  120A  158A  	fcall	___bmul
  3554  0F3B  3E3A               	addlw	low (__powers_| (0+32768))
  3555  0F3C  0084               	movwf	4
  3556  0F3D  3090               	movlw	high (__powers_| (0+32768))
  3557  0F3E  1803               	skipnc
  3558  0F3F  3E01               	addlw	1
  3559  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  3560  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  3561  0F42  00FF               	movwf	127
  3562  0F43  160A  118A  2000  120A  158A  	fcall	stringtab
  3563  0F48  00A7               	movwf	___ftmul@f1
  3564  0F49  160A  118A  2000  120A  158A  	fcall	stringtab
  3565  0F4E  00A8               	movwf	___ftmul@f1+1
  3566  0F4F  160A  118A  2000  120A  158A  	fcall	stringtab
  3567  0F54  00A9               	movwf	___ftmul@f1+2
  3568  0F55  083C               	movf	_scale$662,w
  3569  0F56  00AA               	movwf	___ftmul@f2
  3570  0F57  083D               	movf	_scale$662+1,w
  3571  0F58  00AB               	movwf	___ftmul@f2+1
  3572  0F59  083E               	movf	_scale$662+2,w
  3573  0F5A  00AC               	movwf	___ftmul@f2+2
  3574  0F5B  120A  158A  20A5   	fcall	___ftmul
  3575  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3576  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3577  0F60  0827               	movf	?___ftmul,w
  3578  0F61  00B7               	movwf	?_scale
  3579  0F62  0828               	movf	?___ftmul+1,w
  3580  0F63  00B8               	movwf	?_scale+1
  3581  0F64  0829               	movf	?___ftmul+2,w
  3582  0F65  00B9               	movwf	?_scale+2
  3583  0F66  0008               	return
  3584  0F67                     l1761:	
  3585                           
  3586                           ;doprnt.c: 438: else if(scl > 10)
  3587  0F67  083F               	movf	scale@scl,w
  3588  0F68  3A80               	xorlw	128
  3589  0F69  3E75               	addlw	-139
  3590  0F6A  1C03               	skipc
  3591  0F6B  2FDD               	goto	l1767
  3592                           
  3593                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3594  0F6C  3003               	movlw	3
  3595  0F6D  00BA               	movwf	??_scale
  3596  0F6E  083A               	movf	??_scale,w
  3597  0F6F  00A4               	movwf	___bmul@multiplicand
  3598  0F70  083F               	movf	scale@scl,w
  3599  0F71  00F2               	movwf	___awmod@dividend
  3600  0F72  01F3               	clrf	___awmod@dividend+1
  3601  0F73  1BF2               	btfsc	___awmod@dividend,7
  3602  0F74  03F3               	decf	___awmod@dividend+1,f
  3603  0F75  300A               	movlw	10
  3604  0F76  00F0               	movwf	___awmod@divisor
  3605  0F77  3000               	movlw	0
  3606  0F78  00F1               	movwf	___awmod@divisor+1
  3607  0F79  160A  118A  24DA  120A  158A  	fcall	___awmod
  3608  0F7E  0870               	movf	?___awmod,w
  3609  0F7F  160A  118A  24A6  120A  158A  	fcall	___bmul
  3610  0F84  3E3A               	addlw	low (__powers_| (0+32768))
  3611  0F85  0084               	movwf	4
  3612  0F86  3090               	movlw	high (__powers_| (0+32768))
  3613  0F87  1803               	skipnc
  3614  0F88  3E01               	addlw	1
  3615  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  3616  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  3617  0F8B  00FF               	movwf	127
  3618  0F8C  160A  118A  2000  120A  158A  	fcall	stringtab
  3619  0F91  00A7               	movwf	___ftmul@f1
  3620  0F92  160A  118A  2000  120A  158A  	fcall	stringtab
  3621  0F97  00A8               	movwf	___ftmul@f1+1
  3622  0F98  160A  118A  2000  120A  158A  	fcall	stringtab
  3623  0F9D  00A9               	movwf	___ftmul@f1+2
  3624  0F9E  3003               	movlw	3
  3625  0F9F  00BB               	movwf	??_scale+1
  3626  0FA0  083B               	movf	??_scale+1,w
  3627  0FA1  00A4               	movwf	___bmul@multiplicand
  3628  0FA2  300A               	movlw	10
  3629  0FA3  00F7               	movwf	___awdiv@divisor
  3630  0FA4  3000               	movlw	0
  3631  0FA5  00F8               	movwf	___awdiv@divisor+1
  3632  0FA6  083F               	movf	scale@scl,w
  3633  0FA7  00F9               	movwf	___awdiv@dividend
  3634  0FA8  01FA               	clrf	___awdiv@dividend+1
  3635  0FA9  1BF9               	btfsc	___awdiv@dividend,7
  3636  0FAA  03FA               	decf	___awdiv@dividend+1,f
  3637  0FAB  160A  118A  2571  120A  158A  	fcall	___awdiv
  3638  0FB0  0877               	movf	?___awdiv,w
  3639  0FB1  3E09               	addlw	9
  3640  0FB2  160A  118A  24A6  120A  158A  	fcall	___bmul
  3641  0FB7  3E3A               	addlw	low (__powers_| (0+32768))
  3642  0FB8  0084               	movwf	4
  3643  0FB9  3090               	movlw	high (__powers_| (0+32768))
  3644  0FBA  1803               	skipnc
  3645  0FBB  3E01               	addlw	1
  3646  0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  3647  0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  3648  0FBE  00FF               	movwf	127
  3649  0FBF  160A  118A  2000  120A  158A  	fcall	stringtab
  3650  0FC4  00AA               	movwf	___ftmul@f2
  3651  0FC5  160A  118A  2000  120A  158A  	fcall	stringtab
  3652  0FCA  00AB               	movwf	___ftmul@f2+1
  3653  0FCB  160A  118A  2000  120A  158A  	fcall	stringtab
  3654  0FD0  00AC               	movwf	___ftmul@f2+2
  3655  0FD1  120A  158A  20A5   	fcall	___ftmul
  3656  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3657  0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  3658  0FD6  0827               	movf	?___ftmul,w
  3659  0FD7  00B7               	movwf	?_scale
  3660  0FD8  0828               	movf	?___ftmul+1,w
  3661  0FD9  00B8               	movwf	?_scale+1
  3662  0FDA  0829               	movf	?___ftmul+2,w
  3663  0FDB  00B9               	movwf	?_scale+2
  3664  0FDC  0008               	return
  3665  0FDD                     l1767:	
  3666                           
  3667                           ;doprnt.c: 440: return _powers_[scl];
  3668  0FDD  3003               	movlw	3
  3669  0FDE  00BA               	movwf	??_scale
  3670  0FDF  083A               	movf	??_scale,w
  3671  0FE0  00A4               	movwf	___bmul@multiplicand
  3672  0FE1  083F               	movf	scale@scl,w
  3673  0FE2  160A  118A  24A6  120A  158A  	fcall	___bmul
  3674  0FE7  3E3A               	addlw	low (__powers_| (0+32768))
  3675  0FE8  0084               	movwf	4
  3676  0FE9  3090               	movlw	high (__powers_| (0+32768))
  3677  0FEA  1803               	skipnc
  3678  0FEB  3E01               	addlw	1
  3679  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  3680  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  3681  0FEE  00FF               	movwf	127
  3682  0FEF  160A  118A  2000  120A  158A  	fcall	stringtab
  3683  0FF4  00B7               	movwf	?_scale
  3684  0FF5  160A  118A  2000  120A  158A  	fcall	stringtab
  3685  0FFA  00B8               	movwf	?_scale+1
  3686  0FFB  160A  118A  2000   	fcall	stringtab
  3687  0FFE  00B9               	movwf	?_scale+2
  3688  0FFF  0008               	return
  3689  1000                     __end_of_scale:	
  3690                           
  3691                           	psect	text3
  3692  0806                     __ptext3:	
  3693 ;; *************** function _putch *****************
  3694 ;; Defined at:
  3695 ;;		line 3 in file "config.h"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  dato            1    wreg     unsigned char 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  dato            1    0[COMMON] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3709 ;;      Params:         0       0       0       0       0
  3710 ;;      Locals:         1       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0
  3712 ;;      Totals:         1       0       0       0       0
  3713 ;;Total ram usage:        1 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_printf
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           
  3723                           ;psect for function _putch
  3724  0806                     _putch:	
  3725                           
  3726                           ;incstack = 0
  3727                           ; Regs used in _putch: [wreg]
  3728                           ;putch@dato stored from wreg
  3729  0806  00F0               	movwf	putch@dato
  3730  0807                     l19:	
  3731                           ;config.h: 5: continue;
  3732                           
  3733                           ;config.h: 4: while (! PIR1bits.TXIF)
  3734                           
  3735  0807  1283               	bcf	3,5	;RP0=0, select bank0
  3736  0808  1303               	bcf	3,6	;RP1=0, select bank0
  3737  0809  1E0C               	btfss	12,4	;volatile
  3738  080A  2807               	goto	l19
  3739                           
  3740                           ;config.h: 6: TXREG = dato;
  3741  080B  0870               	movf	putch@dato,w
  3742  080C  0099               	movwf	25	;volatile
  3743  080D  0008               	return
  3744  080E                     __end_of_putch:	
  3745                           
  3746                           	psect	text4
  3747  00B4                     __ptext4:	
  3748 ;; *************** function _fround *****************
  3749 ;; Defined at:
  3750 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  prec            1    wreg     unsigned char 
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;  prec            1   38[BANK0 ] unsigned char 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  3   23[BANK0 ] unsigned char 
  3757 ;; Registers used:
  3758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3764 ;;      Params:         0       3       0       0       0
  3765 ;;      Locals:         0       7       0       0       0
  3766 ;;      Temps:          0       6       0       0       0
  3767 ;;      Totals:         0      16       0       0       0
  3768 ;;Total ram usage:       16 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    2
  3771 ;; This function calls:
  3772 ;;		___awdiv
  3773 ;;		___awmod
  3774 ;;		___bmul
  3775 ;;		___ftmul
  3776 ;; This function is called by:
  3777 ;;		_printf
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           
  3782                           ;psect for function _fround
  3783  00B4                     _fround:	
  3784                           
  3785                           ;incstack = 0
  3786                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3787                           ;fround@prec stored from wreg
  3788  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  3789  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  3790  00B6  00C6               	movwf	fround@prec
  3791                           
  3792                           ;doprnt.c: 413: if(prec>=110)
  3793  00B7  306E               	movlw	110
  3794  00B8  0246               	subwf	fround@prec,w
  3795  00B9  1C03               	skipc
  3796  00BA  299E               	goto	l1719
  3797                           
  3798                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3799  00BB  3003               	movlw	3
  3800  00BC  00BA               	movwf	??_fround
  3801  00BD  083A               	movf	??_fround,w
  3802  00BE  00A4               	movwf	___bmul@multiplicand
  3803  00BF  300A               	movlw	10
  3804  00C0  00F7               	movwf	___awdiv@divisor
  3805  00C1  3000               	movlw	0
  3806  00C2  00F8               	movwf	___awdiv@divisor+1
  3807  00C3  0846               	movf	fround@prec,w
  3808  00C4  00BB               	movwf	??_fround+1
  3809  00C5  01BC               	clrf	??_fround+2
  3810  00C6  083B               	movf	??_fround+1,w
  3811  00C7  00F2               	movwf	___awmod@dividend
  3812  00C8  083C               	movf	??_fround+2,w
  3813  00C9  00F3               	movwf	___awmod@dividend+1
  3814  00CA  3064               	movlw	100
  3815  00CB  00F0               	movwf	___awmod@divisor
  3816  00CC  3000               	movlw	0
  3817  00CD  00F1               	movwf	___awmod@divisor+1
  3818  00CE  160A  118A  24DA  120A  118A  	fcall	___awmod
  3819  00D3  0871               	movf	?___awmod+1,w
  3820  00D4  00FA               	movwf	___awdiv@dividend+1
  3821  00D5  0870               	movf	?___awmod,w
  3822  00D6  00F9               	movwf	___awdiv@dividend
  3823  00D7  160A  118A  2571  120A  118A  	fcall	___awdiv
  3824  00DC  0877               	movf	?___awdiv,w
  3825  00DD  3E09               	addlw	9
  3826  00DE  160A  118A  24A6  120A  118A  	fcall	___bmul
  3827  00E3  3E61               	addlw	low (__npowers_| (0+32768))
  3828  00E4  0084               	movwf	4
  3829  00E5  3090               	movlw	high (__npowers_| (0+32768))
  3830  00E6  1803               	skipnc
  3831  00E7  3E01               	addlw	1
  3832  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  3833  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  3834  00EA  00FF               	movwf	127
  3835  00EB  160A  118A  2000  120A  118A  	fcall	stringtab
  3836  00F0  00A7               	movwf	___ftmul@f1
  3837  00F1  160A  118A  2000  120A  118A  	fcall	stringtab
  3838  00F6  00A8               	movwf	___ftmul@f1+1
  3839  00F7  160A  118A  2000  120A  118A  	fcall	stringtab
  3840  00FC  00A9               	movwf	___ftmul@f1+2
  3841  00FD  3003               	movlw	3
  3842  00FE  00BD               	movwf	??_fround+3
  3843  00FF  083D               	movf	??_fround+3,w
  3844  0100  00A4               	movwf	___bmul@multiplicand
  3845  0101  3064               	movlw	100
  3846  0102  00F7               	movwf	___awdiv@divisor
  3847  0103  3000               	movlw	0
  3848  0104  00F8               	movwf	___awdiv@divisor+1
  3849  0105  0846               	movf	fround@prec,w
  3850  0106  00BE               	movwf	??_fround+4
  3851  0107  01BF               	clrf	??_fround+5
  3852  0108  083E               	movf	??_fround+4,w
  3853  0109  00F9               	movwf	___awdiv@dividend
  3854  010A  083F               	movf	??_fround+5,w
  3855  010B  00FA               	movwf	___awdiv@dividend+1
  3856  010C  160A  118A  2571  120A  118A  	fcall	___awdiv
  3857  0111  0877               	movf	?___awdiv,w
  3858  0112  3E12               	addlw	18
  3859  0113  160A  118A  24A6  120A  118A  	fcall	___bmul
  3860  0118  3E61               	addlw	low (__npowers_| (0+32768))
  3861  0119  0084               	movwf	4
  3862  011A  3090               	movlw	high (__npowers_| (0+32768))
  3863  011B  1803               	skipnc
  3864  011C  3E01               	addlw	1
  3865  011D  1283               	bcf	3,5	;RP0=0, select bank0
  3866  011E  1303               	bcf	3,6	;RP1=0, select bank0
  3867  011F  00FF               	movwf	127
  3868  0120  160A  118A  2000  120A  118A  	fcall	stringtab
  3869  0125  00AA               	movwf	___ftmul@f2
  3870  0126  160A  118A  2000  120A  118A  	fcall	stringtab
  3871  012B  00AB               	movwf	___ftmul@f2+1
  3872  012C  160A  118A  2000  120A  118A  	fcall	stringtab
  3873  0131  00AC               	movwf	___ftmul@f2+2
  3874  0132  120A  158A  20A5  120A  118A  	fcall	___ftmul
  3875  0137  1283               	bcf	3,5	;RP0=0, select bank0
  3876  0138  1303               	bcf	3,6	;RP1=0, select bank0
  3877  0139  0827               	movf	?___ftmul,w
  3878  013A  00C3               	movwf	_fround$660
  3879  013B  0828               	movf	?___ftmul+1,w
  3880  013C  00C4               	movwf	_fround$660+1
  3881  013D  0829               	movf	?___ftmul+2,w
  3882  013E  00C5               	movwf	_fround$660+2
  3883                           
  3884                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3885  013F  3003               	movlw	3
  3886  0140  00BA               	movwf	??_fround
  3887  0141  083A               	movf	??_fround,w
  3888  0142  00A4               	movwf	___bmul@multiplicand
  3889  0143  0846               	movf	fround@prec,w
  3890  0144  00BB               	movwf	??_fround+1
  3891  0145  01BC               	clrf	??_fround+2
  3892  0146  083B               	movf	??_fround+1,w
  3893  0147  00F2               	movwf	___awmod@dividend
  3894  0148  083C               	movf	??_fround+2,w
  3895  0149  00F3               	movwf	___awmod@dividend+1
  3896  014A  300A               	movlw	10
  3897  014B  00F0               	movwf	___awmod@divisor
  3898  014C  3000               	movlw	0
  3899  014D  00F1               	movwf	___awmod@divisor+1
  3900  014E  160A  118A  24DA  120A  118A  	fcall	___awmod
  3901  0153  0870               	movf	?___awmod,w
  3902  0154  160A  118A  24A6  120A  118A  	fcall	___bmul
  3903  0159  3E61               	addlw	low (__npowers_| (0+32768))
  3904  015A  0084               	movwf	4
  3905  015B  3090               	movlw	high (__npowers_| (0+32768))
  3906  015C  1803               	skipnc
  3907  015D  3E01               	addlw	1
  3908  015E  1283               	bcf	3,5	;RP0=0, select bank0
  3909  015F  1303               	bcf	3,6	;RP1=0, select bank0
  3910  0160  00FF               	movwf	127
  3911  0161  160A  118A  2000  120A  118A  	fcall	stringtab
  3912  0166  00A7               	movwf	___ftmul@f1
  3913  0167  160A  118A  2000  120A  118A  	fcall	stringtab
  3914  016C  00A8               	movwf	___ftmul@f1+1
  3915  016D  160A  118A  2000  120A  118A  	fcall	stringtab
  3916  0172  00A9               	movwf	___ftmul@f1+2
  3917  0173  0843               	movf	_fround$660,w
  3918  0174  00AA               	movwf	___ftmul@f2
  3919  0175  0844               	movf	_fround$660+1,w
  3920  0176  00AB               	movwf	___ftmul@f2+1
  3921  0177  0845               	movf	_fround$660+2,w
  3922  0178  00AC               	movwf	___ftmul@f2+2
  3923  0179  120A  158A  20A5  120A  118A  	fcall	___ftmul
  3924  017E  1283               	bcf	3,5	;RP0=0, select bank0
  3925  017F  1303               	bcf	3,6	;RP1=0, select bank0
  3926  0180  0827               	movf	?___ftmul,w
  3927  0181  00C0               	movwf	_fround$661
  3928  0182  0828               	movf	?___ftmul+1,w
  3929  0183  00C1               	movwf	_fround$661+1
  3930  0184  0829               	movf	?___ftmul+2,w
  3931  0185  00C2               	movwf	_fround$661+2
  3932                           
  3933                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3934  0186  3000               	movlw	0
  3935  0187  00A7               	movwf	___ftmul@f1
  3936  0188  3000               	movlw	0
  3937  0189  00A8               	movwf	___ftmul@f1+1
  3938  018A  303F               	movlw	63
  3939  018B  00A9               	movwf	___ftmul@f1+2
  3940  018C  0840               	movf	_fround$661,w
  3941  018D  00AA               	movwf	___ftmul@f2
  3942  018E  0841               	movf	_fround$661+1,w
  3943  018F  00AB               	movwf	___ftmul@f2+1
  3944  0190  0842               	movf	_fround$661+2,w
  3945  0191  00AC               	movwf	___ftmul@f2+2
  3946  0192  120A  158A  20A5   	fcall	___ftmul
  3947  0195  1283               	bcf	3,5	;RP0=0, select bank0
  3948  0196  1303               	bcf	3,6	;RP1=0, select bank0
  3949  0197  0827               	movf	?___ftmul,w
  3950  0198  00B7               	movwf	?_fround
  3951  0199  0828               	movf	?___ftmul+1,w
  3952  019A  00B8               	movwf	?_fround+1
  3953  019B  0829               	movf	?___ftmul+2,w
  3954  019C  00B9               	movwf	?_fround+2
  3955  019D  0008               	return
  3956  019E                     l1719:	
  3957                           
  3958                           ;doprnt.c: 415: else if(prec > 10)
  3959  019E  300B               	movlw	11
  3960  019F  0246               	subwf	fround@prec,w
  3961  01A0  1C03               	skipc
  3962  01A1  2A30               	goto	l1727
  3963                           
  3964                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3965  01A2  3003               	movlw	3
  3966  01A3  00BA               	movwf	??_fround
  3967  01A4  083A               	movf	??_fround,w
  3968  01A5  00A4               	movwf	___bmul@multiplicand
  3969  01A6  0846               	movf	fround@prec,w
  3970  01A7  00BB               	movwf	??_fround+1
  3971  01A8  01BC               	clrf	??_fround+2
  3972  01A9  083B               	movf	??_fround+1,w
  3973  01AA  00F2               	movwf	___awmod@dividend
  3974  01AB  083C               	movf	??_fround+2,w
  3975  01AC  00F3               	movwf	___awmod@dividend+1
  3976  01AD  300A               	movlw	10
  3977  01AE  00F0               	movwf	___awmod@divisor
  3978  01AF  3000               	movlw	0
  3979  01B0  00F1               	movwf	___awmod@divisor+1
  3980  01B1  160A  118A  24DA  120A  118A  	fcall	___awmod
  3981  01B6  0870               	movf	?___awmod,w
  3982  01B7  160A  118A  24A6  120A  118A  	fcall	___bmul
  3983  01BC  3E61               	addlw	low (__npowers_| (0+32768))
  3984  01BD  0084               	movwf	4
  3985  01BE  3090               	movlw	high (__npowers_| (0+32768))
  3986  01BF  1803               	skipnc
  3987  01C0  3E01               	addlw	1
  3988  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  3989  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  3990  01C3  00FF               	movwf	127
  3991  01C4  160A  118A  2000  120A  118A  	fcall	stringtab
  3992  01C9  00A7               	movwf	___ftmul@f1
  3993  01CA  160A  118A  2000  120A  118A  	fcall	stringtab
  3994  01CF  00A8               	movwf	___ftmul@f1+1
  3995  01D0  160A  118A  2000  120A  118A  	fcall	stringtab
  3996  01D5  00A9               	movwf	___ftmul@f1+2
  3997  01D6  3003               	movlw	3
  3998  01D7  00BD               	movwf	??_fround+3
  3999  01D8  083D               	movf	??_fround+3,w
  4000  01D9  00A4               	movwf	___bmul@multiplicand
  4001  01DA  300A               	movlw	10
  4002  01DB  00F7               	movwf	___awdiv@divisor
  4003  01DC  3000               	movlw	0
  4004  01DD  00F8               	movwf	___awdiv@divisor+1
  4005  01DE  0846               	movf	fround@prec,w
  4006  01DF  00BE               	movwf	??_fround+4
  4007  01E0  01BF               	clrf	??_fround+5
  4008  01E1  083E               	movf	??_fround+4,w
  4009  01E2  00F9               	movwf	___awdiv@dividend
  4010  01E3  083F               	movf	??_fround+5,w
  4011  01E4  00FA               	movwf	___awdiv@dividend+1
  4012  01E5  160A  118A  2571  120A  118A  	fcall	___awdiv
  4013  01EA  0877               	movf	?___awdiv,w
  4014  01EB  3E09               	addlw	9
  4015  01EC  160A  118A  24A6  120A  118A  	fcall	___bmul
  4016  01F1  3E61               	addlw	low (__npowers_| (0+32768))
  4017  01F2  0084               	movwf	4
  4018  01F3  3090               	movlw	high (__npowers_| (0+32768))
  4019  01F4  1803               	skipnc
  4020  01F5  3E01               	addlw	1
  4021  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  4022  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  4023  01F8  00FF               	movwf	127
  4024  01F9  160A  118A  2000  120A  118A  	fcall	stringtab
  4025  01FE  00AA               	movwf	___ftmul@f2
  4026  01FF  160A  118A  2000  120A  118A  	fcall	stringtab
  4027  0204  00AB               	movwf	___ftmul@f2+1
  4028  0205  160A  118A  2000  120A  118A  	fcall	stringtab
  4029  020A  00AC               	movwf	___ftmul@f2+2
  4030  020B  120A  158A  20A5  120A  118A  	fcall	___ftmul
  4031  0210  1283               	bcf	3,5	;RP0=0, select bank0
  4032  0211  1303               	bcf	3,6	;RP1=0, select bank0
  4033  0212  0827               	movf	?___ftmul,w
  4034  0213  00C3               	movwf	_fround$660
  4035  0214  0828               	movf	?___ftmul+1,w
  4036  0215  00C4               	movwf	_fround$660+1
  4037  0216  0829               	movf	?___ftmul+2,w
  4038  0217  00C5               	movwf	_fround$660+2
  4039                           
  4040                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4041  0218  3000               	movlw	0
  4042  0219  00A7               	movwf	___ftmul@f1
  4043  021A  3000               	movlw	0
  4044  021B  00A8               	movwf	___ftmul@f1+1
  4045  021C  303F               	movlw	63
  4046  021D  00A9               	movwf	___ftmul@f1+2
  4047  021E  0843               	movf	_fround$660,w
  4048  021F  00AA               	movwf	___ftmul@f2
  4049  0220  0844               	movf	_fround$660+1,w
  4050  0221  00AB               	movwf	___ftmul@f2+1
  4051  0222  0845               	movf	_fround$660+2,w
  4052  0223  00AC               	movwf	___ftmul@f2+2
  4053  0224  120A  158A  20A5   	fcall	___ftmul
  4054  0227  1283               	bcf	3,5	;RP0=0, select bank0
  4055  0228  1303               	bcf	3,6	;RP1=0, select bank0
  4056  0229  0827               	movf	?___ftmul,w
  4057  022A  00B7               	movwf	?_fround
  4058  022B  0828               	movf	?___ftmul+1,w
  4059  022C  00B8               	movwf	?_fround+1
  4060  022D  0829               	movf	?___ftmul+2,w
  4061  022E  00B9               	movwf	?_fround+2
  4062  022F  0008               	return
  4063  0230                     l1727:	
  4064                           
  4065                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4066  0230  3000               	movlw	0
  4067  0231  00A7               	movwf	___ftmul@f1
  4068  0232  3000               	movlw	0
  4069  0233  00A8               	movwf	___ftmul@f1+1
  4070  0234  303F               	movlw	63
  4071  0235  00A9               	movwf	___ftmul@f1+2
  4072  0236  3003               	movlw	3
  4073  0237  00BA               	movwf	??_fround
  4074  0238  083A               	movf	??_fround,w
  4075  0239  00A4               	movwf	___bmul@multiplicand
  4076  023A  0846               	movf	fround@prec,w
  4077  023B  160A  118A  24A6  120A  118A  	fcall	___bmul
  4078  0240  3E61               	addlw	low (__npowers_| (0+32768))
  4079  0241  0084               	movwf	4
  4080  0242  3090               	movlw	high (__npowers_| (0+32768))
  4081  0243  1803               	skipnc
  4082  0244  3E01               	addlw	1
  4083  0245  1283               	bcf	3,5	;RP0=0, select bank0
  4084  0246  1303               	bcf	3,6	;RP1=0, select bank0
  4085  0247  00FF               	movwf	127
  4086  0248  160A  118A  2000  120A  118A  	fcall	stringtab
  4087  024D  00AA               	movwf	___ftmul@f2
  4088  024E  160A  118A  2000  120A  118A  	fcall	stringtab
  4089  0253  00AB               	movwf	___ftmul@f2+1
  4090  0254  160A  118A  2000  120A  118A  	fcall	stringtab
  4091  0259  00AC               	movwf	___ftmul@f2+2
  4092  025A  120A  158A  20A5   	fcall	___ftmul
  4093  025D  1283               	bcf	3,5	;RP0=0, select bank0
  4094  025E  1303               	bcf	3,6	;RP1=0, select bank0
  4095  025F  0827               	movf	?___ftmul,w
  4096  0260  00B7               	movwf	?_fround
  4097  0261  0828               	movf	?___ftmul+1,w
  4098  0262  00B8               	movwf	?_fround+1
  4099  0263  0829               	movf	?___ftmul+2,w
  4100  0264  00B9               	movwf	?_fround+2
  4101  0265  0008               	return
  4102  0266                     __end_of_fround:	
  4103                           
  4104                           	psect	text5
  4105  08A5                     __ptext5:	
  4106 ;; *************** function ___ftmul *****************
  4107 ;; Defined at:
  4108 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  f1              3    7[BANK0 ] float 
  4111 ;;  f2              3   10[BANK0 ] float 
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  4114 ;;  sign            1   22[BANK0 ] unsigned char 
  4115 ;;  cntr            1   21[BANK0 ] unsigned char 
  4116 ;;  exp             1   17[BANK0 ] unsigned char 
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  3    7[BANK0 ] float 
  4119 ;; Registers used:
  4120 ;;		wreg, status,2, status,0, pclath, cstack
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4126 ;;      Params:         0       6       0       0       0
  4127 ;;      Locals:         0       6       0       0       0
  4128 ;;      Temps:          0       4       0       0       0
  4129 ;;      Totals:         0      16       0       0       0
  4130 ;;Total ram usage:       16 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    1
  4133 ;; This function calls:
  4134 ;;		___ftpack
  4135 ;; This function is called by:
  4136 ;;		_main
  4137 ;;		_fround
  4138 ;;		_scale
  4139 ;;		_printf
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           
  4144                           ;psect for function ___ftmul
  4145  08A5                     ___ftmul:	
  4146                           
  4147                           ;incstack = 0
  4148                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4149  08A5  1283               	bcf	3,5	;RP0=0, select bank0
  4150  08A6  1303               	bcf	3,6	;RP1=0, select bank0
  4151  08A7  0827               	movf	___ftmul@f1,w
  4152  08A8  00AD               	movwf	??___ftmul
  4153  08A9  0828               	movf	___ftmul@f1+1,w
  4154  08AA  00AE               	movwf	??___ftmul+1
  4155  08AB  0829               	movf	___ftmul@f1+2,w
  4156  08AC  00AF               	movwf	??___ftmul+2
  4157  08AD  1003               	clrc
  4158  08AE  0D2E               	rlf	??___ftmul+1,w
  4159  08AF  0D2F               	rlf	??___ftmul+2,w
  4160  08B0  00B0               	movwf	??___ftmul+3
  4161  08B1  0830               	movf	??___ftmul+3,w
  4162  08B2  00B1               	movwf	___ftmul@exp
  4163  08B3  0831               	movf	___ftmul@exp,w
  4164  08B4  1D03               	btfss	3,2
  4165  08B5  28BD               	goto	l1661
  4166  08B6  3000               	movlw	0
  4167  08B7  00A7               	movwf	?___ftmul
  4168  08B8  3000               	movlw	0
  4169  08B9  00A8               	movwf	?___ftmul+1
  4170  08BA  3000               	movlw	0
  4171  08BB  00A9               	movwf	?___ftmul+2
  4172  08BC  0008               	return
  4173  08BD                     l1661:	
  4174  08BD  082A               	movf	___ftmul@f2,w
  4175  08BE  00AD               	movwf	??___ftmul
  4176  08BF  082B               	movf	___ftmul@f2+1,w
  4177  08C0  00AE               	movwf	??___ftmul+1
  4178  08C1  082C               	movf	___ftmul@f2+2,w
  4179  08C2  00AF               	movwf	??___ftmul+2
  4180  08C3  1003               	clrc
  4181  08C4  0D2E               	rlf	??___ftmul+1,w
  4182  08C5  0D2F               	rlf	??___ftmul+2,w
  4183  08C6  00B0               	movwf	??___ftmul+3
  4184  08C7  0830               	movf	??___ftmul+3,w
  4185  08C8  00B6               	movwf	___ftmul@sign
  4186  08C9  0836               	movf	___ftmul@sign,w
  4187  08CA  1D03               	btfss	3,2
  4188  08CB  28D3               	goto	l1667
  4189  08CC  3000               	movlw	0
  4190  08CD  00A7               	movwf	?___ftmul
  4191  08CE  3000               	movlw	0
  4192  08CF  00A8               	movwf	?___ftmul+1
  4193  08D0  3000               	movlw	0
  4194  08D1  00A9               	movwf	?___ftmul+2
  4195  08D2  0008               	return
  4196  08D3                     l1667:	
  4197  08D3  0836               	movf	___ftmul@sign,w
  4198  08D4  3E7B               	addlw	123
  4199  08D5  00AD               	movwf	??___ftmul
  4200  08D6  082D               	movf	??___ftmul,w
  4201  08D7  07B1               	addwf	___ftmul@exp,f
  4202  08D8  0827               	movf	___ftmul@f1,w
  4203  08D9  00AD               	movwf	??___ftmul
  4204  08DA  0828               	movf	___ftmul@f1+1,w
  4205  08DB  00AE               	movwf	??___ftmul+1
  4206  08DC  0829               	movf	___ftmul@f1+2,w
  4207  08DD  00AF               	movwf	??___ftmul+2
  4208  08DE  3010               	movlw	16
  4209  08DF                     u2435:	
  4210  08DF  1003               	clrc
  4211  08E0  0CAF               	rrf	??___ftmul+2,f
  4212  08E1  0CAE               	rrf	??___ftmul+1,f
  4213  08E2  0CAD               	rrf	??___ftmul,f
  4214  08E3  3EFF               	addlw	-1
  4215  08E4  1D03               	skipz
  4216  08E5  28DF               	goto	u2435
  4217  08E6  082D               	movf	??___ftmul,w
  4218  08E7  00B0               	movwf	??___ftmul+3
  4219  08E8  0830               	movf	??___ftmul+3,w
  4220  08E9  00B6               	movwf	___ftmul@sign
  4221  08EA  082A               	movf	___ftmul@f2,w
  4222  08EB  00AD               	movwf	??___ftmul
  4223  08EC  082B               	movf	___ftmul@f2+1,w
  4224  08ED  00AE               	movwf	??___ftmul+1
  4225  08EE  082C               	movf	___ftmul@f2+2,w
  4226  08EF  00AF               	movwf	??___ftmul+2
  4227  08F0  3010               	movlw	16
  4228  08F1                     u2445:	
  4229  08F1  1003               	clrc
  4230  08F2  0CAF               	rrf	??___ftmul+2,f
  4231  08F3  0CAE               	rrf	??___ftmul+1,f
  4232  08F4  0CAD               	rrf	??___ftmul,f
  4233  08F5  3EFF               	addlw	-1
  4234  08F6  1D03               	skipz
  4235  08F7  28F1               	goto	u2445
  4236  08F8  082D               	movf	??___ftmul,w
  4237  08F9  00B0               	movwf	??___ftmul+3
  4238  08FA  0830               	movf	??___ftmul+3,w
  4239  08FB  06B6               	xorwf	___ftmul@sign,f
  4240  08FC  3080               	movlw	128
  4241  08FD  00AD               	movwf	??___ftmul
  4242  08FE  082D               	movf	??___ftmul,w
  4243  08FF  05B6               	andwf	___ftmul@sign,f
  4244  0900  17A8               	bsf	___ftmul@f1+1,7
  4245  0901  17AB               	bsf	___ftmul@f2+1,7
  4246  0902  30FF               	movlw	255
  4247  0903  05AA               	andwf	___ftmul@f2,f
  4248  0904  30FF               	movlw	255
  4249  0905  05AB               	andwf	___ftmul@f2+1,f
  4250  0906  3000               	movlw	0
  4251  0907  05AC               	andwf	___ftmul@f2+2,f
  4252  0908  3000               	movlw	0
  4253  0909  00B2               	movwf	___ftmul@f3_as_product
  4254  090A  3000               	movlw	0
  4255  090B  00B3               	movwf	___ftmul@f3_as_product+1
  4256  090C  3000               	movlw	0
  4257  090D  00B4               	movwf	___ftmul@f3_as_product+2
  4258  090E  3007               	movlw	7
  4259  090F  00AD               	movwf	??___ftmul
  4260  0910  082D               	movf	??___ftmul,w
  4261  0911  00B5               	movwf	___ftmul@cntr
  4262  0912                     l1679:	
  4263  0912  1C27               	btfss	___ftmul@f1,0
  4264  0913  2922               	goto	l1683
  4265  0914  082A               	movf	___ftmul@f2,w
  4266  0915  07B2               	addwf	___ftmul@f3_as_product,f
  4267  0916  082B               	movf	___ftmul@f2+1,w
  4268  0917  1103               	clrz
  4269  0918  1803               	skipnc
  4270  0919  0A2B               	incf	___ftmul@f2+1,w
  4271  091A  1D03               	btfss	3,2
  4272  091B  07B3               	addwf	___ftmul@f3_as_product+1,f
  4273  091C  082C               	movf	___ftmul@f2+2,w
  4274  091D  1103               	clrz
  4275  091E  1803               	skipnc
  4276  091F  0A2C               	incf	___ftmul@f2+2,w
  4277  0920  1D03               	btfss	3,2
  4278  0921  07B4               	addwf	___ftmul@f3_as_product+2,f
  4279  0922                     l1683:	
  4280  0922  3001               	movlw	1
  4281  0923                     u2475:	
  4282  0923  1003               	clrc
  4283  0924  0CA9               	rrf	___ftmul@f1+2,f
  4284  0925  0CA8               	rrf	___ftmul@f1+1,f
  4285  0926  0CA7               	rrf	___ftmul@f1,f
  4286  0927  3EFF               	addlw	-1
  4287  0928  1D03               	skipz
  4288  0929  2923               	goto	u2475
  4289  092A  3001               	movlw	1
  4290  092B                     u2485:	
  4291  092B  1003               	clrc
  4292  092C  0DAA               	rlf	___ftmul@f2,f
  4293  092D  0DAB               	rlf	___ftmul@f2+1,f
  4294  092E  0DAC               	rlf	___ftmul@f2+2,f
  4295  092F  3EFF               	addlw	-1
  4296  0930  1D03               	skipz
  4297  0931  292B               	goto	u2485
  4298  0932  3001               	movlw	1
  4299  0933  02B5               	subwf	___ftmul@cntr,f
  4300  0934  1D03               	btfss	3,2
  4301  0935  2912               	goto	l1679
  4302  0936  3009               	movlw	9
  4303  0937  00AD               	movwf	??___ftmul
  4304  0938  082D               	movf	??___ftmul,w
  4305  0939  00B5               	movwf	___ftmul@cntr
  4306  093A                     l1691:	
  4307  093A  1C27               	btfss	___ftmul@f1,0
  4308  093B  294A               	goto	l1695
  4309  093C  082A               	movf	___ftmul@f2,w
  4310  093D  07B2               	addwf	___ftmul@f3_as_product,f
  4311  093E  082B               	movf	___ftmul@f2+1,w
  4312  093F  1103               	clrz
  4313  0940  1803               	skipnc
  4314  0941  0A2B               	incf	___ftmul@f2+1,w
  4315  0942  1D03               	btfss	3,2
  4316  0943  07B3               	addwf	___ftmul@f3_as_product+1,f
  4317  0944  082C               	movf	___ftmul@f2+2,w
  4318  0945  1103               	clrz
  4319  0946  1803               	skipnc
  4320  0947  0A2C               	incf	___ftmul@f2+2,w
  4321  0948  1D03               	btfss	3,2
  4322  0949  07B4               	addwf	___ftmul@f3_as_product+2,f
  4323  094A                     l1695:	
  4324  094A  3001               	movlw	1
  4325  094B                     u2525:	
  4326  094B  1003               	clrc
  4327  094C  0CA9               	rrf	___ftmul@f1+2,f
  4328  094D  0CA8               	rrf	___ftmul@f1+1,f
  4329  094E  0CA7               	rrf	___ftmul@f1,f
  4330  094F  3EFF               	addlw	-1
  4331  0950  1D03               	skipz
  4332  0951  294B               	goto	u2525
  4333  0952  3001               	movlw	1
  4334  0953                     u2535:	
  4335  0953  1003               	clrc
  4336  0954  0CB4               	rrf	___ftmul@f3_as_product+2,f
  4337  0955  0CB3               	rrf	___ftmul@f3_as_product+1,f
  4338  0956  0CB2               	rrf	___ftmul@f3_as_product,f
  4339  0957  3EFF               	addlw	-1
  4340  0958  1D03               	skipz
  4341  0959  2953               	goto	u2535
  4342  095A  3001               	movlw	1
  4343  095B  02B5               	subwf	___ftmul@cntr,f
  4344  095C  1D03               	btfss	3,2
  4345  095D  293A               	goto	l1691
  4346  095E  0832               	movf	___ftmul@f3_as_product,w
  4347  095F  00F0               	movwf	___ftpack@arg
  4348  0960  0833               	movf	___ftmul@f3_as_product+1,w
  4349  0961  00F1               	movwf	___ftpack@arg+1
  4350  0962  0834               	movf	___ftmul@f3_as_product+2,w
  4351  0963  00F2               	movwf	___ftpack@arg+2
  4352  0964  0831               	movf	___ftmul@exp,w
  4353  0965  00AD               	movwf	??___ftmul
  4354  0966  082D               	movf	??___ftmul,w
  4355  0967  00F3               	movwf	___ftpack@exp
  4356  0968  0836               	movf	___ftmul@sign,w
  4357  0969  00AE               	movwf	??___ftmul+1
  4358  096A  082E               	movf	??___ftmul+1,w
  4359  096B  00F4               	movwf	___ftpack@sign
  4360  096C  120A  158A  2039   	fcall	___ftpack
  4361  096F  0870               	movf	?___ftpack,w
  4362  0970  1283               	bcf	3,5	;RP0=0, select bank0
  4363  0971  1303               	bcf	3,6	;RP1=0, select bank0
  4364  0972  00A7               	movwf	?___ftmul
  4365  0973  0871               	movf	?___ftpack+1,w
  4366  0974  00A8               	movwf	?___ftmul+1
  4367  0975  0872               	movf	?___ftpack+2,w
  4368  0976  00A9               	movwf	?___ftmul+2
  4369  0977  0008               	return
  4370  0978                     __end_of___ftmul:	
  4371                           
  4372                           	psect	text6
  4373  14A6                     __ptext6:	
  4374 ;; *************** function ___bmul *****************
  4375 ;; Defined at:
  4376 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul8.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;  multiplier      1    wreg     unsigned char 
  4379 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;  multiplier      1    6[BANK0 ] unsigned char 
  4382 ;;  product         1    5[BANK0 ] unsigned char 
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  1    wreg      unsigned char 
  4385 ;; Registers used:
  4386 ;;		wreg, status,2, status,0
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4392 ;;      Params:         0       1       0       0       0
  4393 ;;      Locals:         0       2       0       0       0
  4394 ;;      Temps:          1       0       0       0       0
  4395 ;;      Totals:         1       3       0       0       0
  4396 ;;Total ram usage:        4 bytes
  4397 ;; Hardware stack levels used:    1
  4398 ;; This function calls:
  4399 ;;		Nothing
  4400 ;; This function is called by:
  4401 ;;		_fround
  4402 ;;		_scale
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           
  4407                           ;psect for function ___bmul
  4408  14A6                     ___bmul:	
  4409                           
  4410                           ;incstack = 0
  4411                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4412                           ;___bmul@multiplier stored from wreg
  4413  14A6  1283               	bcf	3,5	;RP0=0, select bank0
  4414  14A7  1303               	bcf	3,6	;RP1=0, select bank0
  4415  14A8  00A6               	movwf	___bmul@multiplier
  4416  14A9  01A5               	clrf	___bmul@product
  4417  14AA                     l1491:	
  4418  14AA  1C26               	btfss	___bmul@multiplier,0
  4419  14AB  2CB0               	goto	l1495
  4420  14AC  0824               	movf	___bmul@multiplicand,w
  4421  14AD  00FC               	movwf	??___bmul
  4422  14AE  087C               	movf	??___bmul,w
  4423  14AF  07A5               	addwf	___bmul@product,f
  4424  14B0                     l1495:	
  4425  14B0  1003               	clrc
  4426  14B1  0DA4               	rlf	___bmul@multiplicand,f
  4427  14B2  1003               	clrc
  4428  14B3  0CA6               	rrf	___bmul@multiplier,f
  4429  14B4  0826               	movf	___bmul@multiplier,w
  4430  14B5  1D03               	btfss	3,2
  4431  14B6  2CAA               	goto	l1491
  4432  14B7  0825               	movf	___bmul@product,w
  4433  14B8  0008               	return
  4434  14B9                     __end_of___bmul:	
  4435                           
  4436                           	psect	text7
  4437  14DA                     __ptext7:	
  4438 ;; *************** function ___awmod *****************
  4439 ;; Defined at:
  4440 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awmod.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;  divisor         2    0[COMMON] int 
  4443 ;;  dividend        2    2[COMMON] int 
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  sign            1    6[COMMON] unsigned char 
  4446 ;;  counter         1    5[COMMON] unsigned char 
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  2    0[COMMON] int 
  4449 ;; Registers used:
  4450 ;;		wreg, status,2, status,0
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4456 ;;      Params:         4       0       0       0       0
  4457 ;;      Locals:         2       0       0       0       0
  4458 ;;      Temps:          1       0       0       0       0
  4459 ;;      Totals:         7       0       0       0       0
  4460 ;;Total ram usage:        7 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; This function calls:
  4463 ;;		Nothing
  4464 ;; This function is called by:
  4465 ;;		_fround
  4466 ;;		_scale
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           
  4471                           ;psect for function ___awmod
  4472  14DA                     ___awmod:	
  4473                           
  4474                           ;incstack = 0
  4475                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4476  14DA  01F6               	clrf	___awmod@sign
  4477  14DB  1FF3               	btfss	___awmod@dividend+1,7
  4478  14DC  2CE4               	goto	l1555
  4479  14DD  09F2               	comf	___awmod@dividend,f
  4480  14DE  09F3               	comf	___awmod@dividend+1,f
  4481  14DF  0AF2               	incf	___awmod@dividend,f
  4482  14E0  1903               	skipnz
  4483  14E1  0AF3               	incf	___awmod@dividend+1,f
  4484  14E2  01F6               	clrf	___awmod@sign
  4485  14E3  0AF6               	incf	___awmod@sign,f
  4486  14E4                     l1555:	
  4487  14E4  1FF1               	btfss	___awmod@divisor+1,7
  4488  14E5  2CEB               	goto	l1559
  4489  14E6  09F0               	comf	___awmod@divisor,f
  4490  14E7  09F1               	comf	___awmod@divisor+1,f
  4491  14E8  0AF0               	incf	___awmod@divisor,f
  4492  14E9  1903               	skipnz
  4493  14EA  0AF1               	incf	___awmod@divisor+1,f
  4494  14EB                     l1559:	
  4495  14EB  0870               	movf	___awmod@divisor,w
  4496  14EC  0471               	iorwf	___awmod@divisor+1,w
  4497  14ED  1903               	btfsc	3,2
  4498  14EE  2D18               	goto	l1577
  4499  14EF  01F5               	clrf	___awmod@counter
  4500  14F0  0AF5               	incf	___awmod@counter,f
  4501  14F1                     l1567:	
  4502  14F1  1BF1               	btfsc	___awmod@divisor+1,7
  4503  14F2  2CFF               	goto	l1569
  4504  14F3  3001               	movlw	1
  4505  14F4                     u2115:	
  4506  14F4  1003               	clrc
  4507  14F5  0DF0               	rlf	___awmod@divisor,f
  4508  14F6  0DF1               	rlf	___awmod@divisor+1,f
  4509  14F7  3EFF               	addlw	-1
  4510  14F8  1D03               	skipz
  4511  14F9  2CF4               	goto	u2115
  4512  14FA  3001               	movlw	1
  4513  14FB  00F4               	movwf	??___awmod
  4514  14FC  0874               	movf	??___awmod,w
  4515  14FD  07F5               	addwf	___awmod@counter,f
  4516  14FE  2CF1               	goto	l1567
  4517  14FF                     l1569:	
  4518  14FF  0871               	movf	___awmod@divisor+1,w
  4519  1500  0273               	subwf	___awmod@dividend+1,w
  4520  1501  1D03               	skipz
  4521  1502  2D05               	goto	u2135
  4522  1503  0870               	movf	___awmod@divisor,w
  4523  1504  0272               	subwf	___awmod@dividend,w
  4524  1505                     u2135:	
  4525  1505  1C03               	skipc
  4526  1506  2D0D               	goto	l1573
  4527  1507  0870               	movf	___awmod@divisor,w
  4528  1508  02F2               	subwf	___awmod@dividend,f
  4529  1509  0871               	movf	___awmod@divisor+1,w
  4530  150A  1C03               	skipc
  4531  150B  03F3               	decf	___awmod@dividend+1,f
  4532  150C  02F3               	subwf	___awmod@dividend+1,f
  4533  150D                     l1573:	
  4534  150D  3001               	movlw	1
  4535  150E                     u2145:	
  4536  150E  1003               	clrc
  4537  150F  0CF1               	rrf	___awmod@divisor+1,f
  4538  1510  0CF0               	rrf	___awmod@divisor,f
  4539  1511  3EFF               	addlw	-1
  4540  1512  1D03               	skipz
  4541  1513  2D0E               	goto	u2145
  4542  1514  3001               	movlw	1
  4543  1515  02F5               	subwf	___awmod@counter,f
  4544  1516  1D03               	btfss	3,2
  4545  1517  2CFF               	goto	l1569
  4546  1518                     l1577:	
  4547  1518  0876               	movf	___awmod@sign,w
  4548  1519  1903               	btfsc	3,2
  4549  151A  2D20               	goto	l1581
  4550  151B  09F2               	comf	___awmod@dividend,f
  4551  151C  09F3               	comf	___awmod@dividend+1,f
  4552  151D  0AF2               	incf	___awmod@dividend,f
  4553  151E  1903               	skipnz
  4554  151F  0AF3               	incf	___awmod@dividend+1,f
  4555  1520                     l1581:	
  4556  1520  0873               	movf	___awmod@dividend+1,w
  4557  1521  00F1               	movwf	?___awmod+1
  4558  1522  0872               	movf	___awmod@dividend,w
  4559  1523  00F0               	movwf	?___awmod
  4560  1524  0008               	return
  4561  1525                     __end_of___awmod:	
  4562                           
  4563                           	psect	text8
  4564  1571                     __ptext8:	
  4565 ;; *************** function ___awdiv *****************
  4566 ;; Defined at:
  4567 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  divisor         2    7[COMMON] int 
  4570 ;;  dividend        2    9[COMMON] int 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  quotient        2    2[BANK0 ] int 
  4573 ;;  sign            1    1[BANK0 ] unsigned char 
  4574 ;;  counter         1    0[BANK0 ] unsigned char 
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  2    7[COMMON] int 
  4577 ;; Registers used:
  4578 ;;		wreg, status,2, status,0
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4584 ;;      Params:         4       0       0       0       0
  4585 ;;      Locals:         0       4       0       0       0
  4586 ;;      Temps:          1       0       0       0       0
  4587 ;;      Totals:         5       4       0       0       0
  4588 ;;Total ram usage:        9 bytes
  4589 ;; Hardware stack levels used:    1
  4590 ;; This function calls:
  4591 ;;		Nothing
  4592 ;; This function is called by:
  4593 ;;		_fround
  4594 ;;		_scale
  4595 ;;		_printf
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           
  4600                           ;psect for function ___awdiv
  4601  1571                     ___awdiv:	
  4602                           
  4603                           ;incstack = 0
  4604                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4605  1571  1283               	bcf	3,5	;RP0=0, select bank0
  4606  1572  1303               	bcf	3,6	;RP1=0, select bank0
  4607  1573  01A1               	clrf	___awdiv@sign
  4608  1574  1FF8               	btfss	___awdiv@divisor+1,7
  4609  1575  2D7D               	goto	l1511
  4610  1576  09F7               	comf	___awdiv@divisor,f
  4611  1577  09F8               	comf	___awdiv@divisor+1,f
  4612  1578  0AF7               	incf	___awdiv@divisor,f
  4613  1579  1903               	skipnz
  4614  157A  0AF8               	incf	___awdiv@divisor+1,f
  4615  157B  01A1               	clrf	___awdiv@sign
  4616  157C  0AA1               	incf	___awdiv@sign,f
  4617  157D                     l1511:	
  4618  157D  1FFA               	btfss	___awdiv@dividend+1,7
  4619  157E  2D88               	goto	l1517
  4620  157F  09F9               	comf	___awdiv@dividend,f
  4621  1580  09FA               	comf	___awdiv@dividend+1,f
  4622  1581  0AF9               	incf	___awdiv@dividend,f
  4623  1582  1903               	skipnz
  4624  1583  0AFA               	incf	___awdiv@dividend+1,f
  4625  1584  3001               	movlw	1
  4626  1585  00FB               	movwf	??___awdiv
  4627  1586  087B               	movf	??___awdiv,w
  4628  1587  06A1               	xorwf	___awdiv@sign,f
  4629  1588                     l1517:	
  4630  1588  01A2               	clrf	___awdiv@quotient
  4631  1589  01A3               	clrf	___awdiv@quotient+1
  4632  158A  0877               	movf	___awdiv@divisor,w
  4633  158B  0478               	iorwf	___awdiv@divisor+1,w
  4634  158C  1903               	btfsc	3,2
  4635  158D  2DBF               	goto	l1539
  4636  158E  01A0               	clrf	___awdiv@counter
  4637  158F  0AA0               	incf	___awdiv@counter,f
  4638  1590                     l1527:	
  4639  1590  1BF8               	btfsc	___awdiv@divisor+1,7
  4640  1591  2D9E               	goto	l1529
  4641  1592  3001               	movlw	1
  4642  1593                     u2015:	
  4643  1593  1003               	clrc
  4644  1594  0DF7               	rlf	___awdiv@divisor,f
  4645  1595  0DF8               	rlf	___awdiv@divisor+1,f
  4646  1596  3EFF               	addlw	-1
  4647  1597  1D03               	skipz
  4648  1598  2D93               	goto	u2015
  4649  1599  3001               	movlw	1
  4650  159A  00FB               	movwf	??___awdiv
  4651  159B  087B               	movf	??___awdiv,w
  4652  159C  07A0               	addwf	___awdiv@counter,f
  4653  159D  2D90               	goto	l1527
  4654  159E                     l1529:	
  4655  159E  3001               	movlw	1
  4656  159F                     u2035:	
  4657  159F  1003               	clrc
  4658  15A0  0DA2               	rlf	___awdiv@quotient,f
  4659  15A1  0DA3               	rlf	___awdiv@quotient+1,f
  4660  15A2  3EFF               	addlw	-1
  4661  15A3  1D03               	skipz
  4662  15A4  2D9F               	goto	u2035
  4663  15A5  0878               	movf	___awdiv@divisor+1,w
  4664  15A6  027A               	subwf	___awdiv@dividend+1,w
  4665  15A7  1D03               	skipz
  4666  15A8  2DAB               	goto	u2045
  4667  15A9  0877               	movf	___awdiv@divisor,w
  4668  15AA  0279               	subwf	___awdiv@dividend,w
  4669  15AB                     u2045:	
  4670  15AB  1C03               	skipc
  4671  15AC  2DB4               	goto	l1535
  4672  15AD  0877               	movf	___awdiv@divisor,w
  4673  15AE  02F9               	subwf	___awdiv@dividend,f
  4674  15AF  0878               	movf	___awdiv@divisor+1,w
  4675  15B0  1C03               	skipc
  4676  15B1  03FA               	decf	___awdiv@dividend+1,f
  4677  15B2  02FA               	subwf	___awdiv@dividend+1,f
  4678  15B3  1422               	bsf	___awdiv@quotient,0
  4679  15B4                     l1535:	
  4680  15B4  3001               	movlw	1
  4681  15B5                     u2055:	
  4682  15B5  1003               	clrc
  4683  15B6  0CF8               	rrf	___awdiv@divisor+1,f
  4684  15B7  0CF7               	rrf	___awdiv@divisor,f
  4685  15B8  3EFF               	addlw	-1
  4686  15B9  1D03               	skipz
  4687  15BA  2DB5               	goto	u2055
  4688  15BB  3001               	movlw	1
  4689  15BC  02A0               	subwf	___awdiv@counter,f
  4690  15BD  1D03               	btfss	3,2
  4691  15BE  2D9E               	goto	l1529
  4692  15BF                     l1539:	
  4693  15BF  0821               	movf	___awdiv@sign,w
  4694  15C0  1903               	btfsc	3,2
  4695  15C1  2DC7               	goto	l1543
  4696  15C2  09A2               	comf	___awdiv@quotient,f
  4697  15C3  09A3               	comf	___awdiv@quotient+1,f
  4698  15C4  0AA2               	incf	___awdiv@quotient,f
  4699  15C5  1903               	skipnz
  4700  15C6  0AA3               	incf	___awdiv@quotient+1,f
  4701  15C7                     l1543:	
  4702  15C7  0823               	movf	___awdiv@quotient+1,w
  4703  15C8  00F8               	movwf	?___awdiv+1
  4704  15C9  0822               	movf	___awdiv@quotient,w
  4705  15CA  00F7               	movwf	?___awdiv
  4706  15CB  0008               	return
  4707  15CC                     __end_of___awdiv:	
  4708                           
  4709                           	psect	text9
  4710  173D                     __ptext9:	
  4711 ;; *************** function __tdiv_to_l_ *****************
  4712 ;; Defined at:
  4713 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdivl.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  f1              3    0[COMMON] float 
  4716 ;;  f2              3    3[COMMON] float 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  quot            4    0[BANK0 ] unsigned long 
  4719 ;;  exp1            1    5[BANK0 ] unsigned char 
  4720 ;;  cntr            1    4[BANK0 ] unsigned char 
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  4    0[COMMON] unsigned long 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2, status,0
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4730 ;;      Params:         6       0       0       0       0
  4731 ;;      Locals:         0       6       0       0       0
  4732 ;;      Temps:          4       0       0       0       0
  4733 ;;      Totals:        10       6       0       0       0
  4734 ;;Total ram usage:       16 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_printf
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           
  4744                           ;psect for function __tdiv_to_l_
  4745  173D                     __tdiv_to_l_:	
  4746                           
  4747                           ;incstack = 0
  4748                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4749  173D  0870               	movf	__tdiv_to_l_@f1,w
  4750  173E  00F6               	movwf	??__tdiv_to_l_
  4751  173F  0871               	movf	__tdiv_to_l_@f1+1,w
  4752  1740  00F7               	movwf	??__tdiv_to_l_+1
  4753  1741  0872               	movf	__tdiv_to_l_@f1+2,w
  4754  1742  00F8               	movwf	??__tdiv_to_l_+2
  4755  1743  1003               	clrc
  4756  1744  0D77               	rlf	??__tdiv_to_l_+1,w
  4757  1745  0D78               	rlf	??__tdiv_to_l_+2,w
  4758  1746  00F9               	movwf	??__tdiv_to_l_+3
  4759  1747  0879               	movf	??__tdiv_to_l_+3,w
  4760  1748  1283               	bcf	3,5	;RP0=0, select bank0
  4761  1749  1303               	bcf	3,6	;RP1=0, select bank0
  4762  174A  00A5               	movwf	__tdiv_to_l_@exp1
  4763  174B  0825               	movf	__tdiv_to_l_@exp1,w
  4764  174C  1D03               	btfss	3,2
  4765  174D  2F57               	goto	l1777
  4766  174E  3000               	movlw	0
  4767  174F  00F3               	movwf	?__tdiv_to_l_+3
  4768  1750  3000               	movlw	0
  4769  1751  00F2               	movwf	?__tdiv_to_l_+2
  4770  1752  3000               	movlw	0
  4771  1753  00F1               	movwf	?__tdiv_to_l_+1
  4772  1754  3000               	movlw	0
  4773  1755  00F0               	movwf	?__tdiv_to_l_
  4774  1756  0008               	return
  4775  1757                     l1777:	
  4776  1757  0873               	movf	__tdiv_to_l_@f2,w
  4777  1758  00F6               	movwf	??__tdiv_to_l_
  4778  1759  0874               	movf	__tdiv_to_l_@f2+1,w
  4779  175A  00F7               	movwf	??__tdiv_to_l_+1
  4780  175B  0875               	movf	__tdiv_to_l_@f2+2,w
  4781  175C  00F8               	movwf	??__tdiv_to_l_+2
  4782  175D  1003               	clrc
  4783  175E  0D77               	rlf	??__tdiv_to_l_+1,w
  4784  175F  0D78               	rlf	??__tdiv_to_l_+2,w
  4785  1760  00F9               	movwf	??__tdiv_to_l_+3
  4786  1761  0879               	movf	??__tdiv_to_l_+3,w
  4787  1762  00A4               	movwf	__tdiv_to_l_@cntr
  4788  1763  0824               	movf	__tdiv_to_l_@cntr,w
  4789  1764  1D03               	btfss	3,2
  4790  1765  2F6F               	goto	l456
  4791  1766  3000               	movlw	0
  4792  1767  00F3               	movwf	?__tdiv_to_l_+3
  4793  1768  3000               	movlw	0
  4794  1769  00F2               	movwf	?__tdiv_to_l_+2
  4795  176A  3000               	movlw	0
  4796  176B  00F1               	movwf	?__tdiv_to_l_+1
  4797  176C  3000               	movlw	0
  4798  176D  00F0               	movwf	?__tdiv_to_l_
  4799  176E  0008               	return
  4800  176F                     l456:	
  4801  176F  17F1               	bsf	__tdiv_to_l_@f1+1,7
  4802  1770  30FF               	movlw	255
  4803  1771  05F0               	andwf	__tdiv_to_l_@f1,f
  4804  1772  30FF               	movlw	255
  4805  1773  05F1               	andwf	__tdiv_to_l_@f1+1,f
  4806  1774  3000               	movlw	0
  4807  1775  05F2               	andwf	__tdiv_to_l_@f1+2,f
  4808  1776  17F4               	bsf	__tdiv_to_l_@f2+1,7
  4809  1777  30FF               	movlw	255
  4810  1778  05F3               	andwf	__tdiv_to_l_@f2,f
  4811  1779  30FF               	movlw	255
  4812  177A  05F4               	andwf	__tdiv_to_l_@f2+1,f
  4813  177B  3000               	movlw	0
  4814  177C  05F5               	andwf	__tdiv_to_l_@f2+2,f
  4815  177D  3000               	movlw	0
  4816  177E  00A3               	movwf	__tdiv_to_l_@quot+3
  4817  177F  3000               	movlw	0
  4818  1780  00A2               	movwf	__tdiv_to_l_@quot+2
  4819  1781  3000               	movlw	0
  4820  1782  00A1               	movwf	__tdiv_to_l_@quot+1
  4821  1783  3000               	movlw	0
  4822  1784  00A0               	movwf	__tdiv_to_l_@quot
  4823  1785  307F               	movlw	127
  4824  1786  02A5               	subwf	__tdiv_to_l_@exp1,f
  4825  1787  3098               	movlw	152
  4826  1788  0724               	addwf	__tdiv_to_l_@cntr,w
  4827  1789  00F6               	movwf	??__tdiv_to_l_
  4828  178A  0876               	movf	??__tdiv_to_l_,w
  4829  178B  02A5               	subwf	__tdiv_to_l_@exp1,f
  4830  178C  3018               	movlw	24
  4831  178D  00F6               	movwf	??__tdiv_to_l_
  4832  178E  0876               	movf	??__tdiv_to_l_,w
  4833  178F  00A4               	movwf	__tdiv_to_l_@cntr
  4834  1790                     l1791:	
  4835  1790  3001               	movlw	1
  4836  1791  00F6               	movwf	??__tdiv_to_l_
  4837  1792                     u2655:	
  4838  1792  1003               	clrc
  4839  1793  0DA0               	rlf	__tdiv_to_l_@quot,f
  4840  1794  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4841  1795  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4842  1796  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4843  1797  0BF6               	decfsz	??__tdiv_to_l_,f
  4844  1798  2F92               	goto	u2655
  4845  1799  0875               	movf	__tdiv_to_l_@f2+2,w
  4846  179A  0272               	subwf	__tdiv_to_l_@f1+2,w
  4847  179B  1D03               	skipz
  4848  179C  2FA3               	goto	u2665
  4849  179D  0874               	movf	__tdiv_to_l_@f2+1,w
  4850  179E  0271               	subwf	__tdiv_to_l_@f1+1,w
  4851  179F  1D03               	skipz
  4852  17A0  2FA3               	goto	u2665
  4853  17A1  0873               	movf	__tdiv_to_l_@f2,w
  4854  17A2  0270               	subwf	__tdiv_to_l_@f1,w
  4855  17A3                     u2665:	
  4856  17A3  1C03               	skipc
  4857  17A4  2FB0               	goto	l1799
  4858  17A5  0873               	movf	__tdiv_to_l_@f2,w
  4859  17A6  02F0               	subwf	__tdiv_to_l_@f1,f
  4860  17A7  0874               	movf	__tdiv_to_l_@f2+1,w
  4861  17A8  1C03               	skipc
  4862  17A9  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  4863  17AA  02F1               	subwf	__tdiv_to_l_@f1+1,f
  4864  17AB  0875               	movf	__tdiv_to_l_@f2+2,w
  4865  17AC  1C03               	skipc
  4866  17AD  0A75               	incf	__tdiv_to_l_@f2+2,w
  4867  17AE  02F2               	subwf	__tdiv_to_l_@f1+2,f
  4868  17AF  1420               	bsf	__tdiv_to_l_@quot,0
  4869  17B0                     l1799:	
  4870  17B0  3001               	movlw	1
  4871  17B1                     u2675:	
  4872  17B1  1003               	clrc
  4873  17B2  0DF0               	rlf	__tdiv_to_l_@f1,f
  4874  17B3  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  4875  17B4  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  4876  17B5  3EFF               	addlw	-1
  4877  17B6  1D03               	skipz
  4878  17B7  2FB1               	goto	u2675
  4879  17B8  3001               	movlw	1
  4880  17B9  02A4               	subwf	__tdiv_to_l_@cntr,f
  4881  17BA  1D03               	btfss	3,2
  4882  17BB  2F90               	goto	l1791
  4883  17BC  1FA5               	btfss	__tdiv_to_l_@exp1,7
  4884  17BD  2FDC               	goto	l1811
  4885  17BE  0825               	movf	__tdiv_to_l_@exp1,w
  4886  17BF  3A80               	xorlw	128
  4887  17C0  3E97               	addlw	151
  4888  17C1  1803               	skipnc
  4889  17C2  2FCC               	goto	l1809
  4890  17C3  3000               	movlw	0
  4891  17C4  00F3               	movwf	?__tdiv_to_l_+3
  4892  17C5  3000               	movlw	0
  4893  17C6  00F2               	movwf	?__tdiv_to_l_+2
  4894  17C7  3000               	movlw	0
  4895  17C8  00F1               	movwf	?__tdiv_to_l_+1
  4896  17C9  3000               	movlw	0
  4897  17CA  00F0               	movwf	?__tdiv_to_l_
  4898  17CB  0008               	return
  4899  17CC                     l1809:	
  4900  17CC  3001               	movlw	1
  4901  17CD                     u2715:	
  4902  17CD  1003               	clrc
  4903  17CE  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  4904  17CF  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  4905  17D0  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  4906  17D1  0CA0               	rrf	__tdiv_to_l_@quot,f
  4907  17D2  3EFF               	addlw	-1
  4908  17D3  1D03               	skipz
  4909  17D4  2FCD               	goto	u2715
  4910  17D5  3001               	movlw	1
  4911  17D6  00F6               	movwf	??__tdiv_to_l_
  4912  17D7  0876               	movf	??__tdiv_to_l_,w
  4913  17D8  07A5               	addwf	__tdiv_to_l_@exp1,f
  4914  17D9  1903               	btfsc	3,2
  4915  17DA  2FF7               	goto	l1819
  4916  17DB  2FCC               	goto	l1809
  4917  17DC                     l1811:	
  4918  17DC  3018               	movlw	24
  4919  17DD  0225               	subwf	__tdiv_to_l_@exp1,w
  4920  17DE  1C03               	skipc
  4921  17DF  2FF4               	goto	l466
  4922  17E0  3000               	movlw	0
  4923  17E1  00F3               	movwf	?__tdiv_to_l_+3
  4924  17E2  3000               	movlw	0
  4925  17E3  00F2               	movwf	?__tdiv_to_l_+2
  4926  17E4  3000               	movlw	0
  4927  17E5  00F1               	movwf	?__tdiv_to_l_+1
  4928  17E6  3000               	movlw	0
  4929  17E7  00F0               	movwf	?__tdiv_to_l_
  4930  17E8  0008               	return
  4931  17E9                     l1817:	
  4932  17E9  3001               	movlw	1
  4933  17EA  00F6               	movwf	??__tdiv_to_l_
  4934  17EB                     u2745:	
  4935  17EB  1003               	clrc
  4936  17EC  0DA0               	rlf	__tdiv_to_l_@quot,f
  4937  17ED  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4938  17EE  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4939  17EF  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4940  17F0  0BF6               	decfsz	??__tdiv_to_l_,f
  4941  17F1  2FEB               	goto	u2745
  4942  17F2  3001               	movlw	1
  4943  17F3  02A5               	subwf	__tdiv_to_l_@exp1,f
  4944  17F4                     l466:	
  4945  17F4  0825               	movf	__tdiv_to_l_@exp1,w
  4946  17F5  1D03               	btfss	3,2
  4947  17F6  2FE9               	goto	l1817
  4948  17F7                     l1819:	
  4949  17F7  0823               	movf	__tdiv_to_l_@quot+3,w
  4950  17F8  00F3               	movwf	?__tdiv_to_l_+3
  4951  17F9  0822               	movf	__tdiv_to_l_@quot+2,w
  4952  17FA  00F2               	movwf	?__tdiv_to_l_+2
  4953  17FB  0821               	movf	__tdiv_to_l_@quot+1,w
  4954  17FC  00F1               	movwf	?__tdiv_to_l_+1
  4955  17FD  0820               	movf	__tdiv_to_l_@quot,w
  4956  17FE  00F0               	movwf	?__tdiv_to_l_
  4957  17FF  0008               	return
  4958  1800                     __end_of__tdiv_to_l_:	
  4959                           
  4960                           	psect	text10
  4961  0A81                     __ptext10:	
  4962 ;; *************** function __div_to_l_ *****************
  4963 ;; Defined at:
  4964 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fldivl.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  f1              3    0[COMMON] unsigned long 
  4967 ;;  f2              3    3[COMMON] unsigned long 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  quot            4    0[BANK0 ] unsigned long 
  4970 ;;  exp1            1    5[BANK0 ] unsigned char 
  4971 ;;  cntr            1    4[BANK0 ] unsigned char 
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  4    0[COMMON] unsigned long 
  4974 ;; Registers used:
  4975 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4981 ;;      Params:         6       0       0       0       0
  4982 ;;      Locals:         0       6       0       0       0
  4983 ;;      Temps:          8       0       0       0       0
  4984 ;;      Totals:        14       6       0       0       0
  4985 ;;Total ram usage:       20 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; This function calls:
  4988 ;;		Nothing
  4989 ;; This function is called by:
  4990 ;;		_printf
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           
  4995                           ;psect for function __div_to_l_
  4996  0A81                     __div_to_l_:	
  4997                           
  4998                           ;incstack = 0
  4999                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  5000  0A81  3070               	movlw	low (__div_to_l_@f1| 0)
  5001  0A82  0084               	movwf	4
  5002  0A83  0800               	movf	0,w
  5003  0A84  00F6               	movwf	??__div_to_l_
  5004  0A85  0A84               	incf	4,f
  5005  0A86  0800               	movf	0,w
  5006  0A87  00F7               	movwf	??__div_to_l_+1
  5007  0A88  0A84               	incf	4,f
  5008  0A89  0800               	movf	0,w
  5009  0A8A  00F8               	movwf	??__div_to_l_+2
  5010  0A8B  0A84               	incf	4,f
  5011  0A8C  0800               	movf	0,w
  5012  0A8D  00F9               	movwf	??__div_to_l_+3
  5013  0A8E  1003               	clrc
  5014  0A8F  0D78               	rlf	??__div_to_l_+2,w
  5015  0A90  0D79               	rlf	??__div_to_l_+3,w
  5016  0A91  00FA               	movwf	??__div_to_l_+4
  5017  0A92  087A               	movf	??__div_to_l_+4,w
  5018  0A93  1283               	bcf	3,5	;RP0=0, select bank0
  5019  0A94  1303               	bcf	3,6	;RP1=0, select bank0
  5020  0A95  00A5               	movwf	__div_to_l_@exp1
  5021  0A96  0825               	movf	__div_to_l_@exp1,w
  5022  0A97  1D03               	btfss	3,2
  5023  0A98  2AA2               	goto	l1829
  5024  0A99  3000               	movlw	0
  5025  0A9A  00F3               	movwf	?__div_to_l_+3
  5026  0A9B  3000               	movlw	0
  5027  0A9C  00F2               	movwf	?__div_to_l_+2
  5028  0A9D  3000               	movlw	0
  5029  0A9E  00F1               	movwf	?__div_to_l_+1
  5030  0A9F  3000               	movlw	0
  5031  0AA0  00F0               	movwf	?__div_to_l_
  5032  0AA1  0008               	return
  5033  0AA2                     l1829:	
  5034  0AA2  3073               	movlw	low (__div_to_l_@f2| 0)
  5035  0AA3  0084               	movwf	4
  5036  0AA4  0800               	movf	0,w
  5037  0AA5  00F6               	movwf	??__div_to_l_
  5038  0AA6  0A84               	incf	4,f
  5039  0AA7  0800               	movf	0,w
  5040  0AA8  00F7               	movwf	??__div_to_l_+1
  5041  0AA9  0A84               	incf	4,f
  5042  0AAA  0800               	movf	0,w
  5043  0AAB  00F8               	movwf	??__div_to_l_+2
  5044  0AAC  0A84               	incf	4,f
  5045  0AAD  0800               	movf	0,w
  5046  0AAE  00F9               	movwf	??__div_to_l_+3
  5047  0AAF  1003               	clrc
  5048  0AB0  0D78               	rlf	??__div_to_l_+2,w
  5049  0AB1  0D79               	rlf	??__div_to_l_+3,w
  5050  0AB2  00FA               	movwf	??__div_to_l_+4
  5051  0AB3  087A               	movf	??__div_to_l_+4,w
  5052  0AB4  00A4               	movwf	__div_to_l_@cntr
  5053  0AB5  0824               	movf	__div_to_l_@cntr,w
  5054  0AB6  1D03               	btfss	3,2
  5055  0AB7  2AC1               	goto	l1835
  5056  0AB8  3000               	movlw	0
  5057  0AB9  00F3               	movwf	?__div_to_l_+3
  5058  0ABA  3000               	movlw	0
  5059  0ABB  00F2               	movwf	?__div_to_l_+2
  5060  0ABC  3000               	movlw	0
  5061  0ABD  00F1               	movwf	?__div_to_l_+1
  5062  0ABE  3000               	movlw	0
  5063  0ABF  00F0               	movwf	?__div_to_l_
  5064  0AC0  0008               	return
  5065  0AC1                     l1835:	
  5066  0AC1  3070               	movlw	low (__div_to_l_@f1| 0)
  5067  0AC2  0084               	movwf	4
  5068  0AC3  3000               	movlw	0
  5069  0AC4  0480               	iorwf	0,f
  5070  0AC5  0A84               	incf	4,f
  5071  0AC6  3000               	movlw	0
  5072  0AC7  0480               	iorwf	0,f
  5073  0AC8  0A84               	incf	4,f
  5074  0AC9  3080               	movlw	128
  5075  0ACA  0480               	iorwf	0,f
  5076  0ACB  0A84               	incf	4,f
  5077  0ACC  3000               	movlw	0
  5078  0ACD  0480               	iorwf	0,f
  5079  0ACE  3070               	movlw	low (__div_to_l_@f1| 0)
  5080  0ACF  0084               	movwf	4
  5081  0AD0  30FF               	movlw	255
  5082  0AD1  0580               	andwf	0,f
  5083  0AD2  0A84               	incf	4,f
  5084  0AD3  30FF               	movlw	255
  5085  0AD4  0580               	andwf	0,f
  5086  0AD5  0A84               	incf	4,f
  5087  0AD6  30FF               	movlw	255
  5088  0AD7  0580               	andwf	0,f
  5089  0AD8  0A84               	incf	4,f
  5090  0AD9  3000               	movlw	0
  5091  0ADA  0580               	andwf	0,f
  5092  0ADB  3073               	movlw	low (__div_to_l_@f2| 0)
  5093  0ADC  0084               	movwf	4
  5094  0ADD  3000               	movlw	0
  5095  0ADE  0480               	iorwf	0,f
  5096  0ADF  0A84               	incf	4,f
  5097  0AE0  3000               	movlw	0
  5098  0AE1  0480               	iorwf	0,f
  5099  0AE2  0A84               	incf	4,f
  5100  0AE3  3080               	movlw	128
  5101  0AE4  0480               	iorwf	0,f
  5102  0AE5  0A84               	incf	4,f
  5103  0AE6  3000               	movlw	0
  5104  0AE7  0480               	iorwf	0,f
  5105  0AE8  3073               	movlw	low (__div_to_l_@f2| 0)
  5106  0AE9  0084               	movwf	4
  5107  0AEA  30FF               	movlw	255
  5108  0AEB  0580               	andwf	0,f
  5109  0AEC  0A84               	incf	4,f
  5110  0AED  30FF               	movlw	255
  5111  0AEE  0580               	andwf	0,f
  5112  0AEF  0A84               	incf	4,f
  5113  0AF0  30FF               	movlw	255
  5114  0AF1  0580               	andwf	0,f
  5115  0AF2  0A84               	incf	4,f
  5116  0AF3  3000               	movlw	0
  5117  0AF4  0580               	andwf	0,f
  5118  0AF5  3000               	movlw	0
  5119  0AF6  00A3               	movwf	__div_to_l_@quot+3
  5120  0AF7  3000               	movlw	0
  5121  0AF8  00A2               	movwf	__div_to_l_@quot+2
  5122  0AF9  3000               	movlw	0
  5123  0AFA  00A1               	movwf	__div_to_l_@quot+1
  5124  0AFB  3000               	movlw	0
  5125  0AFC  00A0               	movwf	__div_to_l_@quot
  5126  0AFD  307F               	movlw	127
  5127  0AFE  02A5               	subwf	__div_to_l_@exp1,f
  5128  0AFF  30A0               	movlw	160
  5129  0B00  0724               	addwf	__div_to_l_@cntr,w
  5130  0B01  00F6               	movwf	??__div_to_l_
  5131  0B02  0876               	movf	??__div_to_l_,w
  5132  0B03  02A5               	subwf	__div_to_l_@exp1,f
  5133  0B04  3020               	movlw	32
  5134  0B05  00F6               	movwf	??__div_to_l_
  5135  0B06  0876               	movf	??__div_to_l_,w
  5136  0B07  00A4               	movwf	__div_to_l_@cntr
  5137  0B08                     l1845:	
  5138  0B08  3001               	movlw	1
  5139  0B09  00F6               	movwf	??__div_to_l_
  5140  0B0A                     u2785:	
  5141  0B0A  1003               	clrc
  5142  0B0B  0DA0               	rlf	__div_to_l_@quot,f
  5143  0B0C  0DA1               	rlf	__div_to_l_@quot+1,f
  5144  0B0D  0DA2               	rlf	__div_to_l_@quot+2,f
  5145  0B0E  0DA3               	rlf	__div_to_l_@quot+3,f
  5146  0B0F  0BF6               	decfsz	??__div_to_l_,f
  5147  0B10  2B0A               	goto	u2785
  5148  0B11  3073               	movlw	low (__div_to_l_@f2| 0)
  5149  0B12  0084               	movwf	4
  5150  0B13  0800               	movf	0,w
  5151  0B14  00F6               	movwf	??__div_to_l_
  5152  0B15  0A84               	incf	4,f
  5153  0B16  0800               	movf	0,w
  5154  0B17  00F7               	movwf	??__div_to_l_+1
  5155  0B18  0A84               	incf	4,f
  5156  0B19  0800               	movf	0,w
  5157  0B1A  00F8               	movwf	??__div_to_l_+2
  5158  0B1B  0A84               	incf	4,f
  5159  0B1C  0800               	movf	0,w
  5160  0B1D  00F9               	movwf	??__div_to_l_+3
  5161  0B1E  3070               	movlw	low (__div_to_l_@f1| 0)
  5162  0B1F  0084               	movwf	4
  5163  0B20  0800               	movf	0,w
  5164  0B21  00FA               	movwf	??__div_to_l_+4
  5165  0B22  0A84               	incf	4,f
  5166  0B23  0800               	movf	0,w
  5167  0B24  00FB               	movwf	??__div_to_l_+5
  5168  0B25  0A84               	incf	4,f
  5169  0B26  0800               	movf	0,w
  5170  0B27  00FC               	movwf	??__div_to_l_+6
  5171  0B28  0A84               	incf	4,f
  5172  0B29  0800               	movf	0,w
  5173  0B2A  00FD               	movwf	??__div_to_l_+7
  5174  0B2B  0879               	movf	??__div_to_l_+3,w
  5175  0B2C  027D               	subwf	??__div_to_l_+7,w
  5176  0B2D  1D03               	skipz
  5177  0B2E  2B39               	goto	u2795
  5178  0B2F  0878               	movf	??__div_to_l_+2,w
  5179  0B30  027C               	subwf	??__div_to_l_+6,w
  5180  0B31  1D03               	skipz
  5181  0B32  2B39               	goto	u2795
  5182  0B33  0877               	movf	??__div_to_l_+1,w
  5183  0B34  027B               	subwf	??__div_to_l_+5,w
  5184  0B35  1D03               	skipz
  5185  0B36  2B39               	goto	u2795
  5186  0B37  0876               	movf	??__div_to_l_,w
  5187  0B38  027A               	subwf	??__div_to_l_+4,w
  5188  0B39                     u2795:	
  5189  0B39  1C03               	skipc
  5190  0B3A  2B5E               	goto	l379
  5191  0B3B  3073               	movlw	low (__div_to_l_@f2| 0)
  5192  0B3C  0084               	movwf	4
  5193  0B3D  0800               	movf	0,w
  5194  0B3E  00F6               	movwf	??__div_to_l_
  5195  0B3F  0A84               	incf	4,f
  5196  0B40  0800               	movf	0,w
  5197  0B41  00F7               	movwf	??__div_to_l_+1
  5198  0B42  0A84               	incf	4,f
  5199  0B43  0800               	movf	0,w
  5200  0B44  00F8               	movwf	??__div_to_l_+2
  5201  0B45  0A84               	incf	4,f
  5202  0B46  0800               	movf	0,w
  5203  0B47  00F9               	movwf	??__div_to_l_+3
  5204  0B48  3070               	movlw	low (__div_to_l_@f1| 0)
  5205  0B49  0084               	movwf	4
  5206  0B4A  0876               	movf	??__div_to_l_,w
  5207  0B4B  0280               	subwf	0,f
  5208  0B4C  0A84               	incf	4,f
  5209  0B4D  0877               	movf	??__div_to_l_+1,w
  5210  0B4E  1C03               	skipc
  5211  0B4F  0F77               	incfsz	??__div_to_l_+1,w
  5212  0B50  0280               	subwf	0,f
  5213  0B51  0A84               	incf	4,f
  5214  0B52  0878               	movf	??__div_to_l_+2,w
  5215  0B53  1C03               	skipc
  5216  0B54  0F78               	incfsz	??__div_to_l_+2,w
  5217  0B55  0280               	subwf	0,f
  5218  0B56  0A84               	incf	4,f
  5219  0B57  0879               	movf	??__div_to_l_+3,w
  5220  0B58  1C03               	skipc
  5221  0B59  0A79               	incf	??__div_to_l_+3,w
  5222  0B5A  0280               	subwf	0,f
  5223  0B5B  3003               	movlw	3
  5224  0B5C  0284               	subwf	4,f
  5225  0B5D  1420               	bsf	__div_to_l_@quot,0
  5226  0B5E                     l379:	
  5227  0B5E  3070               	movlw	low (__div_to_l_@f1| 0)
  5228  0B5F  0084               	movwf	4
  5229  0B60  1003               	clrc
  5230  0B61  0D80               	rlf	0,f
  5231  0B62  0A84               	incf	4,f
  5232  0B63  0D80               	rlf	0,f
  5233  0B64  0A84               	incf	4,f
  5234  0B65  0D80               	rlf	0,f
  5235  0B66  0A84               	incf	4,f
  5236  0B67  0D80               	rlf	0,f
  5237  0B68  0384               	decf	4,f
  5238  0B69  0384               	decf	4,f
  5239  0B6A  0384               	decf	4,f
  5240  0B6B  3001               	movlw	1
  5241  0B6C  02A4               	subwf	__div_to_l_@cntr,f
  5242  0B6D  1D03               	btfss	3,2
  5243  0B6E  2B08               	goto	l1845
  5244  0B6F  1FA5               	btfss	__div_to_l_@exp1,7
  5245  0B70  2B8F               	goto	l1863
  5246  0B71  0825               	movf	__div_to_l_@exp1,w
  5247  0B72  3A80               	xorlw	128
  5248  0B73  3E9F               	addlw	159
  5249  0B74  1803               	skipnc
  5250  0B75  2B7F               	goto	l1861
  5251  0B76  3000               	movlw	0
  5252  0B77  00F3               	movwf	?__div_to_l_+3
  5253  0B78  3000               	movlw	0
  5254  0B79  00F2               	movwf	?__div_to_l_+2
  5255  0B7A  3000               	movlw	0
  5256  0B7B  00F1               	movwf	?__div_to_l_+1
  5257  0B7C  3000               	movlw	0
  5258  0B7D  00F0               	movwf	?__div_to_l_
  5259  0B7E  0008               	return
  5260  0B7F                     l1861:	
  5261  0B7F  3001               	movlw	1
  5262  0B80                     u2835:	
  5263  0B80  1003               	clrc
  5264  0B81  0CA3               	rrf	__div_to_l_@quot+3,f
  5265  0B82  0CA2               	rrf	__div_to_l_@quot+2,f
  5266  0B83  0CA1               	rrf	__div_to_l_@quot+1,f
  5267  0B84  0CA0               	rrf	__div_to_l_@quot,f
  5268  0B85  3EFF               	addlw	-1
  5269  0B86  1D03               	skipz
  5270  0B87  2B80               	goto	u2835
  5271  0B88  3001               	movlw	1
  5272  0B89  00F6               	movwf	??__div_to_l_
  5273  0B8A  0876               	movf	??__div_to_l_,w
  5274  0B8B  07A5               	addwf	__div_to_l_@exp1,f
  5275  0B8C  1903               	btfsc	3,2
  5276  0B8D  2BAA               	goto	l1871
  5277  0B8E  2B7F               	goto	l1861
  5278  0B8F                     l1863:	
  5279  0B8F  3020               	movlw	32
  5280  0B90  0225               	subwf	__div_to_l_@exp1,w
  5281  0B91  1C03               	skipc
  5282  0B92  2BA7               	goto	l387
  5283  0B93  3000               	movlw	0
  5284  0B94  00F3               	movwf	?__div_to_l_+3
  5285  0B95  3000               	movlw	0
  5286  0B96  00F2               	movwf	?__div_to_l_+2
  5287  0B97  3000               	movlw	0
  5288  0B98  00F1               	movwf	?__div_to_l_+1
  5289  0B99  3000               	movlw	0
  5290  0B9A  00F0               	movwf	?__div_to_l_
  5291  0B9B  0008               	return
  5292  0B9C                     l1869:	
  5293  0B9C  3001               	movlw	1
  5294  0B9D  00F6               	movwf	??__div_to_l_
  5295  0B9E                     u2865:	
  5296  0B9E  1003               	clrc
  5297  0B9F  0DA0               	rlf	__div_to_l_@quot,f
  5298  0BA0  0DA1               	rlf	__div_to_l_@quot+1,f
  5299  0BA1  0DA2               	rlf	__div_to_l_@quot+2,f
  5300  0BA2  0DA3               	rlf	__div_to_l_@quot+3,f
  5301  0BA3  0BF6               	decfsz	??__div_to_l_,f
  5302  0BA4  2B9E               	goto	u2865
  5303  0BA5  3001               	movlw	1
  5304  0BA6  02A5               	subwf	__div_to_l_@exp1,f
  5305  0BA7                     l387:	
  5306  0BA7  0825               	movf	__div_to_l_@exp1,w
  5307  0BA8  1D03               	btfss	3,2
  5308  0BA9  2B9C               	goto	l1869
  5309  0BAA                     l1871:	
  5310  0BAA  0823               	movf	__div_to_l_@quot+3,w
  5311  0BAB  00F3               	movwf	?__div_to_l_+3
  5312  0BAC  0822               	movf	__div_to_l_@quot+2,w
  5313  0BAD  00F2               	movwf	?__div_to_l_+2
  5314  0BAE  0821               	movf	__div_to_l_@quot+1,w
  5315  0BAF  00F1               	movwf	?__div_to_l_+1
  5316  0BB0  0820               	movf	__div_to_l_@quot,w
  5317  0BB1  00F0               	movwf	?__div_to_l_
  5318  0BB2  0008               	return
  5319  0BB3                     __end_of__div_to_l_:	
  5320                           
  5321                           	psect	text11
  5322  0005                     __ptext11:	
  5323 ;; *************** function ___wmul *****************
  5324 ;; Defined at:
  5325 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;  multiplier      2    0[COMMON] unsigned int 
  5328 ;;  multiplicand    2    2[COMMON] unsigned int 
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;  product         2    4[COMMON] unsigned int 
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  2    0[COMMON] unsigned int 
  5333 ;; Registers used:
  5334 ;;		wreg, status,2, status,0
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5340 ;;      Params:         4       0       0       0       0
  5341 ;;      Locals:         2       0       0       0       0
  5342 ;;      Temps:          0       0       0       0       0
  5343 ;;      Totals:         6       0       0       0       0
  5344 ;;Total ram usage:        6 bytes
  5345 ;; Hardware stack levels used:    1
  5346 ;; This function calls:
  5347 ;;		Nothing
  5348 ;; This function is called by:
  5349 ;;		_printf
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           
  5354                           ;psect for function ___wmul
  5355  0005                     ___wmul:	
  5356                           
  5357                           ;incstack = 0
  5358                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5359  0005  01F4               	clrf	___wmul@product
  5360  0006  01F5               	clrf	___wmul@product+1
  5361  0007                     l1877:	
  5362  0007  1C70               	btfss	___wmul@multiplier,0
  5363  0008  280F               	goto	l221
  5364  0009  0872               	movf	___wmul@multiplicand,w
  5365  000A  07F4               	addwf	___wmul@product,f
  5366  000B  1803               	skipnc
  5367  000C  0AF5               	incf	___wmul@product+1,f
  5368  000D  0873               	movf	___wmul@multiplicand+1,w
  5369  000E  07F5               	addwf	___wmul@product+1,f
  5370  000F                     l221:	
  5371  000F  3001               	movlw	1
  5372  0010                     u2895:	
  5373  0010  1003               	clrc
  5374  0011  0DF2               	rlf	___wmul@multiplicand,f
  5375  0012  0DF3               	rlf	___wmul@multiplicand+1,f
  5376  0013  3EFF               	addlw	-1
  5377  0014  1D03               	skipz
  5378  0015  2810               	goto	u2895
  5379  0016  3001               	movlw	1
  5380  0017                     u2905:	
  5381  0017  1003               	clrc
  5382  0018  0CF1               	rrf	___wmul@multiplier+1,f
  5383  0019  0CF0               	rrf	___wmul@multiplier,f
  5384  001A  3EFF               	addlw	-1
  5385  001B  1D03               	skipz
  5386  001C  2817               	goto	u2905
  5387  001D  0870               	movf	___wmul@multiplier,w
  5388  001E  0471               	iorwf	___wmul@multiplier+1,w
  5389  001F  1D03               	btfss	3,2
  5390  0020  2807               	goto	l1877
  5391  0021  0875               	movf	___wmul@product+1,w
  5392  0022  00F1               	movwf	?___wmul+1
  5393  0023  0874               	movf	___wmul@product,w
  5394  0024  00F0               	movwf	?___wmul
  5395  0025  0008               	return
  5396  0026                     __end_of___wmul:	
  5397                           
  5398                           	psect	text12
  5399  080E                     __ptext12:	
  5400 ;; *************** function ___lltoft *****************
  5401 ;; Defined at:
  5402 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lltoft.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;  c               4    8[COMMON] unsigned long 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  exp             1   13[COMMON] unsigned char 
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  3    8[COMMON] float 
  5409 ;; Registers used:
  5410 ;;		wreg, status,2, status,0, pclath, cstack
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5416 ;;      Params:         4       0       0       0       0
  5417 ;;      Locals:         1       0       0       0       0
  5418 ;;      Temps:          1       0       0       0       0
  5419 ;;      Totals:         6       0       0       0       0
  5420 ;;Total ram usage:        6 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; Hardware stack levels required when called:    1
  5423 ;; This function calls:
  5424 ;;		___ftpack
  5425 ;; This function is called by:
  5426 ;;		_printf
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           
  5431                           ;psect for function ___lltoft
  5432  080E                     ___lltoft:	
  5433                           
  5434                           ;incstack = 0
  5435                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5436  080E  308E               	movlw	142
  5437  080F  00FC               	movwf	??___lltoft
  5438  0810  087C               	movf	??___lltoft,w
  5439  0811  00FD               	movwf	___lltoft@exp
  5440  0812                     l2015:	
  5441  0812  30FF               	movlw	255
  5442  0813  057B               	andwf	___lltoft@c+3,w
  5443  0814  1903               	btfsc	3,2
  5444  0815  2824               	goto	l2017
  5445  0816  3001               	movlw	1
  5446  0817                     u3225:	
  5447  0817  1003               	clrc
  5448  0818  0CFB               	rrf	___lltoft@c+3,f
  5449  0819  0CFA               	rrf	___lltoft@c+2,f
  5450  081A  0CF9               	rrf	___lltoft@c+1,f
  5451  081B  0CF8               	rrf	___lltoft@c,f
  5452  081C  3EFF               	addlw	-1
  5453  081D  1D03               	skipz
  5454  081E  2817               	goto	u3225
  5455  081F  3001               	movlw	1
  5456  0820  00FC               	movwf	??___lltoft
  5457  0821  087C               	movf	??___lltoft,w
  5458  0822  07FD               	addwf	___lltoft@exp,f
  5459  0823  2812               	goto	l2015
  5460  0824                     l2017:	
  5461  0824  0878               	movf	___lltoft@c,w
  5462  0825  00F0               	movwf	___ftpack@arg
  5463  0826  0879               	movf	___lltoft@c+1,w
  5464  0827  00F1               	movwf	___ftpack@arg+1
  5465  0828  087A               	movf	___lltoft@c+2,w
  5466  0829  00F2               	movwf	___ftpack@arg+2
  5467  082A  087D               	movf	___lltoft@exp,w
  5468  082B  00FC               	movwf	??___lltoft
  5469  082C  087C               	movf	??___lltoft,w
  5470  082D  00F3               	movwf	___ftpack@exp
  5471  082E  01F4               	clrf	___ftpack@sign
  5472  082F  120A  158A  2039   	fcall	___ftpack
  5473  0832  0870               	movf	?___ftpack,w
  5474  0833  00F8               	movwf	?___lltoft
  5475  0834  0871               	movf	?___ftpack+1,w
  5476  0835  00F9               	movwf	?___lltoft+1
  5477  0836  0872               	movf	?___ftpack+2,w
  5478  0837  00FA               	movwf	?___lltoft+2
  5479  0838  0008               	return
  5480  0839                     __end_of___lltoft:	
  5481                           
  5482                           	psect	text13
  5483  1525                     __ptext13:	
  5484 ;; *************** function ___llmod *****************
  5485 ;; Defined at:
  5486 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\llmod.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  divisor         4    0[COMMON] unsigned long 
  5489 ;;  dividend        4    4[COMMON] unsigned long 
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;  counter         1    9[COMMON] unsigned char 
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  4    0[COMMON] unsigned long 
  5494 ;; Registers used:
  5495 ;;		wreg, status,2, status,0
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5501 ;;      Params:         8       0       0       0       0
  5502 ;;      Locals:         1       0       0       0       0
  5503 ;;      Temps:          1       0       0       0       0
  5504 ;;      Totals:        10       0       0       0       0
  5505 ;;Total ram usage:       10 bytes
  5506 ;; Hardware stack levels used:    1
  5507 ;; This function calls:
  5508 ;;		Nothing
  5509 ;; This function is called by:
  5510 ;;		_printf
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           
  5515                           ;psect for function ___llmod
  5516  1525                     ___llmod:	
  5517                           
  5518                           ;incstack = 0
  5519                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5520  1525  0873               	movf	___llmod@divisor+3,w
  5521  1526  0472               	iorwf	___llmod@divisor+2,w
  5522  1527  0471               	iorwf	___llmod@divisor+1,w
  5523  1528  0470               	iorwf	___llmod@divisor,w
  5524  1529  1903               	skipnz
  5525  152A  2D68               	goto	l2007
  5526  152B  01F9               	clrf	___llmod@counter
  5527  152C  0AF9               	incf	___llmod@counter,f
  5528  152D                     l1997:	
  5529  152D  1BF3               	btfsc	___llmod@divisor+3,7
  5530  152E  2D3D               	goto	l1999
  5531  152F  3001               	movlw	1
  5532  1530  00F8               	movwf	??___llmod
  5533  1531                     u3175:	
  5534  1531  1003               	clrc
  5535  1532  0DF0               	rlf	___llmod@divisor,f
  5536  1533  0DF1               	rlf	___llmod@divisor+1,f
  5537  1534  0DF2               	rlf	___llmod@divisor+2,f
  5538  1535  0DF3               	rlf	___llmod@divisor+3,f
  5539  1536  0BF8               	decfsz	??___llmod,f
  5540  1537  2D31               	goto	u3175
  5541  1538  3001               	movlw	1
  5542  1539  00F8               	movwf	??___llmod
  5543  153A  0878               	movf	??___llmod,w
  5544  153B  07F9               	addwf	___llmod@counter,f
  5545  153C  2D2D               	goto	l1997
  5546  153D                     l1999:	
  5547  153D  0873               	movf	___llmod@divisor+3,w
  5548  153E  0277               	subwf	___llmod@dividend+3,w
  5549  153F  1D03               	skipz
  5550  1540  2D4B               	goto	u3195
  5551  1541  0872               	movf	___llmod@divisor+2,w
  5552  1542  0276               	subwf	___llmod@dividend+2,w
  5553  1543  1D03               	skipz
  5554  1544  2D4B               	goto	u3195
  5555  1545  0871               	movf	___llmod@divisor+1,w
  5556  1546  0275               	subwf	___llmod@dividend+1,w
  5557  1547  1D03               	skipz
  5558  1548  2D4B               	goto	u3195
  5559  1549  0870               	movf	___llmod@divisor,w
  5560  154A  0274               	subwf	___llmod@dividend,w
  5561  154B                     u3195:	
  5562  154B  1C03               	skipc
  5563  154C  2D5B               	goto	l2003
  5564  154D  0870               	movf	___llmod@divisor,w
  5565  154E  02F4               	subwf	___llmod@dividend,f
  5566  154F  0871               	movf	___llmod@divisor+1,w
  5567  1550  1C03               	skipc
  5568  1551  0F71               	incfsz	___llmod@divisor+1,w
  5569  1552  02F5               	subwf	___llmod@dividend+1,f
  5570  1553  0872               	movf	___llmod@divisor+2,w
  5571  1554  1C03               	skipc
  5572  1555  0F72               	incfsz	___llmod@divisor+2,w
  5573  1556  02F6               	subwf	___llmod@dividend+2,f
  5574  1557  0873               	movf	___llmod@divisor+3,w
  5575  1558  1C03               	skipc
  5576  1559  0F73               	incfsz	___llmod@divisor+3,w
  5577  155A  02F7               	subwf	___llmod@dividend+3,f
  5578  155B                     l2003:	
  5579  155B  3001               	movlw	1
  5580  155C                     u3205:	
  5581  155C  1003               	clrc
  5582  155D  0CF3               	rrf	___llmod@divisor+3,f
  5583  155E  0CF2               	rrf	___llmod@divisor+2,f
  5584  155F  0CF1               	rrf	___llmod@divisor+1,f
  5585  1560  0CF0               	rrf	___llmod@divisor,f
  5586  1561  3EFF               	addlw	-1
  5587  1562  1D03               	skipz
  5588  1563  2D5C               	goto	u3205
  5589  1564  3001               	movlw	1
  5590  1565  02F9               	subwf	___llmod@counter,f
  5591  1566  1D03               	btfss	3,2
  5592  1567  2D3D               	goto	l1999
  5593  1568                     l2007:	
  5594  1568  0877               	movf	___llmod@dividend+3,w
  5595  1569  00F3               	movwf	?___llmod+3
  5596  156A  0876               	movf	___llmod@dividend+2,w
  5597  156B  00F2               	movwf	?___llmod+2
  5598  156C  0875               	movf	___llmod@dividend+1,w
  5599  156D  00F1               	movwf	?___llmod+1
  5600  156E  0874               	movf	___llmod@dividend,w
  5601  156F  00F0               	movwf	?___llmod
  5602  1570  0008               	return
  5603  1571                     __end_of___llmod:	
  5604                           
  5605                           	psect	text14
  5606  1629                     __ptext14:	
  5607 ;; *************** function ___lldiv *****************
  5608 ;; Defined at:
  5609 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lldiv.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  divisor         4    0[COMMON] unsigned long 
  5612 ;;  dividend        4    4[COMMON] unsigned long 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  quotient        4    9[COMMON] unsigned long 
  5615 ;;  counter         1   13[COMMON] unsigned char 
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  4    0[COMMON] unsigned long 
  5618 ;; Registers used:
  5619 ;;		wreg, status,2, status,0
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5625 ;;      Params:         8       0       0       0       0
  5626 ;;      Locals:         5       0       0       0       0
  5627 ;;      Temps:          1       0       0       0       0
  5628 ;;      Totals:        14       0       0       0       0
  5629 ;;Total ram usage:       14 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; This function calls:
  5632 ;;		Nothing
  5633 ;; This function is called by:
  5634 ;;		_printf
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           
  5639                           ;psect for function ___lldiv
  5640  1629                     ___lldiv:	
  5641                           
  5642                           ;incstack = 0
  5643                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5644  1629  3000               	movlw	0
  5645  162A  00FC               	movwf	___lldiv@quotient+3
  5646  162B  3000               	movlw	0
  5647  162C  00FB               	movwf	___lldiv@quotient+2
  5648  162D  3000               	movlw	0
  5649  162E  00FA               	movwf	___lldiv@quotient+1
  5650  162F  3000               	movlw	0
  5651  1630  00F9               	movwf	___lldiv@quotient
  5652  1631  0873               	movf	___lldiv@divisor+3,w
  5653  1632  0472               	iorwf	___lldiv@divisor+2,w
  5654  1633  0471               	iorwf	___lldiv@divisor+1,w
  5655  1634  0470               	iorwf	___lldiv@divisor,w
  5656  1635  1903               	skipnz
  5657  1636  2E7E               	goto	l1987
  5658  1637  01FD               	clrf	___lldiv@counter
  5659  1638  0AFD               	incf	___lldiv@counter,f
  5660  1639                     l1973:	
  5661  1639  1BF3               	btfsc	___lldiv@divisor+3,7
  5662  163A  2E49               	goto	l1975
  5663  163B  3001               	movlw	1
  5664  163C  00F8               	movwf	??___lldiv
  5665  163D                     u3105:	
  5666  163D  1003               	clrc
  5667  163E  0DF0               	rlf	___lldiv@divisor,f
  5668  163F  0DF1               	rlf	___lldiv@divisor+1,f
  5669  1640  0DF2               	rlf	___lldiv@divisor+2,f
  5670  1641  0DF3               	rlf	___lldiv@divisor+3,f
  5671  1642  0BF8               	decfsz	??___lldiv,f
  5672  1643  2E3D               	goto	u3105
  5673  1644  3001               	movlw	1
  5674  1645  00F8               	movwf	??___lldiv
  5675  1646  0878               	movf	??___lldiv,w
  5676  1647  07FD               	addwf	___lldiv@counter,f
  5677  1648  2E39               	goto	l1973
  5678  1649                     l1975:	
  5679  1649  3001               	movlw	1
  5680  164A  00F8               	movwf	??___lldiv
  5681  164B                     u3125:	
  5682  164B  1003               	clrc
  5683  164C  0DF9               	rlf	___lldiv@quotient,f
  5684  164D  0DFA               	rlf	___lldiv@quotient+1,f
  5685  164E  0DFB               	rlf	___lldiv@quotient+2,f
  5686  164F  0DFC               	rlf	___lldiv@quotient+3,f
  5687  1650  0BF8               	decfsz	??___lldiv,f
  5688  1651  2E4B               	goto	u3125
  5689  1652  0873               	movf	___lldiv@divisor+3,w
  5690  1653  0277               	subwf	___lldiv@dividend+3,w
  5691  1654  1D03               	skipz
  5692  1655  2E60               	goto	u3135
  5693  1656  0872               	movf	___lldiv@divisor+2,w
  5694  1657  0276               	subwf	___lldiv@dividend+2,w
  5695  1658  1D03               	skipz
  5696  1659  2E60               	goto	u3135
  5697  165A  0871               	movf	___lldiv@divisor+1,w
  5698  165B  0275               	subwf	___lldiv@dividend+1,w
  5699  165C  1D03               	skipz
  5700  165D  2E60               	goto	u3135
  5701  165E  0870               	movf	___lldiv@divisor,w
  5702  165F  0274               	subwf	___lldiv@dividend,w
  5703  1660                     u3135:	
  5704  1660  1C03               	skipc
  5705  1661  2E71               	goto	l1983
  5706  1662  0870               	movf	___lldiv@divisor,w
  5707  1663  02F4               	subwf	___lldiv@dividend,f
  5708  1664  0871               	movf	___lldiv@divisor+1,w
  5709  1665  1C03               	skipc
  5710  1666  0F71               	incfsz	___lldiv@divisor+1,w
  5711  1667  02F5               	subwf	___lldiv@dividend+1,f
  5712  1668  0872               	movf	___lldiv@divisor+2,w
  5713  1669  1C03               	skipc
  5714  166A  0F72               	incfsz	___lldiv@divisor+2,w
  5715  166B  02F6               	subwf	___lldiv@dividend+2,f
  5716  166C  0873               	movf	___lldiv@divisor+3,w
  5717  166D  1C03               	skipc
  5718  166E  0F73               	incfsz	___lldiv@divisor+3,w
  5719  166F  02F7               	subwf	___lldiv@dividend+3,f
  5720  1670  1479               	bsf	___lldiv@quotient,0
  5721  1671                     l1983:	
  5722  1671  3001               	movlw	1
  5723  1672                     u3145:	
  5724  1672  1003               	clrc
  5725  1673  0CF3               	rrf	___lldiv@divisor+3,f
  5726  1674  0CF2               	rrf	___lldiv@divisor+2,f
  5727  1675  0CF1               	rrf	___lldiv@divisor+1,f
  5728  1676  0CF0               	rrf	___lldiv@divisor,f
  5729  1677  3EFF               	addlw	-1
  5730  1678  1D03               	skipz
  5731  1679  2E72               	goto	u3145
  5732  167A  3001               	movlw	1
  5733  167B  02FD               	subwf	___lldiv@counter,f
  5734  167C  1D03               	btfss	3,2
  5735  167D  2E49               	goto	l1975
  5736  167E                     l1987:	
  5737  167E  087C               	movf	___lldiv@quotient+3,w
  5738  167F  00F3               	movwf	?___lldiv+3
  5739  1680  087B               	movf	___lldiv@quotient+2,w
  5740  1681  00F2               	movwf	?___lldiv+2
  5741  1682  087A               	movf	___lldiv@quotient+1,w
  5742  1683  00F1               	movwf	?___lldiv+1
  5743  1684  0879               	movf	___lldiv@quotient,w
  5744  1685  00F0               	movwf	?___lldiv
  5745  1686  0008               	return
  5746  1687                     __end_of___lldiv:	
  5747                           
  5748                           	psect	text15
  5749  0026                     __ptext15:	
  5750 ;; *************** function ___fttol *****************
  5751 ;; Defined at:
  5752 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  f1              3   32[BANK0 ] float 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  lval            4   41[BANK0 ] unsigned long 
  5757 ;;  exp1            1   45[BANK0 ] unsigned char 
  5758 ;;  sign1           1   40[BANK0 ] unsigned char 
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  4   32[BANK0 ] long 
  5761 ;; Registers used:
  5762 ;;		wreg, status,2, status,0
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5768 ;;      Params:         0       4       0       0       0
  5769 ;;      Locals:         0       6       0       0       0
  5770 ;;      Temps:          0       4       0       0       0
  5771 ;;      Totals:         0      14       0       0       0
  5772 ;;Total ram usage:       14 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; This function calls:
  5775 ;;		Nothing
  5776 ;; This function is called by:
  5777 ;;		_printf
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           
  5782                           ;psect for function ___fttol
  5783  0026                     ___fttol:	
  5784                           
  5785                           ;incstack = 0
  5786                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5787  0026  1283               	bcf	3,5	;RP0=0, select bank0
  5788  0027  1303               	bcf	3,6	;RP1=0, select bank0
  5789  0028  0840               	movf	___fttol@f1,w
  5790  0029  00C4               	movwf	??___fttol
  5791  002A  0841               	movf	___fttol@f1+1,w
  5792  002B  00C5               	movwf	??___fttol+1
  5793  002C  0842               	movf	___fttol@f1+2,w
  5794  002D  00C6               	movwf	??___fttol+2
  5795  002E  1003               	clrc
  5796  002F  0D45               	rlf	??___fttol+1,w
  5797  0030  0D46               	rlf	??___fttol+2,w
  5798  0031  00C7               	movwf	??___fttol+3
  5799  0032  0847               	movf	??___fttol+3,w
  5800  0033  00CD               	movwf	___fttol@exp1
  5801  0034  084D               	movf	___fttol@exp1,w
  5802  0035  1D03               	btfss	3,2
  5803  0036  2840               	goto	l1931
  5804  0037  3000               	movlw	0
  5805  0038  00C3               	movwf	?___fttol+3
  5806  0039  3000               	movlw	0
  5807  003A  00C2               	movwf	?___fttol+2
  5808  003B  3000               	movlw	0
  5809  003C  00C1               	movwf	?___fttol+1
  5810  003D  3000               	movlw	0
  5811  003E  00C0               	movwf	?___fttol
  5812  003F  0008               	return
  5813  0040                     l1931:	
  5814  0040  0840               	movf	___fttol@f1,w
  5815  0041  00C4               	movwf	??___fttol
  5816  0042  0841               	movf	___fttol@f1+1,w
  5817  0043  00C5               	movwf	??___fttol+1
  5818  0044  0842               	movf	___fttol@f1+2,w
  5819  0045  00C6               	movwf	??___fttol+2
  5820  0046  3017               	movlw	23
  5821  0047                     u3005:	
  5822  0047  1003               	clrc
  5823  0048  0CC6               	rrf	??___fttol+2,f
  5824  0049  0CC5               	rrf	??___fttol+1,f
  5825  004A  0CC4               	rrf	??___fttol,f
  5826  004B  3EFF               	addlw	-1
  5827  004C  1D03               	skipz
  5828  004D  2847               	goto	u3005
  5829  004E  0844               	movf	??___fttol,w
  5830  004F  00C7               	movwf	??___fttol+3
  5831  0050  0847               	movf	??___fttol+3,w
  5832  0051  00C8               	movwf	___fttol@sign1
  5833  0052  17C1               	bsf	___fttol@f1+1,7
  5834  0053  30FF               	movlw	255
  5835  0054  05C0               	andwf	___fttol@f1,f
  5836  0055  30FF               	movlw	255
  5837  0056  05C1               	andwf	___fttol@f1+1,f
  5838  0057  3000               	movlw	0
  5839  0058  05C2               	andwf	___fttol@f1+2,f
  5840  0059  0840               	movf	___fttol@f1,w
  5841  005A  00C9               	movwf	___fttol@lval
  5842  005B  0841               	movf	___fttol@f1+1,w
  5843  005C  00CA               	movwf	___fttol@lval+1
  5844  005D  0842               	movf	___fttol@f1+2,w
  5845  005E  00CB               	movwf	___fttol@lval+2
  5846  005F  01CC               	clrf	___fttol@lval+3
  5847  0060  308E               	movlw	142
  5848  0061  02CD               	subwf	___fttol@exp1,f
  5849  0062  1FCD               	btfss	___fttol@exp1,7
  5850  0063  2882               	goto	l1951
  5851  0064  084D               	movf	___fttol@exp1,w
  5852  0065  3A80               	xorlw	128
  5853  0066  3E8F               	addlw	143
  5854  0067  1803               	skipnc
  5855  0068  2872               	goto	l1949
  5856  0069  3000               	movlw	0
  5857  006A  00C3               	movwf	?___fttol+3
  5858  006B  3000               	movlw	0
  5859  006C  00C2               	movwf	?___fttol+2
  5860  006D  3000               	movlw	0
  5861  006E  00C1               	movwf	?___fttol+1
  5862  006F  3000               	movlw	0
  5863  0070  00C0               	movwf	?___fttol
  5864  0071  0008               	return
  5865  0072                     l1949:	
  5866  0072  3001               	movlw	1
  5867  0073                     u3035:	
  5868  0073  1003               	clrc
  5869  0074  0CCC               	rrf	___fttol@lval+3,f
  5870  0075  0CCB               	rrf	___fttol@lval+2,f
  5871  0076  0CCA               	rrf	___fttol@lval+1,f
  5872  0077  0CC9               	rrf	___fttol@lval,f
  5873  0078  3EFF               	addlw	-1
  5874  0079  1D03               	skipz
  5875  007A  2873               	goto	u3035
  5876  007B  3001               	movlw	1
  5877  007C  00C4               	movwf	??___fttol
  5878  007D  0844               	movf	??___fttol,w
  5879  007E  07CD               	addwf	___fttol@exp1,f
  5880  007F  1903               	btfsc	3,2
  5881  0080  289D               	goto	l1959
  5882  0081  2872               	goto	l1949
  5883  0082                     l1951:	
  5884  0082  3018               	movlw	24
  5885  0083  024D               	subwf	___fttol@exp1,w
  5886  0084  1C03               	skipc
  5887  0085  289A               	goto	l507
  5888  0086  3000               	movlw	0
  5889  0087  00C3               	movwf	?___fttol+3
  5890  0088  3000               	movlw	0
  5891  0089  00C2               	movwf	?___fttol+2
  5892  008A  3000               	movlw	0
  5893  008B  00C1               	movwf	?___fttol+1
  5894  008C  3000               	movlw	0
  5895  008D  00C0               	movwf	?___fttol
  5896  008E  0008               	return
  5897  008F                     l1957:	
  5898  008F  3001               	movlw	1
  5899  0090  00C4               	movwf	??___fttol
  5900  0091                     u3065:	
  5901  0091  1003               	clrc
  5902  0092  0DC9               	rlf	___fttol@lval,f
  5903  0093  0DCA               	rlf	___fttol@lval+1,f
  5904  0094  0DCB               	rlf	___fttol@lval+2,f
  5905  0095  0DCC               	rlf	___fttol@lval+3,f
  5906  0096  0BC4               	decfsz	??___fttol,f
  5907  0097  2891               	goto	u3065
  5908  0098  3001               	movlw	1
  5909  0099  02CD               	subwf	___fttol@exp1,f
  5910  009A                     l507:	
  5911  009A  084D               	movf	___fttol@exp1,w
  5912  009B  1D03               	btfss	3,2
  5913  009C  288F               	goto	l1957
  5914  009D                     l1959:	
  5915  009D  0848               	movf	___fttol@sign1,w
  5916  009E  1903               	btfsc	3,2
  5917  009F  28AB               	goto	l1963
  5918  00A0  09C9               	comf	___fttol@lval,f
  5919  00A1  09CA               	comf	___fttol@lval+1,f
  5920  00A2  09CB               	comf	___fttol@lval+2,f
  5921  00A3  09CC               	comf	___fttol@lval+3,f
  5922  00A4  0AC9               	incf	___fttol@lval,f
  5923  00A5  1903               	skipnz
  5924  00A6  0ACA               	incf	___fttol@lval+1,f
  5925  00A7  1903               	skipnz
  5926  00A8  0ACB               	incf	___fttol@lval+2,f
  5927  00A9  1903               	skipnz
  5928  00AA  0ACC               	incf	___fttol@lval+3,f
  5929  00AB                     l1963:	
  5930  00AB  084C               	movf	___fttol@lval+3,w
  5931  00AC  00C3               	movwf	?___fttol+3
  5932  00AD  084B               	movf	___fttol@lval+2,w
  5933  00AE  00C2               	movwf	?___fttol+2
  5934  00AF  084A               	movf	___fttol@lval+1,w
  5935  00B0  00C1               	movwf	?___fttol+1
  5936  00B1  0849               	movf	___fttol@lval,w
  5937  00B2  00C0               	movwf	?___fttol
  5938  00B3  0008               	return
  5939  00B4                     __end_of___fttol:	
  5940                           
  5941                           	psect	text16
  5942  14B9                     __ptext16:	
  5943 ;; *************** function ___ftsub *****************
  5944 ;; Defined at:
  5945 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftsub.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  f2              3   52[BANK0 ] float 
  5948 ;;  f1              3   55[BANK0 ] float 
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;		None
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  3   52[BANK0 ] float 
  5953 ;; Registers used:
  5954 ;;		wreg, status,2, status,0, pclath, cstack
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5960 ;;      Params:         0       6       0       0       0
  5961 ;;      Locals:         0       0       0       0       0
  5962 ;;      Temps:          0       0       0       0       0
  5963 ;;      Totals:         0       6       0       0       0
  5964 ;;Total ram usage:        6 bytes
  5965 ;; Hardware stack levels used:    1
  5966 ;; Hardware stack levels required when called:    2
  5967 ;; This function calls:
  5968 ;;		___ftadd
  5969 ;; This function is called by:
  5970 ;;		_printf
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           
  5975                           ;psect for function ___ftsub
  5976  14B9                     ___ftsub:	
  5977                           
  5978                           ;incstack = 0
  5979                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5980  14B9  1283               	bcf	3,5	;RP0=0, select bank0
  5981  14BA  1303               	bcf	3,6	;RP1=0, select bank0
  5982  14BB  0856               	movf	___ftsub@f2+2,w
  5983  14BC  0455               	iorwf	___ftsub@f2+1,w
  5984  14BD  0454               	iorwf	___ftsub@f2,w
  5985  14BE  1903               	skipnz
  5986  14BF  2CC2               	goto	l1921
  5987  14C0  3080               	movlw	128
  5988  14C1  06D6               	xorwf	___ftsub@f2+2,f
  5989  14C2                     l1921:	
  5990  14C2  0857               	movf	___ftsub@f1,w
  5991  14C3  00C7               	movwf	___ftadd@f1
  5992  14C4  0858               	movf	___ftsub@f1+1,w
  5993  14C5  00C8               	movwf	___ftadd@f1+1
  5994  14C6  0859               	movf	___ftsub@f1+2,w
  5995  14C7  00C9               	movwf	___ftadd@f1+2
  5996  14C8  0854               	movf	___ftsub@f2,w
  5997  14C9  00CA               	movwf	___ftadd@f2
  5998  14CA  0855               	movf	___ftsub@f2+1,w
  5999  14CB  00CB               	movwf	___ftadd@f2+1
  6000  14CC  0856               	movf	___ftsub@f2+2,w
  6001  14CD  00CC               	movwf	___ftadd@f2+2
  6002  14CE  120A  158A  2178   	fcall	___ftadd
  6003  14D1  1283               	bcf	3,5	;RP0=0, select bank0
  6004  14D2  1303               	bcf	3,6	;RP1=0, select bank0
  6005  14D3  0847               	movf	?___ftadd,w
  6006  14D4  00D4               	movwf	?___ftsub
  6007  14D5  0848               	movf	?___ftadd+1,w
  6008  14D6  00D5               	movwf	?___ftsub+1
  6009  14D7  0849               	movf	?___ftadd+2,w
  6010  14D8  00D6               	movwf	?___ftsub+2
  6011  14D9  0008               	return
  6012  14DA                     __end_of___ftsub:	
  6013                           
  6014                           	psect	text17
  6015  0978                     __ptext17:	
  6016 ;; *************** function ___ftadd *****************
  6017 ;; Defined at:
  6018 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  f1              3   39[BANK0 ] float 
  6021 ;;  f2              3   42[BANK0 ] float 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  exp1            1   51[BANK0 ] unsigned char 
  6024 ;;  exp2            1   50[BANK0 ] unsigned char 
  6025 ;;  sign            1   49[BANK0 ] unsigned char 
  6026 ;; Return value:  Size  Location     Type
  6027 ;;                  3   39[BANK0 ] float 
  6028 ;; Registers used:
  6029 ;;		wreg, status,2, status,0, pclath, cstack
  6030 ;; Tracked objects:
  6031 ;;		On entry : 0/0
  6032 ;;		On exit  : 0/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6035 ;;      Params:         0       6       0       0       0
  6036 ;;      Locals:         0       3       0       0       0
  6037 ;;      Temps:          0       4       0       0       0
  6038 ;;      Totals:         0      13       0       0       0
  6039 ;;Total ram usage:       13 bytes
  6040 ;; Hardware stack levels used:    1
  6041 ;; Hardware stack levels required when called:    1
  6042 ;; This function calls:
  6043 ;;		___ftpack
  6044 ;; This function is called by:
  6045 ;;		_main
  6046 ;;		_printf
  6047 ;;		___ftsub
  6048 ;; This function uses a non-reentrant model
  6049 ;;
  6050                           
  6051                           
  6052                           ;psect for function ___ftadd
  6053  0978                     ___ftadd:	
  6054                           
  6055                           ;incstack = 0
  6056                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6057  0978  1283               	bcf	3,5	;RP0=0, select bank0
  6058  0979  1303               	bcf	3,6	;RP1=0, select bank0
  6059  097A  0847               	movf	___ftadd@f1,w
  6060  097B  00CD               	movwf	??___ftadd
  6061  097C  0848               	movf	___ftadd@f1+1,w
  6062  097D  00CE               	movwf	??___ftadd+1
  6063  097E  0849               	movf	___ftadd@f1+2,w
  6064  097F  00CF               	movwf	??___ftadd+2
  6065  0980  1003               	clrc
  6066  0981  0D4E               	rlf	??___ftadd+1,w
  6067  0982  0D4F               	rlf	??___ftadd+2,w
  6068  0983  00D0               	movwf	??___ftadd+3
  6069  0984  0850               	movf	??___ftadd+3,w
  6070  0985  00D3               	movwf	___ftadd@exp1
  6071  0986  084A               	movf	___ftadd@f2,w
  6072  0987  00CD               	movwf	??___ftadd
  6073  0988  084B               	movf	___ftadd@f2+1,w
  6074  0989  00CE               	movwf	??___ftadd+1
  6075  098A  084C               	movf	___ftadd@f2+2,w
  6076  098B  00CF               	movwf	??___ftadd+2
  6077  098C  1003               	clrc
  6078  098D  0D4E               	rlf	??___ftadd+1,w
  6079  098E  0D4F               	rlf	??___ftadd+2,w
  6080  098F  00D0               	movwf	??___ftadd+3
  6081  0990  0850               	movf	??___ftadd+3,w
  6082  0991  00D2               	movwf	___ftadd@exp2
  6083  0992  0853               	movf	___ftadd@exp1,w
  6084  0993  1903               	btfsc	3,2
  6085  0994  29A1               	goto	l1591
  6086  0995  0852               	movf	___ftadd@exp2,w
  6087  0996  0253               	subwf	___ftadd@exp1,w
  6088  0997  1803               	skipnc
  6089  0998  29A8               	goto	l1595
  6090  0999  0353               	decf	___ftadd@exp1,w
  6091  099A  3AFF               	xorlw	255
  6092  099B  0752               	addwf	___ftadd@exp2,w
  6093  099C  00CD               	movwf	??___ftadd
  6094  099D  3019               	movlw	25
  6095  099E  024D               	subwf	??___ftadd,w
  6096  099F  1C03               	skipc
  6097  09A0  29A8               	goto	l1595
  6098  09A1                     l1591:	
  6099  09A1  084A               	movf	___ftadd@f2,w
  6100  09A2  00C7               	movwf	?___ftadd
  6101  09A3  084B               	movf	___ftadd@f2+1,w
  6102  09A4  00C8               	movwf	?___ftadd+1
  6103  09A5  084C               	movf	___ftadd@f2+2,w
  6104  09A6  00C9               	movwf	?___ftadd+2
  6105  09A7  0008               	return
  6106  09A8                     l1595:	
  6107  09A8  0852               	movf	___ftadd@exp2,w
  6108  09A9  1903               	btfsc	3,2
  6109  09AA  0008               	return
  6110  09AB  0853               	movf	___ftadd@exp1,w
  6111  09AC  0252               	subwf	___ftadd@exp2,w
  6112  09AD  1803               	skipnc
  6113  09AE  29B7               	goto	l1601
  6114  09AF  0352               	decf	___ftadd@exp2,w
  6115  09B0  3AFF               	xorlw	255
  6116  09B1  0753               	addwf	___ftadd@exp1,w
  6117  09B2  00CD               	movwf	??___ftadd
  6118  09B3  3019               	movlw	25
  6119  09B4  024D               	subwf	??___ftadd,w
  6120  09B5  1803               	btfsc	3,0
  6121  09B6  0008               	return
  6122  09B7                     l1601:	
  6123  09B7  3006               	movlw	6
  6124  09B8  00CD               	movwf	??___ftadd
  6125  09B9  084D               	movf	??___ftadd,w
  6126  09BA  00D1               	movwf	___ftadd@sign
  6127  09BB  1BC9               	btfsc	___ftadd@f1+2,7
  6128  09BC  17D1               	bsf	___ftadd@sign,7
  6129  09BD  1BCC               	btfsc	___ftadd@f2+2,7
  6130  09BE  1751               	bsf	___ftadd@sign,6
  6131  09BF  17C8               	bsf	___ftadd@f1+1,7
  6132  09C0  30FF               	movlw	255
  6133  09C1  05C7               	andwf	___ftadd@f1,f
  6134  09C2  30FF               	movlw	255
  6135  09C3  05C8               	andwf	___ftadd@f1+1,f
  6136  09C4  3000               	movlw	0
  6137  09C5  05C9               	andwf	___ftadd@f1+2,f
  6138  09C6  17CB               	bsf	___ftadd@f2+1,7
  6139  09C7  30FF               	movlw	255
  6140  09C8  05CA               	andwf	___ftadd@f2,f
  6141  09C9  30FF               	movlw	255
  6142  09CA  05CB               	andwf	___ftadd@f2+1,f
  6143  09CB  3000               	movlw	0
  6144  09CC  05CC               	andwf	___ftadd@f2+2,f
  6145  09CD  0852               	movf	___ftadd@exp2,w
  6146  09CE  0253               	subwf	___ftadd@exp1,w
  6147  09CF  1803               	skipnc
  6148  09D0  29F7               	goto	l1623
  6149  09D1                     l1613:	
  6150  09D1  3001               	movlw	1
  6151  09D2                     u2265:	
  6152  09D2  1003               	clrc
  6153  09D3  0DCA               	rlf	___ftadd@f2,f
  6154  09D4  0DCB               	rlf	___ftadd@f2+1,f
  6155  09D5  0DCC               	rlf	___ftadd@f2+2,f
  6156  09D6  3EFF               	addlw	-1
  6157  09D7  1D03               	skipz
  6158  09D8  29D2               	goto	u2265
  6159  09D9  3001               	movlw	1
  6160  09DA  02D2               	subwf	___ftadd@exp2,f
  6161  09DB  0852               	movf	___ftadd@exp2,w
  6162  09DC  0653               	xorwf	___ftadd@exp1,w
  6163  09DD  1903               	skipnz
  6164  09DE  29F2               	goto	l1621
  6165  09DF  3001               	movlw	1
  6166  09E0  02D1               	subwf	___ftadd@sign,f
  6167  09E1  0851               	movf	___ftadd@sign,w
  6168  09E2  3907               	andlw	7
  6169  09E3  1903               	btfsc	3,2
  6170  09E4  29F2               	goto	l1621
  6171  09E5  29D1               	goto	l1613
  6172  09E6                     l1619:	
  6173  09E6  3001               	movlw	1
  6174  09E7                     u2295:	
  6175  09E7  1003               	clrc
  6176  09E8  0CC9               	rrf	___ftadd@f1+2,f
  6177  09E9  0CC8               	rrf	___ftadd@f1+1,f
  6178  09EA  0CC7               	rrf	___ftadd@f1,f
  6179  09EB  3EFF               	addlw	-1
  6180  09EC  1D03               	skipz
  6181  09ED  29E7               	goto	u2295
  6182  09EE  3001               	movlw	1
  6183  09EF  00CD               	movwf	??___ftadd
  6184  09F0  084D               	movf	??___ftadd,w
  6185  09F1  07D3               	addwf	___ftadd@exp1,f
  6186  09F2                     l1621:	
  6187  09F2  0853               	movf	___ftadd@exp1,w
  6188  09F3  0652               	xorwf	___ftadd@exp2,w
  6189  09F4  1903               	btfsc	3,2
  6190  09F5  2A20               	goto	l430
  6191  09F6  29E6               	goto	l1619
  6192  09F7                     l1623:	
  6193  09F7  0853               	movf	___ftadd@exp1,w
  6194  09F8  0252               	subwf	___ftadd@exp2,w
  6195  09F9  1803               	skipnc
  6196  09FA  2A20               	goto	l430
  6197  09FB                     l1625:	
  6198  09FB  3001               	movlw	1
  6199  09FC                     u2325:	
  6200  09FC  1003               	clrc
  6201  09FD  0DC7               	rlf	___ftadd@f1,f
  6202  09FE  0DC8               	rlf	___ftadd@f1+1,f
  6203  09FF  0DC9               	rlf	___ftadd@f1+2,f
  6204  0A00  3EFF               	addlw	-1
  6205  0A01  1D03               	skipz
  6206  0A02  29FC               	goto	u2325
  6207  0A03  3001               	movlw	1
  6208  0A04  02D3               	subwf	___ftadd@exp1,f
  6209  0A05  0852               	movf	___ftadd@exp2,w
  6210  0A06  0653               	xorwf	___ftadd@exp1,w
  6211  0A07  1903               	skipnz
  6212  0A08  2A1C               	goto	l1633
  6213  0A09  3001               	movlw	1
  6214  0A0A  02D1               	subwf	___ftadd@sign,f
  6215  0A0B  0851               	movf	___ftadd@sign,w
  6216  0A0C  3907               	andlw	7
  6217  0A0D  1903               	btfsc	3,2
  6218  0A0E  2A1C               	goto	l1633
  6219  0A0F  29FB               	goto	l1625
  6220  0A10                     l1631:	
  6221  0A10  3001               	movlw	1
  6222  0A11                     u2355:	
  6223  0A11  1003               	clrc
  6224  0A12  0CCC               	rrf	___ftadd@f2+2,f
  6225  0A13  0CCB               	rrf	___ftadd@f2+1,f
  6226  0A14  0CCA               	rrf	___ftadd@f2,f
  6227  0A15  3EFF               	addlw	-1
  6228  0A16  1D03               	skipz
  6229  0A17  2A11               	goto	u2355
  6230  0A18  3001               	movlw	1
  6231  0A19  00CD               	movwf	??___ftadd
  6232  0A1A  084D               	movf	??___ftadd,w
  6233  0A1B  07D2               	addwf	___ftadd@exp2,f
  6234  0A1C                     l1633:	
  6235  0A1C  0853               	movf	___ftadd@exp1,w
  6236  0A1D  0652               	xorwf	___ftadd@exp2,w
  6237  0A1E  1D03               	skipz
  6238  0A1F  2A10               	goto	l1631
  6239  0A20                     l430:	
  6240  0A20  1FD1               	btfss	___ftadd@sign,7
  6241  0A21  2A32               	goto	l1637
  6242  0A22  30FF               	movlw	255
  6243  0A23  06C7               	xorwf	___ftadd@f1,f
  6244  0A24  30FF               	movlw	255
  6245  0A25  06C8               	xorwf	___ftadd@f1+1,f
  6246  0A26  30FF               	movlw	255
  6247  0A27  06C9               	xorwf	___ftadd@f1+2,f
  6248  0A28  3001               	movlw	1
  6249  0A29  07C7               	addwf	___ftadd@f1,f
  6250  0A2A  3000               	movlw	0
  6251  0A2B  1803               	skipnc
  6252  0A2C  3001               	movlw	1
  6253  0A2D  07C8               	addwf	___ftadd@f1+1,f
  6254  0A2E  3000               	movlw	0
  6255  0A2F  1803               	skipnc
  6256  0A30  3001               	movlw	1
  6257  0A31  07C9               	addwf	___ftadd@f1+2,f
  6258  0A32                     l1637:	
  6259  0A32  1F51               	btfss	___ftadd@sign,6
  6260  0A33  2A44               	goto	l1641
  6261  0A34  30FF               	movlw	255
  6262  0A35  06CA               	xorwf	___ftadd@f2,f
  6263  0A36  30FF               	movlw	255
  6264  0A37  06CB               	xorwf	___ftadd@f2+1,f
  6265  0A38  30FF               	movlw	255
  6266  0A39  06CC               	xorwf	___ftadd@f2+2,f
  6267  0A3A  3001               	movlw	1
  6268  0A3B  07CA               	addwf	___ftadd@f2,f
  6269  0A3C  3000               	movlw	0
  6270  0A3D  1803               	skipnc
  6271  0A3E  3001               	movlw	1
  6272  0A3F  07CB               	addwf	___ftadd@f2+1,f
  6273  0A40  3000               	movlw	0
  6274  0A41  1803               	skipnc
  6275  0A42  3001               	movlw	1
  6276  0A43  07CC               	addwf	___ftadd@f2+2,f
  6277  0A44                     l1641:	
  6278  0A44  01D1               	clrf	___ftadd@sign
  6279  0A45  0847               	movf	___ftadd@f1,w
  6280  0A46  07CA               	addwf	___ftadd@f2,f
  6281  0A47  0848               	movf	___ftadd@f1+1,w
  6282  0A48  1103               	clrz
  6283  0A49  1803               	skipnc
  6284  0A4A  0A48               	incf	___ftadd@f1+1,w
  6285  0A4B  1D03               	btfss	3,2
  6286  0A4C  07CB               	addwf	___ftadd@f2+1,f
  6287  0A4D  0849               	movf	___ftadd@f1+2,w
  6288  0A4E  1103               	clrz
  6289  0A4F  1803               	skipnc
  6290  0A50  0A49               	incf	___ftadd@f1+2,w
  6291  0A51  1D03               	btfss	3,2
  6292  0A52  07CC               	addwf	___ftadd@f2+2,f
  6293  0A53  1FCC               	btfss	___ftadd@f2+2,7
  6294  0A54  2A67               	goto	l1651
  6295  0A55  30FF               	movlw	255
  6296  0A56  06CA               	xorwf	___ftadd@f2,f
  6297  0A57  30FF               	movlw	255
  6298  0A58  06CB               	xorwf	___ftadd@f2+1,f
  6299  0A59  30FF               	movlw	255
  6300  0A5A  06CC               	xorwf	___ftadd@f2+2,f
  6301  0A5B  3001               	movlw	1
  6302  0A5C  07CA               	addwf	___ftadd@f2,f
  6303  0A5D  3000               	movlw	0
  6304  0A5E  1803               	skipnc
  6305  0A5F  3001               	movlw	1
  6306  0A60  07CB               	addwf	___ftadd@f2+1,f
  6307  0A61  3000               	movlw	0
  6308  0A62  1803               	skipnc
  6309  0A63  3001               	movlw	1
  6310  0A64  07CC               	addwf	___ftadd@f2+2,f
  6311  0A65  01D1               	clrf	___ftadd@sign
  6312  0A66  0AD1               	incf	___ftadd@sign,f
  6313  0A67                     l1651:	
  6314  0A67  084A               	movf	___ftadd@f2,w
  6315  0A68  00F0               	movwf	___ftpack@arg
  6316  0A69  084B               	movf	___ftadd@f2+1,w
  6317  0A6A  00F1               	movwf	___ftpack@arg+1
  6318  0A6B  084C               	movf	___ftadd@f2+2,w
  6319  0A6C  00F2               	movwf	___ftpack@arg+2
  6320  0A6D  0853               	movf	___ftadd@exp1,w
  6321  0A6E  00CD               	movwf	??___ftadd
  6322  0A6F  084D               	movf	??___ftadd,w
  6323  0A70  00F3               	movwf	___ftpack@exp
  6324  0A71  0851               	movf	___ftadd@sign,w
  6325  0A72  00CE               	movwf	??___ftadd+1
  6326  0A73  084E               	movf	??___ftadd+1,w
  6327  0A74  00F4               	movwf	___ftpack@sign
  6328  0A75  120A  158A  2039   	fcall	___ftpack
  6329  0A78  0870               	movf	?___ftpack,w
  6330  0A79  1283               	bcf	3,5	;RP0=0, select bank0
  6331  0A7A  1303               	bcf	3,6	;RP1=0, select bank0
  6332  0A7B  00C7               	movwf	?___ftadd
  6333  0A7C  0871               	movf	?___ftpack+1,w
  6334  0A7D  00C8               	movwf	?___ftadd+1
  6335  0A7E  0872               	movf	?___ftpack+2,w
  6336  0A7F  00C9               	movwf	?___ftadd+2
  6337  0A80  0008               	return
  6338  0A81                     __end_of___ftadd:	
  6339                           
  6340                           	psect	text18
  6341  149E                     __ptext18:	
  6342 ;; *************** function ___ftneg *****************
  6343 ;; Defined at:
  6344 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftneg.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;  f1              3    0[COMMON] float 
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;		None
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  3    0[COMMON] float 
  6351 ;; Registers used:
  6352 ;;		wreg
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6358 ;;      Params:         3       0       0       0       0
  6359 ;;      Locals:         0       0       0       0       0
  6360 ;;      Temps:          0       0       0       0       0
  6361 ;;      Totals:         3       0       0       0       0
  6362 ;;Total ram usage:        3 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; This function calls:
  6365 ;;		Nothing
  6366 ;; This function is called by:
  6367 ;;		_main
  6368 ;;		_printf
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           
  6373                           ;psect for function ___ftneg
  6374  149E                     ___ftneg:	
  6375                           
  6376                           ;incstack = 0
  6377                           ; Regs used in ___ftneg: [wreg]
  6378  149E  0872               	movf	___ftneg@f1+2,w
  6379  149F  0471               	iorwf	___ftneg@f1+1,w
  6380  14A0  0470               	iorwf	___ftneg@f1,w
  6381  14A1  1903               	skipnz
  6382  14A2  0008               	return
  6383  14A3  3080               	movlw	128
  6384  14A4  06F2               	xorwf	___ftneg@f1+2,f
  6385  14A5  0008               	return
  6386  14A6                     __end_of___ftneg:	
  6387                           
  6388                           	psect	text19
  6389  15CC                     __ptext19:	
  6390 ;; *************** function ___ftge *****************
  6391 ;; Defined at:
  6392 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;  ff1             3    0[COMMON] float 
  6395 ;;  ff2             3    3[COMMON] float 
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;		None
  6398 ;; Return value:  Size  Location     Type
  6399 ;;		None               void
  6400 ;; Registers used:
  6401 ;;		wreg, status,2, status,0
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6407 ;;      Params:         6       0       0       0       0
  6408 ;;      Locals:         0       0       0       0       0
  6409 ;;      Temps:          6       0       0       0       0
  6410 ;;      Totals:        12       0       0       0       0
  6411 ;;Total ram usage:       12 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; This function calls:
  6414 ;;		Nothing
  6415 ;; This function is called by:
  6416 ;;		_printf
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420                           
  6421                           ;psect for function ___ftge
  6422  15CC                     ___ftge:	
  6423                           
  6424                           ;incstack = 0
  6425                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6426  15CC  1FF2               	btfss	___ftge@ff1+2,7
  6427  15CD  2DF3               	goto	l1893
  6428  15CE  3000               	movlw	0
  6429  15CF  00F6               	movwf	??___ftge
  6430  15D0  3000               	movlw	0
  6431  15D1  00F7               	movwf	??___ftge+1
  6432  15D2  3080               	movlw	128
  6433  15D3  00F8               	movwf	??___ftge+2
  6434  15D4  0970               	comf	___ftge@ff1,w
  6435  15D5  00F9               	movwf	??___ftge+3
  6436  15D6  0971               	comf	___ftge@ff1+1,w
  6437  15D7  00FA               	movwf	??___ftge+4
  6438  15D8  0972               	comf	___ftge@ff1+2,w
  6439  15D9  00FB               	movwf	??___ftge+5
  6440  15DA  0AF9               	incf	??___ftge+3,f
  6441  15DB  1903               	skipnz
  6442  15DC  0AFA               	incf	??___ftge+4,f
  6443  15DD  1903               	skipnz
  6444  15DE  0AFB               	incf	??___ftge+5,f
  6445  15DF  0879               	movf	??___ftge+3,w
  6446  15E0  07F6               	addwf	??___ftge,f
  6447  15E1  087A               	movf	??___ftge+4,w
  6448  15E2  1803               	skipnc
  6449  15E3  0F7A               	incfsz	??___ftge+4,w
  6450  15E4  2DE6               	goto	u2931
  6451  15E5  2DE7               	goto	u2932
  6452  15E6                     u2931:	
  6453  15E6  07F7               	addwf	??___ftge+1,f
  6454  15E7                     u2932:	
  6455  15E7  087B               	movf	??___ftge+5,w
  6456  15E8  1803               	skipnc
  6457  15E9  0F7B               	incfsz	??___ftge+5,w
  6458  15EA  2DEC               	goto	u2933
  6459  15EB  2DED               	goto	u2934
  6460  15EC                     u2933:	
  6461  15EC  07F8               	addwf	??___ftge+2,f
  6462  15ED                     u2934:	
  6463  15ED  0876               	movf	??___ftge,w
  6464  15EE  00F0               	movwf	___ftge@ff1
  6465  15EF  0877               	movf	??___ftge+1,w
  6466  15F0  00F1               	movwf	___ftge@ff1+1
  6467  15F1  0878               	movf	??___ftge+2,w
  6468  15F2  00F2               	movwf	___ftge@ff1+2
  6469  15F3                     l1893:	
  6470  15F3  1FF5               	btfss	___ftge@ff2+2,7
  6471  15F4  2E1A               	goto	l1897
  6472  15F5  3000               	movlw	0
  6473  15F6  00F6               	movwf	??___ftge
  6474  15F7  3000               	movlw	0
  6475  15F8  00F7               	movwf	??___ftge+1
  6476  15F9  3080               	movlw	128
  6477  15FA  00F8               	movwf	??___ftge+2
  6478  15FB  0973               	comf	___ftge@ff2,w
  6479  15FC  00F9               	movwf	??___ftge+3
  6480  15FD  0974               	comf	___ftge@ff2+1,w
  6481  15FE  00FA               	movwf	??___ftge+4
  6482  15FF  0975               	comf	___ftge@ff2+2,w
  6483  1600  00FB               	movwf	??___ftge+5
  6484  1601  0AF9               	incf	??___ftge+3,f
  6485  1602  1903               	skipnz
  6486  1603  0AFA               	incf	??___ftge+4,f
  6487  1604  1903               	skipnz
  6488  1605  0AFB               	incf	??___ftge+5,f
  6489  1606  0879               	movf	??___ftge+3,w
  6490  1607  07F6               	addwf	??___ftge,f
  6491  1608  087A               	movf	??___ftge+4,w
  6492  1609  1803               	skipnc
  6493  160A  0F7A               	incfsz	??___ftge+4,w
  6494  160B  2E0D               	goto	u2951
  6495  160C  2E0E               	goto	u2952
  6496  160D                     u2951:	
  6497  160D  07F7               	addwf	??___ftge+1,f
  6498  160E                     u2952:	
  6499  160E  087B               	movf	??___ftge+5,w
  6500  160F  1803               	skipnc
  6501  1610  0F7B               	incfsz	??___ftge+5,w
  6502  1611  2E13               	goto	u2953
  6503  1612  2E14               	goto	u2954
  6504  1613                     u2953:	
  6505  1613  07F8               	addwf	??___ftge+2,f
  6506  1614                     u2954:	
  6507  1614  0876               	movf	??___ftge,w
  6508  1615  00F3               	movwf	___ftge@ff2
  6509  1616  0877               	movf	??___ftge+1,w
  6510  1617  00F4               	movwf	___ftge@ff2+1
  6511  1618  0878               	movf	??___ftge+2,w
  6512  1619  00F5               	movwf	___ftge@ff2+2
  6513  161A                     l1897:	
  6514  161A  3080               	movlw	128
  6515  161B  06F2               	xorwf	___ftge@ff1+2,f
  6516  161C  3080               	movlw	128
  6517  161D  06F5               	xorwf	___ftge@ff2+2,f
  6518  161E  0875               	movf	___ftge@ff2+2,w
  6519  161F  0272               	subwf	___ftge@ff1+2,w
  6520  1620  1D03               	skipz
  6521  1621  0008               	return
  6522  1622  0874               	movf	___ftge@ff2+1,w
  6523  1623  0271               	subwf	___ftge@ff1+1,w
  6524  1624  1D03               	skipz
  6525  1625  0008               	return
  6526  1626  0873               	movf	___ftge@ff2,w
  6527  1627  0270               	subwf	___ftge@ff1,w
  6528  1628  0008               	return
  6529  1629                     __end_of___ftge:	
  6530                           
  6531                           	psect	text20
  6532  1497                     __ptext20:	
  6533 ;; *************** function _iniciar_uart *****************
  6534 ;; Defined at:
  6535 ;;		line 9 in file "config.h"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;		None
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;		None
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  1    wreg      void 
  6542 ;; Registers used:
  6543 ;;		None
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6549 ;;      Params:         0       0       0       0       0
  6550 ;;      Locals:         0       0       0       0       0
  6551 ;;      Temps:          0       0       0       0       0
  6552 ;;      Totals:         0       0       0       0       0
  6553 ;;Total ram usage:        0 bytes
  6554 ;; Hardware stack levels used:    1
  6555 ;; This function calls:
  6556 ;;		Nothing
  6557 ;; This function is called by:
  6558 ;;		_main
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           
  6563                           ;psect for function _iniciar_uart
  6564  1497                     _iniciar_uart:	
  6565                           
  6566                           ;config.h: 10: TXSTAbits.TXEN = 1;
  6567                           
  6568                           ;incstack = 0
  6569                           ; Regs used in _iniciar_uart: []
  6570  1497  1683               	bsf	3,5	;RP0=1, select bank1
  6571  1498  1303               	bcf	3,6	;RP1=0, select bank1
  6572  1499  1698               	bsf	24,5	;volatile
  6573                           
  6574                           ;config.h: 11: RCSTAbits.SPEN = 1;
  6575  149A  1283               	bcf	3,5	;RP0=0, select bank0
  6576  149B  1303               	bcf	3,6	;RP1=0, select bank0
  6577  149C  1798               	bsf	24,7	;volatile
  6578  149D  0008               	return
  6579  149E                     __end_of_iniciar_uart:	
  6580                           
  6581                           	psect	text21
  6582  1687                     __ptext21:	
  6583 ;; *************** function ___ftdiv *****************
  6584 ;; Defined at:
  6585 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;  f2              3    8[COMMON] float 
  6588 ;;  f1              3   11[COMMON] float 
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;  f3              3    5[BANK0 ] float 
  6591 ;;  sign            1    9[BANK0 ] unsigned char 
  6592 ;;  exp             1    8[BANK0 ] unsigned char 
  6593 ;;  cntr            1    4[BANK0 ] unsigned char 
  6594 ;; Return value:  Size  Location     Type
  6595 ;;                  3    8[COMMON] float 
  6596 ;; Registers used:
  6597 ;;		wreg, status,2, status,0, pclath, cstack
  6598 ;; Tracked objects:
  6599 ;;		On entry : 0/0
  6600 ;;		On exit  : 0/0
  6601 ;;		Unchanged: 0/0
  6602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6603 ;;      Params:         6       0       0       0       0
  6604 ;;      Locals:         0       6       0       0       0
  6605 ;;      Temps:          0       4       0       0       0
  6606 ;;      Totals:         6      10       0       0       0
  6607 ;;Total ram usage:       16 bytes
  6608 ;; Hardware stack levels used:    1
  6609 ;; Hardware stack levels required when called:    1
  6610 ;; This function calls:
  6611 ;;		___ftpack
  6612 ;; This function is called by:
  6613 ;;		_main
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           
  6618                           ;psect for function ___ftdiv
  6619  1687                     ___ftdiv:	
  6620                           
  6621                           ;incstack = 0
  6622                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6623  1687  087B               	movf	___ftdiv@f1,w
  6624  1688  1283               	bcf	3,5	;RP0=0, select bank0
  6625  1689  1303               	bcf	3,6	;RP1=0, select bank0
  6626  168A  00A0               	movwf	??___ftdiv
  6627  168B  087C               	movf	___ftdiv@f1+1,w
  6628  168C  00A1               	movwf	??___ftdiv+1
  6629  168D  087D               	movf	___ftdiv@f1+2,w
  6630  168E  00A2               	movwf	??___ftdiv+2
  6631  168F  1003               	clrc
  6632  1690  0D21               	rlf	??___ftdiv+1,w
  6633  1691  0D22               	rlf	??___ftdiv+2,w
  6634  1692  00A3               	movwf	??___ftdiv+3
  6635  1693  0823               	movf	??___ftdiv+3,w
  6636  1694  00A8               	movwf	___ftdiv@exp
  6637  1695  0828               	movf	___ftdiv@exp,w
  6638  1696  1D03               	btfss	3,2
  6639  1697  2E9F               	goto	l2177
  6640  1698  3000               	movlw	0
  6641  1699  00F8               	movwf	?___ftdiv
  6642  169A  3000               	movlw	0
  6643  169B  00F9               	movwf	?___ftdiv+1
  6644  169C  3000               	movlw	0
  6645  169D  00FA               	movwf	?___ftdiv+2
  6646  169E  0008               	return
  6647  169F                     l2177:	
  6648  169F  0878               	movf	___ftdiv@f2,w
  6649  16A0  00A0               	movwf	??___ftdiv
  6650  16A1  0879               	movf	___ftdiv@f2+1,w
  6651  16A2  00A1               	movwf	??___ftdiv+1
  6652  16A3  087A               	movf	___ftdiv@f2+2,w
  6653  16A4  00A2               	movwf	??___ftdiv+2
  6654  16A5  1003               	clrc
  6655  16A6  0D21               	rlf	??___ftdiv+1,w
  6656  16A7  0D22               	rlf	??___ftdiv+2,w
  6657  16A8  00A3               	movwf	??___ftdiv+3
  6658  16A9  0823               	movf	??___ftdiv+3,w
  6659  16AA  00A9               	movwf	___ftdiv@sign
  6660  16AB  0829               	movf	___ftdiv@sign,w
  6661  16AC  1D03               	btfss	3,2
  6662  16AD  2EB5               	goto	l2183
  6663  16AE  3000               	movlw	0
  6664  16AF  00F8               	movwf	?___ftdiv
  6665  16B0  3000               	movlw	0
  6666  16B1  00F9               	movwf	?___ftdiv+1
  6667  16B2  3000               	movlw	0
  6668  16B3  00FA               	movwf	?___ftdiv+2
  6669  16B4  0008               	return
  6670  16B5                     l2183:	
  6671  16B5  3000               	movlw	0
  6672  16B6  00A5               	movwf	___ftdiv@f3
  6673  16B7  3000               	movlw	0
  6674  16B8  00A6               	movwf	___ftdiv@f3+1
  6675  16B9  3000               	movlw	0
  6676  16BA  00A7               	movwf	___ftdiv@f3+2
  6677  16BB  3089               	movlw	137
  6678  16BC  0729               	addwf	___ftdiv@sign,w
  6679  16BD  00A0               	movwf	??___ftdiv
  6680  16BE  0820               	movf	??___ftdiv,w
  6681  16BF  02A8               	subwf	___ftdiv@exp,f
  6682  16C0  087B               	movf	___ftdiv@f1,w
  6683  16C1  00A0               	movwf	??___ftdiv
  6684  16C2  087C               	movf	___ftdiv@f1+1,w
  6685  16C3  00A1               	movwf	??___ftdiv+1
  6686  16C4  087D               	movf	___ftdiv@f1+2,w
  6687  16C5  00A2               	movwf	??___ftdiv+2
  6688  16C6  3010               	movlw	16
  6689  16C7                     u3565:	
  6690  16C7  1003               	clrc
  6691  16C8  0CA2               	rrf	??___ftdiv+2,f
  6692  16C9  0CA1               	rrf	??___ftdiv+1,f
  6693  16CA  0CA0               	rrf	??___ftdiv,f
  6694  16CB  3EFF               	addlw	-1
  6695  16CC  1D03               	skipz
  6696  16CD  2EC7               	goto	u3565
  6697  16CE  0820               	movf	??___ftdiv,w
  6698  16CF  00A3               	movwf	??___ftdiv+3
  6699  16D0  0823               	movf	??___ftdiv+3,w
  6700  16D1  00A9               	movwf	___ftdiv@sign
  6701  16D2  0878               	movf	___ftdiv@f2,w
  6702  16D3  00A0               	movwf	??___ftdiv
  6703  16D4  0879               	movf	___ftdiv@f2+1,w
  6704  16D5  00A1               	movwf	??___ftdiv+1
  6705  16D6  087A               	movf	___ftdiv@f2+2,w
  6706  16D7  00A2               	movwf	??___ftdiv+2
  6707  16D8  3010               	movlw	16
  6708  16D9                     u3575:	
  6709  16D9  1003               	clrc
  6710  16DA  0CA2               	rrf	??___ftdiv+2,f
  6711  16DB  0CA1               	rrf	??___ftdiv+1,f
  6712  16DC  0CA0               	rrf	??___ftdiv,f
  6713  16DD  3EFF               	addlw	-1
  6714  16DE  1D03               	skipz
  6715  16DF  2ED9               	goto	u3575
  6716  16E0  0820               	movf	??___ftdiv,w
  6717  16E1  00A3               	movwf	??___ftdiv+3
  6718  16E2  0823               	movf	??___ftdiv+3,w
  6719  16E3  06A9               	xorwf	___ftdiv@sign,f
  6720  16E4  3080               	movlw	128
  6721  16E5  00A0               	movwf	??___ftdiv
  6722  16E6  0820               	movf	??___ftdiv,w
  6723  16E7  05A9               	andwf	___ftdiv@sign,f
  6724  16E8  17FC               	bsf	___ftdiv@f1+1,7
  6725  16E9  30FF               	movlw	255
  6726  16EA  05FB               	andwf	___ftdiv@f1,f
  6727  16EB  30FF               	movlw	255
  6728  16EC  05FC               	andwf	___ftdiv@f1+1,f
  6729  16ED  3000               	movlw	0
  6730  16EE  05FD               	andwf	___ftdiv@f1+2,f
  6731  16EF  17F9               	bsf	___ftdiv@f2+1,7
  6732  16F0  30FF               	movlw	255
  6733  16F1  05F8               	andwf	___ftdiv@f2,f
  6734  16F2  30FF               	movlw	255
  6735  16F3  05F9               	andwf	___ftdiv@f2+1,f
  6736  16F4  3000               	movlw	0
  6737  16F5  05FA               	andwf	___ftdiv@f2+2,f
  6738  16F6  3018               	movlw	24
  6739  16F7  00A0               	movwf	??___ftdiv
  6740  16F8  0820               	movf	??___ftdiv,w
  6741  16F9  00A4               	movwf	___ftdiv@cntr
  6742  16FA                     l2197:	
  6743  16FA  3001               	movlw	1
  6744  16FB                     u3585:	
  6745  16FB  1003               	clrc
  6746  16FC  0DA5               	rlf	___ftdiv@f3,f
  6747  16FD  0DA6               	rlf	___ftdiv@f3+1,f
  6748  16FE  0DA7               	rlf	___ftdiv@f3+2,f
  6749  16FF  3EFF               	addlw	-1
  6750  1700  1D03               	skipz
  6751  1701  2EFB               	goto	u3585
  6752  1702  087A               	movf	___ftdiv@f2+2,w
  6753  1703  027D               	subwf	___ftdiv@f1+2,w
  6754  1704  1D03               	skipz
  6755  1705  2F0C               	goto	u3595
  6756  1706  0879               	movf	___ftdiv@f2+1,w
  6757  1707  027C               	subwf	___ftdiv@f1+1,w
  6758  1708  1D03               	skipz
  6759  1709  2F0C               	goto	u3595
  6760  170A  0878               	movf	___ftdiv@f2,w
  6761  170B  027B               	subwf	___ftdiv@f1,w
  6762  170C                     u3595:	
  6763  170C  1C03               	skipc
  6764  170D  2F19               	goto	l2205
  6765  170E  0878               	movf	___ftdiv@f2,w
  6766  170F  02FB               	subwf	___ftdiv@f1,f
  6767  1710  0879               	movf	___ftdiv@f2+1,w
  6768  1711  1C03               	skipc
  6769  1712  0F79               	incfsz	___ftdiv@f2+1,w
  6770  1713  02FC               	subwf	___ftdiv@f1+1,f
  6771  1714  087A               	movf	___ftdiv@f2+2,w
  6772  1715  1C03               	skipc
  6773  1716  0A7A               	incf	___ftdiv@f2+2,w
  6774  1717  02FD               	subwf	___ftdiv@f1+2,f
  6775  1718  1425               	bsf	___ftdiv@f3,0
  6776  1719                     l2205:	
  6777  1719  3001               	movlw	1
  6778  171A                     u3605:	
  6779  171A  1003               	clrc
  6780  171B  0DFB               	rlf	___ftdiv@f1,f
  6781  171C  0DFC               	rlf	___ftdiv@f1+1,f
  6782  171D  0DFD               	rlf	___ftdiv@f1+2,f
  6783  171E  3EFF               	addlw	-1
  6784  171F  1D03               	skipz
  6785  1720  2F1A               	goto	u3605
  6786  1721  3001               	movlw	1
  6787  1722  02A4               	subwf	___ftdiv@cntr,f
  6788  1723  1D03               	btfss	3,2
  6789  1724  2EFA               	goto	l2197
  6790  1725  0825               	movf	___ftdiv@f3,w
  6791  1726  00F0               	movwf	___ftpack@arg
  6792  1727  0826               	movf	___ftdiv@f3+1,w
  6793  1728  00F1               	movwf	___ftpack@arg+1
  6794  1729  0827               	movf	___ftdiv@f3+2,w
  6795  172A  00F2               	movwf	___ftpack@arg+2
  6796  172B  0828               	movf	___ftdiv@exp,w
  6797  172C  00A0               	movwf	??___ftdiv
  6798  172D  0820               	movf	??___ftdiv,w
  6799  172E  00F3               	movwf	___ftpack@exp
  6800  172F  0829               	movf	___ftdiv@sign,w
  6801  1730  00A1               	movwf	??___ftdiv+1
  6802  1731  0821               	movf	??___ftdiv+1,w
  6803  1732  00F4               	movwf	___ftpack@sign
  6804  1733  120A  158A  2039   	fcall	___ftpack
  6805  1736  0870               	movf	?___ftpack,w
  6806  1737  00F8               	movwf	?___ftdiv
  6807  1738  0871               	movf	?___ftpack+1,w
  6808  1739  00F9               	movwf	?___ftdiv+1
  6809  173A  0872               	movf	?___ftpack+2,w
  6810  173B  00FA               	movwf	?___ftdiv+2
  6811  173C  0008               	return
  6812  173D                     __end_of___ftdiv:	
  6813                           
  6814                           	psect	text22
  6815  0839                     __ptext22:	
  6816 ;; *************** function ___ftpack *****************
  6817 ;; Defined at:
  6818 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;  arg             3    0[COMMON] unsigned um
  6821 ;;  exp             1    3[COMMON] unsigned char 
  6822 ;;  sign            1    4[COMMON] unsigned char 
  6823 ;; Auto vars:     Size  Location     Type
  6824 ;;		None
  6825 ;; Return value:  Size  Location     Type
  6826 ;;                  3    0[COMMON] float 
  6827 ;; Registers used:
  6828 ;;		wreg, status,2, status,0
  6829 ;; Tracked objects:
  6830 ;;		On entry : 0/0
  6831 ;;		On exit  : 0/0
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6834 ;;      Params:         5       0       0       0       0
  6835 ;;      Locals:         0       0       0       0       0
  6836 ;;      Temps:          3       0       0       0       0
  6837 ;;      Totals:         8       0       0       0       0
  6838 ;;Total ram usage:        8 bytes
  6839 ;; Hardware stack levels used:    1
  6840 ;; This function calls:
  6841 ;;		Nothing
  6842 ;; This function is called by:
  6843 ;;		___ftadd
  6844 ;;		___ftdiv
  6845 ;;		___ftmul
  6846 ;;		___lltoft
  6847 ;; This function uses a non-reentrant model
  6848 ;;
  6849                           
  6850                           
  6851                           ;psect for function ___ftpack
  6852  0839                     ___ftpack:	
  6853                           
  6854                           ;incstack = 0
  6855                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6856  0839  0873               	movf	___ftpack@exp,w
  6857  083A  1903               	btfsc	3,2
  6858  083B  2841               	goto	l1461
  6859  083C  0872               	movf	___ftpack@arg+2,w
  6860  083D  0471               	iorwf	___ftpack@arg+1,w
  6861  083E  0470               	iorwf	___ftpack@arg,w
  6862  083F  1D03               	skipz
  6863  0840  2854               	goto	l1467
  6864  0841                     l1461:	
  6865  0841  3000               	movlw	0
  6866  0842  00F0               	movwf	?___ftpack
  6867  0843  3000               	movlw	0
  6868  0844  00F1               	movwf	?___ftpack+1
  6869  0845  3000               	movlw	0
  6870  0846  00F2               	movwf	?___ftpack+2
  6871  0847  0008               	return
  6872  0848                     l1465:	
  6873  0848  3001               	movlw	1
  6874  0849  00F5               	movwf	??___ftpack
  6875  084A  0875               	movf	??___ftpack,w
  6876  084B  07F3               	addwf	___ftpack@exp,f
  6877  084C  3001               	movlw	1
  6878  084D                     u1865:	
  6879  084D  1003               	clrc
  6880  084E  0CF2               	rrf	___ftpack@arg+2,f
  6881  084F  0CF1               	rrf	___ftpack@arg+1,f
  6882  0850  0CF0               	rrf	___ftpack@arg,f
  6883  0851  3EFF               	addlw	-1
  6884  0852  1D03               	skipz
  6885  0853  284D               	goto	u1865
  6886  0854                     l1467:	
  6887  0854  30FE               	movlw	254
  6888  0855  0572               	andwf	___ftpack@arg+2,w
  6889  0856  1903               	btfsc	3,2
  6890  0857  286F               	goto	l399
  6891  0858  2848               	goto	l1465
  6892  0859                     l1469:	
  6893  0859  3001               	movlw	1
  6894  085A  00F5               	movwf	??___ftpack
  6895  085B  0875               	movf	??___ftpack,w
  6896  085C  07F3               	addwf	___ftpack@exp,f
  6897  085D  3001               	movlw	1
  6898  085E  07F0               	addwf	___ftpack@arg,f
  6899  085F  3000               	movlw	0
  6900  0860  1803               	skipnc
  6901  0861  3001               	movlw	1
  6902  0862  07F1               	addwf	___ftpack@arg+1,f
  6903  0863  3000               	movlw	0
  6904  0864  1803               	skipnc
  6905  0865  3001               	movlw	1
  6906  0866  07F2               	addwf	___ftpack@arg+2,f
  6907  0867  3001               	movlw	1
  6908  0868                     u1885:	
  6909  0868  1003               	clrc
  6910  0869  0CF2               	rrf	___ftpack@arg+2,f
  6911  086A  0CF1               	rrf	___ftpack@arg+1,f
  6912  086B  0CF0               	rrf	___ftpack@arg,f
  6913  086C  3EFF               	addlw	-1
  6914  086D  1D03               	skipz
  6915  086E  2868               	goto	u1885
  6916  086F                     l399:	
  6917  086F  30FF               	movlw	255
  6918  0870  0572               	andwf	___ftpack@arg+2,w
  6919  0871  1903               	btfsc	3,2
  6920  0872  287E               	goto	l1477
  6921  0873  2859               	goto	l1469
  6922  0874                     l1475:	
  6923  0874  3001               	movlw	1
  6924  0875  02F3               	subwf	___ftpack@exp,f
  6925  0876  3001               	movlw	1
  6926  0877                     u1905:	
  6927  0877  1003               	clrc
  6928  0878  0DF0               	rlf	___ftpack@arg,f
  6929  0879  0DF1               	rlf	___ftpack@arg+1,f
  6930  087A  0DF2               	rlf	___ftpack@arg+2,f
  6931  087B  3EFF               	addlw	-1
  6932  087C  1D03               	skipz
  6933  087D  2877               	goto	u1905
  6934  087E                     l1477:	
  6935  087E  1BF1               	btfsc	___ftpack@arg+1,7
  6936  087F  2884               	goto	l406
  6937  0880  3002               	movlw	2
  6938  0881  0273               	subwf	___ftpack@exp,w
  6939  0882  1803               	skipnc
  6940  0883  2874               	goto	l1475
  6941  0884                     l406:	
  6942  0884  1873               	btfsc	___ftpack@exp,0
  6943  0885  288C               	goto	l407
  6944  0886  30FF               	movlw	255
  6945  0887  05F0               	andwf	___ftpack@arg,f
  6946  0888  307F               	movlw	127
  6947  0889  05F1               	andwf	___ftpack@arg+1,f
  6948  088A  30FF               	movlw	255
  6949  088B  05F2               	andwf	___ftpack@arg+2,f
  6950  088C                     l407:	
  6951  088C  1003               	clrc
  6952  088D  0CF3               	rrf	___ftpack@exp,f
  6953  088E  0873               	movf	___ftpack@exp,w
  6954  088F  00F5               	movwf	??___ftpack
  6955  0890  01F6               	clrf	??___ftpack+1
  6956  0891  01F7               	clrf	??___ftpack+2
  6957  0892  3010               	movlw	16
  6958  0893                     u1945:	
  6959  0893  1003               	clrc
  6960  0894  0DF5               	rlf	??___ftpack,f
  6961  0895  0DF6               	rlf	??___ftpack+1,f
  6962  0896  0DF7               	rlf	??___ftpack+2,f
  6963  0897  3EFF               	addlw	-1
  6964  0898  1D03               	skipz
  6965  0899  2893               	goto	u1945
  6966  089A  0875               	movf	??___ftpack,w
  6967  089B  04F0               	iorwf	___ftpack@arg,f
  6968  089C  0876               	movf	??___ftpack+1,w
  6969  089D  04F1               	iorwf	___ftpack@arg+1,f
  6970  089E  0877               	movf	??___ftpack+2,w
  6971  089F  04F2               	iorwf	___ftpack@arg+2,f
  6972  08A0  0874               	movf	___ftpack@sign,w
  6973  08A1  1903               	btfsc	3,2
  6974  08A2  0008               	return
  6975  08A3  17F2               	bsf	___ftpack@arg+2,7
  6976  08A4  0008               	return
  6977  08A5                     __end_of___ftpack:	
  6978  007E                     btemp	set	126	;btemp
  6979  007E                     wtemp0	set	126


Data Sizes:
    Strings     384
    Constant    118
    Data        6
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     69      78
    BANK1            80     22      34
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_12(CODE[20]), STR_11(CODE[36]), STR_10(CODE[39]), STR_9(CODE[42]), 
		 -> STR_8(CODE[33]), STR_7(CODE[32]), STR_6(CODE[38]), STR_5(CODE[36]), 
		 -> STR_4(CODE[36]), STR_3(CODE[36]), STR_2(CODE[36]), STR_1(CODE[38]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->___ftdiv
    _printf->___lldiv
    _printf->___lltoft
    _printf->__div_to_l_
    _scale->___bmul
    _fround->___bmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___ftsub->___lltoft
    ___ftdiv->___ftpack

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   42386
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                       _iniciar_uart
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              40    35      5   33442
                                             58 BANK0     11     6      5
                                              0 BANK1     22    22      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               12     9      3    7282
                                             23 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              19    16      3    7084
                                             23 BANK0     16    13      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3623
                                              7 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                             12 COMMON     1     1      0
                                              4 BANK0      3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1250
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1360
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1170
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1829
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     477
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             32 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3144
                                             52 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2971
                                             39 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     151
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     560
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (1) _iniciar_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2199
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftadd
     ___ftneg (ARG)
     ___ftpack (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
   ___ftdiv
     ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___ftpack (ARG)
   ___ftneg
   _iniciar_uart
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftneg (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftneg (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     16      22       7       42.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     45      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7E      12        0.0%
ABS                  0      0      7E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Thu Aug 31 16:27:15 2017

                      _a 0068                        _b 0065                        pc 0002  
         ___bmul@product 0025                       l19 0807                       l95 0298  
           ___awdiv@sign 0021                       fsr 0004      ___wmul@multiplicand 0072  
           ___ftadd@exp1 0053             ___ftadd@exp2 0052             ___ftadd@sign 0051  
                    l221 000F                      l137 07C6                      l406 0884  
                    l430 0A20                      l407 088C                      l507 009A  
                    l456 176F                      l466 17F4                      l387 0BA7  
                    l379 0B5E                      l399 086F                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076             ___ftdiv@cntr 0024  
           ___ftdiv@sign 0029                     l2003 155B                     l2007 1568  
                   l2015 0812                     l2103 04DC                     l2017 0824  
                   l2113 0551                     l2033 029A                     l2131 062D  
                   l2107 054B                     l2035 02B6                     l2205 1719  
                   l2141 0655                     l2029 0293                     l1511 157D  
                   l2135 063B                     l2119 05A5                     l1601 09B7  
                   l2129 05BB                     l2081 0445                     l2073 03E2  
                   l2065 0375                     l2049 030B                     l2217 0BBA  
                   l2163 07A8                     l2147 067B                     l2251 0CDD  
                   l2243 0C9F                     l1461 0841                     l1621 09F2  
                   l1613 09D1                     l1517 1588                     l2093 049A  
                   l2077 03FF                     l2165 07AD                     l2261 0D29  
                   l2183 16B5                     l1631 0A10                     l1623 09F7  
                   l1543 15C7                     l1535 15B4                     l1527 1590  
                   l2159 079A                     l2247 0CBE                     l1465 0848  
                   l2177 169F                     l1641 0A44                     l1633 0A1C  
                   l1625 09FB                     l1529 159E                     l2089 0483  
                   l2169 026E                     l2257 0CF0                     l1475 0874  
                   l1467 0854                     l1651 0A67                     l1619 09E6  
                   l1811 17DC                     l1539 15BF                     l1555 14E4  
                   l1491 14AA                     l1477 087E                     l1469 0859  
                   l2197 16FA                     l1637 0A32                     l1581 1520  
                   l1573 150D                     l1661 08BD                     l1591 09A1  
                   l1567 14F1                     l1559 14EB                     l1495 14B0  
                   l1727 0230                     l1719 019E                     l1743 0E05  
                   l1921 14C2                     l1817 17E9                     l1809 17CC  
                   l1569 14FF                     l1577 1518                     l1761 0F67  
                   l1753 0E9E                     l1595 09A8                     l1931 0040  
                   l1835 0AC1                     l1819 17F7                     l1691 093A  
                   l1683 0922                     l1667 08D3                     l1861 0B7F  
                   l1845 0B08                     l1829 0AA2                     l1749 0E7B  
                   l1951 0082                     l1871 0BAA                     l1863 0B8F  
                   l1791 1790                     l1695 094A                     l1679 0912  
                   l1767 0FDD                     l1777 1757                     l1963 00AB  
                   l1893 15F3                     l1957 008F                     l1949 0072  
                   l1973 1639                     l1877 0007                     l1869 0B9C  
                   l1959 009D                     l1983 1671                     l1975 1649  
                   l1799 17B0                     l1897 161A                     l1987 167E  
                   l1997 152D                     l1999 153D                     STR_1 10D9  
                   STR_2 1123                     STR_3 1147                     STR_4 10FF  
                   STR_5 116B                     STR_6 10D9                     STR_7 11D4  
                   STR_8 11B3                     STR_9 1088                     u2015 1593  
                   u2035 159F                     u2115 14F4                     u3005 0047  
                   u2045 15AB                     u2055 15B5                     u2135 1505  
                   u3105 163D                     u2145 150E                     u3035 0073  
                   u2325 09FC                     u3125 164B                     u3205 155C  
                   u3135 1660                     u2265 09D2                     u3065 0091  
                   u3145 1672                     u3225 0817                     u2355 0A11  
                   u2435 08DF                     u2525 094B                     u2445 08F1  
                   u3405 0597                     u3325 040A                     u2295 09E7  
                   u3175 1531                     u2535 0953                     u3335 0450  
                   u1905 0877                     u3195 154B                     u2715 17CD  
                   u2475 0923                     u3435 05CD             printf@tmpval 00AE  
                   u3605 171A                     u2485 092B                     u3365 0481  
                   u3285 0325                     u2655 1792                     u3455 0644  
                   u1945 0893                     u1865 084D                     u2905 0017  
                   u2745 17EB                     u2665 17A3                     u3465 0651  
                   u2931 15E6                     u2835 0B80                     u2675 17B1  
                   u3395 0556                     u2932 15E7                     u1885 0868  
                   u3565 16C7                     u2933 15EC                     u3485 06F1  
                   u2934 15ED                     u3575 16D9                     u2951 160D  
                   u3495 075C                     u2952 160E                     u3585 16FB  
                   u2953 1613                     u2865 0B9E                     u2785 0B0A  
                   u2954 1614                     u3595 170C                     u2795 0B39  
                   u2895 0010                     _main 0BB3             ___ftpack@arg 0070  
           ___ftpack@exp 0073                     _suma 006B                     btemp 007E  
                   start 0000        ___bmul@multiplier 0026             ___ftmul@cntr 0035  
           ___ftmul@sign 0036             ___fttol@exp1 004D             ___fttol@lval 0049  
                  ?_main 0070          __end_of___awdiv 15CC          __end_of___ftadd 0A81  
                  STR_10 10B2                    STR_11 118F                    STR_12 11F4  
        __end_of___awmod 1525          __end_of___ftdiv 173D          __end_of___ftneg 14A6  
        __end_of___lldiv 1687          __end_of___ftmul 0978          ___awdiv@divisor 0077  
        __end_of___llmod 1571          __end_of___ftsub 14DA          __end_of___fttol 00B4  
        ___awdiv@counter 0020                    _PORTB 0006                    _TRISB 0086  
                  _TXREG 0019             ___lltoft@exp 007D          __end_of_dpowers 103A  
                  _scale 0D35                    _resta 00BC            ___ftpack@sign 0074  
                  _putch 0806                    pclath 000A                    status 0003  
                  wtemp0 007E            ?_iniciar_uart 0070          __initialization 07C7  
           __end_of_main 0D35                   ??_main 007E            ___fttol@sign1 0048  
   __size_of__tdiv_to_l_ 00C3         ___llmod@dividend 0074                   ?_scale 0037  
       ___awdiv@dividend 0079                   ?_putch 0070         __end_of___ftpack 08A5  
       __end_of___lltoft 0839           ??_iniciar_uart 0070         __end_of__powers_ 1061  
                 ___bmul 14A6                   ___ftge 15CC                   ___wmul 0005  
              ??___awdiv 007B                ??___ftadd 004D                ??___awmod 0074  
              ??___ftdiv 0020                ??___ftneg 0073                ??___lldiv 0078  
              ??___ftmul 002D                ??___llmod 0078                ??___ftsub 007E  
              ??___fttol 0044                   _fround 00B4         ___awdiv@quotient 0022  
        ___awmod@divisor 0070          ___awmod@counter 0075                   _printf 0266  
  ___ftmul@f3_as_product 0032  __end_of__initialization 07FC               ___ftadd@f1 0047  
             ___ftadd@f2 004A               ___ftge@ff1 0070               ___ftge@ff2 0073  
             ___ftdiv@f1 007B               ___ftdiv@f2 0078               ___ftdiv@f3 0025  
             ___ftneg@f1 0070      ___bmul@multiplicand 0024               ___ftmul@f1 0027  
             ___ftmul@f2 002A               ___ftsub@f1 0057               ___ftsub@f2 0054  
             ___fttol@f1 0040           __pcstackCOMMON 0070             __pidataBANK0 0800  
             ___lltoft@c 0078            __end_of_scale 1000            __end_of_putch 080E  
             __div_to_l_ 0A81          __div_to_l_@exp1 0025          __div_to_l_@cntr 0024  
                ??_scale 003A          __div_to_l_@quot 0020                  ??_putch 0070  
             __pbssBANK0 006B               __pbssBANK1 00B6            __div_to_l_@f1 0070  
          __div_to_l_@f2 0073               __pmaintext 0BB3                  ?___bmul 0024  
                ?___ftge 0070                  ?___wmul 0070                  ?_fround 0037  
              ?___ftpack 0070                  ?_printf 005A                ?___lltoft 0078  
   __end_of_iniciar_uart 149E               __stringtab 1000        __end_of__npowers_ 1088  
        __size_of___bmul 0013          __size_of___ftge 005D                  ___awdiv 1571  
                ___ftadd 0978                  ___awmod 14DA                  ___ftdiv 1687  
                ___ftneg 149E                  ___lldiv 1629          __size_of___wmul 0021  
                ___ftmul 08A5                  ___llmod 1525                  ___ftsub 14B9  
                ___fttol 0026               _fround$660 0043               _fround$661 0040  
             ??___ftpack 0075          __size_of_fround 01B2               ??___lltoft 007C  
                __ptext1 0266                  __ptext2 0D35                  __ptext3 0806  
                __ptext4 00B4                  __ptext5 08A5                  __ptext6 14A6  
                __ptext7 14DA                  __ptext8 1571                  __ptext9 173D  
        __size_of_printf 0561              ?__div_to_l_ 0070                  _dpowers 1012  
       ___awmod@dividend 0072     end_of_initialization 07FC          ___lldiv@divisor 0070  
        ___lldiv@counter 007D                _RCSTAbits 0018                  printf@c 00B5  
                printf@f 005A             __pstringtext 1000           __tdiv_to_l_@f1 0070  
         __tdiv_to_l_@f2 0073               _printf$663 00A0            ??__tdiv_to_l_ 0076  
              _PORTBbits 0006              ___ftdiv@exp 0028                _TXSTAbits 0098  
    __size_of__div_to_l_ 0132              ___ftmul@exp 0031           __end_of___bmul 14B9  
         __end_of___ftge 1629           __end_of___wmul 0026    __size_of_iniciar_uart 0007  
         __end_of_fround 0266           __end_of_printf 07C7      start_initialization 07C7  
    __end_of__tdiv_to_l_ 1800          ___llmod@divisor 0070          ___llmod@counter 0079  
           _iniciar_uart 1497                 ??___bmul 007C                 ??___ftge 0076  
               ??___wmul 0074              __pdataBANK0 0065                 ??_fround 003A  
               ??_printf 005F               fround@prec 0046        __size_of___ftpack 006C  
      __size_of___lltoft 002B                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00A0                 ?___awdiv 0077                 ?___ftadd 0047  
               ?___awmod 0070                 ?___ftdiv 0078                 ?___ftneg 0070  
               ?___lldiv 0070                 ?___ftmul 0027                 ?___llmod 0070  
               ?___ftsub 0054                __npowers_ 1061                 ?___fttol 0040  
            __tdiv_to_l_ 173D             ??__div_to_l_ 0076                _scale$662 003C  
         __size_of_scale 02CB           __size_of_putch 0008           ___wmul@product 0074  
               _PIR1bits 000C       __end_of__div_to_l_ 0BB3                _resultado 00BF  
            __stringbase 1012        ___wmul@multiplier 0070               printf@flag 00A4  
             printf@fval 00B2               printf@prec 00A6         __size_of___awdiv 005B  
       __size_of___ftadd 0109         __size_of___awmod 004B         __size_of___ftdiv 00B6  
       __size_of___ftneg 0008         __size_of___lldiv 005E         __size_of___ftmul 00D3  
       __size_of___llmod 004C         __size_of___ftsub 0021         __size_of___fttol 008E  
               ___ftpack 0839       __end_of__stringtab 1012                 ___lltoft 080E  
               __ptext10 0A81                 __ptext11 0005                 __ptext20 1497  
               __ptext12 080E                 __ptext21 1687                 __ptext13 1525  
               __ptext22 0839                 __ptext14 1629                 __ptext15 0026  
               __ptext16 14B9                 __ptext17 0978                 __ptext18 149E  
               __ptext19 15CC                 __powers_ 103A           _multiplicacion 00B9  
               _division 00B6            __size_of_main 0182                printf@exp 00AC  
              printf@val 00A8                putch@dato 0070                 scale@scl 003F  
       __tdiv_to_l_@exp1 0025         __tdiv_to_l_@cntr 0024         __tdiv_to_l_@quot 0020  
       ___lldiv@dividend 0074                stringcode 100A                 printf@ap 00A3  
           ?__tdiv_to_l_ 0070         ___lldiv@quotient 0079                 stringtab 1000  
