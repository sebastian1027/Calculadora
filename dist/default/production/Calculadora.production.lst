

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Tue Aug 29 23:06:06 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 1.43
    39                           ; Generated 25/07/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150                           
   151                           	psect	idataBANK0
   152  0801                     __pidataBANK0:	
   153                           
   154                           ;initializer for _a
   155  0801  3400               	retlw	0
   156  0802  3420               	retlw	32
   157  0803  3441               	retlw	65
   158                           
   159                           	psect	stringtext
   160  1000                     __pstringtext:	
   161  1000                     stringtab:	
   162  1000                     __stringtab:	
   163                           
   164                           ;	String table - string pointers are 2 bytes each
   165  1000  1BFF               	btfsc	btemp+1,7
   166  1001  280A               	ljmp	stringcode
   167  1002  1383               	bcf	3,7
   168  1003  187F               	btfsc	btemp+1,0
   169  1004  1783               	bsf	3,7
   170  1005  0800               	movf	0,w
   171  1006  0A84               	incf	4,f
   172  1007  1903               	skipnz
   173  1008  0AFF               	incf	btemp+1,f
   174  1009  0008               	return
   175  100A                     stringcode:	
   176  100A  087F               	movf	btemp+1,w
   177  100B  397F               	andlw	127
   178  100C  008A               	movwf	10
   179  100D  0804               	movf	4,w
   180  100E  0A84               	incf	4,f
   181  100F  1903               	skipnz
   182  1010  0AFF               	incf	btemp+1,f
   183  1011  0082               	movwf	2
   184  1012                     __stringbase:	
   185  1012                     __end_of__stringtab:	
   186  1012                     _dpowers:	
   187  1012  3401               	retlw	1
   188  1013  3400               	retlw	0
   189  1014  3400               	retlw	0
   190  1015  3400               	retlw	0
   191  1016  340A               	retlw	10
   192  1017  3400               	retlw	0
   193  1018  3400               	retlw	0
   194  1019  3400               	retlw	0
   195  101A  3464               	retlw	100
   196  101B  3400               	retlw	0
   197  101C  3400               	retlw	0
   198  101D  3400               	retlw	0
   199  101E  34E8               	retlw	232
   200  101F  3403               	retlw	3
   201  1020  3400               	retlw	0
   202  1021  3400               	retlw	0
   203  1022  3410               	retlw	16
   204  1023  3427               	retlw	39
   205  1024  3400               	retlw	0
   206  1025  3400               	retlw	0
   207  1026  34A0               	retlw	160
   208  1027  3486               	retlw	134
   209  1028  3401               	retlw	1
   210  1029  3400               	retlw	0
   211  102A  3440               	retlw	64
   212  102B  3442               	retlw	66
   213  102C  340F               	retlw	15
   214  102D  3400               	retlw	0
   215  102E  3480               	retlw	128
   216  102F  3496               	retlw	150
   217  1030  3498               	retlw	152
   218  1031  3400               	retlw	0
   219  1032  3400               	retlw	0
   220  1033  34E1               	retlw	225
   221  1034  34F5               	retlw	245
   222  1035  3405               	retlw	5
   223  1036  3400               	retlw	0
   224  1037  34CA               	retlw	202
   225  1038  349A               	retlw	154
   226  1039  343B               	retlw	59
   227  103A                     __end_of_dpowers:	
   228  103A                     __powers_:	
   229  103A  3400               	retlw	0
   230  103B  3480               	retlw	128
   231  103C  343F               	retlw	63
   232  103D  3400               	retlw	0
   233  103E  3420               	retlw	32
   234  103F  3441               	retlw	65
   235  1040  3400               	retlw	0
   236  1041  34C8               	retlw	200
   237  1042  3442               	retlw	66
   238  1043  3400               	retlw	0
   239  1044  347A               	retlw	122
   240  1045  3444               	retlw	68
   241  1046  3440               	retlw	64
   242  1047  341C               	retlw	28
   243  1048  3446               	retlw	70
   244  1049  3450               	retlw	80
   245  104A  34C3               	retlw	195
   246  104B  3447               	retlw	71
   247  104C  3424               	retlw	36
   248  104D  3474               	retlw	116
   249  104E  3449               	retlw	73
   250  104F  3497               	retlw	151
   251  1050  3418               	retlw	24
   252  1051  344B               	retlw	75
   253  1052  34BC               	retlw	188
   254  1053  34BE               	retlw	190
   255  1054  344C               	retlw	76
   256  1055  346B               	retlw	107
   257  1056  346E               	retlw	110
   258  1057  344E               	retlw	78
   259  1058  3403               	retlw	3
   260  1059  3415               	retlw	21
   261  105A  3450               	retlw	80
   262  105B  3479               	retlw	121
   263  105C  34AD               	retlw	173
   264  105D  3460               	retlw	96
   265  105E  34F3               	retlw	243
   266  105F  3449               	retlw	73
   267  1060  3471               	retlw	113
   268  1061                     __end_of__powers_:	
   269  1061                     __npowers_:	
   270  1061  3400               	retlw	0
   271  1062  3480               	retlw	128
   272  1063  343F               	retlw	63
   273  1064  34CD               	retlw	205
   274  1065  34CC               	retlw	204
   275  1066  343D               	retlw	61
   276  1067  34D7               	retlw	215
   277  1068  3423               	retlw	35
   278  1069  343C               	retlw	60
   279  106A  3412               	retlw	18
   280  106B  3483               	retlw	131
   281  106C  343A               	retlw	58
   282  106D  34B7               	retlw	183
   283  106E  34D1               	retlw	209
   284  106F  3438               	retlw	56
   285  1070  34C6               	retlw	198
   286  1071  3427               	retlw	39
   287  1072  3437               	retlw	55
   288  1073  3438               	retlw	56
   289  1074  3486               	retlw	134
   290  1075  3435               	retlw	53
   291  1076  34C0               	retlw	192
   292  1077  34D6               	retlw	214
   293  1078  3433               	retlw	51
   294  1079  34CC               	retlw	204
   295  107A  342B               	retlw	43
   296  107B  3432               	retlw	50
   297  107C  3470               	retlw	112
   298  107D  3489               	retlw	137
   299  107E  3430               	retlw	48
   300  107F  34E7               	retlw	231
   301  1080  34DB               	retlw	219
   302  1081  342E               	retlw	46
   303  1082  34E5               	retlw	229
   304  1083  343C               	retlw	60
   305  1084  341E               	retlw	30
   306  1085  3442               	retlw	66
   307  1086  34A2               	retlw	162
   308  1087  340D               	retlw	13
   309  1088                     __end_of__npowers_:	
   310  0006                     _PORTBbits	set	6
   311  0006                     _PORTB	set	6
   312  0018                     _RCSTAbits	set	24
   313  0019                     _TXREG	set	25
   314  000C                     _PIR1bits	set	12
   315  0086                     _TRISB	set	134
   316  0098                     _TXSTAbits	set	152
   317  1088                     STR_9:	
   318  1088  3445               	retlw	69	;'E'
   319  1089  346C               	retlw	108	;'l'
   320  108A  3420               	retlw	32	;' '
   321  108B  3472               	retlw	114	;'r'
   322  108C  3465               	retlw	101	;'e'
   323  108D  3473               	retlw	115	;'s'
   324  108E  3475               	retlw	117	;'u'
   325  108F  346C               	retlw	108	;'l'
   326  1090  3474               	retlw	116	;'t'
   327  1091  3461               	retlw	97	;'a'
   328  1092  3464               	retlw	100	;'d'
   329  1093  346F               	retlw	111	;'o'
   330  1094  3420               	retlw	32	;' '
   331  1095  3464               	retlw	100	;'d'
   332  1096  3465               	retlw	101	;'e'
   333  1097  3420               	retlw	32	;' '
   334  1098  346C               	retlw	108	;'l'
   335  1099  3461               	retlw	97	;'a'
   336  109A  3420               	retlw	32	;' '
   337  109B  344D               	retlw	77	;'M'
   338  109C  3475               	retlw	117	;'u'
   339  109D  346C               	retlw	108	;'l'
   340  109E  3474               	retlw	116	;'t'
   341  109F  3469               	retlw	105	;'i'
   342  10A0  3470               	retlw	112	;'p'
   343  10A1  346C               	retlw	108	;'l'
   344  10A2  3469               	retlw	105	;'i'
   345  10A3  3463               	retlw	99	;'c'
   346  10A4  3461               	retlw	97	;'a'
   347  10A5  3463               	retlw	99	;'c'
   348  10A6  3469               	retlw	105	;'i'
   349  10A7  346F               	retlw	111	;'o'
   350  10A8  346E               	retlw	110	;'n'
   351  10A9  3420               	retlw	32	;' '
   352  10AA  3465               	retlw	101	;'e'
   353  10AB  3473               	retlw	115	;'s'
   354  10AC  343A               	retlw	58	;':'
   355  10AD  3420               	retlw	32	;' '
   356  10AE  3425               	retlw	37	;'%'
   357  10AF  3466               	retlw	102	;'f'
   358  10B0  340A               	retlw	10
   359  10B1  3400               	retlw	0
   360  10B2                     STR_10:	
   361  10B2  3445               	retlw	69	;'E'
   362  10B3  3472               	retlw	114	;'r'
   363  10B4  3472               	retlw	114	;'r'
   364  10B5  346F               	retlw	111	;'o'
   365  10B6  3472               	retlw	114	;'r'
   366  10B7  342C               	retlw	44	;','
   367  10B8  3420               	retlw	32	;' '
   368  10B9  346E               	retlw	110	;'n'
   369  10BA  346F               	retlw	111	;'o'
   370  10BB  3420               	retlw	32	;' '
   371  10BC  3465               	retlw	101	;'e'
   372  10BD  3473               	retlw	115	;'s'
   373  10BE  3420               	retlw	32	;' '
   374  10BF  3470               	retlw	112	;'p'
   375  10C0  346F               	retlw	111	;'o'
   376  10C1  3473               	retlw	115	;'s'
   377  10C2  3469               	retlw	105	;'i'
   378  10C3  3462               	retlw	98	;'b'
   379  10C4  346C               	retlw	108	;'l'
   380  10C5  3465               	retlw	101	;'e'
   381  10C6  3420               	retlw	32	;' '
   382  10C7  3464               	retlw	100	;'d'
   383  10C8  3469               	retlw	105	;'i'
   384  10C9  3476               	retlw	118	;'v'
   385  10CA  3469               	retlw	105	;'i'
   386  10CB  3464               	retlw	100	;'d'
   387  10CC  3469               	retlw	105	;'i'
   388  10CD  3472               	retlw	114	;'r'
   389  10CE  3420               	retlw	32	;' '
   390  10CF  3465               	retlw	101	;'e'
   391  10D0  346E               	retlw	110	;'n'
   392  10D1  3474               	retlw	116	;'t'
   393  10D2  3472               	retlw	114	;'r'
   394  10D3  3465               	retlw	101	;'e'
   395  10D4  3420               	retlw	32	;' '
   396  10D5  3430               	retlw	48	;'0'
   397  10D6  342E               	retlw	46	;'.'
   398  10D7  340A               	retlw	10
   399  10D8  3400               	retlw	0
   400  10D9                     STR_1:	
   401  10D9  342A               	retlw	42	;'*'
   402  10DA  342A               	retlw	42	;'*'
   403  10DB  342A               	retlw	42	;'*'
   404  10DC  342A               	retlw	42	;'*'
   405  10DD  342A               	retlw	42	;'*'
   406  10DE  342A               	retlw	42	;'*'
   407  10DF  342A               	retlw	42	;'*'
   408  10E0  342A               	retlw	42	;'*'
   409  10E1  342A               	retlw	42	;'*'
   410  10E2  342A               	retlw	42	;'*'
   411  10E3  342A               	retlw	42	;'*'
   412  10E4  342A               	retlw	42	;'*'
   413  10E5  342A               	retlw	42	;'*'
   414  10E6  342A               	retlw	42	;'*'
   415  10E7  342A               	retlw	42	;'*'
   416  10E8  342A               	retlw	42	;'*'
   417  10E9  342A               	retlw	42	;'*'
   418  10EA  342A               	retlw	42	;'*'
   419  10EB  342A               	retlw	42	;'*'
   420  10EC  342A               	retlw	42	;'*'
   421  10ED  342A               	retlw	42	;'*'
   422  10EE  342A               	retlw	42	;'*'
   423  10EF  342A               	retlw	42	;'*'
   424  10F0  342A               	retlw	42	;'*'
   425  10F1  342A               	retlw	42	;'*'
   426  10F2  342A               	retlw	42	;'*'
   427  10F3  342A               	retlw	42	;'*'
   428  10F4  342A               	retlw	42	;'*'
   429  10F5  342A               	retlw	42	;'*'
   430  10F6  342A               	retlw	42	;'*'
   431  10F7  342A               	retlw	42	;'*'
   432  10F8  342A               	retlw	42	;'*'
   433  10F9  342A               	retlw	42	;'*'
   434  10FA  342A               	retlw	42	;'*'
   435  10FB  342A               	retlw	42	;'*'
   436  10FC  342A               	retlw	42	;'*'
   437  10FD  340A               	retlw	10
   438  10FE  3400               	retlw	0
   439  10FF                     STR_4:	
   440  10FF  342A               	retlw	42	;'*'
   441  1100  342A               	retlw	42	;'*'
   442  1101  342A               	retlw	42	;'*'
   443  1102  342A               	retlw	42	;'*'
   444  1103  342A               	retlw	42	;'*'
   445  1104  3420               	retlw	32	;' '
   446  1105  3420               	retlw	32	;' '
   447  1106  3433               	retlw	51	;'3'
   448  1107  342E               	retlw	46	;'.'
   449  1108  3420               	retlw	32	;' '
   450  1109  344D               	retlw	77	;'M'
   451  110A  3475               	retlw	117	;'u'
   452  110B  346C               	retlw	108	;'l'
   453  110C  3474               	retlw	116	;'t'
   454  110D  3469               	retlw	105	;'i'
   455  110E  3470               	retlw	112	;'p'
   456  110F  346C               	retlw	108	;'l'
   457  1110  3469               	retlw	105	;'i'
   458  1111  3463               	retlw	99	;'c'
   459  1112  3461               	retlw	97	;'a'
   460  1113  3463               	retlw	99	;'c'
   461  1114  3469               	retlw	105	;'i'
   462  1115  346F               	retlw	111	;'o'
   463  1116  346E               	retlw	110	;'n'
   464  1117  3420               	retlw	32	;' '
   465  1118  3420               	retlw	32	;' '
   466  1119  342A               	retlw	42	;'*'
   467  111A  342A               	retlw	42	;'*'
   468  111B  342A               	retlw	42	;'*'
   469  111C  342A               	retlw	42	;'*'
   470  111D  342A               	retlw	42	;'*'
   471  111E  342A               	retlw	42	;'*'
   472  111F  342A               	retlw	42	;'*'
   473  1120  342A               	retlw	42	;'*'
   474  1121  340A               	retlw	10
   475  1122  3400               	retlw	0
   476  1123                     STR_2:	
   477  1123  342A               	retlw	42	;'*'
   478  1124  342A               	retlw	42	;'*'
   479  1125  342A               	retlw	42	;'*'
   480  1126  342A               	retlw	42	;'*'
   481  1127  342A               	retlw	42	;'*'
   482  1128  342A               	retlw	42	;'*'
   483  1129  3420               	retlw	32	;' '
   484  112A  3420               	retlw	32	;' '
   485  112B  3420               	retlw	32	;' '
   486  112C  3420               	retlw	32	;' '
   487  112D  3420               	retlw	32	;' '
   488  112E  3420               	retlw	32	;' '
   489  112F  3431               	retlw	49	;'1'
   490  1130  342E               	retlw	46	;'.'
   491  1131  3420               	retlw	32	;' '
   492  1132  3453               	retlw	83	;'S'
   493  1133  3475               	retlw	117	;'u'
   494  1134  346D               	retlw	109	;'m'
   495  1135  3461               	retlw	97	;'a'
   496  1136  3420               	retlw	32	;' '
   497  1137  3420               	retlw	32	;' '
   498  1138  3420               	retlw	32	;' '
   499  1139  3420               	retlw	32	;' '
   500  113A  3420               	retlw	32	;' '
   501  113B  3420               	retlw	32	;' '
   502  113C  342A               	retlw	42	;'*'
   503  113D  342A               	retlw	42	;'*'
   504  113E  342A               	retlw	42	;'*'
   505  113F  342A               	retlw	42	;'*'
   506  1140  342A               	retlw	42	;'*'
   507  1141  342A               	retlw	42	;'*'
   508  1142  342A               	retlw	42	;'*'
   509  1143  342A               	retlw	42	;'*'
   510  1144  342A               	retlw	42	;'*'
   511  1145  340A               	retlw	10
   512  1146  3400               	retlw	0
   513  1147                     STR_3:	
   514  1147  342A               	retlw	42	;'*'
   515  1148  342A               	retlw	42	;'*'
   516  1149  342A               	retlw	42	;'*'
   517  114A  342A               	retlw	42	;'*'
   518  114B  342A               	retlw	42	;'*'
   519  114C  342A               	retlw	42	;'*'
   520  114D  3420               	retlw	32	;' '
   521  114E  3420               	retlw	32	;' '
   522  114F  3420               	retlw	32	;' '
   523  1150  3420               	retlw	32	;' '
   524  1151  3420               	retlw	32	;' '
   525  1152  3420               	retlw	32	;' '
   526  1153  3432               	retlw	50	;'2'
   527  1154  342E               	retlw	46	;'.'
   528  1155  3420               	retlw	32	;' '
   529  1156  3452               	retlw	82	;'R'
   530  1157  3465               	retlw	101	;'e'
   531  1158  3473               	retlw	115	;'s'
   532  1159  3474               	retlw	116	;'t'
   533  115A  3461               	retlw	97	;'a'
   534  115B  3420               	retlw	32	;' '
   535  115C  3420               	retlw	32	;' '
   536  115D  3420               	retlw	32	;' '
   537  115E  3420               	retlw	32	;' '
   538  115F  3420               	retlw	32	;' '
   539  1160  342A               	retlw	42	;'*'
   540  1161  342A               	retlw	42	;'*'
   541  1162  342A               	retlw	42	;'*'
   542  1163  342A               	retlw	42	;'*'
   543  1164  342A               	retlw	42	;'*'
   544  1165  342A               	retlw	42	;'*'
   545  1166  342A               	retlw	42	;'*'
   546  1167  342A               	retlw	42	;'*'
   547  1168  342A               	retlw	42	;'*'
   548  1169  340A               	retlw	10
   549  116A  3400               	retlw	0
   550  116B                     STR_5:	
   551  116B  342A               	retlw	42	;'*'
   552  116C  342A               	retlw	42	;'*'
   553  116D  342A               	retlw	42	;'*'
   554  116E  342A               	retlw	42	;'*'
   555  116F  342A               	retlw	42	;'*'
   556  1170  342A               	retlw	42	;'*'
   557  1171  3420               	retlw	32	;' '
   558  1172  3420               	retlw	32	;' '
   559  1173  3420               	retlw	32	;' '
   560  1174  3420               	retlw	32	;' '
   561  1175  3420               	retlw	32	;' '
   562  1176  3434               	retlw	52	;'4'
   563  1177  342E               	retlw	46	;'.'
   564  1178  3420               	retlw	32	;' '
   565  1179  3444               	retlw	68	;'D'
   566  117A  3469               	retlw	105	;'i'
   567  117B  3476               	retlw	118	;'v'
   568  117C  3469               	retlw	105	;'i'
   569  117D  3473               	retlw	115	;'s'
   570  117E  3469               	retlw	105	;'i'
   571  117F  346F               	retlw	111	;'o'
   572  1180  346E               	retlw	110	;'n'
   573  1181  3420               	retlw	32	;' '
   574  1182  3420               	retlw	32	;' '
   575  1183  3420               	retlw	32	;' '
   576  1184  342A               	retlw	42	;'*'
   577  1185  342A               	retlw	42	;'*'
   578  1186  342A               	retlw	42	;'*'
   579  1187  342A               	retlw	42	;'*'
   580  1188  342A               	retlw	42	;'*'
   581  1189  342A               	retlw	42	;'*'
   582  118A  342A               	retlw	42	;'*'
   583  118B  342A               	retlw	42	;'*'
   584  118C  342A               	retlw	42	;'*'
   585  118D  340A               	retlw	10
   586  118E  3400               	retlw	0
   587  118F                     STR_11:	
   588  118F  3445               	retlw	69	;'E'
   589  1190  346C               	retlw	108	;'l'
   590  1191  3420               	retlw	32	;' '
   591  1192  3472               	retlw	114	;'r'
   592  1193  3465               	retlw	101	;'e'
   593  1194  3473               	retlw	115	;'s'
   594  1195  3475               	retlw	117	;'u'
   595  1196  346C               	retlw	108	;'l'
   596  1197  3474               	retlw	116	;'t'
   597  1198  3461               	retlw	97	;'a'
   598  1199  3464               	retlw	100	;'d'
   599  119A  346F               	retlw	111	;'o'
   600  119B  3420               	retlw	32	;' '
   601  119C  3464               	retlw	100	;'d'
   602  119D  3465               	retlw	101	;'e'
   603  119E  3420               	retlw	32	;' '
   604  119F  346C               	retlw	108	;'l'
   605  11A0  3461               	retlw	97	;'a'
   606  11A1  3420               	retlw	32	;' '
   607  11A2  3444               	retlw	68	;'D'
   608  11A3  3469               	retlw	105	;'i'
   609  11A4  3476               	retlw	118	;'v'
   610  11A5  3469               	retlw	105	;'i'
   611  11A6  3473               	retlw	115	;'s'
   612  11A7  3469               	retlw	105	;'i'
   613  11A8  346F               	retlw	111	;'o'
   614  11A9  346E               	retlw	110	;'n'
   615  11AA  3420               	retlw	32	;' '
   616  11AB  3465               	retlw	101	;'e'
   617  11AC  3473               	retlw	115	;'s'
   618  11AD  343A               	retlw	58	;':'
   619  11AE  3420               	retlw	32	;' '
   620  11AF  3425               	retlw	37	;'%'
   621  11B0  3466               	retlw	102	;'f'
   622  11B1  340A               	retlw	10
   623  11B2  3400               	retlw	0
   624  11B3                     STR_8:	
   625  11B3  3445               	retlw	69	;'E'
   626  11B4  346C               	retlw	108	;'l'
   627  11B5  3420               	retlw	32	;' '
   628  11B6  3472               	retlw	114	;'r'
   629  11B7  3465               	retlw	101	;'e'
   630  11B8  3473               	retlw	115	;'s'
   631  11B9  3475               	retlw	117	;'u'
   632  11BA  346C               	retlw	108	;'l'
   633  11BB  3474               	retlw	116	;'t'
   634  11BC  3461               	retlw	97	;'a'
   635  11BD  3464               	retlw	100	;'d'
   636  11BE  346F               	retlw	111	;'o'
   637  11BF  3420               	retlw	32	;' '
   638  11C0  3464               	retlw	100	;'d'
   639  11C1  3465               	retlw	101	;'e'
   640  11C2  3420               	retlw	32	;' '
   641  11C3  346C               	retlw	108	;'l'
   642  11C4  3461               	retlw	97	;'a'
   643  11C5  3420               	retlw	32	;' '
   644  11C6  3452               	retlw	82	;'R'
   645  11C7  3465               	retlw	101	;'e'
   646  11C8  3473               	retlw	115	;'s'
   647  11C9  3474               	retlw	116	;'t'
   648  11CA  3461               	retlw	97	;'a'
   649  11CB  3420               	retlw	32	;' '
   650  11CC  3465               	retlw	101	;'e'
   651  11CD  3473               	retlw	115	;'s'
   652  11CE  343A               	retlw	58	;':'
   653  11CF  3420               	retlw	32	;' '
   654  11D0  3425               	retlw	37	;'%'
   655  11D1  3466               	retlw	102	;'f'
   656  11D2  340A               	retlw	10
   657  11D3  3400               	retlw	0
   658  11D4                     STR_7:	
   659  11D4  3445               	retlw	69	;'E'
   660  11D5  346C               	retlw	108	;'l'
   661  11D6  3420               	retlw	32	;' '
   662  11D7  3472               	retlw	114	;'r'
   663  11D8  3465               	retlw	101	;'e'
   664  11D9  3473               	retlw	115	;'s'
   665  11DA  3475               	retlw	117	;'u'
   666  11DB  346C               	retlw	108	;'l'
   667  11DC  3474               	retlw	116	;'t'
   668  11DD  3461               	retlw	97	;'a'
   669  11DE  3464               	retlw	100	;'d'
   670  11DF  346F               	retlw	111	;'o'
   671  11E0  3420               	retlw	32	;' '
   672  11E1  3464               	retlw	100	;'d'
   673  11E2  3465               	retlw	101	;'e'
   674  11E3  3420               	retlw	32	;' '
   675  11E4  346C               	retlw	108	;'l'
   676  11E5  3461               	retlw	97	;'a'
   677  11E6  3420               	retlw	32	;' '
   678  11E7  3453               	retlw	83	;'S'
   679  11E8  3475               	retlw	117	;'u'
   680  11E9  346D               	retlw	109	;'m'
   681  11EA  3461               	retlw	97	;'a'
   682  11EB  3420               	retlw	32	;' '
   683  11EC  3465               	retlw	101	;'e'
   684  11ED  3473               	retlw	115	;'s'
   685  11EE  343A               	retlw	58	;':'
   686  11EF  3420               	retlw	32	;' '
   687  11F0  3425               	retlw	37	;'%'
   688  11F1  3466               	retlw	102	;'f'
   689  11F2  340A               	retlw	10
   690  11F3  3400               	retlw	0
   691  11F4                     STR_12:	
   692  11F4  344F               	retlw	79	;'O'
   693  11F5  3470               	retlw	112	;'p'
   694  11F6  3463               	retlw	99	;'c'
   695  11F7  3469               	retlw	105	;'i'
   696  11F8  346F               	retlw	111	;'o'
   697  11F9  346E               	retlw	110	;'n'
   698  11FA  3420               	retlw	32	;' '
   699  11FB  3449               	retlw	73	;'I'
   700  11FC  346E               	retlw	110	;'n'
   701  11FD  3463               	retlw	99	;'c'
   702  11FE  346F               	retlw	111	;'o'
   703  11FF  3472               	retlw	114	;'r'
   704  1200  3472               	retlw	114	;'r'
   705  1201  3465               	retlw	101	;'e'
   706  1202  3463               	retlw	99	;'c'
   707  1203  3474               	retlw	116	;'t'
   708  1204  3461               	retlw	97	;'a'
   709  1205  340A               	retlw	10
   710  1206  3420               	retlw	32	;' '
   711  1207  3400               	retlw	0
   712  10D9                     
   713                           	psect	cinit
   714  07D6                     start_initialization:	
   715                           ; #config settings
   716                           
   717  07D6                     __initialization:	
   718                           
   719                           ; Initialize objects allocated to BANK0
   720  07D6  120A  158A  2001  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   721  07DB  00EB               	movwf	__pdataBANK0& (0+127)
   722  07DC  120A  158A  2002  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   723  07E1  00EC               	movwf	(__pdataBANK0+1)& (0+127)
   724  07E2  120A  158A  2003   	fcall	__pidataBANK0+2	;fetch initializer
   725  07E5  00ED               	movwf	(__pdataBANK0+2)& (0+127)
   726                           
   727                           ; Clear objects allocated to BANK1
   728  07E6  1683               	bsf	3,5	;RP0=1, select bank1
   729  07E7  1303               	bcf	3,6	;RP1=0, select bank1
   730  07E8  01B6               	clrf	__pbssBANK1& (0+127)
   731  07E9  01B7               	clrf	(__pbssBANK1+1)& (0+127)
   732  07EA  01B8               	clrf	(__pbssBANK1+2)& (0+127)
   733  07EB  01B9               	clrf	(__pbssBANK1+3)& (0+127)
   734  07EC  01BA               	clrf	(__pbssBANK1+4)& (0+127)
   735  07ED  01BB               	clrf	(__pbssBANK1+5)& (0+127)
   736  07EE  01BC               	clrf	(__pbssBANK1+6)& (0+127)
   737  07EF  01BD               	clrf	(__pbssBANK1+7)& (0+127)
   738  07F0  01BE               	clrf	(__pbssBANK1+8)& (0+127)
   739  07F1  01BF               	clrf	(__pbssBANK1+9)& (0+127)
   740  07F2  01C0               	clrf	(__pbssBANK1+10)& (0+127)
   741  07F3  01C1               	clrf	(__pbssBANK1+11)& (0+127)
   742                           
   743                           ; Clear objects allocated to BANK0
   744  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   745  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   746  07F6  01E5               	clrf	__pbssBANK0& (0+127)
   747  07F7  01E6               	clrf	(__pbssBANK0+1)& (0+127)
   748  07F8  01E7               	clrf	(__pbssBANK0+2)& (0+127)
   749  07F9  01E8               	clrf	(__pbssBANK0+3)& (0+127)
   750  07FA  01E9               	clrf	(__pbssBANK0+4)& (0+127)
   751  07FB  01EA               	clrf	(__pbssBANK0+5)& (0+127)
   752  07FC                     end_of_initialization:	
   753                           ;End of C runtime variable initialization code
   754                           
   755  07FC                     __end_of__initialization:	
   756  07FC  0183               	clrf	3
   757  07FD  120A  158A  2BB3   	ljmp	_main	;jump to C main() function
   758                           
   759                           	psect	bssBANK0
   760  0065                     __pbssBANK0:	
   761  0065                     _suma:	
   762  0065                     	ds	3
   763  0068                     _b:	
   764  0068                     	ds	3
   765                           
   766                           	psect	dataBANK0
   767  006B                     __pdataBANK0:	
   768  006B                     _a:	
   769  006B                     	ds	3
   770                           
   771                           	psect	bssBANK1
   772  00B6                     __pbssBANK1:	
   773  00B6                     _division:	
   774  00B6                     	ds	3
   775  00B9                     _multiplicacion:	
   776  00B9                     	ds	3
   777  00BC                     _resta:	
   778  00BC                     	ds	3
   779  00BF                     _resultado:	
   780  00BF                     	ds	3
   781                           
   782                           	psect	cstackBANK1
   783  00A0                     __pcstackBANK1:	
   784  00A0                     _printf$663:	
   785                           
   786                           ; 3 bytes @ 0x0
   787  00A0                     	ds	3
   788  00A3                     printf@ap:	
   789                           
   790                           ; 1 bytes @ 0x3
   791  00A3                     	ds	1
   792  00A4                     printf@flag:	
   793                           
   794                           ; 2 bytes @ 0x4
   795  00A4                     	ds	2
   796  00A6                     printf@prec:	
   797                           
   798                           ; 2 bytes @ 0x6
   799  00A6                     	ds	2
   800  00A8                     printf@val:	
   801                           
   802                           ; 4 bytes @ 0x8
   803  00A8                     	ds	4
   804  00AC                     printf@exp:	
   805                           
   806                           ; 2 bytes @ 0xC
   807  00AC                     	ds	2
   808  00AE                     printf@tmpval:	
   809                           
   810                           ; 4 bytes @ 0xE
   811  00AE                     	ds	4
   812  00B2                     printf@fval:	
   813                           
   814                           ; 3 bytes @ 0x12
   815  00B2                     	ds	3
   816  00B5                     printf@c:	
   817                           
   818                           ; 1 bytes @ 0x15
   819  00B5                     	ds	1
   820                           
   821                           	psect	cstackCOMMON
   822  0070                     __pcstackCOMMON:	
   823  0070                     ?___ftge:	
   824  0070                     ?_putch:	
   825                           ; 1 bit 
   826                           
   827  0070                     ??_putch:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_iniciar_uart:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ??_iniciar_uart:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ?_main:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?___wmul:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?___awmod:	
   843                           ; 2 bytes @ 0x0
   844                           
   845  0070                     ?___ftpack:	
   846                           ; 2 bytes @ 0x0
   847                           
   848  0070                     ?___ftneg:	
   849                           ; 3 bytes @ 0x0
   850                           
   851  0070                     ?__tdiv_to_l_:	
   852                           ; 3 bytes @ 0x0
   853                           
   854  0070                     ?__div_to_l_:	
   855                           ; 4 bytes @ 0x0
   856                           
   857  0070                     ?___lldiv:	
   858                           ; 4 bytes @ 0x0
   859                           
   860  0070                     ?___llmod:	
   861                           ; 4 bytes @ 0x0
   862                           
   863  0070                     putch@dato:	
   864                           ; 4 bytes @ 0x0
   865                           
   866  0070                     ___wmul@multiplier:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     ___awmod@divisor:	
   870                           ; 2 bytes @ 0x0
   871                           
   872  0070                     __div_to_l_@f1:	
   873                           ; 2 bytes @ 0x0
   874                           
   875  0070                     ___ftpack@arg:	
   876                           ; 3 bytes @ 0x0
   877                           
   878  0070                     __tdiv_to_l_@f1:	
   879                           ; 3 bytes @ 0x0
   880                           
   881  0070                     ___ftge@ff1:	
   882                           ; 3 bytes @ 0x0
   883                           
   884  0070                     ___ftneg@f1:	
   885                           ; 3 bytes @ 0x0
   886                           
   887  0070                     ___lldiv@divisor:	
   888                           ; 3 bytes @ 0x0
   889                           
   890  0070                     ___llmod@divisor:	
   891                           ; 4 bytes @ 0x0
   892                           
   893                           
   894                           ; 4 bytes @ 0x0
   895  0070                     	ds	2
   896  0072                     ___wmul@multiplicand:	
   897  0072                     ___awmod@dividend:	
   898                           ; 2 bytes @ 0x2
   899                           
   900                           
   901                           ; 2 bytes @ 0x2
   902  0072                     	ds	1
   903  0073                     ??___ftneg:	
   904  0073                     ___ftpack@exp:	
   905                           ; 1 bytes @ 0x3
   906                           
   907  0073                     __div_to_l_@f2:	
   908                           ; 1 bytes @ 0x3
   909                           
   910  0073                     __tdiv_to_l_@f2:	
   911                           ; 3 bytes @ 0x3
   912                           
   913  0073                     ___ftge@ff2:	
   914                           ; 3 bytes @ 0x3
   915                           
   916                           
   917                           ; 3 bytes @ 0x3
   918  0073                     	ds	1
   919  0074                     ??___wmul:	
   920  0074                     ??___awmod:	
   921                           ; 1 bytes @ 0x4
   922                           
   923  0074                     ___ftpack@sign:	
   924                           ; 1 bytes @ 0x4
   925                           
   926  0074                     ___wmul@product:	
   927                           ; 1 bytes @ 0x4
   928                           
   929  0074                     ___lldiv@dividend:	
   930                           ; 2 bytes @ 0x4
   931                           
   932  0074                     ___llmod@dividend:	
   933                           ; 4 bytes @ 0x4
   934                           
   935                           
   936                           ; 4 bytes @ 0x4
   937  0074                     	ds	1
   938  0075                     ??___ftpack:	
   939  0075                     ___awmod@counter:	
   940                           ; 1 bytes @ 0x5
   941                           
   942                           
   943                           ; 1 bytes @ 0x5
   944  0075                     	ds	1
   945  0076                     ??__tdiv_to_l_:	
   946  0076                     ??__div_to_l_:	
   947                           ; 1 bytes @ 0x6
   948                           
   949  0076                     ??___ftge:	
   950                           ; 1 bytes @ 0x6
   951                           
   952  0076                     ___awmod@sign:	
   953                           ; 1 bytes @ 0x6
   954                           
   955                           
   956                           ; 1 bytes @ 0x6
   957  0076                     	ds	1
   958  0077                     ?___awdiv:	
   959  0077                     ___awdiv@divisor:	
   960                           ; 2 bytes @ 0x7
   961                           
   962                           
   963                           ; 2 bytes @ 0x7
   964  0077                     	ds	1
   965  0078                     ??___lldiv:	
   966  0078                     ??___llmod:	
   967                           ; 1 bytes @ 0x8
   968                           
   969  0078                     ?___ftdiv:	
   970                           ; 1 bytes @ 0x8
   971                           
   972  0078                     ?___lltoft:	
   973                           ; 3 bytes @ 0x8
   974                           
   975  0078                     ___ftdiv@f2:	
   976                           ; 3 bytes @ 0x8
   977                           
   978  0078                     ___lltoft@c:	
   979                           ; 3 bytes @ 0x8
   980                           
   981                           
   982                           ; 4 bytes @ 0x8
   983  0078                     	ds	1
   984  0079                     ___llmod@counter:	
   985  0079                     ___awdiv@dividend:	
   986                           ; 1 bytes @ 0x9
   987                           
   988  0079                     ___lldiv@quotient:	
   989                           ; 2 bytes @ 0x9
   990                           
   991                           
   992                           ; 4 bytes @ 0x9
   993  0079                     	ds	2
   994  007B                     ??___awdiv:	
   995  007B                     ___ftdiv@f1:	
   996                           ; 1 bytes @ 0xB
   997                           
   998                           
   999                           ; 3 bytes @ 0xB
  1000  007B                     	ds	1
  1001  007C                     ??___bmul:	
  1002  007C                     ??___lltoft:	
  1003                           ; 1 bytes @ 0xC
  1004                           
  1005                           
  1006                           ; 1 bytes @ 0xC
  1007  007C                     	ds	1
  1008  007D                     ___lldiv@counter:	
  1009  007D                     ___lltoft@exp:	
  1010                           ; 1 bytes @ 0xD
  1011                           
  1012                           
  1013                           ; 1 bytes @ 0xD
  1014  007D                     	ds	1
  1015  007E                     ??_main:	
  1016  007E                     ??___ftsub:	
  1017                           ; 1 bytes @ 0xE
  1018                           
  1019                           
  1020                           	psect	cstackBANK0
  1021  0020                     __pcstackBANK0:	
  1022                           ; 1 bytes @ 0xE
  1023                           
  1024  0020                     ??___ftdiv:	
  1025  0020                     ___awdiv@counter:	
  1026                           ; 1 bytes @ 0x0
  1027                           
  1028  0020                     __div_to_l_@quot:	
  1029                           ; 1 bytes @ 0x0
  1030                           
  1031  0020                     __tdiv_to_l_@quot:	
  1032                           ; 4 bytes @ 0x0
  1033                           
  1034                           
  1035                           ; 4 bytes @ 0x0
  1036  0020                     	ds	1
  1037  0021                     ___awdiv@sign:	
  1038                           
  1039                           ; 1 bytes @ 0x1
  1040  0021                     	ds	1
  1041  0022                     ___awdiv@quotient:	
  1042                           
  1043                           ; 2 bytes @ 0x2
  1044  0022                     	ds	2
  1045  0024                     ?___bmul:	
  1046  0024                     ___bmul@multiplicand:	
  1047                           ; 1 bytes @ 0x4
  1048                           
  1049  0024                     __div_to_l_@cntr:	
  1050                           ; 1 bytes @ 0x4
  1051                           
  1052  0024                     ___ftdiv@cntr:	
  1053                           ; 1 bytes @ 0x4
  1054                           
  1055  0024                     __tdiv_to_l_@cntr:	
  1056                           ; 1 bytes @ 0x4
  1057                           
  1058                           
  1059                           ; 1 bytes @ 0x4
  1060  0024                     	ds	1
  1061  0025                     ___bmul@product:	
  1062  0025                     __div_to_l_@exp1:	
  1063                           ; 1 bytes @ 0x5
  1064                           
  1065  0025                     __tdiv_to_l_@exp1:	
  1066                           ; 1 bytes @ 0x5
  1067                           
  1068  0025                     ___ftdiv@f3:	
  1069                           ; 1 bytes @ 0x5
  1070                           
  1071                           
  1072                           ; 3 bytes @ 0x5
  1073  0025                     	ds	1
  1074  0026                     ___bmul@multiplier:	
  1075                           
  1076                           ; 1 bytes @ 0x6
  1077  0026                     	ds	1
  1078  0027                     ?___ftmul:	
  1079  0027                     ___ftmul@f1:	
  1080                           ; 3 bytes @ 0x7
  1081                           
  1082                           
  1083                           ; 3 bytes @ 0x7
  1084  0027                     	ds	1
  1085  0028                     ___ftdiv@exp:	
  1086                           
  1087                           ; 1 bytes @ 0x8
  1088  0028                     	ds	1
  1089  0029                     ___ftdiv@sign:	
  1090                           
  1091                           ; 1 bytes @ 0x9
  1092  0029                     	ds	1
  1093  002A                     ___ftmul@f2:	
  1094                           
  1095                           ; 3 bytes @ 0xA
  1096  002A                     	ds	3
  1097  002D                     ??___ftmul:	
  1098                           
  1099                           ; 1 bytes @ 0xD
  1100  002D                     	ds	4
  1101  0031                     ___ftmul@exp:	
  1102                           
  1103                           ; 1 bytes @ 0x11
  1104  0031                     	ds	1
  1105  0032                     ___ftmul@f3_as_product:	
  1106                           
  1107                           ; 3 bytes @ 0x12
  1108  0032                     	ds	3
  1109  0035                     ___ftmul@cntr:	
  1110                           
  1111                           ; 1 bytes @ 0x15
  1112  0035                     	ds	1
  1113  0036                     ___ftmul@sign:	
  1114                           
  1115                           ; 1 bytes @ 0x16
  1116  0036                     	ds	1
  1117  0037                     ?_fround:	
  1118  0037                     ?_scale:	
  1119                           ; 3 bytes @ 0x17
  1120                           
  1121                           
  1122                           ; 3 bytes @ 0x17
  1123  0037                     	ds	3
  1124  003A                     ??_fround:	
  1125  003A                     ??_scale:	
  1126                           ; 1 bytes @ 0x1A
  1127                           
  1128                           
  1129                           ; 1 bytes @ 0x1A
  1130  003A                     	ds	2
  1131  003C                     _scale$662:	
  1132                           
  1133                           ; 3 bytes @ 0x1C
  1134  003C                     	ds	3
  1135  003F                     scale@scl:	
  1136                           
  1137                           ; 1 bytes @ 0x1F
  1138  003F                     	ds	1
  1139  0040                     ?___fttol:	
  1140  0040                     ___fttol@f1:	
  1141                           ; 4 bytes @ 0x20
  1142                           
  1143  0040                     _fround$661:	
  1144                           ; 3 bytes @ 0x20
  1145                           
  1146                           
  1147                           ; 3 bytes @ 0x20
  1148  0040                     	ds	3
  1149  0043                     _fround$660:	
  1150                           
  1151                           ; 3 bytes @ 0x23
  1152  0043                     	ds	1
  1153  0044                     ??___fttol:	
  1154                           
  1155                           ; 1 bytes @ 0x24
  1156  0044                     	ds	2
  1157  0046                     fround@prec:	
  1158                           
  1159                           ; 1 bytes @ 0x26
  1160  0046                     	ds	1
  1161  0047                     ?___ftadd:	
  1162  0047                     ___ftadd@f1:	
  1163                           ; 3 bytes @ 0x27
  1164                           
  1165                           
  1166                           ; 3 bytes @ 0x27
  1167  0047                     	ds	1
  1168  0048                     ___fttol@sign1:	
  1169                           
  1170                           ; 1 bytes @ 0x28
  1171  0048                     	ds	1
  1172  0049                     ___fttol@lval:	
  1173                           
  1174                           ; 4 bytes @ 0x29
  1175  0049                     	ds	1
  1176  004A                     ___ftadd@f2:	
  1177                           
  1178                           ; 3 bytes @ 0x2A
  1179  004A                     	ds	3
  1180  004D                     ??___ftadd:	
  1181  004D                     ___fttol@exp1:	
  1182                           ; 1 bytes @ 0x2D
  1183                           
  1184                           
  1185                           ; 1 bytes @ 0x2D
  1186  004D                     	ds	4
  1187  0051                     ___ftadd@sign:	
  1188                           
  1189                           ; 1 bytes @ 0x31
  1190  0051                     	ds	1
  1191  0052                     ___ftadd@exp2:	
  1192                           
  1193                           ; 1 bytes @ 0x32
  1194  0052                     	ds	1
  1195  0053                     ___ftadd@exp1:	
  1196                           
  1197                           ; 1 bytes @ 0x33
  1198  0053                     	ds	1
  1199  0054                     ?___ftsub:	
  1200  0054                     ___ftsub@f2:	
  1201                           ; 3 bytes @ 0x34
  1202                           
  1203                           
  1204                           ; 3 bytes @ 0x34
  1205  0054                     	ds	3
  1206  0057                     ___ftsub@f1:	
  1207                           
  1208                           ; 3 bytes @ 0x37
  1209  0057                     	ds	3
  1210  005A                     ?_printf:	
  1211  005A                     printf@f:	
  1212                           ; 2 bytes @ 0x3A
  1213                           
  1214                           
  1215                           ; 2 bytes @ 0x3A
  1216  005A                     	ds	5
  1217  005F                     ??_printf:	
  1218                           
  1219                           ; 1 bytes @ 0x3F
  1220  005F                     	ds	6
  1221                           
  1222                           	psect	maintext
  1223  0BB3                     __pmaintext:	
  1224 ;;
  1225 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1226 ;;
  1227 ;; *************** function _main *****************
  1228 ;; Defined at:
  1229 ;;		line 19 in file "Calculadora.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;		None
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : B00/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1243 ;;      Params:         0       0       0       0       0
  1244 ;;      Locals:         0       0       0       0       0
  1245 ;;      Temps:          0       0       0       0       0
  1246 ;;      Totals:         0       0       0       0       0
  1247 ;;Total ram usage:        0 bytes
  1248 ;; Hardware stack levels required when called:    4
  1249 ;; This function calls:
  1250 ;;		___ftadd
  1251 ;;		___ftdiv
  1252 ;;		___ftmul
  1253 ;;		___ftneg
  1254 ;;		_iniciar_uart
  1255 ;;		_printf
  1256 ;; This function is called by:
  1257 ;;		Startup code after reset
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           
  1262                           ;psect for function _main
  1263  0BB3                     _main:	
  1264                           
  1265                           ;Calculadora.c: 21: TRISB = 0b11111111;
  1266                           
  1267                           ;incstack = 0
  1268                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1269  0BB3  30FF               	movlw	255
  1270  0BB4  1683               	bsf	3,5	;RP0=1, select bank1
  1271  0BB5  1303               	bcf	3,6	;RP1=0, select bank1
  1272  0BB6  0086               	movwf	6	;volatile
  1273                           
  1274                           ;Calculadora.c: 22: PORTB = 0;
  1275  0BB7  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0BB8  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0BB9  0186               	clrf	6	;volatile
  1278  0BBA                     l2217:	
  1279                           ;Calculadora.c: 23: while (1) {
  1280                           
  1281                           
  1282                           ;Calculadora.c: 25: iniciar_uart();
  1283  0BBA  160A  118A  24A8  120A  158A  	fcall	_iniciar_uart
  1284                           
  1285                           ;Calculadora.c: 26: printf("************************************\n");
  1286  0BBF  30D9               	movlw	low (STR_1| (0+32768))
  1287  0BC0  1283               	bcf	3,5	;RP0=0, select bank0
  1288  0BC1  1303               	bcf	3,6	;RP1=0, select bank0
  1289  0BC2  00DA               	movwf	printf@f
  1290  0BC3  3090               	movlw	high (STR_1| (0+32768))
  1291  0BC4  00DB               	movwf	printf@f+1
  1292  0BC5  120A  118A  2275  120A  158A  	fcall	_printf
  1293                           
  1294                           ;Calculadora.c: 27: printf("******      1. Suma      *********\n");
  1295  0BCA  3023               	movlw	low (STR_2| (0+32768))
  1296  0BCB  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0BCC  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0BCD  00DA               	movwf	printf@f
  1299  0BCE  3091               	movlw	high (STR_2| (0+32768))
  1300  0BCF  00DB               	movwf	printf@f+1
  1301  0BD0  120A  118A  2275  120A  158A  	fcall	_printf
  1302                           
  1303                           ;Calculadora.c: 28: printf("******      2. Resta     *********\n");
  1304  0BD5  3047               	movlw	low (STR_3| (0+32768))
  1305  0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  1306  0BD7  1303               	bcf	3,6	;RP1=0, select bank0
  1307  0BD8  00DA               	movwf	printf@f
  1308  0BD9  3091               	movlw	high (STR_3| (0+32768))
  1309  0BDA  00DB               	movwf	printf@f+1
  1310  0BDB  120A  118A  2275  120A  158A  	fcall	_printf
  1311                           
  1312                           ;Calculadora.c: 29: printf("*****  3. Multiplicacion  ********\n");
  1313  0BE0  30FF               	movlw	low (STR_4| (0+32768))
  1314  0BE1  1283               	bcf	3,5	;RP0=0, select bank0
  1315  0BE2  1303               	bcf	3,6	;RP1=0, select bank0
  1316  0BE3  00DA               	movwf	printf@f
  1317  0BE4  3090               	movlw	high (STR_4| (0+32768))
  1318  0BE5  00DB               	movwf	printf@f+1
  1319  0BE6  120A  118A  2275  120A  158A  	fcall	_printf
  1320                           
  1321                           ;Calculadora.c: 30: printf("******     4. Division   *********\n");
  1322  0BEB  306B               	movlw	low (STR_5| (0+32768))
  1323  0BEC  1283               	bcf	3,5	;RP0=0, select bank0
  1324  0BED  1303               	bcf	3,6	;RP1=0, select bank0
  1325  0BEE  00DA               	movwf	printf@f
  1326  0BEF  3091               	movlw	high (STR_5| (0+32768))
  1327  0BF0  00DB               	movwf	printf@f+1
  1328  0BF1  120A  118A  2275  120A  158A  	fcall	_printf
  1329                           
  1330                           ;Calculadora.c: 31: printf("************************************\n");
  1331  0BF6  30D9               	movlw	low (STR_1| (0+32768))
  1332  0BF7  1283               	bcf	3,5	;RP0=0, select bank0
  1333  0BF8  1303               	bcf	3,6	;RP1=0, select bank0
  1334  0BF9  00DA               	movwf	printf@f
  1335  0BFA  3090               	movlw	high (STR_1| (0+32768))
  1336  0BFB  00DB               	movwf	printf@f+1
  1337  0BFC  120A  118A  2275  120A  158A  	fcall	_printf
  1338                           
  1339                           ;Calculadora.c: 33: suma = a+b;
  1340  0C01  1283               	bcf	3,5	;RP0=0, select bank0
  1341  0C02  1303               	bcf	3,6	;RP1=0, select bank0
  1342  0C03  0868               	movf	_b,w
  1343  0C04  00C7               	movwf	___ftadd@f1
  1344  0C05  0869               	movf	_b+1,w
  1345  0C06  00C8               	movwf	___ftadd@f1+1
  1346  0C07  086A               	movf	_b+2,w
  1347  0C08  00C9               	movwf	___ftadd@f1+2
  1348  0C09  086B               	movf	_a,w
  1349  0C0A  00CA               	movwf	___ftadd@f2
  1350  0C0B  086C               	movf	_a+1,w
  1351  0C0C  00CB               	movwf	___ftadd@f2+1
  1352  0C0D  086D               	movf	_a+2,w
  1353  0C0E  00CC               	movwf	___ftadd@f2+2
  1354  0C0F  120A  158A  2178  120A  158A  	fcall	___ftadd
  1355  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  1356  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  1357  0C16  0847               	movf	?___ftadd,w
  1358  0C17  00E5               	movwf	_suma
  1359  0C18  0848               	movf	?___ftadd+1,w
  1360  0C19  00E6               	movwf	_suma+1
  1361  0C1A  0849               	movf	?___ftadd+2,w
  1362  0C1B  00E7               	movwf	_suma+2
  1363                           
  1364                           ;Calculadora.c: 34: resta = a-b;
  1365  0C1C  086B               	movf	_a,w
  1366  0C1D  00C7               	movwf	___ftadd@f1
  1367  0C1E  086C               	movf	_a+1,w
  1368  0C1F  00C8               	movwf	___ftadd@f1+1
  1369  0C20  086D               	movf	_a+2,w
  1370  0C21  00C9               	movwf	___ftadd@f1+2
  1371  0C22  0868               	movf	_b,w
  1372  0C23  00F0               	movwf	___ftneg@f1
  1373  0C24  0869               	movf	_b+1,w
  1374  0C25  00F1               	movwf	___ftneg@f1+1
  1375  0C26  086A               	movf	_b+2,w
  1376  0C27  00F2               	movwf	___ftneg@f1+2
  1377  0C28  160A  118A  24AF  120A  158A  	fcall	___ftneg
  1378  0C2D  0870               	movf	?___ftneg,w
  1379  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  1380  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  1381  0C30  00CA               	movwf	___ftadd@f2
  1382  0C31  0871               	movf	?___ftneg+1,w
  1383  0C32  00CB               	movwf	___ftadd@f2+1
  1384  0C33  0872               	movf	?___ftneg+2,w
  1385  0C34  00CC               	movwf	___ftadd@f2+2
  1386  0C35  120A  158A  2178  120A  158A  	fcall	___ftadd
  1387  0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  1388  0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  1389  0C3C  0847               	movf	?___ftadd,w
  1390  0C3D  1683               	bsf	3,5	;RP0=1, select bank1
  1391  0C3E  1303               	bcf	3,6	;RP1=0, select bank1
  1392  0C3F  00BC               	movwf	_resta^(0+128)
  1393  0C40  1283               	bcf	3,5	;RP0=0, select bank0
  1394  0C41  1303               	bcf	3,6	;RP1=0, select bank0
  1395  0C42  0848               	movf	?___ftadd+1,w
  1396  0C43  1683               	bsf	3,5	;RP0=1, select bank1
  1397  0C44  1303               	bcf	3,6	;RP1=0, select bank1
  1398  0C45  00BD               	movwf	(_resta+1)^(0+128)
  1399  0C46  1283               	bcf	3,5	;RP0=0, select bank0
  1400  0C47  1303               	bcf	3,6	;RP1=0, select bank0
  1401  0C48  0849               	movf	?___ftadd+2,w
  1402  0C49  1683               	bsf	3,5	;RP0=1, select bank1
  1403  0C4A  1303               	bcf	3,6	;RP1=0, select bank1
  1404  0C4B  00BE               	movwf	(_resta+2)^(0+128)
  1405                           
  1406                           ;Calculadora.c: 35: multiplicacion = a*b;
  1407  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  1408  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  1409  0C4E  0868               	movf	_b,w
  1410  0C4F  00A7               	movwf	___ftmul@f1
  1411  0C50  0869               	movf	_b+1,w
  1412  0C51  00A8               	movwf	___ftmul@f1+1
  1413  0C52  086A               	movf	_b+2,w
  1414  0C53  00A9               	movwf	___ftmul@f1+2
  1415  0C54  086B               	movf	_a,w
  1416  0C55  00AA               	movwf	___ftmul@f2
  1417  0C56  086C               	movf	_a+1,w
  1418  0C57  00AB               	movwf	___ftmul@f2+1
  1419  0C58  086D               	movf	_a+2,w
  1420  0C59  00AC               	movwf	___ftmul@f2+2
  1421  0C5A  120A  158A  20A5  120A  158A  	fcall	___ftmul
  1422  0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  1423  0C60  1303               	bcf	3,6	;RP1=0, select bank0
  1424  0C61  0827               	movf	?___ftmul,w
  1425  0C62  1683               	bsf	3,5	;RP0=1, select bank1
  1426  0C63  1303               	bcf	3,6	;RP1=0, select bank1
  1427  0C64  00B9               	movwf	_multiplicacion^(0+128)
  1428  0C65  1283               	bcf	3,5	;RP0=0, select bank0
  1429  0C66  1303               	bcf	3,6	;RP1=0, select bank0
  1430  0C67  0828               	movf	?___ftmul+1,w
  1431  0C68  1683               	bsf	3,5	;RP0=1, select bank1
  1432  0C69  1303               	bcf	3,6	;RP1=0, select bank1
  1433  0C6A  00BA               	movwf	(_multiplicacion+1)^(0+128)
  1434  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  1435  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  1436  0C6D  0829               	movf	?___ftmul+2,w
  1437  0C6E  1683               	bsf	3,5	;RP0=1, select bank1
  1438  0C6F  1303               	bcf	3,6	;RP1=0, select bank1
  1439  0C70  00BB               	movwf	(_multiplicacion+2)^(0+128)
  1440                           
  1441                           ;Calculadora.c: 36: division = a/b;
  1442  0C71  1283               	bcf	3,5	;RP0=0, select bank0
  1443  0C72  1303               	bcf	3,6	;RP1=0, select bank0
  1444  0C73  0868               	movf	_b,w
  1445  0C74  00F8               	movwf	___ftdiv@f2
  1446  0C75  0869               	movf	_b+1,w
  1447  0C76  00F9               	movwf	___ftdiv@f2+1
  1448  0C77  086A               	movf	_b+2,w
  1449  0C78  00FA               	movwf	___ftdiv@f2+2
  1450  0C79  086B               	movf	_a,w
  1451  0C7A  00FB               	movwf	___ftdiv@f1
  1452  0C7B  086C               	movf	_a+1,w
  1453  0C7C  00FC               	movwf	___ftdiv@f1+1
  1454  0C7D  086D               	movf	_a+2,w
  1455  0C7E  00FD               	movwf	___ftdiv@f1+2
  1456  0C7F  120A  118A  200D  120A  158A  	fcall	___ftdiv
  1457  0C84  0878               	movf	?___ftdiv,w
  1458  0C85  1683               	bsf	3,5	;RP0=1, select bank1
  1459  0C86  1303               	bcf	3,6	;RP1=0, select bank1
  1460  0C87  00B6               	movwf	_division^(0+128)
  1461  0C88  0879               	movf	?___ftdiv+1,w
  1462  0C89  00B7               	movwf	(_division+1)^(0+128)
  1463  0C8A  087A               	movf	?___ftdiv+2,w
  1464  0C8B  00B8               	movwf	(_division+2)^(0+128)
  1465                           
  1466                           ;Calculadora.c: 38: if (PORTBbits.RB0 == 1){
  1467  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  1468  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  1469  0C8E  1C06               	btfss	6,0	;volatile
  1470  0C8F  2C9F               	goto	l2243
  1471                           
  1472                           ;Calculadora.c: 39: printf("El resultado de la Suma es: %f\n", suma);
  1473  0C90  30D4               	movlw	low (STR_7| (0+32768))
  1474  0C91  00DA               	movwf	printf@f
  1475  0C92  3091               	movlw	high (STR_7| (0+32768))
  1476  0C93  00DB               	movwf	printf@f+1
  1477  0C94  0865               	movf	_suma,w
  1478  0C95  00DC               	movwf	?_printf+2
  1479  0C96  0866               	movf	_suma+1,w
  1480  0C97  00DD               	movwf	?_printf+3
  1481  0C98  0867               	movf	_suma+2,w
  1482  0C99  00DE               	movwf	?_printf+4
  1483  0C9A  120A  118A  2275  120A  158A  	fcall	_printf
  1484  0C9F                     l2243:	
  1485                           
  1486                           ;Calculadora.c: 40: }
  1487                           ;Calculadora.c: 41: if (PORTBbits.RB1 == 1){
  1488  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  1489  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  1490  0CA1  1C86               	btfss	6,1	;volatile
  1491  0CA2  2CBE               	goto	l2247
  1492                           
  1493                           ;Calculadora.c: 42: printf("El resultado de la Resta es: %f\n", resta);
  1494  0CA3  30B3               	movlw	low (STR_8| (0+32768))
  1495  0CA4  00DA               	movwf	printf@f
  1496  0CA5  3091               	movlw	high (STR_8| (0+32768))
  1497  0CA6  00DB               	movwf	printf@f+1
  1498  0CA7  1683               	bsf	3,5	;RP0=1, select bank1
  1499  0CA8  1303               	bcf	3,6	;RP1=0, select bank1
  1500  0CA9  083C               	movf	_resta^(0+128),w
  1501  0CAA  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0CAB  1303               	bcf	3,6	;RP1=0, select bank0
  1503  0CAC  00DC               	movwf	?_printf+2
  1504  0CAD  1683               	bsf	3,5	;RP0=1, select bank1
  1505  0CAE  1303               	bcf	3,6	;RP1=0, select bank1
  1506  0CAF  083D               	movf	(_resta+1)^(0+128),w
  1507  0CB0  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0CB1  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0CB2  00DD               	movwf	?_printf+3
  1510  0CB3  1683               	bsf	3,5	;RP0=1, select bank1
  1511  0CB4  1303               	bcf	3,6	;RP1=0, select bank1
  1512  0CB5  083E               	movf	(_resta+2)^(0+128),w
  1513  0CB6  1283               	bcf	3,5	;RP0=0, select bank0
  1514  0CB7  1303               	bcf	3,6	;RP1=0, select bank0
  1515  0CB8  00DE               	movwf	?_printf+4
  1516  0CB9  120A  118A  2275  120A  158A  	fcall	_printf
  1517  0CBE                     l2247:	
  1518                           
  1519                           ;Calculadora.c: 44: }
  1520                           ;Calculadora.c: 45: if (PORTBbits.RB2 == 1){
  1521  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  1522  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  1523  0CC0  1D06               	btfss	6,2	;volatile
  1524  0CC1  2CDD               	goto	l2251
  1525                           
  1526                           ;Calculadora.c: 46: printf("El resultado de la Multiplicacion es: %f\n", multiplicacion)
      +                          ;
  1527  0CC2  3088               	movlw	low (STR_9| (0+32768))
  1528  0CC3  00DA               	movwf	printf@f
  1529  0CC4  3090               	movlw	high (STR_9| (0+32768))
  1530  0CC5  00DB               	movwf	printf@f+1
  1531  0CC6  1683               	bsf	3,5	;RP0=1, select bank1
  1532  0CC7  1303               	bcf	3,6	;RP1=0, select bank1
  1533  0CC8  0839               	movf	_multiplicacion^(0+128),w
  1534  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  1535  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  1536  0CCB  00DC               	movwf	?_printf+2
  1537  0CCC  1683               	bsf	3,5	;RP0=1, select bank1
  1538  0CCD  1303               	bcf	3,6	;RP1=0, select bank1
  1539  0CCE  083A               	movf	(_multiplicacion+1)^(0+128),w
  1540  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  1541  0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  1542  0CD1  00DD               	movwf	?_printf+3
  1543  0CD2  1683               	bsf	3,5	;RP0=1, select bank1
  1544  0CD3  1303               	bcf	3,6	;RP1=0, select bank1
  1545  0CD4  083B               	movf	(_multiplicacion+2)^(0+128),w
  1546  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  1547  0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  1548  0CD7  00DE               	movwf	?_printf+4
  1549  0CD8  120A  118A  2275  120A  158A  	fcall	_printf
  1550  0CDD                     l2251:	
  1551                           
  1552                           ;Calculadora.c: 47: }
  1553                           ;Calculadora.c: 48: if (PORTBbits.RB3 == 1){
  1554  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  1555  0CDE  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0CDF  1D86               	btfss	6,3	;volatile
  1557  0CE0  2D29               	goto	l2261
  1558                           
  1559                           ;Calculadora.c: 49: if (b==0){
  1560  0CE1  086A               	movf	_b+2,w
  1561  0CE2  0469               	iorwf	_b+1,w
  1562  0CE3  0468               	iorwf	_b,w
  1563  0CE4  1D03               	skipz
  1564  0CE5  2CF0               	goto	l2257
  1565                           
  1566                           ;Calculadora.c: 50: printf("Error, no es posible dividir entre 0.\n");
  1567  0CE6  30B2               	movlw	low (STR_10| (0+32768))
  1568  0CE7  00DA               	movwf	printf@f
  1569  0CE8  3090               	movlw	high (STR_10| (0+32768))
  1570  0CE9  00DB               	movwf	printf@f+1
  1571  0CEA  120A  118A  2275  120A  158A  	fcall	_printf
  1572                           
  1573                           ;Calculadora.c: 51: }
  1574  0CEF  2BBA               	goto	l2217
  1575  0CF0                     l2257:	
  1576                           
  1577                           ;Calculadora.c: 52: else {
  1578                           ;Calculadora.c: 53: resultado = a/b;
  1579  0CF0  1283               	bcf	3,5	;RP0=0, select bank0
  1580  0CF1  1303               	bcf	3,6	;RP1=0, select bank0
  1581  0CF2  0868               	movf	_b,w
  1582  0CF3  00F8               	movwf	___ftdiv@f2
  1583  0CF4  0869               	movf	_b+1,w
  1584  0CF5  00F9               	movwf	___ftdiv@f2+1
  1585  0CF6  086A               	movf	_b+2,w
  1586  0CF7  00FA               	movwf	___ftdiv@f2+2
  1587  0CF8  086B               	movf	_a,w
  1588  0CF9  00FB               	movwf	___ftdiv@f1
  1589  0CFA  086C               	movf	_a+1,w
  1590  0CFB  00FC               	movwf	___ftdiv@f1+1
  1591  0CFC  086D               	movf	_a+2,w
  1592  0CFD  00FD               	movwf	___ftdiv@f1+2
  1593  0CFE  120A  118A  200D  120A  158A  	fcall	___ftdiv
  1594  0D03  0878               	movf	?___ftdiv,w
  1595  0D04  1683               	bsf	3,5	;RP0=1, select bank1
  1596  0D05  1303               	bcf	3,6	;RP1=0, select bank1
  1597  0D06  00BF               	movwf	_resultado^(0+128)
  1598  0D07  0879               	movf	?___ftdiv+1,w
  1599  0D08  00C0               	movwf	(_resultado+1)^(0+128)
  1600  0D09  087A               	movf	?___ftdiv+2,w
  1601  0D0A  00C1               	movwf	(_resultado+2)^(0+128)
  1602                           
  1603                           ;Calculadora.c: 54: printf("El resultado de la Division es: %f\n", division);
  1604  0D0B  308F               	movlw	low (STR_11| (0+32768))
  1605  0D0C  1283               	bcf	3,5	;RP0=0, select bank0
  1606  0D0D  1303               	bcf	3,6	;RP1=0, select bank0
  1607  0D0E  00DA               	movwf	printf@f
  1608  0D0F  3091               	movlw	high (STR_11| (0+32768))
  1609  0D10  00DB               	movwf	printf@f+1
  1610  0D11  1683               	bsf	3,5	;RP0=1, select bank1
  1611  0D12  1303               	bcf	3,6	;RP1=0, select bank1
  1612  0D13  0836               	movf	_division^(0+128),w
  1613  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  1614  0D15  1303               	bcf	3,6	;RP1=0, select bank0
  1615  0D16  00DC               	movwf	?_printf+2
  1616  0D17  1683               	bsf	3,5	;RP0=1, select bank1
  1617  0D18  1303               	bcf	3,6	;RP1=0, select bank1
  1618  0D19  0837               	movf	(_division+1)^(0+128),w
  1619  0D1A  1283               	bcf	3,5	;RP0=0, select bank0
  1620  0D1B  1303               	bcf	3,6	;RP1=0, select bank0
  1621  0D1C  00DD               	movwf	?_printf+3
  1622  0D1D  1683               	bsf	3,5	;RP0=1, select bank1
  1623  0D1E  1303               	bcf	3,6	;RP1=0, select bank1
  1624  0D1F  0838               	movf	(_division+2)^(0+128),w
  1625  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  1626  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  1627  0D22  00DE               	movwf	?_printf+4
  1628  0D23  120A  118A  2275  120A  158A  	fcall	_printf
  1629                           
  1630                           ;Calculadora.c: 55: }
  1631                           ;Calculadora.c: 56: }
  1632  0D28  2BBA               	goto	l2217
  1633  0D29                     l2261:	
  1634                           
  1635                           ;Calculadora.c: 57: else {
  1636                           ;Calculadora.c: 58: printf("Opcion Incorrecta\n ");
  1637  0D29  30F4               	movlw	low (STR_12| (0+32768))
  1638  0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  1639  0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  1640  0D2C  00DA               	movwf	printf@f
  1641  0D2D  3091               	movlw	high (STR_12| (0+32768))
  1642  0D2E  00DB               	movwf	printf@f+1
  1643  0D2F  120A  118A  2275  120A  158A  	fcall	_printf
  1644  0D34  2BBA               	goto	l2217
  1645  0D35                     __end_of_main:	
  1646                           
  1647                           	psect	text1
  1648  0275                     __ptext1:	
  1649 ;; *************** function _printf *****************
  1650 ;; Defined at:
  1651 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  f               2   58[BANK0 ] PTR const unsigned char 
  1654 ;;		 -> STR_12(20), STR_11(36), STR_10(39), STR_9(42), 
  1655 ;;		 -> STR_8(33), STR_7(32), STR_6(38), STR_5(36), 
  1656 ;;		 -> STR_4(36), STR_3(36), STR_2(36), STR_1(38), 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  tmpval          4   14[BANK1 ] struct .
  1659 ;;  val             4    8[BANK1 ] unsigned long 
  1660 ;;  fval            3   18[BANK1 ] unsigned long 
  1661 ;;  exp             2   12[BANK1 ] int 
  1662 ;;  prec            2    6[BANK1 ] int 
  1663 ;;  flag            2    4[BANK1 ] unsigned short 
  1664 ;;  cp              2    0        PTR const unsigned char 
  1665 ;;  len             2    0        unsigned int 
  1666 ;;  width           2    0        int 
  1667 ;;  c               1   21[BANK1 ] char 
  1668 ;;  ap              1    3[BANK1 ] PTR void [1]
  1669 ;;		 -> ?_printf(2), 
  1670 ;;  d               1    0        unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  2   58[BANK0 ] int 
  1673 ;; Registers used:
  1674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1680 ;;      Params:         0       5       0       0       0
  1681 ;;      Locals:         0       0      22       0       0
  1682 ;;      Temps:          0       6       0       0       0
  1683 ;;      Totals:         0      11      22       0       0
  1684 ;;Total ram usage:       33 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; Hardware stack levels required when called:    3
  1687 ;; This function calls:
  1688 ;;		___awdiv
  1689 ;;		___ftadd
  1690 ;;		___ftge
  1691 ;;		___ftmul
  1692 ;;		___ftneg
  1693 ;;		___ftsub
  1694 ;;		___fttol
  1695 ;;		___lldiv
  1696 ;;		___llmod
  1697 ;;		___lltoft
  1698 ;;		___wmul
  1699 ;;		__div_to_l_
  1700 ;;		__tdiv_to_l_
  1701 ;;		_fround
  1702 ;;		_putch
  1703 ;;		_scale
  1704 ;; This function is called by:
  1705 ;;		_main
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           
  1710                           ;psect for function _printf
  1711  0275                     _printf:	
  1712                           
  1713                           ;doprnt.c: 466: va_list ap;
  1714                           ;doprnt.c: 499: signed char c;
  1715                           ;doprnt.c: 501: int width;
  1716                           ;doprnt.c: 504: int prec;
  1717                           ;doprnt.c: 508: unsigned short flag;
  1718                           ;doprnt.c: 515: char d;
  1719                           ;doprnt.c: 516: double fval;
  1720                           ;doprnt.c: 517: int exp;
  1721                           ;doprnt.c: 523: union {
  1722                           ;doprnt.c: 524: unsigned long vd;
  1723                           ;doprnt.c: 525: double integ;
  1724                           ;doprnt.c: 526: } tmpval;
  1725                           ;doprnt.c: 528: unsigned long val;
  1726                           ;doprnt.c: 529: unsigned len;
  1727                           ;doprnt.c: 530: const char * cp;
  1728                           ;doprnt.c: 533: *ap = __va_start();
  1729                           
  1730                           ;incstack = 0
  1731                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1732  0275  305C               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1733  0276  1283               	bcf	3,5	;RP0=0, select bank0
  1734  0277  1303               	bcf	3,6	;RP1=0, select bank0
  1735  0278  00DF               	movwf	??_printf
  1736  0279  085F               	movf	??_printf,w
  1737  027A  1683               	bsf	3,5	;RP0=1, select bank1
  1738  027B  1303               	bcf	3,6	;RP1=0, select bank1
  1739  027C  00A3               	movwf	printf@ap^(0+128)
  1740  027D                     l2169:	
  1741                           ;doprnt.c: 536: while(c = *f++) {
  1742                           
  1743  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1744  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1745  027F  085B               	movf	printf@f+1,w
  1746  0280  00E0               	movwf	??_printf+1
  1747  0281  085A               	movf	printf@f,w
  1748  0282  00DF               	movwf	??_printf
  1749  0283  0ADA               	incf	printf@f,f
  1750  0284  1903               	skipnz
  1751  0285  0ADB               	incf	printf@f+1,f
  1752  0286  0860               	movf	??_printf+1,w
  1753  0287  00FF               	movwf	127
  1754  0288  085F               	movf	??_printf,w
  1755  0289  0084               	movwf	4
  1756  028A  160A  118A  2000  120A  118A  	fcall	stringtab
  1757  028F  00E1               	movwf	??_printf+2
  1758  0290  0861               	movf	??_printf+2,w
  1759  0291  1683               	bsf	3,5	;RP0=1, select bank1
  1760  0292  1303               	bcf	3,6	;RP1=0, select bank1
  1761  0293  00B5               	movwf	printf@c^(0+128)
  1762  0294  0835               	movf	printf@c^(0+128),w
  1763  0295  1903               	btfsc	3,2
  1764  0296  0008               	return
  1765                           
  1766                           ;doprnt.c: 538: if(c != '%')
  1767  0297  3025               	movlw	37
  1768  0298  0635               	xorwf	printf@c^(0+128),w
  1769  0299  1903               	btfsc	3,2
  1770  029A  2AA2               	goto	l2029
  1771                           
  1772                           ;doprnt.c: 540: {
  1773                           ;doprnt.c: 541: (putch(c) );
  1774  029B  0835               	movf	printf@c^(0+128),w
  1775  029C  120A  118A  2005  120A  118A  	fcall	_putch
  1776                           
  1777                           ;doprnt.c: 542: continue;
  1778  02A1  2A7D               	goto	l2169
  1779  02A2                     l2029:	
  1780                           
  1781                           ;doprnt.c: 543: }
  1782                           ;doprnt.c: 548: flag = 0;
  1783  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  1784  02A3  1303               	bcf	3,6	;RP1=0, select bank1
  1785  02A4  01A4               	clrf	printf@flag^(0+128)
  1786  02A5  01A5               	clrf	(printf@flag+1)^(0+128)
  1787                           
  1788                           ;doprnt.c: 635: switch(c = *f++) {
  1789  02A6  2AA9               	goto	l2033
  1790  02A7                     l95:	
  1791                           ;doprnt.c: 662: case 'f':
  1792                           
  1793                           ;doprnt.c: 638: goto alldone;
  1794                           
  1795                           ;doprnt.c: 637: case 0:
  1796                           
  1797                           
  1798                           ;doprnt.c: 663: flag |= 0x400;
  1799  02A7  1525               	bsf	(printf@flag^(0+128)+1),2
  1800                           
  1801                           ;doprnt.c: 664: break;
  1802  02A8  2AC5               	goto	l2035
  1803  02A9                     l2033:	
  1804                           ;doprnt.c: 822: }
  1805                           
  1806                           ;doprnt.c: 813: continue;
  1807                           
  1808                           ;doprnt.c: 802: default:
  1809                           
  1810  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1811  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1812  02AB  085B               	movf	printf@f+1,w
  1813  02AC  00E0               	movwf	??_printf+1
  1814  02AD  085A               	movf	printf@f,w
  1815  02AE  00DF               	movwf	??_printf
  1816  02AF  0ADA               	incf	printf@f,f
  1817  02B0  1903               	skipnz
  1818  02B1  0ADB               	incf	printf@f+1,f
  1819  02B2  0860               	movf	??_printf+1,w
  1820  02B3  00FF               	movwf	127
  1821  02B4  085F               	movf	??_printf,w
  1822  02B5  0084               	movwf	4
  1823  02B6  160A  118A  2000  120A  118A  	fcall	stringtab
  1824  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  1825  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  1826  02BD  00B5               	movwf	printf@c^(0+128)
  1827                           
  1828                           ; Switch size 1, requested type "space"
  1829                           ; Number of cases is 2, Range of values is 0 to 102
  1830                           ; switch strategies available:
  1831                           ; Name         Instructions Cycles
  1832                           ; simple_byte            7     4 (average)
  1833                           ; jumptable            260     6 (fixed)
  1834                           ;	Chosen strategy is simple_byte
  1835  02BE  3A00               	xorlw	0	; case 0
  1836  02BF  1903               	skipnz
  1837  02C0  2FD5               	goto	l137
  1838  02C1  3A66               	xorlw	102	; case 102
  1839  02C2  1903               	skipnz
  1840  02C3  2AA7               	goto	l95
  1841  02C4  2A7D               	goto	l2169
  1842  02C5                     l2035:	
  1843                           
  1844                           ;doprnt.c: 825: if(flag & (0x700)) {
  1845  02C5  3000               	movlw	0
  1846  02C6  0524               	andwf	printf@flag^(0+128),w
  1847  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1848  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1849  02C9  00DF               	movwf	??_printf
  1850  02CA  3007               	movlw	7
  1851  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  1852  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  1853  02CD  0525               	andwf	(printf@flag+1)^(0+128),w
  1854  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  1855  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  1856  02D0  00E0               	movwf	??_printf+1
  1857  02D1  085F               	movf	??_printf,w
  1858  02D2  0460               	iorwf	??_printf+1,w
  1859  02D3  1903               	btfsc	3,2
  1860  02D4  2FBC               	goto	l2165
  1861                           
  1862                           ;doprnt.c: 829: prec = 6;
  1863  02D5  3006               	movlw	6
  1864  02D6  1683               	bsf	3,5	;RP0=1, select bank1
  1865  02D7  1303               	bcf	3,6	;RP1=0, select bank1
  1866  02D8  00A6               	movwf	printf@prec^(0+128)
  1867  02D9  3000               	movlw	0
  1868  02DA  00A7               	movwf	(printf@prec^(0+128)+1)
  1869                           
  1870                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1871  02DB  0823               	movf	printf@ap^(0+128),w
  1872  02DC  0084               	movwf	4
  1873  02DD  1383               	bcf	3,7	;select IRP bank0
  1874  02DE  0800               	movf	0,w
  1875  02DF  00B2               	movwf	printf@fval^(0+128)
  1876  02E0  0A84               	incf	4,f
  1877  02E1  0800               	movf	0,w
  1878  02E2  00B3               	movwf	(printf@fval+1)^(0+128)
  1879  02E3  0A84               	incf	4,f
  1880  02E4  0800               	movf	0,w
  1881  02E5  00B4               	movwf	(printf@fval+2)^(0+128)
  1882  02E6  3003               	movlw	3
  1883  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  1884  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  1885  02E9  00DF               	movwf	??_printf
  1886  02EA  085F               	movf	??_printf,w
  1887  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  1888  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  1889  02ED  07A3               	addwf	printf@ap^(0+128),f
  1890                           
  1891                           ;doprnt.c: 831: if(fval < 0.0) {
  1892  02EE  0832               	movf	printf@fval^(0+128),w
  1893  02EF  00F0               	movwf	___ftge@ff1
  1894  02F0  0833               	movf	(printf@fval+1)^(0+128),w
  1895  02F1  00F1               	movwf	___ftge@ff1+1
  1896  02F2  0834               	movf	(printf@fval+2)^(0+128),w
  1897  02F3  00F2               	movwf	___ftge@ff1+2
  1898  02F4  3000               	movlw	0
  1899  02F5  00F3               	movwf	___ftge@ff2
  1900  02F6  3000               	movlw	0
  1901  02F7  00F4               	movwf	___ftge@ff2+1
  1902  02F8  3000               	movlw	0
  1903  02F9  00F5               	movwf	___ftge@ff2+2
  1904  02FA  160A  118A  2616  120A  118A  	fcall	___ftge
  1905  02FF  1803               	btfsc	3,0
  1906  0300  2B1A               	goto	l2049
  1907                           
  1908                           ;doprnt.c: 832: fval = -fval;
  1909  0301  1683               	bsf	3,5	;RP0=1, select bank1
  1910  0302  1303               	bcf	3,6	;RP1=0, select bank1
  1911  0303  0832               	movf	printf@fval^(0+128),w
  1912  0304  00F0               	movwf	___ftneg@f1
  1913  0305  0833               	movf	(printf@fval+1)^(0+128),w
  1914  0306  00F1               	movwf	___ftneg@f1+1
  1915  0307  0834               	movf	(printf@fval+2)^(0+128),w
  1916  0308  00F2               	movwf	___ftneg@f1+2
  1917  0309  160A  118A  24AF  120A  118A  	fcall	___ftneg
  1918  030E  0870               	movf	?___ftneg,w
  1919  030F  1683               	bsf	3,5	;RP0=1, select bank1
  1920  0310  1303               	bcf	3,6	;RP1=0, select bank1
  1921  0311  00B2               	movwf	printf@fval^(0+128)
  1922  0312  0871               	movf	?___ftneg+1,w
  1923  0313  00B3               	movwf	(printf@fval+1)^(0+128)
  1924  0314  0872               	movf	?___ftneg+2,w
  1925  0315  00B4               	movwf	(printf@fval+2)^(0+128)
  1926                           
  1927                           ;doprnt.c: 833: flag |= 0x03;
  1928  0316  3003               	movlw	3
  1929  0317  04A4               	iorwf	printf@flag^(0+128),f
  1930  0318  3000               	movlw	0
  1931  0319  04A5               	iorwf	(printf@flag+1)^(0+128),f
  1932  031A                     l2049:	
  1933                           
  1934                           ;doprnt.c: 834: }
  1935                           ;doprnt.c: 835: exp = 0;
  1936  031A  1683               	bsf	3,5	;RP0=1, select bank1
  1937  031B  1303               	bcf	3,6	;RP1=0, select bank1
  1938  031C  01AC               	clrf	printf@exp^(0+128)
  1939  031D  01AD               	clrf	(printf@exp+1)^(0+128)
  1940                           
  1941                           ;doprnt.c: 836: if( fval!=0) {
  1942  031E  0834               	movf	(printf@fval+2)^(0+128),w
  1943  031F  0433               	iorwf	(printf@fval+1)^(0+128),w
  1944  0320  0432               	iorwf	printf@fval^(0+128),w
  1945  0321  1903               	skipnz
  1946  0322  2C0E               	goto	l2077
  1947                           
  1948                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1949  0323  30B2               	movlw	low (printf@fval| 0)
  1950  0324  0084               	movwf	4
  1951  0325  1383               	bcf	3,7	;select IRP bank1
  1952  0326  0800               	movf	0,w
  1953  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1954  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1955  0329  00DF               	movwf	??_printf
  1956  032A  0A84               	incf	4,f
  1957  032B  0800               	movf	0,w
  1958  032C  00E0               	movwf	??_printf+1
  1959  032D  0A84               	incf	4,f
  1960  032E  0800               	movf	0,w
  1961  032F  00E1               	movwf	??_printf+2
  1962  0330  0A84               	incf	4,f
  1963  0331  0800               	movf	0,w
  1964  0332  00E2               	movwf	??_printf+3
  1965  0333  300F               	movlw	15
  1966  0334                     u3285:	
  1967  0334  1003               	clrc
  1968  0335  0CE2               	rrf	??_printf+3,f
  1969  0336  0CE1               	rrf	??_printf+2,f
  1970  0337  0CE0               	rrf	??_printf+1,f
  1971  0338  0CDF               	rrf	??_printf,f
  1972  0339  3EFF               	addlw	-1
  1973  033A  1D03               	skipz
  1974  033B  2B34               	goto	u3285
  1975  033C  30FF               	movlw	255
  1976  033D  055F               	andwf	??_printf,w
  1977  033E  00E3               	movwf	??_printf+4
  1978  033F  3000               	movlw	0
  1979  0340  0560               	andwf	??_printf+1,w
  1980  0341  00E4               	movwf	??_printf+5
  1981  0342  0863               	movf	??_printf+4,w
  1982  0343  3E82               	addlw	130
  1983  0344  1683               	bsf	3,5	;RP0=1, select bank1
  1984  0345  1303               	bcf	3,6	;RP1=0, select bank1
  1985  0346  00AC               	movwf	printf@exp^(0+128)
  1986  0347  1283               	bcf	3,5	;RP0=0, select bank0
  1987  0348  1303               	bcf	3,6	;RP1=0, select bank0
  1988  0349  0864               	movf	??_printf+5,w
  1989  034A  1803               	skipnc
  1990  034B  3E01               	addlw	1
  1991  034C  3EFF               	addlw	255
  1992  034D  1683               	bsf	3,5	;RP0=1, select bank1
  1993  034E  1303               	bcf	3,6	;RP1=0, select bank1
  1994  034F  00AD               	movwf	(printf@exp+1)^(0+128)
  1995                           
  1996                           ;doprnt.c: 838: exp--;
  1997  0350  30FF               	movlw	255
  1998  0351  07AC               	addwf	printf@exp^(0+128),f
  1999  0352  1803               	skipnc
  2000  0353  0AAD               	incf	(printf@exp+1)^(0+128),f
  2001  0354  30FF               	movlw	255
  2002  0355  07AD               	addwf	(printf@exp+1)^(0+128),f
  2003                           
  2004                           ;doprnt.c: 839: exp *= 3;
  2005  0356  3003               	movlw	3
  2006  0357  00F0               	movwf	___wmul@multiplier
  2007  0358  3000               	movlw	0
  2008  0359  00F1               	movwf	___wmul@multiplier+1
  2009  035A  082D               	movf	(printf@exp+1)^(0+128),w
  2010  035B  00F3               	movwf	___wmul@multiplicand+1
  2011  035C  082C               	movf	printf@exp^(0+128),w
  2012  035D  00F2               	movwf	___wmul@multiplicand
  2013  035E  160A  118A  24D8  120A  118A  	fcall	___wmul
  2014  0363  0871               	movf	?___wmul+1,w
  2015  0364  1683               	bsf	3,5	;RP0=1, select bank1
  2016  0365  1303               	bcf	3,6	;RP1=0, select bank1
  2017  0366  00AD               	movwf	(printf@exp+1)^(0+128)
  2018  0367  0870               	movf	?___wmul,w
  2019  0368  00AC               	movwf	printf@exp^(0+128)
  2020                           
  2021                           ;doprnt.c: 840: exp /= 10;
  2022  0369  300A               	movlw	10
  2023  036A  00F7               	movwf	___awdiv@divisor
  2024  036B  3000               	movlw	0
  2025  036C  00F8               	movwf	___awdiv@divisor+1
  2026  036D  082D               	movf	(printf@exp+1)^(0+128),w
  2027  036E  00FA               	movwf	___awdiv@dividend+1
  2028  036F  082C               	movf	printf@exp^(0+128),w
  2029  0370  00F9               	movwf	___awdiv@dividend
  2030  0371  160A  118A  25BB  120A  118A  	fcall	___awdiv
  2031  0376  0878               	movf	?___awdiv+1,w
  2032  0377  1683               	bsf	3,5	;RP0=1, select bank1
  2033  0378  1303               	bcf	3,6	;RP1=0, select bank1
  2034  0379  00AD               	movwf	(printf@exp+1)^(0+128)
  2035  037A  0877               	movf	?___awdiv,w
  2036  037B  00AC               	movwf	printf@exp^(0+128)
  2037                           
  2038                           ;doprnt.c: 841: if(exp < 0)
  2039  037C  1FAD               	btfss	(printf@exp+1)^(0+128),7
  2040  037D  2B84               	goto	l2065
  2041                           
  2042                           ;doprnt.c: 842: exp--;
  2043  037E  30FF               	movlw	255
  2044  037F  07AC               	addwf	printf@exp^(0+128),f
  2045  0380  1803               	skipnc
  2046  0381  0AAD               	incf	(printf@exp+1)^(0+128),f
  2047  0382  30FF               	movlw	255
  2048  0383  07AD               	addwf	(printf@exp+1)^(0+128),f
  2049  0384                     l2065:	
  2050                           
  2051                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2052  0384  032C               	decf	printf@exp^(0+128),w
  2053  0385  3AFF               	xorlw	255
  2054  0386  120A  158A  2535  120A  118A  	fcall	_scale
  2055  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2056  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2057  038D  0837               	movf	?_scale,w
  2058  038E  1683               	bsf	3,5	;RP0=1, select bank1
  2059  038F  1303               	bcf	3,6	;RP1=0, select bank1
  2060  0390  00AE               	movwf	printf@tmpval^(0+128)
  2061  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2062  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2063  0393  0838               	movf	?_scale+1,w
  2064  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2065  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2066  0396  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2067  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2069  0399  0839               	movf	?_scale+2,w
  2070  039A  1683               	bsf	3,5	;RP0=1, select bank1
  2071  039B  1303               	bcf	3,6	;RP1=0, select bank1
  2072  039C  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2073                           
  2074                           ;doprnt.c: 847: tmpval.integ *= fval;
  2075  039D  0832               	movf	printf@fval^(0+128),w
  2076  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2077  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2078  03A0  00A7               	movwf	___ftmul@f1
  2079  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  2080  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  2081  03A3  0833               	movf	(printf@fval+1)^(0+128),w
  2082  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2083  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2084  03A6  00A8               	movwf	___ftmul@f1+1
  2085  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2086  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  2087  03A9  0834               	movf	(printf@fval+2)^(0+128),w
  2088  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  2089  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  2090  03AC  00A9               	movwf	___ftmul@f1+2
  2091  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  2092  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  2093  03AF  082E               	movf	printf@tmpval^(0+128),w
  2094  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2095  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2096  03B2  00AA               	movwf	___ftmul@f2
  2097  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  2098  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  2099  03B5  082F               	movf	(printf@tmpval+1)^(0+128),w
  2100  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2101  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2102  03B8  00AB               	movwf	___ftmul@f2+1
  2103  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  2104  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  2105  03BB  0830               	movf	(printf@tmpval+2)^(0+128),w
  2106  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2107  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2108  03BE  00AC               	movwf	___ftmul@f2+2
  2109  03BF  120A  158A  20A5  120A  118A  	fcall	___ftmul
  2110  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2111  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2112  03C6  0827               	movf	?___ftmul,w
  2113  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  2114  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  2115  03C9  00AE               	movwf	printf@tmpval^(0+128)
  2116  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2117  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2118  03CC  0828               	movf	?___ftmul+1,w
  2119  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2120  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  2121  03CF  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2122  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2123  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2124  03D2  0829               	movf	?___ftmul+2,w
  2125  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2126  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  2127  03D5  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2128                           
  2129                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2130  03D6  082E               	movf	printf@tmpval^(0+128),w
  2131  03D7  00F0               	movwf	___ftge@ff1
  2132  03D8  082F               	movf	(printf@tmpval+1)^(0+128),w
  2133  03D9  00F1               	movwf	___ftge@ff1+1
  2134  03DA  0830               	movf	(printf@tmpval+2)^(0+128),w
  2135  03DB  00F2               	movwf	___ftge@ff1+2
  2136  03DC  3000               	movlw	0
  2137  03DD  00F3               	movwf	___ftge@ff2
  2138  03DE  3080               	movlw	128
  2139  03DF  00F4               	movwf	___ftge@ff2+1
  2140  03E0  303F               	movlw	63
  2141  03E1  00F5               	movwf	___ftge@ff2+2
  2142  03E2  160A  118A  2616  120A  118A  	fcall	___ftge
  2143  03E7  1803               	btfsc	3,0
  2144  03E8  2BF1               	goto	l2073
  2145                           
  2146                           ;doprnt.c: 849: exp--;
  2147  03E9  30FF               	movlw	255
  2148  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  2149  03EB  1303               	bcf	3,6	;RP1=0, select bank1
  2150  03EC  07AC               	addwf	printf@exp^(0+128),f
  2151  03ED  1803               	skipnc
  2152  03EE  0AAD               	incf	(printf@exp+1)^(0+128),f
  2153  03EF  30FF               	movlw	255
  2154  03F0  2C0D               	goto	L1
  2155  03F1                     l2073:	
  2156                           
  2157                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2158  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  2159  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  2160  03F3  082E               	movf	printf@tmpval^(0+128),w
  2161  03F4  00F0               	movwf	___ftge@ff1
  2162  03F5  082F               	movf	(printf@tmpval+1)^(0+128),w
  2163  03F6  00F1               	movwf	___ftge@ff1+1
  2164  03F7  0830               	movf	(printf@tmpval+2)^(0+128),w
  2165  03F8  00F2               	movwf	___ftge@ff1+2
  2166  03F9  3000               	movlw	0
  2167  03FA  00F3               	movwf	___ftge@ff2
  2168  03FB  3020               	movlw	32
  2169  03FC  00F4               	movwf	___ftge@ff2+1
  2170  03FD  3041               	movlw	65
  2171  03FE  00F5               	movwf	___ftge@ff2+2
  2172  03FF  160A  118A  2616  120A  118A  	fcall	___ftge
  2173  0404  1C03               	btfss	3,0
  2174  0405  2C0E               	goto	l2077
  2175                           
  2176                           ;doprnt.c: 851: exp++;
  2177  0406  3001               	movlw	1
  2178  0407  1683               	bsf	3,5	;RP0=1, select bank1
  2179  0408  1303               	bcf	3,6	;RP1=0, select bank1
  2180  0409  07AC               	addwf	printf@exp^(0+128),f
  2181  040A  1803               	skipnc
  2182  040B  0AAD               	incf	(printf@exp+1)^(0+128),f
  2183  040C  3000               	movlw	0
  2184  040D                     L1:	
  2185  040D  07AD               	addwf	(printf@exp+1)^(0+128),f
  2186  040E                     l2077:	
  2187                           
  2188                           ;doprnt.c: 852: }
  2189                           ;doprnt.c: 1112: if(prec <= 12)
  2190  040E  1683               	bsf	3,5	;RP0=1, select bank1
  2191  040F  1303               	bcf	3,6	;RP1=0, select bank1
  2192  0410  0827               	movf	(printf@prec+1)^(0+128),w
  2193  0411  3A80               	xorlw	128
  2194  0412  00FF               	movwf	127
  2195  0413  3080               	movlw	128
  2196  0414  027F               	subwf	127,w
  2197  0415  1D03               	skipz
  2198  0416  2C19               	goto	u3325
  2199  0417  300D               	movlw	13
  2200  0418  0226               	subwf	printf@prec^(0+128),w
  2201  0419                     u3325:	
  2202  0419  1803               	skipnc
  2203  041A  2C54               	goto	l2081
  2204                           
  2205                           ;doprnt.c: 1113: fval += fround(prec);
  2206  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2207  041C  1303               	bcf	3,6	;RP1=0, select bank1
  2208  041D  0826               	movf	printf@prec^(0+128),w
  2209  041E  120A  118A  20C3  120A  118A  	fcall	_fround
  2210  0423  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0424  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0425  0837               	movf	?_fround,w
  2213  0426  00C7               	movwf	___ftadd@f1
  2214  0427  0838               	movf	?_fround+1,w
  2215  0428  00C8               	movwf	___ftadd@f1+1
  2216  0429  0839               	movf	?_fround+2,w
  2217  042A  00C9               	movwf	___ftadd@f1+2
  2218  042B  1683               	bsf	3,5	;RP0=1, select bank1
  2219  042C  1303               	bcf	3,6	;RP1=0, select bank1
  2220  042D  0832               	movf	printf@fval^(0+128),w
  2221  042E  1283               	bcf	3,5	;RP0=0, select bank0
  2222  042F  1303               	bcf	3,6	;RP1=0, select bank0
  2223  0430  00CA               	movwf	___ftadd@f2
  2224  0431  1683               	bsf	3,5	;RP0=1, select bank1
  2225  0432  1303               	bcf	3,6	;RP1=0, select bank1
  2226  0433  0833               	movf	(printf@fval+1)^(0+128),w
  2227  0434  1283               	bcf	3,5	;RP0=0, select bank0
  2228  0435  1303               	bcf	3,6	;RP1=0, select bank0
  2229  0436  00CB               	movwf	___ftadd@f2+1
  2230  0437  1683               	bsf	3,5	;RP0=1, select bank1
  2231  0438  1303               	bcf	3,6	;RP1=0, select bank1
  2232  0439  0834               	movf	(printf@fval+2)^(0+128),w
  2233  043A  1283               	bcf	3,5	;RP0=0, select bank0
  2234  043B  1303               	bcf	3,6	;RP1=0, select bank0
  2235  043C  00CC               	movwf	___ftadd@f2+2
  2236  043D  120A  158A  2178  120A  118A  	fcall	___ftadd
  2237  0442  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0443  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0444  0847               	movf	?___ftadd,w
  2240  0445  1683               	bsf	3,5	;RP0=1, select bank1
  2241  0446  1303               	bcf	3,6	;RP1=0, select bank1
  2242  0447  00B2               	movwf	printf@fval^(0+128)
  2243  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2244  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2245  044A  0848               	movf	?___ftadd+1,w
  2246  044B  1683               	bsf	3,5	;RP0=1, select bank1
  2247  044C  1303               	bcf	3,6	;RP1=0, select bank1
  2248  044D  00B3               	movwf	(printf@fval+1)^(0+128)
  2249  044E  1283               	bcf	3,5	;RP0=0, select bank0
  2250  044F  1303               	bcf	3,6	;RP1=0, select bank0
  2251  0450  0849               	movf	?___ftadd+2,w
  2252  0451  1683               	bsf	3,5	;RP0=1, select bank1
  2253  0452  1303               	bcf	3,6	;RP1=0, select bank1
  2254  0453  00B4               	movwf	(printf@fval+2)^(0+128)
  2255  0454                     l2081:	
  2256                           
  2257                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2258  0454  1683               	bsf	3,5	;RP0=1, select bank1
  2259  0455  1303               	bcf	3,6	;RP1=0, select bank1
  2260  0456  082D               	movf	(printf@exp+1)^(0+128),w
  2261  0457  3A80               	xorlw	128
  2262  0458  00FF               	movwf	127
  2263  0459  3080               	movlw	128
  2264  045A  027F               	subwf	127,w
  2265  045B  1D03               	skipz
  2266  045C  2C5F               	goto	u3335
  2267  045D  300A               	movlw	10
  2268  045E  022C               	subwf	printf@exp^(0+128),w
  2269  045F                     u3335:	
  2270  045F  1803               	skipnc
  2271  0460  2C92               	goto	l2089
  2272  0461  1683               	bsf	3,5	;RP0=1, select bank1
  2273  0462  1303               	bcf	3,6	;RP1=0, select bank1
  2274  0463  0834               	movf	(printf@fval+2)^(0+128),w
  2275  0464  0433               	iorwf	(printf@fval+1)^(0+128),w
  2276  0465  0432               	iorwf	printf@fval^(0+128),w
  2277  0466  1903               	skipnz
  2278  0467  2CEB               	goto	l2103
  2279  0468  0832               	movf	printf@fval^(0+128),w
  2280  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2281  046A  1303               	bcf	3,6	;RP1=0, select bank0
  2282  046B  00C0               	movwf	___fttol@f1
  2283  046C  1683               	bsf	3,5	;RP0=1, select bank1
  2284  046D  1303               	bcf	3,6	;RP1=0, select bank1
  2285  046E  0833               	movf	(printf@fval+1)^(0+128),w
  2286  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2287  0470  1303               	bcf	3,6	;RP1=0, select bank0
  2288  0471  00C1               	movwf	___fttol@f1+1
  2289  0472  1683               	bsf	3,5	;RP0=1, select bank1
  2290  0473  1303               	bcf	3,6	;RP1=0, select bank1
  2291  0474  0834               	movf	(printf@fval+2)^(0+128),w
  2292  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2293  0476  1303               	bcf	3,6	;RP1=0, select bank0
  2294  0477  00C2               	movwf	___fttol@f1+2
  2295  0478  120A  158A  2017  120A  118A  	fcall	___fttol
  2296  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2297  047E  1303               	bcf	3,6	;RP1=0, select bank0
  2298  047F  0843               	movf	?___fttol+3,w
  2299  0480  0442               	iorwf	?___fttol+2,w
  2300  0481  0441               	iorwf	?___fttol+1,w
  2301  0482  0440               	iorwf	?___fttol,w
  2302  0483  1D03               	skipz
  2303  0484  2CEB               	goto	l2103
  2304  0485  1683               	bsf	3,5	;RP0=1, select bank1
  2305  0486  1303               	bcf	3,6	;RP1=0, select bank1
  2306  0487  082D               	movf	(printf@exp+1)^(0+128),w
  2307  0488  3A80               	xorlw	128
  2308  0489  00FF               	movwf	127
  2309  048A  3080               	movlw	128
  2310  048B  027F               	subwf	127,w
  2311  048C  1D03               	skipz
  2312  048D  2C90               	goto	u3365
  2313  048E  3002               	movlw	2
  2314  048F  022C               	subwf	printf@exp^(0+128),w
  2315  0490                     u3365:	
  2316  0490  1C03               	skipc
  2317  0491  2CEB               	goto	l2103
  2318  0492                     l2089:	
  2319                           
  2320                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2321  0492  1683               	bsf	3,5	;RP0=1, select bank1
  2322  0493  1303               	bcf	3,6	;RP1=0, select bank1
  2323  0494  082E               	movf	printf@tmpval^(0+128),w
  2324  0495  00F0               	movwf	___ftge@ff1
  2325  0496  082F               	movf	(printf@tmpval+1)^(0+128),w
  2326  0497  00F1               	movwf	___ftge@ff1+1
  2327  0498  0830               	movf	(printf@tmpval+2)^(0+128),w
  2328  0499  00F2               	movwf	___ftge@ff1+2
  2329  049A  3070               	movlw	112
  2330  049B  00F3               	movwf	___ftge@ff2
  2331  049C  3089               	movlw	137
  2332  049D  00F4               	movwf	___ftge@ff2+1
  2333  049E  3040               	movlw	64
  2334  049F  00F5               	movwf	___ftge@ff2+2
  2335  04A0  160A  118A  2616  120A  118A  	fcall	___ftge
  2336  04A5  1803               	btfsc	3,0
  2337  04A6  2CA9               	goto	l2093
  2338                           
  2339                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2340  04A7  30F7               	movlw	247
  2341  04A8  2CAA               	goto	L2
  2342  04A9                     l2093:	
  2343                           ;doprnt.c: 1122: }else{
  2344                           
  2345                           
  2346                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2347  04A9  30F8               	movlw	248
  2348  04AA                     L2:	
  2349  04AA  1683               	bsf	3,5	;RP0=1, select bank1
  2350  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  2351  04AC  07AC               	addwf	printf@exp^(0+128),f
  2352  04AD  1803               	skipnc
  2353  04AE  0AAD               	incf	(printf@exp+1)^(0+128),f
  2354  04AF  30FF               	movlw	255
  2355  04B0  07AD               	addwf	(printf@exp+1)^(0+128),f
  2356                           
  2357                           ;doprnt.c: 1124: }
  2358                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2359  04B1  082C               	movf	printf@exp^(0+128),w
  2360  04B2  120A  158A  2535  120A  118A  	fcall	_scale
  2361  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2362  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2363  04B9  0837               	movf	?_scale,w
  2364  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  2365  04BB  1303               	bcf	3,6	;RP1=0, select bank1
  2366  04BC  00AE               	movwf	printf@tmpval^(0+128)
  2367  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2368  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  2369  04BF  0838               	movf	?_scale+1,w
  2370  04C0  1683               	bsf	3,5	;RP0=1, select bank1
  2371  04C1  1303               	bcf	3,6	;RP1=0, select bank1
  2372  04C2  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2373  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2374  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2375  04C5  0839               	movf	?_scale+2,w
  2376  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  2377  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  2378  04C8  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2379                           
  2380                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2381  04C9  0832               	movf	printf@fval^(0+128),w
  2382  04CA  00F0               	movwf	__tdiv_to_l_@f1
  2383  04CB  0833               	movf	(printf@fval+1)^(0+128),w
  2384  04CC  00F1               	movwf	__tdiv_to_l_@f1+1
  2385  04CD  0834               	movf	(printf@fval+2)^(0+128),w
  2386  04CE  00F2               	movwf	__tdiv_to_l_@f1+2
  2387  04CF  082E               	movf	printf@tmpval^(0+128),w
  2388  04D0  00F3               	movwf	__tdiv_to_l_@f2
  2389  04D1  082F               	movf	(printf@tmpval+1)^(0+128),w
  2390  04D2  00F4               	movwf	__tdiv_to_l_@f2+1
  2391  04D3  0830               	movf	(printf@tmpval+2)^(0+128),w
  2392  04D4  00F5               	movwf	__tdiv_to_l_@f2+2
  2393  04D5  160A  118A  273D  120A  118A  	fcall	__tdiv_to_l_
  2394  04DA  0873               	movf	?__tdiv_to_l_+3,w
  2395  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  2396  04DC  1303               	bcf	3,6	;RP1=0, select bank1
  2397  04DD  00AB               	movwf	(printf@val+3)^(0+128)
  2398  04DE  0872               	movf	?__tdiv_to_l_+2,w
  2399  04DF  00AA               	movwf	(printf@val+2)^(0+128)
  2400  04E0  0871               	movf	?__tdiv_to_l_+1,w
  2401  04E1  00A9               	movwf	(printf@val+1)^(0+128)
  2402  04E2  0870               	movf	?__tdiv_to_l_,w
  2403  04E3  00A8               	movwf	printf@val^(0+128)
  2404                           
  2405                           ;doprnt.c: 1129: fval = 0.0;
  2406  04E4  3000               	movlw	0
  2407  04E5  00B2               	movwf	printf@fval^(0+128)
  2408  04E6  3000               	movlw	0
  2409  04E7  00B3               	movwf	(printf@fval+1)^(0+128)
  2410  04E8  3000               	movlw	0
  2411  04E9  00B4               	movwf	(printf@fval+2)^(0+128)
  2412                           
  2413                           ;doprnt.c: 1130: } else {
  2414  04EA  2D5A               	goto	l2107
  2415  04EB                     l2103:	
  2416                           
  2417                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2418  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  2419  04EC  1303               	bcf	3,6	;RP1=0, select bank1
  2420  04ED  0832               	movf	printf@fval^(0+128),w
  2421  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  2422  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  2423  04F0  00C0               	movwf	___fttol@f1
  2424  04F1  1683               	bsf	3,5	;RP0=1, select bank1
  2425  04F2  1303               	bcf	3,6	;RP1=0, select bank1
  2426  04F3  0833               	movf	(printf@fval+1)^(0+128),w
  2427  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2428  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  2429  04F6  00C1               	movwf	___fttol@f1+1
  2430  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  2431  04F8  1303               	bcf	3,6	;RP1=0, select bank1
  2432  04F9  0834               	movf	(printf@fval+2)^(0+128),w
  2433  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  2434  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  2435  04FC  00C2               	movwf	___fttol@f1+2
  2436  04FD  120A  158A  2017  120A  118A  	fcall	___fttol
  2437  0502  1283               	bcf	3,5	;RP0=0, select bank0
  2438  0503  1303               	bcf	3,6	;RP1=0, select bank0
  2439  0504  0843               	movf	?___fttol+3,w
  2440  0505  1683               	bsf	3,5	;RP0=1, select bank1
  2441  0506  1303               	bcf	3,6	;RP1=0, select bank1
  2442  0507  00AB               	movwf	(printf@val+3)^(0+128)
  2443  0508  1283               	bcf	3,5	;RP0=0, select bank0
  2444  0509  1303               	bcf	3,6	;RP1=0, select bank0
  2445  050A  0842               	movf	?___fttol+2,w
  2446  050B  1683               	bsf	3,5	;RP0=1, select bank1
  2447  050C  1303               	bcf	3,6	;RP1=0, select bank1
  2448  050D  00AA               	movwf	(printf@val+2)^(0+128)
  2449  050E  1283               	bcf	3,5	;RP0=0, select bank0
  2450  050F  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0510  0841               	movf	?___fttol+1,w
  2452  0511  1683               	bsf	3,5	;RP0=1, select bank1
  2453  0512  1303               	bcf	3,6	;RP1=0, select bank1
  2454  0513  00A9               	movwf	(printf@val+1)^(0+128)
  2455  0514  1283               	bcf	3,5	;RP0=0, select bank0
  2456  0515  1303               	bcf	3,6	;RP1=0, select bank0
  2457  0516  0840               	movf	?___fttol,w
  2458  0517  1683               	bsf	3,5	;RP0=1, select bank1
  2459  0518  1303               	bcf	3,6	;RP1=0, select bank1
  2460  0519  00A8               	movwf	printf@val^(0+128)
  2461                           
  2462                           ;doprnt.c: 1132: fval -= (double)val;
  2463  051A  082B               	movf	(printf@val+3)^(0+128),w
  2464  051B  00FB               	movwf	___lltoft@c+3
  2465  051C  082A               	movf	(printf@val+2)^(0+128),w
  2466  051D  00FA               	movwf	___lltoft@c+2
  2467  051E  0829               	movf	(printf@val+1)^(0+128),w
  2468  051F  00F9               	movwf	___lltoft@c+1
  2469  0520  0828               	movf	printf@val^(0+128),w
  2470  0521  00F8               	movwf	___lltoft@c
  2471  0522  160A  118A  24F9  120A  118A  	fcall	___lltoft
  2472  0527  0878               	movf	?___lltoft,w
  2473  0528  1283               	bcf	3,5	;RP0=0, select bank0
  2474  0529  1303               	bcf	3,6	;RP1=0, select bank0
  2475  052A  00D4               	movwf	___ftsub@f2
  2476  052B  0879               	movf	?___lltoft+1,w
  2477  052C  00D5               	movwf	___ftsub@f2+1
  2478  052D  087A               	movf	?___lltoft+2,w
  2479  052E  00D6               	movwf	___ftsub@f2+2
  2480  052F  1683               	bsf	3,5	;RP0=1, select bank1
  2481  0530  1303               	bcf	3,6	;RP1=0, select bank1
  2482  0531  0832               	movf	printf@fval^(0+128),w
  2483  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2484  0533  1303               	bcf	3,6	;RP1=0, select bank0
  2485  0534  00D7               	movwf	___ftsub@f1
  2486  0535  1683               	bsf	3,5	;RP0=1, select bank1
  2487  0536  1303               	bcf	3,6	;RP1=0, select bank1
  2488  0537  0833               	movf	(printf@fval+1)^(0+128),w
  2489  0538  1283               	bcf	3,5	;RP0=0, select bank0
  2490  0539  1303               	bcf	3,6	;RP1=0, select bank0
  2491  053A  00D8               	movwf	___ftsub@f1+1
  2492  053B  1683               	bsf	3,5	;RP0=1, select bank1
  2493  053C  1303               	bcf	3,6	;RP1=0, select bank1
  2494  053D  0834               	movf	(printf@fval+2)^(0+128),w
  2495  053E  1283               	bcf	3,5	;RP0=0, select bank0
  2496  053F  1303               	bcf	3,6	;RP1=0, select bank0
  2497  0540  00D9               	movwf	___ftsub@f1+2
  2498  0541  160A  118A  24B7  120A  118A  	fcall	___ftsub
  2499  0546  1283               	bcf	3,5	;RP0=0, select bank0
  2500  0547  1303               	bcf	3,6	;RP1=0, select bank0
  2501  0548  0854               	movf	?___ftsub,w
  2502  0549  1683               	bsf	3,5	;RP0=1, select bank1
  2503  054A  1303               	bcf	3,6	;RP1=0, select bank1
  2504  054B  00B2               	movwf	printf@fval^(0+128)
  2505  054C  1283               	bcf	3,5	;RP0=0, select bank0
  2506  054D  1303               	bcf	3,6	;RP1=0, select bank0
  2507  054E  0855               	movf	?___ftsub+1,w
  2508  054F  1683               	bsf	3,5	;RP0=1, select bank1
  2509  0550  1303               	bcf	3,6	;RP1=0, select bank1
  2510  0551  00B3               	movwf	(printf@fval+1)^(0+128)
  2511  0552  1283               	bcf	3,5	;RP0=0, select bank0
  2512  0553  1303               	bcf	3,6	;RP1=0, select bank0
  2513  0554  0856               	movf	?___ftsub+2,w
  2514  0555  1683               	bsf	3,5	;RP0=1, select bank1
  2515  0556  1303               	bcf	3,6	;RP1=0, select bank1
  2516  0557  00B4               	movwf	(printf@fval+2)^(0+128)
  2517                           
  2518                           ;doprnt.c: 1133: exp = 0;
  2519  0558  01AC               	clrf	printf@exp^(0+128)
  2520  0559  01AD               	clrf	(printf@exp+1)^(0+128)
  2521  055A                     l2107:	
  2522                           
  2523                           ;doprnt.c: 1134: }
  2524                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2525  055A  01B5               	clrf	printf@c^(0+128)
  2526  055B  0AB5               	incf	printf@c^(0+128),f
  2527  055C  300A               	movlw	10
  2528  055D  0635               	xorwf	printf@c^(0+128),w
  2529  055E  1903               	btfsc	3,2
  2530  055F  2DB4               	goto	l2119
  2531  0560                     l2113:	
  2532                           
  2533                           ;doprnt.c: 1137: if(val < dpowers[c])
  2534  0560  0835               	movf	printf@c^(0+128),w
  2535  0561  1283               	bcf	3,5	;RP0=0, select bank0
  2536  0562  1303               	bcf	3,6	;RP1=0, select bank0
  2537  0563  00DF               	movwf	??_printf
  2538  0564  3001               	movlw	1
  2539  0565                     u3395:	
  2540  0565  1003               	clrc
  2541  0566  0DDF               	rlf	??_printf,f
  2542  0567  3EFF               	addlw	-1
  2543  0568  1D03               	skipz
  2544  0569  2D65               	goto	u3395
  2545  056A  1003               	clrc
  2546  056B  0D5F               	rlf	??_printf,w
  2547  056C  3E12               	addlw	low (_dpowers| (0+32768))
  2548  056D  0084               	movwf	4
  2549  056E  3090               	movlw	high (_dpowers| (0+32768))
  2550  056F  1803               	skipnc
  2551  0570  3E01               	addlw	1
  2552  0571  00FF               	movwf	127
  2553  0572  160A  118A  2000  120A  118A  	fcall	stringtab
  2554  0577  00E0               	movwf	??_printf+1
  2555  0578  160A  118A  2000  120A  118A  	fcall	stringtab
  2556  057D  00E1               	movwf	??_printf+2
  2557  057E  160A  118A  2000  120A  118A  	fcall	stringtab
  2558  0583  00E2               	movwf	??_printf+3
  2559  0584  160A  118A  2000  120A  118A  	fcall	stringtab
  2560  0589  00E3               	movwf	??_printf+4
  2561  058A  0863               	movf	??_printf+4,w
  2562  058B  1683               	bsf	3,5	;RP0=1, select bank1
  2563  058C  1303               	bcf	3,6	;RP1=0, select bank1
  2564  058D  022B               	subwf	(printf@val+3)^(0+128),w
  2565  058E  1D03               	skipz
  2566  058F  2DA6               	goto	u3405
  2567  0590  1283               	bcf	3,5	;RP0=0, select bank0
  2568  0591  1303               	bcf	3,6	;RP1=0, select bank0
  2569  0592  0862               	movf	??_printf+3,w
  2570  0593  1683               	bsf	3,5	;RP0=1, select bank1
  2571  0594  1303               	bcf	3,6	;RP1=0, select bank1
  2572  0595  022A               	subwf	(printf@val+2)^(0+128),w
  2573  0596  1D03               	skipz
  2574  0597  2DA6               	goto	u3405
  2575  0598  1283               	bcf	3,5	;RP0=0, select bank0
  2576  0599  1303               	bcf	3,6	;RP1=0, select bank0
  2577  059A  0861               	movf	??_printf+2,w
  2578  059B  1683               	bsf	3,5	;RP0=1, select bank1
  2579  059C  1303               	bcf	3,6	;RP1=0, select bank1
  2580  059D  0229               	subwf	(printf@val+1)^(0+128),w
  2581  059E  1D03               	skipz
  2582  059F  2DA6               	goto	u3405
  2583  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  2584  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  2585  05A2  0860               	movf	??_printf+1,w
  2586  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  2587  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  2588  05A5  0228               	subwf	printf@val^(0+128),w
  2589  05A6                     u3405:	
  2590  05A6  1C03               	btfss	3,0
  2591  05A7  2DB4               	goto	l2119
  2592                           
  2593                           ;doprnt.c: 1138: break;
  2594  05A8  3001               	movlw	1
  2595  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  2596  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  2597  05AB  00DF               	movwf	??_printf
  2598  05AC  085F               	movf	??_printf,w
  2599  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  2600  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  2601  05AF  07B5               	addwf	printf@c^(0+128),f
  2602  05B0  300A               	movlw	10
  2603  05B1  0635               	xorwf	printf@c^(0+128),w
  2604  05B2  1D03               	btfss	3,2
  2605  05B3  2D60               	goto	l2113
  2606  05B4                     l2119:	
  2607                           
  2608                           ;doprnt.c: 1175: {
  2609                           ;doprnt.c: 1188: if(flag & 0x03)
  2610  05B4  3003               	movlw	3
  2611  05B5  0524               	andwf	printf@flag^(0+128),w
  2612  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  2613  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  2614  05B8  00DF               	movwf	??_printf
  2615  05B9  3000               	movlw	0
  2616  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  2617  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  2618  05BC  0525               	andwf	(printf@flag+1)^(0+128),w
  2619  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  2620  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  2621  05BF  00E0               	movwf	??_printf+1
  2622  05C0  085F               	movf	??_printf,w
  2623  05C1  0460               	iorwf	??_printf+1,w
  2624  05C2  1903               	btfsc	3,2
  2625  05C3  2DCA               	goto	l2129
  2626                           
  2627                           ;doprnt.c: 1190: (putch('-') );
  2628  05C4  302D               	movlw	45
  2629  05C5                     L5:	
  2630  05C5  120A  118A  2005  120A  118A  	fcall	_putch
  2631  05CA                     l2129:	
  2632                           ;doprnt.c: 1195: }
  2633                           ;doprnt.c: 1196: while(c--) {
  2634                           
  2635  05CA  30FF               	movlw	255
  2636  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  2637  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  2638  05CD  00DF               	movwf	??_printf
  2639  05CE  085F               	movf	??_printf,w
  2640  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  2641  05D0  1303               	bcf	3,6	;RP1=0, select bank1
  2642  05D1  07B5               	addwf	printf@c^(0+128),f
  2643  05D2  0A35               	incf	printf@c^(0+128),w
  2644  05D3  1903               	btfsc	3,2
  2645  05D4  2E4A               	goto	l2135
  2646                           
  2647                           ;doprnt.c: 1200: {
  2648                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  2649  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  2650  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  2651  05D7  0835               	movf	printf@c^(0+128),w
  2652  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  2653  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  2654  05DA  00DF               	movwf	??_printf
  2655  05DB  3001               	movlw	1
  2656  05DC                     u3435:	
  2657  05DC  1003               	clrc
  2658  05DD  0DDF               	rlf	??_printf,f
  2659  05DE  3EFF               	addlw	-1
  2660  05DF  1D03               	skipz
  2661  05E0  2DDC               	goto	u3435
  2662  05E1  1003               	clrc
  2663  05E2  0D5F               	rlf	??_printf,w
  2664  05E3  3E12               	addlw	low (_dpowers| (0+32768))
  2665  05E4  0084               	movwf	4
  2666  05E5  3090               	movlw	high (_dpowers| (0+32768))
  2667  05E6  1803               	skipnc
  2668  05E7  3E01               	addlw	1
  2669  05E8  00FF               	movwf	127
  2670  05E9  160A  118A  2000  120A  118A  	fcall	stringtab
  2671  05EE  00F0               	movwf	___lldiv@divisor
  2672  05EF  160A  118A  2000  120A  118A  	fcall	stringtab
  2673  05F4  00F1               	movwf	___lldiv@divisor+1
  2674  05F5  160A  118A  2000  120A  118A  	fcall	stringtab
  2675  05FA  00F2               	movwf	___lldiv@divisor+2
  2676  05FB  160A  118A  2000  120A  118A  	fcall	stringtab
  2677  0600  00F3               	movwf	___lldiv@divisor+3
  2678  0601  1683               	bsf	3,5	;RP0=1, select bank1
  2679  0602  1303               	bcf	3,6	;RP1=0, select bank1
  2680  0603  082B               	movf	(printf@val+3)^(0+128),w
  2681  0604  00F7               	movwf	___lldiv@dividend+3
  2682  0605  082A               	movf	(printf@val+2)^(0+128),w
  2683  0606  00F6               	movwf	___lldiv@dividend+2
  2684  0607  0829               	movf	(printf@val+1)^(0+128),w
  2685  0608  00F5               	movwf	___lldiv@dividend+1
  2686  0609  0828               	movf	printf@val^(0+128),w
  2687  060A  00F4               	movwf	___lldiv@dividend
  2688  060B  160A  118A  2673  120A  118A  	fcall	___lldiv
  2689  0610  0873               	movf	?___lldiv+3,w
  2690  0611  1683               	bsf	3,5	;RP0=1, select bank1
  2691  0612  1303               	bcf	3,6	;RP1=0, select bank1
  2692  0613  00B1               	movwf	(printf@tmpval+3)^(0+128)
  2693  0614  0872               	movf	?___lldiv+2,w
  2694  0615  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2695  0616  0871               	movf	?___lldiv+1,w
  2696  0617  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2697  0618  0870               	movf	?___lldiv,w
  2698  0619  00AE               	movwf	printf@tmpval^(0+128)
  2699                           
  2700                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2701  061A  3000               	movlw	0
  2702  061B  00F3               	movwf	___llmod@divisor+3
  2703  061C  3000               	movlw	0
  2704  061D  00F2               	movwf	___llmod@divisor+2
  2705  061E  3000               	movlw	0
  2706  061F  00F1               	movwf	___llmod@divisor+1
  2707  0620  300A               	movlw	10
  2708  0621  00F0               	movwf	___llmod@divisor
  2709  0622  0831               	movf	(printf@tmpval+3)^(0+128),w
  2710  0623  00F7               	movwf	___llmod@dividend+3
  2711  0624  0830               	movf	(printf@tmpval+2)^(0+128),w
  2712  0625  00F6               	movwf	___llmod@dividend+2
  2713  0626  082F               	movf	(printf@tmpval+1)^(0+128),w
  2714  0627  00F5               	movwf	___llmod@dividend+1
  2715  0628  082E               	movf	printf@tmpval^(0+128),w
  2716  0629  00F4               	movwf	___llmod@dividend
  2717  062A  160A  118A  256F  120A  118A  	fcall	___llmod
  2718  062F  0873               	movf	?___llmod+3,w
  2719  0630  1683               	bsf	3,5	;RP0=1, select bank1
  2720  0631  1303               	bcf	3,6	;RP1=0, select bank1
  2721  0632  00B1               	movwf	(printf@tmpval+3)^(0+128)
  2722  0633  0872               	movf	?___llmod+2,w
  2723  0634  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2724  0635  0871               	movf	?___llmod+1,w
  2725  0636  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2726  0637  0870               	movf	?___llmod,w
  2727  0638  00AE               	movwf	printf@tmpval^(0+128)
  2728                           
  2729                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  2730  0639  082E               	movf	printf@tmpval^(0+128),w
  2731  063A  3E30               	addlw	48
  2732  063B  2DC5               	goto	L5
  2733  063C                     l2131:	
  2734                           ;doprnt.c: 1204: }
  2735                           ;doprnt.c: 1206: }
  2736                           ;doprnt.c: 1207: while(exp > 0) {
  2737                           
  2738                           
  2739                           ;doprnt.c: 1208: (putch('0') );
  2740  063C  3030               	movlw	48
  2741  063D  120A  118A  2005  120A  118A  	fcall	_putch
  2742                           
  2743                           ;doprnt.c: 1209: exp--;
  2744  0642  30FF               	movlw	255
  2745  0643  1683               	bsf	3,5	;RP0=1, select bank1
  2746  0644  1303               	bcf	3,6	;RP1=0, select bank1
  2747  0645  07AC               	addwf	printf@exp^(0+128),f
  2748  0646  1803               	skipnc
  2749  0647  0AAD               	incf	(printf@exp+1)^(0+128),f
  2750  0648  30FF               	movlw	255
  2751  0649  07AD               	addwf	(printf@exp+1)^(0+128),f
  2752  064A                     l2135:	
  2753  064A  082D               	movf	(printf@exp+1)^(0+128),w
  2754  064B  3A80               	xorlw	128
  2755  064C  00FF               	movwf	127
  2756  064D  3080               	movlw	128
  2757  064E  027F               	subwf	127,w
  2758  064F  1D03               	skipz
  2759  0650  2E53               	goto	u3455
  2760  0651  3001               	movlw	1
  2761  0652  022C               	subwf	printf@exp^(0+128),w
  2762  0653                     u3455:	
  2763  0653  1803               	skipnc
  2764  0654  2E3C               	goto	l2131
  2765                           
  2766                           ;doprnt.c: 1210: }
  2767                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2768  0655  1683               	bsf	3,5	;RP0=1, select bank1
  2769  0656  1303               	bcf	3,6	;RP1=0, select bank1
  2770  0657  0827               	movf	(printf@prec+1)^(0+128),w
  2771  0658  3A80               	xorlw	128
  2772  0659  00FF               	movwf	127
  2773  065A  3080               	movlw	128
  2774  065B  027F               	subwf	127,w
  2775  065C  1D03               	skipz
  2776  065D  2E60               	goto	u3465
  2777  065E  3009               	movlw	9
  2778  065F  0226               	subwf	printf@prec^(0+128),w
  2779  0660                     u3465:	
  2780  0660  1C03               	skipc
  2781  0661  2E64               	goto	l2141
  2782                           
  2783                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2784  0662  3008               	movlw	8
  2785  0663  2E67               	goto	L3
  2786  0664                     l2141:	
  2787                           
  2788                           ;doprnt.c: 1213: else
  2789                           ;doprnt.c: 1214: c = prec;
  2790  0664  1683               	bsf	3,5	;RP0=1, select bank1
  2791  0665  1303               	bcf	3,6	;RP1=0, select bank1
  2792  0666  0826               	movf	printf@prec^(0+128),w
  2793  0667                     L3:	
  2794  0667  1283               	bcf	3,5	;RP0=0, select bank0
  2795  0668  1303               	bcf	3,6	;RP1=0, select bank0
  2796  0669  00DF               	movwf	??_printf
  2797  066A  085F               	movf	??_printf,w
  2798  066B  1683               	bsf	3,5	;RP0=1, select bank1
  2799  066C  1303               	bcf	3,6	;RP1=0, select bank1
  2800  066D  00B5               	movwf	printf@c^(0+128)
  2801                           
  2802                           ;doprnt.c: 1215: prec -= c;
  2803  066E  0835               	movf	printf@c^(0+128),w
  2804  066F  1283               	bcf	3,5	;RP0=0, select bank0
  2805  0670  1303               	bcf	3,6	;RP1=0, select bank0
  2806  0671  00DF               	movwf	??_printf
  2807  0672  01E0               	clrf	??_printf+1
  2808  0673  1BDF               	btfsc	??_printf,7
  2809  0674  03E0               	decf	??_printf+1,f
  2810  0675  085F               	movf	??_printf,w
  2811  0676  1683               	bsf	3,5	;RP0=1, select bank1
  2812  0677  1303               	bcf	3,6	;RP1=0, select bank1
  2813  0678  02A6               	subwf	printf@prec^(0+128),f
  2814  0679  1283               	bcf	3,5	;RP0=0, select bank0
  2815  067A  1303               	bcf	3,6	;RP1=0, select bank0
  2816  067B  0860               	movf	??_printf+1,w
  2817  067C  1683               	bsf	3,5	;RP0=1, select bank1
  2818  067D  1303               	bcf	3,6	;RP1=0, select bank1
  2819  067E  1C03               	skipc
  2820  067F  03A7               	decf	(printf@prec+1)^(0+128),f
  2821  0680  02A7               	subwf	(printf@prec+1)^(0+128),f
  2822                           
  2823                           ;doprnt.c: 1219: if(c)
  2824  0681  0835               	movf	printf@c^(0+128),w
  2825  0682  1903               	btfsc	3,2
  2826  0683  2E8A               	goto	l2147
  2827                           
  2828                           ;doprnt.c: 1221: (putch('.') );
  2829  0684  302E               	movlw	46
  2830  0685  120A  118A  2005  120A  118A  	fcall	_putch
  2831  068A                     l2147:	
  2832                           
  2833                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2834  068A  1683               	bsf	3,5	;RP0=1, select bank1
  2835  068B  1303               	bcf	3,6	;RP1=0, select bank1
  2836  068C  0835               	movf	printf@c^(0+128),w
  2837  068D  120A  158A  2535  120A  118A  	fcall	_scale
  2838  0692  1283               	bcf	3,5	;RP0=0, select bank0
  2839  0693  1303               	bcf	3,6	;RP1=0, select bank0
  2840  0694  0837               	movf	?_scale,w
  2841  0695  1683               	bsf	3,5	;RP0=1, select bank1
  2842  0696  1303               	bcf	3,6	;RP1=0, select bank1
  2843  0697  00A0               	movwf	_printf$663^(0+128)
  2844  0698  1283               	bcf	3,5	;RP0=0, select bank0
  2845  0699  1303               	bcf	3,6	;RP1=0, select bank0
  2846  069A  0838               	movf	?_scale+1,w
  2847  069B  1683               	bsf	3,5	;RP0=1, select bank1
  2848  069C  1303               	bcf	3,6	;RP1=0, select bank1
  2849  069D  00A1               	movwf	(_printf$663+1)^(0+128)
  2850  069E  1283               	bcf	3,5	;RP0=0, select bank0
  2851  069F  1303               	bcf	3,6	;RP1=0, select bank0
  2852  06A0  0839               	movf	?_scale+2,w
  2853  06A1  1683               	bsf	3,5	;RP0=1, select bank1
  2854  06A2  1303               	bcf	3,6	;RP1=0, select bank1
  2855  06A3  00A2               	movwf	(_printf$663+2)^(0+128)
  2856                           
  2857                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2858  06A4  0820               	movf	_printf$663^(0+128),w
  2859  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  2860  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  2861  06A7  00AA               	movwf	___ftmul@f2
  2862  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  2863  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  2864  06AA  0821               	movf	(_printf$663+1)^(0+128),w
  2865  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  2866  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  2867  06AD  00AB               	movwf	___ftmul@f2+1
  2868  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  2869  06AF  1303               	bcf	3,6	;RP1=0, select bank1
  2870  06B0  0822               	movf	(_printf$663+2)^(0+128),w
  2871  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  2872  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  2873  06B3  00AC               	movwf	___ftmul@f2+2
  2874  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  2875  06B5  1303               	bcf	3,6	;RP1=0, select bank1
  2876  06B6  0832               	movf	printf@fval^(0+128),w
  2877  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  2878  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  2879  06B9  00A7               	movwf	___ftmul@f1
  2880  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  2881  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  2882  06BC  0833               	movf	(printf@fval+1)^(0+128),w
  2883  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  2884  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  2885  06BF  00A8               	movwf	___ftmul@f1+1
  2886  06C0  1683               	bsf	3,5	;RP0=1, select bank1
  2887  06C1  1303               	bcf	3,6	;RP1=0, select bank1
  2888  06C2  0834               	movf	(printf@fval+2)^(0+128),w
  2889  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  2890  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  2891  06C5  00A9               	movwf	___ftmul@f1+2
  2892  06C6  120A  158A  20A5  120A  118A  	fcall	___ftmul
  2893  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  2894  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  2895  06CD  0827               	movf	?___ftmul,w
  2896  06CE  00C0               	movwf	___fttol@f1
  2897  06CF  0828               	movf	?___ftmul+1,w
  2898  06D0  00C1               	movwf	___fttol@f1+1
  2899  06D1  0829               	movf	?___ftmul+2,w
  2900  06D2  00C2               	movwf	___fttol@f1+2
  2901  06D3  120A  158A  2017  120A  118A  	fcall	___fttol
  2902  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  2903  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  2904  06DA  0843               	movf	?___fttol+3,w
  2905  06DB  1683               	bsf	3,5	;RP0=1, select bank1
  2906  06DC  1303               	bcf	3,6	;RP1=0, select bank1
  2907  06DD  00AB               	movwf	(printf@val+3)^(0+128)
  2908  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  2909  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  2910  06E0  0842               	movf	?___fttol+2,w
  2911  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  2912  06E2  1303               	bcf	3,6	;RP1=0, select bank1
  2913  06E3  00AA               	movwf	(printf@val+2)^(0+128)
  2914  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  2915  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  2916  06E6  0841               	movf	?___fttol+1,w
  2917  06E7  1683               	bsf	3,5	;RP0=1, select bank1
  2918  06E8  1303               	bcf	3,6	;RP1=0, select bank1
  2919  06E9  00A9               	movwf	(printf@val+1)^(0+128)
  2920  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  2921  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  2922  06EC  0840               	movf	?___fttol,w
  2923  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  2924  06EE  1303               	bcf	3,6	;RP1=0, select bank1
  2925  06EF                     L4:	
  2926  06EF  00A8               	movwf	printf@val^(0+128)
  2927  06F0  30FF               	movlw	255
  2928  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  2929  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  2930  06F3  00DF               	movwf	??_printf
  2931  06F4  085F               	movf	??_printf,w
  2932  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  2933  06F6  1303               	bcf	3,6	;RP1=0, select bank1
  2934  06F7  07B5               	addwf	printf@c^(0+128),f
  2935  06F8  0A35               	incf	printf@c^(0+128),w
  2936  06F9  1903               	btfsc	3,2
  2937  06FA  2FB7               	goto	l2163
  2938                           
  2939                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2940                           
  2941                           ;doprnt.c: 1228: while(c--) {
  2942  06FB  0835               	movf	printf@c^(0+128),w
  2943  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  2944  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  2945  06FE  00DF               	movwf	??_printf
  2946  06FF  3001               	movlw	1
  2947  0700                     u3485:	
  2948  0700  1003               	clrc
  2949  0701  0DDF               	rlf	??_printf,f
  2950  0702  3EFF               	addlw	-1
  2951  0703  1D03               	skipz
  2952  0704  2F00               	goto	u3485
  2953  0705  1003               	clrc
  2954  0706  0D5F               	rlf	??_printf,w
  2955  0707  3E12               	addlw	low (_dpowers| (0+32768))
  2956  0708  0084               	movwf	4
  2957  0709  3090               	movlw	high (_dpowers| (0+32768))
  2958  070A  1803               	skipnc
  2959  070B  3E01               	addlw	1
  2960  070C  00FF               	movwf	127
  2961  070D  160A  118A  2000  120A  118A  	fcall	stringtab
  2962  0712  00F0               	movwf	___lldiv@divisor
  2963  0713  160A  118A  2000  120A  118A  	fcall	stringtab
  2964  0718  00F1               	movwf	___lldiv@divisor+1
  2965  0719  160A  118A  2000  120A  118A  	fcall	stringtab
  2966  071E  00F2               	movwf	___lldiv@divisor+2
  2967  071F  160A  118A  2000  120A  118A  	fcall	stringtab
  2968  0724  00F3               	movwf	___lldiv@divisor+3
  2969  0725  1683               	bsf	3,5	;RP0=1, select bank1
  2970  0726  1303               	bcf	3,6	;RP1=0, select bank1
  2971  0727  082B               	movf	(printf@val+3)^(0+128),w
  2972  0728  00F7               	movwf	___lldiv@dividend+3
  2973  0729  082A               	movf	(printf@val+2)^(0+128),w
  2974  072A  00F6               	movwf	___lldiv@dividend+2
  2975  072B  0829               	movf	(printf@val+1)^(0+128),w
  2976  072C  00F5               	movwf	___lldiv@dividend+1
  2977  072D  0828               	movf	printf@val^(0+128),w
  2978  072E  00F4               	movwf	___lldiv@dividend
  2979  072F  160A  118A  2673  120A  118A  	fcall	___lldiv
  2980  0734  0873               	movf	?___lldiv+3,w
  2981  0735  1683               	bsf	3,5	;RP0=1, select bank1
  2982  0736  1303               	bcf	3,6	;RP1=0, select bank1
  2983  0737  00B1               	movwf	(printf@tmpval+3)^(0+128)
  2984  0738  0872               	movf	?___lldiv+2,w
  2985  0739  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2986  073A  0871               	movf	?___lldiv+1,w
  2987  073B  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2988  073C  0870               	movf	?___lldiv,w
  2989  073D  00AE               	movwf	printf@tmpval^(0+128)
  2990                           
  2991                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2992  073E  3000               	movlw	0
  2993  073F  00F3               	movwf	___llmod@divisor+3
  2994  0740  3000               	movlw	0
  2995  0741  00F2               	movwf	___llmod@divisor+2
  2996  0742  3000               	movlw	0
  2997  0743  00F1               	movwf	___llmod@divisor+1
  2998  0744  300A               	movlw	10
  2999  0745  00F0               	movwf	___llmod@divisor
  3000  0746  0831               	movf	(printf@tmpval+3)^(0+128),w
  3001  0747  00F7               	movwf	___llmod@dividend+3
  3002  0748  0830               	movf	(printf@tmpval+2)^(0+128),w
  3003  0749  00F6               	movwf	___llmod@dividend+2
  3004  074A  082F               	movf	(printf@tmpval+1)^(0+128),w
  3005  074B  00F5               	movwf	___llmod@dividend+1
  3006  074C  082E               	movf	printf@tmpval^(0+128),w
  3007  074D  00F4               	movwf	___llmod@dividend
  3008  074E  160A  118A  256F  120A  118A  	fcall	___llmod
  3009  0753  0873               	movf	?___llmod+3,w
  3010  0754  1683               	bsf	3,5	;RP0=1, select bank1
  3011  0755  1303               	bcf	3,6	;RP1=0, select bank1
  3012  0756  00B1               	movwf	(printf@tmpval+3)^(0+128)
  3013  0757  0872               	movf	?___llmod+2,w
  3014  0758  00B0               	movwf	(printf@tmpval+2)^(0+128)
  3015  0759  0871               	movf	?___llmod+1,w
  3016  075A  00AF               	movwf	(printf@tmpval+1)^(0+128)
  3017  075B  0870               	movf	?___llmod,w
  3018  075C  00AE               	movwf	printf@tmpval^(0+128)
  3019                           
  3020                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  3021  075D  082E               	movf	printf@tmpval^(0+128),w
  3022  075E  3E30               	addlw	48
  3023  075F  120A  118A  2005  120A  118A  	fcall	_putch
  3024                           
  3025                           ;doprnt.c: 1232: val %= dpowers[c];
  3026  0764  1683               	bsf	3,5	;RP0=1, select bank1
  3027  0765  1303               	bcf	3,6	;RP1=0, select bank1
  3028  0766  0835               	movf	printf@c^(0+128),w
  3029  0767  1283               	bcf	3,5	;RP0=0, select bank0
  3030  0768  1303               	bcf	3,6	;RP1=0, select bank0
  3031  0769  00DF               	movwf	??_printf
  3032  076A  3001               	movlw	1
  3033  076B                     u3495:	
  3034  076B  1003               	clrc
  3035  076C  0DDF               	rlf	??_printf,f
  3036  076D  3EFF               	addlw	-1
  3037  076E  1D03               	skipz
  3038  076F  2F6B               	goto	u3495
  3039  0770  1003               	clrc
  3040  0771  0D5F               	rlf	??_printf,w
  3041  0772  3E12               	addlw	low (_dpowers| (0+32768))
  3042  0773  0084               	movwf	4
  3043  0774  3090               	movlw	high (_dpowers| (0+32768))
  3044  0775  1803               	skipnc
  3045  0776  3E01               	addlw	1
  3046  0777  00FF               	movwf	127
  3047  0778  160A  118A  2000  120A  118A  	fcall	stringtab
  3048  077D  00F0               	movwf	___llmod@divisor
  3049  077E  160A  118A  2000  120A  118A  	fcall	stringtab
  3050  0783  00F1               	movwf	___llmod@divisor+1
  3051  0784  160A  118A  2000  120A  118A  	fcall	stringtab
  3052  0789  00F2               	movwf	___llmod@divisor+2
  3053  078A  160A  118A  2000  120A  118A  	fcall	stringtab
  3054  078F  00F3               	movwf	___llmod@divisor+3
  3055  0790  1683               	bsf	3,5	;RP0=1, select bank1
  3056  0791  1303               	bcf	3,6	;RP1=0, select bank1
  3057  0792  082B               	movf	(printf@val+3)^(0+128),w
  3058  0793  00F7               	movwf	___llmod@dividend+3
  3059  0794  082A               	movf	(printf@val+2)^(0+128),w
  3060  0795  00F6               	movwf	___llmod@dividend+2
  3061  0796  0829               	movf	(printf@val+1)^(0+128),w
  3062  0797  00F5               	movwf	___llmod@dividend+1
  3063  0798  0828               	movf	printf@val^(0+128),w
  3064  0799  00F4               	movwf	___llmod@dividend
  3065  079A  160A  118A  256F  120A  118A  	fcall	___llmod
  3066  079F  0873               	movf	?___llmod+3,w
  3067  07A0  1683               	bsf	3,5	;RP0=1, select bank1
  3068  07A1  1303               	bcf	3,6	;RP1=0, select bank1
  3069  07A2  00AB               	movwf	(printf@val+3)^(0+128)
  3070  07A3  0872               	movf	?___llmod+2,w
  3071  07A4  00AA               	movwf	(printf@val+2)^(0+128)
  3072  07A5  0871               	movf	?___llmod+1,w
  3073  07A6  00A9               	movwf	(printf@val+1)^(0+128)
  3074  07A7  0870               	movf	?___llmod,w
  3075  07A8  2EEF               	goto	L4
  3076  07A9                     l2159:	
  3077                           ;doprnt.c: 1233: }
  3078                           ;doprnt.c: 1235: while(prec) {
  3079                           
  3080                           
  3081                           ;doprnt.c: 1236: (putch('0') );
  3082  07A9  3030               	movlw	48
  3083  07AA  120A  118A  2005  120A  118A  	fcall	_putch
  3084                           
  3085                           ;doprnt.c: 1237: prec--;
  3086  07AF  30FF               	movlw	255
  3087  07B0  1683               	bsf	3,5	;RP0=1, select bank1
  3088  07B1  1303               	bcf	3,6	;RP1=0, select bank1
  3089  07B2  07A6               	addwf	printf@prec^(0+128),f
  3090  07B3  1803               	skipnc
  3091  07B4  0AA7               	incf	(printf@prec+1)^(0+128),f
  3092  07B5  30FF               	movlw	255
  3093  07B6  07A7               	addwf	(printf@prec+1)^(0+128),f
  3094  07B7                     l2163:	
  3095  07B7  0826               	movf	printf@prec^(0+128),w
  3096  07B8  0427               	iorwf	(printf@prec+1)^(0+128),w
  3097  07B9  1903               	btfsc	3,2
  3098  07BA  2A7D               	goto	l2169
  3099  07BB  2FA9               	goto	l2159
  3100  07BC                     l2165:	
  3101                           ;doprnt.c: 1238: }
  3102                           ;doprnt.c: 1245: continue;
  3103                           
  3104                           
  3105                           ;doprnt.c: 1246: }
  3106                           ;doprnt.c: 1422: {
  3107                           ;doprnt.c: 1438: if(flag & 0x03)
  3108  07BC  3003               	movlw	3
  3109  07BD  1683               	bsf	3,5	;RP0=1, select bank1
  3110  07BE  1303               	bcf	3,6	;RP1=0, select bank1
  3111  07BF  0524               	andwf	printf@flag^(0+128),w
  3112  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  3113  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  3114  07C2  00DF               	movwf	??_printf
  3115  07C3  3000               	movlw	0
  3116  07C4  1683               	bsf	3,5	;RP0=1, select bank1
  3117  07C5  1303               	bcf	3,6	;RP1=0, select bank1
  3118  07C6  0525               	andwf	(printf@flag+1)^(0+128),w
  3119  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  3120  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  3121  07C9  00E0               	movwf	??_printf+1
  3122  07CA  085F               	movf	??_printf,w
  3123  07CB  0460               	iorwf	??_printf+1,w
  3124  07CC  1903               	btfsc	3,2
  3125  07CD  2A7D               	goto	l2169
  3126                           
  3127                           ;doprnt.c: 1439: (putch('-') );
  3128  07CE  302D               	movlw	45
  3129  07CF  120A  118A  2005  120A  118A  	fcall	_putch
  3130  07D4  2A7D               	goto	l2169
  3131  07D5                     l137:	
  3132                           ;doprnt.c: 1540: return 0;
  3133                           ;	Return value of _printf is never used
  3134                           
  3135                           ;doprnt.c: 1469: }
  3136                           ;doprnt.c: 1533: }
  3137                           ;doprnt.c: 1535: alldone:
  3138                           
  3139  07D5  0008               	return
  3140  07D6                     __end_of_printf:	
  3141                           
  3142                           	psect	text2
  3143  0D35                     __ptext2:	
  3144 ;; *************** function _scale *****************
  3145 ;; Defined at:
  3146 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  scl             1    wreg     char 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  scl             1   31[BANK0 ] char 
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  3   23[BANK0 ] char 
  3153 ;; Registers used:
  3154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3160 ;;      Params:         0       3       0       0       0
  3161 ;;      Locals:         0       4       0       0       0
  3162 ;;      Temps:          0       2       0       0       0
  3163 ;;      Totals:         0       9       0       0       0
  3164 ;;Total ram usage:        9 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    2
  3167 ;; This function calls:
  3168 ;;		___awdiv
  3169 ;;		___awmod
  3170 ;;		___bmul
  3171 ;;		___ftmul
  3172 ;; This function is called by:
  3173 ;;		_printf
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           
  3178                           ;psect for function _scale
  3179  0D35                     _scale:	
  3180                           
  3181                           ;incstack = 0
  3182                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3183                           ;scale@scl stored from wreg
  3184  0D35  1283               	bcf	3,5	;RP0=0, select bank0
  3185  0D36  1303               	bcf	3,6	;RP1=0, select bank0
  3186  0D37  00BF               	movwf	scale@scl
  3187                           
  3188                           ;doprnt.c: 428: if(scl < 0) {
  3189  0D38  1FBF               	btfss	scale@scl,7
  3190  0D39  2E9E               	goto	l1753
  3191                           
  3192                           ;doprnt.c: 429: scl = -scl;
  3193  0D3A  09BF               	comf	scale@scl,f
  3194  0D3B  0ABF               	incf	scale@scl,f
  3195                           
  3196                           ;doprnt.c: 430: if(scl>=110)
  3197  0D3C  083F               	movf	scale@scl,w
  3198  0D3D  3A80               	xorlw	128
  3199  0D3E  3E12               	addlw	-238
  3200  0D3F  1C03               	skipc
  3201  0D40  2E05               	goto	l1743
  3202                           
  3203                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3204  0D41  3003               	movlw	3
  3205  0D42  00BA               	movwf	??_scale
  3206  0D43  083A               	movf	??_scale,w
  3207  0D44  00A4               	movwf	___bmul@multiplicand
  3208  0D45  300A               	movlw	10
  3209  0D46  00F7               	movwf	___awdiv@divisor
  3210  0D47  3000               	movlw	0
  3211  0D48  00F8               	movwf	___awdiv@divisor+1
  3212  0D49  083F               	movf	scale@scl,w
  3213  0D4A  00F2               	movwf	___awmod@dividend
  3214  0D4B  01F3               	clrf	___awmod@dividend+1
  3215  0D4C  1BF2               	btfsc	___awmod@dividend,7
  3216  0D4D  03F3               	decf	___awmod@dividend+1,f
  3217  0D4E  3064               	movlw	100
  3218  0D4F  00F0               	movwf	___awmod@divisor
  3219  0D50  3000               	movlw	0
  3220  0D51  00F1               	movwf	___awmod@divisor+1
  3221  0D52  160A  118A  2524  120A  158A  	fcall	___awmod
  3222  0D57  0871               	movf	?___awmod+1,w
  3223  0D58  00FA               	movwf	___awdiv@dividend+1
  3224  0D59  0870               	movf	?___awmod,w
  3225  0D5A  00F9               	movwf	___awdiv@dividend
  3226  0D5B  160A  118A  25BB  120A  158A  	fcall	___awdiv
  3227  0D60  0877               	movf	?___awdiv,w
  3228  0D61  3E09               	addlw	9
  3229  0D62  120A  158A  2004  120A  158A  	fcall	___bmul
  3230  0D67  3E61               	addlw	low (__npowers_| (0+32768))
  3231  0D68  0084               	movwf	4
  3232  0D69  3090               	movlw	high (__npowers_| (0+32768))
  3233  0D6A  1803               	skipnc
  3234  0D6B  3E01               	addlw	1
  3235  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  3236  0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  3237  0D6E  00FF               	movwf	127
  3238  0D6F  160A  118A  2000  120A  158A  	fcall	stringtab
  3239  0D74  00A7               	movwf	___ftmul@f1
  3240  0D75  160A  118A  2000  120A  158A  	fcall	stringtab
  3241  0D7A  00A8               	movwf	___ftmul@f1+1
  3242  0D7B  160A  118A  2000  120A  158A  	fcall	stringtab
  3243  0D80  00A9               	movwf	___ftmul@f1+2
  3244  0D81  3003               	movlw	3
  3245  0D82  00BB               	movwf	??_scale+1
  3246  0D83  083B               	movf	??_scale+1,w
  3247  0D84  00A4               	movwf	___bmul@multiplicand
  3248  0D85  3064               	movlw	100
  3249  0D86  00F7               	movwf	___awdiv@divisor
  3250  0D87  3000               	movlw	0
  3251  0D88  00F8               	movwf	___awdiv@divisor+1
  3252  0D89  083F               	movf	scale@scl,w
  3253  0D8A  00F9               	movwf	___awdiv@dividend
  3254  0D8B  01FA               	clrf	___awdiv@dividend+1
  3255  0D8C  1BF9               	btfsc	___awdiv@dividend,7
  3256  0D8D  03FA               	decf	___awdiv@dividend+1,f
  3257  0D8E  160A  118A  25BB  120A  158A  	fcall	___awdiv
  3258  0D93  0877               	movf	?___awdiv,w
  3259  0D94  3E12               	addlw	18
  3260  0D95  120A  158A  2004  120A  158A  	fcall	___bmul
  3261  0D9A  3E61               	addlw	low (__npowers_| (0+32768))
  3262  0D9B  0084               	movwf	4
  3263  0D9C  3090               	movlw	high (__npowers_| (0+32768))
  3264  0D9D  1803               	skipnc
  3265  0D9E  3E01               	addlw	1
  3266  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  3267  0DA0  1303               	bcf	3,6	;RP1=0, select bank0
  3268  0DA1  00FF               	movwf	127
  3269  0DA2  160A  118A  2000  120A  158A  	fcall	stringtab
  3270  0DA7  00AA               	movwf	___ftmul@f2
  3271  0DA8  160A  118A  2000  120A  158A  	fcall	stringtab
  3272  0DAD  00AB               	movwf	___ftmul@f2+1
  3273  0DAE  160A  118A  2000  120A  158A  	fcall	stringtab
  3274  0DB3  00AC               	movwf	___ftmul@f2+2
  3275  0DB4  120A  158A  20A5  120A  158A  	fcall	___ftmul
  3276  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0DBA  1303               	bcf	3,6	;RP1=0, select bank0
  3278  0DBB  0827               	movf	?___ftmul,w
  3279  0DBC  00BC               	movwf	_scale$662
  3280  0DBD  0828               	movf	?___ftmul+1,w
  3281  0DBE  00BD               	movwf	_scale$662+1
  3282  0DBF  0829               	movf	?___ftmul+2,w
  3283  0DC0  00BE               	movwf	_scale$662+2
  3284                           
  3285                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3286  0DC1  3003               	movlw	3
  3287  0DC2  00BA               	movwf	??_scale
  3288  0DC3  083A               	movf	??_scale,w
  3289  0DC4  00A4               	movwf	___bmul@multiplicand
  3290  0DC5  083F               	movf	scale@scl,w
  3291  0DC6  00F2               	movwf	___awmod@dividend
  3292  0DC7  01F3               	clrf	___awmod@dividend+1
  3293  0DC8  1BF2               	btfsc	___awmod@dividend,7
  3294  0DC9  03F3               	decf	___awmod@dividend+1,f
  3295  0DCA  300A               	movlw	10
  3296  0DCB  00F0               	movwf	___awmod@divisor
  3297  0DCC  3000               	movlw	0
  3298  0DCD  00F1               	movwf	___awmod@divisor+1
  3299  0DCE  160A  118A  2524  120A  158A  	fcall	___awmod
  3300  0DD3  0870               	movf	?___awmod,w
  3301  0DD4  120A  158A  2004  120A  158A  	fcall	___bmul
  3302  0DD9  3E61               	addlw	low (__npowers_| (0+32768))
  3303  0DDA  0084               	movwf	4
  3304  0DDB  3090               	movlw	high (__npowers_| (0+32768))
  3305  0DDC  1803               	skipnc
  3306  0DDD  3E01               	addlw	1
  3307  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  3308  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  3309  0DE0  00FF               	movwf	127
  3310  0DE1  160A  118A  2000  120A  158A  	fcall	stringtab
  3311  0DE6  00A7               	movwf	___ftmul@f1
  3312  0DE7  160A  118A  2000  120A  158A  	fcall	stringtab
  3313  0DEC  00A8               	movwf	___ftmul@f1+1
  3314  0DED  160A  118A  2000  120A  158A  	fcall	stringtab
  3315  0DF2  00A9               	movwf	___ftmul@f1+2
  3316  0DF3  083C               	movf	_scale$662,w
  3317  0DF4  00AA               	movwf	___ftmul@f2
  3318  0DF5  083D               	movf	_scale$662+1,w
  3319  0DF6  00AB               	movwf	___ftmul@f2+1
  3320  0DF7  083E               	movf	_scale$662+2,w
  3321  0DF8  00AC               	movwf	___ftmul@f2+2
  3322  0DF9  120A  158A  20A5   	fcall	___ftmul
  3323  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  3324  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  3325  0DFE  0827               	movf	?___ftmul,w
  3326  0DFF  00B7               	movwf	?_scale
  3327  0E00  0828               	movf	?___ftmul+1,w
  3328  0E01  00B8               	movwf	?_scale+1
  3329  0E02  0829               	movf	?___ftmul+2,w
  3330  0E03  00B9               	movwf	?_scale+2
  3331  0E04  0008               	return
  3332  0E05                     l1743:	
  3333                           
  3334                           ;doprnt.c: 432: else if(scl > 10)
  3335  0E05  083F               	movf	scale@scl,w
  3336  0E06  3A80               	xorlw	128
  3337  0E07  3E75               	addlw	-139
  3338  0E08  1C03               	skipc
  3339  0E09  2E7B               	goto	l1749
  3340                           
  3341                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3342  0E0A  3003               	movlw	3
  3343  0E0B  00BA               	movwf	??_scale
  3344  0E0C  083A               	movf	??_scale,w
  3345  0E0D  00A4               	movwf	___bmul@multiplicand
  3346  0E0E  083F               	movf	scale@scl,w
  3347  0E0F  00F2               	movwf	___awmod@dividend
  3348  0E10  01F3               	clrf	___awmod@dividend+1
  3349  0E11  1BF2               	btfsc	___awmod@dividend,7
  3350  0E12  03F3               	decf	___awmod@dividend+1,f
  3351  0E13  300A               	movlw	10
  3352  0E14  00F0               	movwf	___awmod@divisor
  3353  0E15  3000               	movlw	0
  3354  0E16  00F1               	movwf	___awmod@divisor+1
  3355  0E17  160A  118A  2524  120A  158A  	fcall	___awmod
  3356  0E1C  0870               	movf	?___awmod,w
  3357  0E1D  120A  158A  2004  120A  158A  	fcall	___bmul
  3358  0E22  3E61               	addlw	low (__npowers_| (0+32768))
  3359  0E23  0084               	movwf	4
  3360  0E24  3090               	movlw	high (__npowers_| (0+32768))
  3361  0E25  1803               	skipnc
  3362  0E26  3E01               	addlw	1
  3363  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  3364  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  3365  0E29  00FF               	movwf	127
  3366  0E2A  160A  118A  2000  120A  158A  	fcall	stringtab
  3367  0E2F  00A7               	movwf	___ftmul@f1
  3368  0E30  160A  118A  2000  120A  158A  	fcall	stringtab
  3369  0E35  00A8               	movwf	___ftmul@f1+1
  3370  0E36  160A  118A  2000  120A  158A  	fcall	stringtab
  3371  0E3B  00A9               	movwf	___ftmul@f1+2
  3372  0E3C  3003               	movlw	3
  3373  0E3D  00BB               	movwf	??_scale+1
  3374  0E3E  083B               	movf	??_scale+1,w
  3375  0E3F  00A4               	movwf	___bmul@multiplicand
  3376  0E40  300A               	movlw	10
  3377  0E41  00F7               	movwf	___awdiv@divisor
  3378  0E42  3000               	movlw	0
  3379  0E43  00F8               	movwf	___awdiv@divisor+1
  3380  0E44  083F               	movf	scale@scl,w
  3381  0E45  00F9               	movwf	___awdiv@dividend
  3382  0E46  01FA               	clrf	___awdiv@dividend+1
  3383  0E47  1BF9               	btfsc	___awdiv@dividend,7
  3384  0E48  03FA               	decf	___awdiv@dividend+1,f
  3385  0E49  160A  118A  25BB  120A  158A  	fcall	___awdiv
  3386  0E4E  0877               	movf	?___awdiv,w
  3387  0E4F  3E09               	addlw	9
  3388  0E50  120A  158A  2004  120A  158A  	fcall	___bmul
  3389  0E55  3E61               	addlw	low (__npowers_| (0+32768))
  3390  0E56  0084               	movwf	4
  3391  0E57  3090               	movlw	high (__npowers_| (0+32768))
  3392  0E58  1803               	skipnc
  3393  0E59  3E01               	addlw	1
  3394  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  3395  0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  3396  0E5C  00FF               	movwf	127
  3397  0E5D  160A  118A  2000  120A  158A  	fcall	stringtab
  3398  0E62  00AA               	movwf	___ftmul@f2
  3399  0E63  160A  118A  2000  120A  158A  	fcall	stringtab
  3400  0E68  00AB               	movwf	___ftmul@f2+1
  3401  0E69  160A  118A  2000  120A  158A  	fcall	stringtab
  3402  0E6E  00AC               	movwf	___ftmul@f2+2
  3403  0E6F  120A  158A  20A5   	fcall	___ftmul
  3404  0E72  1283               	bcf	3,5	;RP0=0, select bank0
  3405  0E73  1303               	bcf	3,6	;RP1=0, select bank0
  3406  0E74  0827               	movf	?___ftmul,w
  3407  0E75  00B7               	movwf	?_scale
  3408  0E76  0828               	movf	?___ftmul+1,w
  3409  0E77  00B8               	movwf	?_scale+1
  3410  0E78  0829               	movf	?___ftmul+2,w
  3411  0E79  00B9               	movwf	?_scale+2
  3412  0E7A  0008               	return
  3413  0E7B                     l1749:	
  3414                           
  3415                           ;doprnt.c: 434: return _npowers_[scl];
  3416  0E7B  3003               	movlw	3
  3417  0E7C  00BA               	movwf	??_scale
  3418  0E7D  083A               	movf	??_scale,w
  3419  0E7E  00A4               	movwf	___bmul@multiplicand
  3420  0E7F  083F               	movf	scale@scl,w
  3421  0E80  120A  158A  2004  120A  158A  	fcall	___bmul
  3422  0E85  3E61               	addlw	low (__npowers_| (0+32768))
  3423  0E86  0084               	movwf	4
  3424  0E87  3090               	movlw	high (__npowers_| (0+32768))
  3425  0E88  1803               	skipnc
  3426  0E89  3E01               	addlw	1
  3427  0E8A  1283               	bcf	3,5	;RP0=0, select bank0
  3428  0E8B  1303               	bcf	3,6	;RP1=0, select bank0
  3429  0E8C  00FF               	movwf	127
  3430  0E8D  160A  118A  2000  120A  158A  	fcall	stringtab
  3431  0E92  00B7               	movwf	?_scale
  3432  0E93  160A  118A  2000  120A  158A  	fcall	stringtab
  3433  0E98  00B8               	movwf	?_scale+1
  3434  0E99  160A  118A  2000   	fcall	stringtab
  3435  0E9C  00B9               	movwf	?_scale+2
  3436  0E9D  0008               	return
  3437  0E9E                     l1753:	
  3438                           
  3439                           ;doprnt.c: 435: }
  3440                           ;doprnt.c: 436: if(scl>=110)
  3441  0E9E  083F               	movf	scale@scl,w
  3442  0E9F  3A80               	xorlw	128
  3443  0EA0  3E12               	addlw	-238
  3444  0EA1  1C03               	skipc
  3445  0EA2  2F67               	goto	l1761
  3446                           
  3447                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3448  0EA3  3003               	movlw	3
  3449  0EA4  00BA               	movwf	??_scale
  3450  0EA5  083A               	movf	??_scale,w
  3451  0EA6  00A4               	movwf	___bmul@multiplicand
  3452  0EA7  300A               	movlw	10
  3453  0EA8  00F7               	movwf	___awdiv@divisor
  3454  0EA9  3000               	movlw	0
  3455  0EAA  00F8               	movwf	___awdiv@divisor+1
  3456  0EAB  083F               	movf	scale@scl,w
  3457  0EAC  00F2               	movwf	___awmod@dividend
  3458  0EAD  01F3               	clrf	___awmod@dividend+1
  3459  0EAE  1BF2               	btfsc	___awmod@dividend,7
  3460  0EAF  03F3               	decf	___awmod@dividend+1,f
  3461  0EB0  3064               	movlw	100
  3462  0EB1  00F0               	movwf	___awmod@divisor
  3463  0EB2  3000               	movlw	0
  3464  0EB3  00F1               	movwf	___awmod@divisor+1
  3465  0EB4  160A  118A  2524  120A  158A  	fcall	___awmod
  3466  0EB9  0871               	movf	?___awmod+1,w
  3467  0EBA  00FA               	movwf	___awdiv@dividend+1
  3468  0EBB  0870               	movf	?___awmod,w
  3469  0EBC  00F9               	movwf	___awdiv@dividend
  3470  0EBD  160A  118A  25BB  120A  158A  	fcall	___awdiv
  3471  0EC2  0877               	movf	?___awdiv,w
  3472  0EC3  3E09               	addlw	9
  3473  0EC4  120A  158A  2004  120A  158A  	fcall	___bmul
  3474  0EC9  3E3A               	addlw	low (__powers_| (0+32768))
  3475  0ECA  0084               	movwf	4
  3476  0ECB  3090               	movlw	high (__powers_| (0+32768))
  3477  0ECC  1803               	skipnc
  3478  0ECD  3E01               	addlw	1
  3479  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  3480  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  3481  0ED0  00FF               	movwf	127
  3482  0ED1  160A  118A  2000  120A  158A  	fcall	stringtab
  3483  0ED6  00A7               	movwf	___ftmul@f1
  3484  0ED7  160A  118A  2000  120A  158A  	fcall	stringtab
  3485  0EDC  00A8               	movwf	___ftmul@f1+1
  3486  0EDD  160A  118A  2000  120A  158A  	fcall	stringtab
  3487  0EE2  00A9               	movwf	___ftmul@f1+2
  3488  0EE3  3003               	movlw	3
  3489  0EE4  00BB               	movwf	??_scale+1
  3490  0EE5  083B               	movf	??_scale+1,w
  3491  0EE6  00A4               	movwf	___bmul@multiplicand
  3492  0EE7  3064               	movlw	100
  3493  0EE8  00F7               	movwf	___awdiv@divisor
  3494  0EE9  3000               	movlw	0
  3495  0EEA  00F8               	movwf	___awdiv@divisor+1
  3496  0EEB  083F               	movf	scale@scl,w
  3497  0EEC  00F9               	movwf	___awdiv@dividend
  3498  0EED  01FA               	clrf	___awdiv@dividend+1
  3499  0EEE  1BF9               	btfsc	___awdiv@dividend,7
  3500  0EEF  03FA               	decf	___awdiv@dividend+1,f
  3501  0EF0  160A  118A  25BB  120A  158A  	fcall	___awdiv
  3502  0EF5  0877               	movf	?___awdiv,w
  3503  0EF6  3E12               	addlw	18
  3504  0EF7  120A  158A  2004  120A  158A  	fcall	___bmul
  3505  0EFC  3E3A               	addlw	low (__powers_| (0+32768))
  3506  0EFD  0084               	movwf	4
  3507  0EFE  3090               	movlw	high (__powers_| (0+32768))
  3508  0EFF  1803               	skipnc
  3509  0F00  3E01               	addlw	1
  3510  0F01  1283               	bcf	3,5	;RP0=0, select bank0
  3511  0F02  1303               	bcf	3,6	;RP1=0, select bank0
  3512  0F03  00FF               	movwf	127
  3513  0F04  160A  118A  2000  120A  158A  	fcall	stringtab
  3514  0F09  00AA               	movwf	___ftmul@f2
  3515  0F0A  160A  118A  2000  120A  158A  	fcall	stringtab
  3516  0F0F  00AB               	movwf	___ftmul@f2+1
  3517  0F10  160A  118A  2000  120A  158A  	fcall	stringtab
  3518  0F15  00AC               	movwf	___ftmul@f2+2
  3519  0F16  120A  158A  20A5  120A  158A  	fcall	___ftmul
  3520  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  3521  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  3522  0F1D  0827               	movf	?___ftmul,w
  3523  0F1E  00BC               	movwf	_scale$662
  3524  0F1F  0828               	movf	?___ftmul+1,w
  3525  0F20  00BD               	movwf	_scale$662+1
  3526  0F21  0829               	movf	?___ftmul+2,w
  3527  0F22  00BE               	movwf	_scale$662+2
  3528                           
  3529                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3530  0F23  3003               	movlw	3
  3531  0F24  00BA               	movwf	??_scale
  3532  0F25  083A               	movf	??_scale,w
  3533  0F26  00A4               	movwf	___bmul@multiplicand
  3534  0F27  083F               	movf	scale@scl,w
  3535  0F28  00F2               	movwf	___awmod@dividend
  3536  0F29  01F3               	clrf	___awmod@dividend+1
  3537  0F2A  1BF2               	btfsc	___awmod@dividend,7
  3538  0F2B  03F3               	decf	___awmod@dividend+1,f
  3539  0F2C  300A               	movlw	10
  3540  0F2D  00F0               	movwf	___awmod@divisor
  3541  0F2E  3000               	movlw	0
  3542  0F2F  00F1               	movwf	___awmod@divisor+1
  3543  0F30  160A  118A  2524  120A  158A  	fcall	___awmod
  3544  0F35  0870               	movf	?___awmod,w
  3545  0F36  120A  158A  2004  120A  158A  	fcall	___bmul
  3546  0F3B  3E3A               	addlw	low (__powers_| (0+32768))
  3547  0F3C  0084               	movwf	4
  3548  0F3D  3090               	movlw	high (__powers_| (0+32768))
  3549  0F3E  1803               	skipnc
  3550  0F3F  3E01               	addlw	1
  3551  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  3552  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  3553  0F42  00FF               	movwf	127
  3554  0F43  160A  118A  2000  120A  158A  	fcall	stringtab
  3555  0F48  00A7               	movwf	___ftmul@f1
  3556  0F49  160A  118A  2000  120A  158A  	fcall	stringtab
  3557  0F4E  00A8               	movwf	___ftmul@f1+1
  3558  0F4F  160A  118A  2000  120A  158A  	fcall	stringtab
  3559  0F54  00A9               	movwf	___ftmul@f1+2
  3560  0F55  083C               	movf	_scale$662,w
  3561  0F56  00AA               	movwf	___ftmul@f2
  3562  0F57  083D               	movf	_scale$662+1,w
  3563  0F58  00AB               	movwf	___ftmul@f2+1
  3564  0F59  083E               	movf	_scale$662+2,w
  3565  0F5A  00AC               	movwf	___ftmul@f2+2
  3566  0F5B  120A  158A  20A5   	fcall	___ftmul
  3567  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3568  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3569  0F60  0827               	movf	?___ftmul,w
  3570  0F61  00B7               	movwf	?_scale
  3571  0F62  0828               	movf	?___ftmul+1,w
  3572  0F63  00B8               	movwf	?_scale+1
  3573  0F64  0829               	movf	?___ftmul+2,w
  3574  0F65  00B9               	movwf	?_scale+2
  3575  0F66  0008               	return
  3576  0F67                     l1761:	
  3577                           
  3578                           ;doprnt.c: 438: else if(scl > 10)
  3579  0F67  083F               	movf	scale@scl,w
  3580  0F68  3A80               	xorlw	128
  3581  0F69  3E75               	addlw	-139
  3582  0F6A  1C03               	skipc
  3583  0F6B  2FDD               	goto	l1767
  3584                           
  3585                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3586  0F6C  3003               	movlw	3
  3587  0F6D  00BA               	movwf	??_scale
  3588  0F6E  083A               	movf	??_scale,w
  3589  0F6F  00A4               	movwf	___bmul@multiplicand
  3590  0F70  083F               	movf	scale@scl,w
  3591  0F71  00F2               	movwf	___awmod@dividend
  3592  0F72  01F3               	clrf	___awmod@dividend+1
  3593  0F73  1BF2               	btfsc	___awmod@dividend,7
  3594  0F74  03F3               	decf	___awmod@dividend+1,f
  3595  0F75  300A               	movlw	10
  3596  0F76  00F0               	movwf	___awmod@divisor
  3597  0F77  3000               	movlw	0
  3598  0F78  00F1               	movwf	___awmod@divisor+1
  3599  0F79  160A  118A  2524  120A  158A  	fcall	___awmod
  3600  0F7E  0870               	movf	?___awmod,w
  3601  0F7F  120A  158A  2004  120A  158A  	fcall	___bmul
  3602  0F84  3E3A               	addlw	low (__powers_| (0+32768))
  3603  0F85  0084               	movwf	4
  3604  0F86  3090               	movlw	high (__powers_| (0+32768))
  3605  0F87  1803               	skipnc
  3606  0F88  3E01               	addlw	1
  3607  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  3608  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  3609  0F8B  00FF               	movwf	127
  3610  0F8C  160A  118A  2000  120A  158A  	fcall	stringtab
  3611  0F91  00A7               	movwf	___ftmul@f1
  3612  0F92  160A  118A  2000  120A  158A  	fcall	stringtab
  3613  0F97  00A8               	movwf	___ftmul@f1+1
  3614  0F98  160A  118A  2000  120A  158A  	fcall	stringtab
  3615  0F9D  00A9               	movwf	___ftmul@f1+2
  3616  0F9E  3003               	movlw	3
  3617  0F9F  00BB               	movwf	??_scale+1
  3618  0FA0  083B               	movf	??_scale+1,w
  3619  0FA1  00A4               	movwf	___bmul@multiplicand
  3620  0FA2  300A               	movlw	10
  3621  0FA3  00F7               	movwf	___awdiv@divisor
  3622  0FA4  3000               	movlw	0
  3623  0FA5  00F8               	movwf	___awdiv@divisor+1
  3624  0FA6  083F               	movf	scale@scl,w
  3625  0FA7  00F9               	movwf	___awdiv@dividend
  3626  0FA8  01FA               	clrf	___awdiv@dividend+1
  3627  0FA9  1BF9               	btfsc	___awdiv@dividend,7
  3628  0FAA  03FA               	decf	___awdiv@dividend+1,f
  3629  0FAB  160A  118A  25BB  120A  158A  	fcall	___awdiv
  3630  0FB0  0877               	movf	?___awdiv,w
  3631  0FB1  3E09               	addlw	9
  3632  0FB2  120A  158A  2004  120A  158A  	fcall	___bmul
  3633  0FB7  3E3A               	addlw	low (__powers_| (0+32768))
  3634  0FB8  0084               	movwf	4
  3635  0FB9  3090               	movlw	high (__powers_| (0+32768))
  3636  0FBA  1803               	skipnc
  3637  0FBB  3E01               	addlw	1
  3638  0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  3639  0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  3640  0FBE  00FF               	movwf	127
  3641  0FBF  160A  118A  2000  120A  158A  	fcall	stringtab
  3642  0FC4  00AA               	movwf	___ftmul@f2
  3643  0FC5  160A  118A  2000  120A  158A  	fcall	stringtab
  3644  0FCA  00AB               	movwf	___ftmul@f2+1
  3645  0FCB  160A  118A  2000  120A  158A  	fcall	stringtab
  3646  0FD0  00AC               	movwf	___ftmul@f2+2
  3647  0FD1  120A  158A  20A5   	fcall	___ftmul
  3648  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3649  0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  3650  0FD6  0827               	movf	?___ftmul,w
  3651  0FD7  00B7               	movwf	?_scale
  3652  0FD8  0828               	movf	?___ftmul+1,w
  3653  0FD9  00B8               	movwf	?_scale+1
  3654  0FDA  0829               	movf	?___ftmul+2,w
  3655  0FDB  00B9               	movwf	?_scale+2
  3656  0FDC  0008               	return
  3657  0FDD                     l1767:	
  3658                           
  3659                           ;doprnt.c: 440: return _powers_[scl];
  3660  0FDD  3003               	movlw	3
  3661  0FDE  00BA               	movwf	??_scale
  3662  0FDF  083A               	movf	??_scale,w
  3663  0FE0  00A4               	movwf	___bmul@multiplicand
  3664  0FE1  083F               	movf	scale@scl,w
  3665  0FE2  120A  158A  2004  120A  158A  	fcall	___bmul
  3666  0FE7  3E3A               	addlw	low (__powers_| (0+32768))
  3667  0FE8  0084               	movwf	4
  3668  0FE9  3090               	movlw	high (__powers_| (0+32768))
  3669  0FEA  1803               	skipnc
  3670  0FEB  3E01               	addlw	1
  3671  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  3672  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  3673  0FEE  00FF               	movwf	127
  3674  0FEF  160A  118A  2000  120A  158A  	fcall	stringtab
  3675  0FF4  00B7               	movwf	?_scale
  3676  0FF5  160A  118A  2000  120A  158A  	fcall	stringtab
  3677  0FFA  00B8               	movwf	?_scale+1
  3678  0FFB  160A  118A  2000   	fcall	stringtab
  3679  0FFE  00B9               	movwf	?_scale+2
  3680  0FFF  0008               	return
  3681  1000                     __end_of_scale:	
  3682                           
  3683                           	psect	text3
  3684  0005                     __ptext3:	
  3685 ;; *************** function _putch *****************
  3686 ;; Defined at:
  3687 ;;		line 3 in file "config.h"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;  dato            1    wreg     unsigned char 
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;  dato            1    0[COMMON] unsigned char 
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      void 
  3694 ;; Registers used:
  3695 ;;		wreg
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3701 ;;      Params:         0       0       0       0       0
  3702 ;;      Locals:         1       0       0       0       0
  3703 ;;      Temps:          0       0       0       0       0
  3704 ;;      Totals:         1       0       0       0       0
  3705 ;;Total ram usage:        1 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; This function calls:
  3708 ;;		Nothing
  3709 ;; This function is called by:
  3710 ;;		_printf
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           
  3715                           ;psect for function _putch
  3716  0005                     _putch:	
  3717                           
  3718                           ;incstack = 0
  3719                           ; Regs used in _putch: [wreg]
  3720                           ;putch@dato stored from wreg
  3721  0005  00F0               	movwf	putch@dato
  3722  0006                     l19:	
  3723                           ;config.h: 5: continue;
  3724                           
  3725                           ;config.h: 4: while (! PIR1bits.TXIF)
  3726                           
  3727  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3728  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3729  0008  1E0C               	btfss	12,4	;volatile
  3730  0009  2806               	goto	l19
  3731                           
  3732                           ;config.h: 6: TXREG = dato;
  3733  000A  0870               	movf	putch@dato,w
  3734  000B  0099               	movwf	25	;volatile
  3735  000C  0008               	return
  3736  000D                     __end_of_putch:	
  3737                           
  3738                           	psect	text4
  3739  00C3                     __ptext4:	
  3740 ;; *************** function _fround *****************
  3741 ;; Defined at:
  3742 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;  prec            1    wreg     unsigned char 
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;  prec            1   38[BANK0 ] unsigned char 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  3   23[BANK0 ] unsigned char 
  3749 ;; Registers used:
  3750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3756 ;;      Params:         0       3       0       0       0
  3757 ;;      Locals:         0       7       0       0       0
  3758 ;;      Temps:          0       6       0       0       0
  3759 ;;      Totals:         0      16       0       0       0
  3760 ;;Total ram usage:       16 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    2
  3763 ;; This function calls:
  3764 ;;		___awdiv
  3765 ;;		___awmod
  3766 ;;		___bmul
  3767 ;;		___ftmul
  3768 ;; This function is called by:
  3769 ;;		_printf
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           
  3774                           ;psect for function _fround
  3775  00C3                     _fround:	
  3776                           
  3777                           ;incstack = 0
  3778                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3779                           ;fround@prec stored from wreg
  3780  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  3781  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  3782  00C5  00C6               	movwf	fround@prec
  3783                           
  3784                           ;doprnt.c: 413: if(prec>=110)
  3785  00C6  306E               	movlw	110
  3786  00C7  0246               	subwf	fround@prec,w
  3787  00C8  1C03               	skipc
  3788  00C9  29AD               	goto	l1719
  3789                           
  3790                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3791  00CA  3003               	movlw	3
  3792  00CB  00BA               	movwf	??_fround
  3793  00CC  083A               	movf	??_fround,w
  3794  00CD  00A4               	movwf	___bmul@multiplicand
  3795  00CE  300A               	movlw	10
  3796  00CF  00F7               	movwf	___awdiv@divisor
  3797  00D0  3000               	movlw	0
  3798  00D1  00F8               	movwf	___awdiv@divisor+1
  3799  00D2  0846               	movf	fround@prec,w
  3800  00D3  00BB               	movwf	??_fround+1
  3801  00D4  01BC               	clrf	??_fround+2
  3802  00D5  083B               	movf	??_fround+1,w
  3803  00D6  00F2               	movwf	___awmod@dividend
  3804  00D7  083C               	movf	??_fround+2,w
  3805  00D8  00F3               	movwf	___awmod@dividend+1
  3806  00D9  3064               	movlw	100
  3807  00DA  00F0               	movwf	___awmod@divisor
  3808  00DB  3000               	movlw	0
  3809  00DC  00F1               	movwf	___awmod@divisor+1
  3810  00DD  160A  118A  2524  120A  118A  	fcall	___awmod
  3811  00E2  0871               	movf	?___awmod+1,w
  3812  00E3  00FA               	movwf	___awdiv@dividend+1
  3813  00E4  0870               	movf	?___awmod,w
  3814  00E5  00F9               	movwf	___awdiv@dividend
  3815  00E6  160A  118A  25BB  120A  118A  	fcall	___awdiv
  3816  00EB  0877               	movf	?___awdiv,w
  3817  00EC  3E09               	addlw	9
  3818  00ED  120A  158A  2004  120A  118A  	fcall	___bmul
  3819  00F2  3E61               	addlw	low (__npowers_| (0+32768))
  3820  00F3  0084               	movwf	4
  3821  00F4  3090               	movlw	high (__npowers_| (0+32768))
  3822  00F5  1803               	skipnc
  3823  00F6  3E01               	addlw	1
  3824  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  3825  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  3826  00F9  00FF               	movwf	127
  3827  00FA  160A  118A  2000  120A  118A  	fcall	stringtab
  3828  00FF  00A7               	movwf	___ftmul@f1
  3829  0100  160A  118A  2000  120A  118A  	fcall	stringtab
  3830  0105  00A8               	movwf	___ftmul@f1+1
  3831  0106  160A  118A  2000  120A  118A  	fcall	stringtab
  3832  010B  00A9               	movwf	___ftmul@f1+2
  3833  010C  3003               	movlw	3
  3834  010D  00BD               	movwf	??_fround+3
  3835  010E  083D               	movf	??_fround+3,w
  3836  010F  00A4               	movwf	___bmul@multiplicand
  3837  0110  3064               	movlw	100
  3838  0111  00F7               	movwf	___awdiv@divisor
  3839  0112  3000               	movlw	0
  3840  0113  00F8               	movwf	___awdiv@divisor+1
  3841  0114  0846               	movf	fround@prec,w
  3842  0115  00BE               	movwf	??_fround+4
  3843  0116  01BF               	clrf	??_fround+5
  3844  0117  083E               	movf	??_fround+4,w
  3845  0118  00F9               	movwf	___awdiv@dividend
  3846  0119  083F               	movf	??_fround+5,w
  3847  011A  00FA               	movwf	___awdiv@dividend+1
  3848  011B  160A  118A  25BB  120A  118A  	fcall	___awdiv
  3849  0120  0877               	movf	?___awdiv,w
  3850  0121  3E12               	addlw	18
  3851  0122  120A  158A  2004  120A  118A  	fcall	___bmul
  3852  0127  3E61               	addlw	low (__npowers_| (0+32768))
  3853  0128  0084               	movwf	4
  3854  0129  3090               	movlw	high (__npowers_| (0+32768))
  3855  012A  1803               	skipnc
  3856  012B  3E01               	addlw	1
  3857  012C  1283               	bcf	3,5	;RP0=0, select bank0
  3858  012D  1303               	bcf	3,6	;RP1=0, select bank0
  3859  012E  00FF               	movwf	127
  3860  012F  160A  118A  2000  120A  118A  	fcall	stringtab
  3861  0134  00AA               	movwf	___ftmul@f2
  3862  0135  160A  118A  2000  120A  118A  	fcall	stringtab
  3863  013A  00AB               	movwf	___ftmul@f2+1
  3864  013B  160A  118A  2000  120A  118A  	fcall	stringtab
  3865  0140  00AC               	movwf	___ftmul@f2+2
  3866  0141  120A  158A  20A5  120A  118A  	fcall	___ftmul
  3867  0146  1283               	bcf	3,5	;RP0=0, select bank0
  3868  0147  1303               	bcf	3,6	;RP1=0, select bank0
  3869  0148  0827               	movf	?___ftmul,w
  3870  0149  00C3               	movwf	_fround$660
  3871  014A  0828               	movf	?___ftmul+1,w
  3872  014B  00C4               	movwf	_fround$660+1
  3873  014C  0829               	movf	?___ftmul+2,w
  3874  014D  00C5               	movwf	_fround$660+2
  3875                           
  3876                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3877  014E  3003               	movlw	3
  3878  014F  00BA               	movwf	??_fround
  3879  0150  083A               	movf	??_fround,w
  3880  0151  00A4               	movwf	___bmul@multiplicand
  3881  0152  0846               	movf	fround@prec,w
  3882  0153  00BB               	movwf	??_fround+1
  3883  0154  01BC               	clrf	??_fround+2
  3884  0155  083B               	movf	??_fround+1,w
  3885  0156  00F2               	movwf	___awmod@dividend
  3886  0157  083C               	movf	??_fround+2,w
  3887  0158  00F3               	movwf	___awmod@dividend+1
  3888  0159  300A               	movlw	10
  3889  015A  00F0               	movwf	___awmod@divisor
  3890  015B  3000               	movlw	0
  3891  015C  00F1               	movwf	___awmod@divisor+1
  3892  015D  160A  118A  2524  120A  118A  	fcall	___awmod
  3893  0162  0870               	movf	?___awmod,w
  3894  0163  120A  158A  2004  120A  118A  	fcall	___bmul
  3895  0168  3E61               	addlw	low (__npowers_| (0+32768))
  3896  0169  0084               	movwf	4
  3897  016A  3090               	movlw	high (__npowers_| (0+32768))
  3898  016B  1803               	skipnc
  3899  016C  3E01               	addlw	1
  3900  016D  1283               	bcf	3,5	;RP0=0, select bank0
  3901  016E  1303               	bcf	3,6	;RP1=0, select bank0
  3902  016F  00FF               	movwf	127
  3903  0170  160A  118A  2000  120A  118A  	fcall	stringtab
  3904  0175  00A7               	movwf	___ftmul@f1
  3905  0176  160A  118A  2000  120A  118A  	fcall	stringtab
  3906  017B  00A8               	movwf	___ftmul@f1+1
  3907  017C  160A  118A  2000  120A  118A  	fcall	stringtab
  3908  0181  00A9               	movwf	___ftmul@f1+2
  3909  0182  0843               	movf	_fround$660,w
  3910  0183  00AA               	movwf	___ftmul@f2
  3911  0184  0844               	movf	_fround$660+1,w
  3912  0185  00AB               	movwf	___ftmul@f2+1
  3913  0186  0845               	movf	_fround$660+2,w
  3914  0187  00AC               	movwf	___ftmul@f2+2
  3915  0188  120A  158A  20A5  120A  118A  	fcall	___ftmul
  3916  018D  1283               	bcf	3,5	;RP0=0, select bank0
  3917  018E  1303               	bcf	3,6	;RP1=0, select bank0
  3918  018F  0827               	movf	?___ftmul,w
  3919  0190  00C0               	movwf	_fround$661
  3920  0191  0828               	movf	?___ftmul+1,w
  3921  0192  00C1               	movwf	_fround$661+1
  3922  0193  0829               	movf	?___ftmul+2,w
  3923  0194  00C2               	movwf	_fround$661+2
  3924                           
  3925                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3926  0195  3000               	movlw	0
  3927  0196  00A7               	movwf	___ftmul@f1
  3928  0197  3000               	movlw	0
  3929  0198  00A8               	movwf	___ftmul@f1+1
  3930  0199  303F               	movlw	63
  3931  019A  00A9               	movwf	___ftmul@f1+2
  3932  019B  0840               	movf	_fround$661,w
  3933  019C  00AA               	movwf	___ftmul@f2
  3934  019D  0841               	movf	_fround$661+1,w
  3935  019E  00AB               	movwf	___ftmul@f2+1
  3936  019F  0842               	movf	_fround$661+2,w
  3937  01A0  00AC               	movwf	___ftmul@f2+2
  3938  01A1  120A  158A  20A5   	fcall	___ftmul
  3939  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  3940  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  3941  01A6  0827               	movf	?___ftmul,w
  3942  01A7  00B7               	movwf	?_fround
  3943  01A8  0828               	movf	?___ftmul+1,w
  3944  01A9  00B8               	movwf	?_fround+1
  3945  01AA  0829               	movf	?___ftmul+2,w
  3946  01AB  00B9               	movwf	?_fround+2
  3947  01AC  0008               	return
  3948  01AD                     l1719:	
  3949                           
  3950                           ;doprnt.c: 415: else if(prec > 10)
  3951  01AD  300B               	movlw	11
  3952  01AE  0246               	subwf	fround@prec,w
  3953  01AF  1C03               	skipc
  3954  01B0  2A3F               	goto	l1727
  3955                           
  3956                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3957  01B1  3003               	movlw	3
  3958  01B2  00BA               	movwf	??_fround
  3959  01B3  083A               	movf	??_fround,w
  3960  01B4  00A4               	movwf	___bmul@multiplicand
  3961  01B5  0846               	movf	fround@prec,w
  3962  01B6  00BB               	movwf	??_fround+1
  3963  01B7  01BC               	clrf	??_fround+2
  3964  01B8  083B               	movf	??_fround+1,w
  3965  01B9  00F2               	movwf	___awmod@dividend
  3966  01BA  083C               	movf	??_fround+2,w
  3967  01BB  00F3               	movwf	___awmod@dividend+1
  3968  01BC  300A               	movlw	10
  3969  01BD  00F0               	movwf	___awmod@divisor
  3970  01BE  3000               	movlw	0
  3971  01BF  00F1               	movwf	___awmod@divisor+1
  3972  01C0  160A  118A  2524  120A  118A  	fcall	___awmod
  3973  01C5  0870               	movf	?___awmod,w
  3974  01C6  120A  158A  2004  120A  118A  	fcall	___bmul
  3975  01CB  3E61               	addlw	low (__npowers_| (0+32768))
  3976  01CC  0084               	movwf	4
  3977  01CD  3090               	movlw	high (__npowers_| (0+32768))
  3978  01CE  1803               	skipnc
  3979  01CF  3E01               	addlw	1
  3980  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  3981  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  3982  01D2  00FF               	movwf	127
  3983  01D3  160A  118A  2000  120A  118A  	fcall	stringtab
  3984  01D8  00A7               	movwf	___ftmul@f1
  3985  01D9  160A  118A  2000  120A  118A  	fcall	stringtab
  3986  01DE  00A8               	movwf	___ftmul@f1+1
  3987  01DF  160A  118A  2000  120A  118A  	fcall	stringtab
  3988  01E4  00A9               	movwf	___ftmul@f1+2
  3989  01E5  3003               	movlw	3
  3990  01E6  00BD               	movwf	??_fround+3
  3991  01E7  083D               	movf	??_fround+3,w
  3992  01E8  00A4               	movwf	___bmul@multiplicand
  3993  01E9  300A               	movlw	10
  3994  01EA  00F7               	movwf	___awdiv@divisor
  3995  01EB  3000               	movlw	0
  3996  01EC  00F8               	movwf	___awdiv@divisor+1
  3997  01ED  0846               	movf	fround@prec,w
  3998  01EE  00BE               	movwf	??_fround+4
  3999  01EF  01BF               	clrf	??_fround+5
  4000  01F0  083E               	movf	??_fround+4,w
  4001  01F1  00F9               	movwf	___awdiv@dividend
  4002  01F2  083F               	movf	??_fround+5,w
  4003  01F3  00FA               	movwf	___awdiv@dividend+1
  4004  01F4  160A  118A  25BB  120A  118A  	fcall	___awdiv
  4005  01F9  0877               	movf	?___awdiv,w
  4006  01FA  3E09               	addlw	9
  4007  01FB  120A  158A  2004  120A  118A  	fcall	___bmul
  4008  0200  3E61               	addlw	low (__npowers_| (0+32768))
  4009  0201  0084               	movwf	4
  4010  0202  3090               	movlw	high (__npowers_| (0+32768))
  4011  0203  1803               	skipnc
  4012  0204  3E01               	addlw	1
  4013  0205  1283               	bcf	3,5	;RP0=0, select bank0
  4014  0206  1303               	bcf	3,6	;RP1=0, select bank0
  4015  0207  00FF               	movwf	127
  4016  0208  160A  118A  2000  120A  118A  	fcall	stringtab
  4017  020D  00AA               	movwf	___ftmul@f2
  4018  020E  160A  118A  2000  120A  118A  	fcall	stringtab
  4019  0213  00AB               	movwf	___ftmul@f2+1
  4020  0214  160A  118A  2000  120A  118A  	fcall	stringtab
  4021  0219  00AC               	movwf	___ftmul@f2+2
  4022  021A  120A  158A  20A5  120A  118A  	fcall	___ftmul
  4023  021F  1283               	bcf	3,5	;RP0=0, select bank0
  4024  0220  1303               	bcf	3,6	;RP1=0, select bank0
  4025  0221  0827               	movf	?___ftmul,w
  4026  0222  00C3               	movwf	_fround$660
  4027  0223  0828               	movf	?___ftmul+1,w
  4028  0224  00C4               	movwf	_fround$660+1
  4029  0225  0829               	movf	?___ftmul+2,w
  4030  0226  00C5               	movwf	_fround$660+2
  4031                           
  4032                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4033  0227  3000               	movlw	0
  4034  0228  00A7               	movwf	___ftmul@f1
  4035  0229  3000               	movlw	0
  4036  022A  00A8               	movwf	___ftmul@f1+1
  4037  022B  303F               	movlw	63
  4038  022C  00A9               	movwf	___ftmul@f1+2
  4039  022D  0843               	movf	_fround$660,w
  4040  022E  00AA               	movwf	___ftmul@f2
  4041  022F  0844               	movf	_fround$660+1,w
  4042  0230  00AB               	movwf	___ftmul@f2+1
  4043  0231  0845               	movf	_fround$660+2,w
  4044  0232  00AC               	movwf	___ftmul@f2+2
  4045  0233  120A  158A  20A5   	fcall	___ftmul
  4046  0236  1283               	bcf	3,5	;RP0=0, select bank0
  4047  0237  1303               	bcf	3,6	;RP1=0, select bank0
  4048  0238  0827               	movf	?___ftmul,w
  4049  0239  00B7               	movwf	?_fround
  4050  023A  0828               	movf	?___ftmul+1,w
  4051  023B  00B8               	movwf	?_fround+1
  4052  023C  0829               	movf	?___ftmul+2,w
  4053  023D  00B9               	movwf	?_fround+2
  4054  023E  0008               	return
  4055  023F                     l1727:	
  4056                           
  4057                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4058  023F  3000               	movlw	0
  4059  0240  00A7               	movwf	___ftmul@f1
  4060  0241  3000               	movlw	0
  4061  0242  00A8               	movwf	___ftmul@f1+1
  4062  0243  303F               	movlw	63
  4063  0244  00A9               	movwf	___ftmul@f1+2
  4064  0245  3003               	movlw	3
  4065  0246  00BA               	movwf	??_fround
  4066  0247  083A               	movf	??_fround,w
  4067  0248  00A4               	movwf	___bmul@multiplicand
  4068  0249  0846               	movf	fround@prec,w
  4069  024A  120A  158A  2004  120A  118A  	fcall	___bmul
  4070  024F  3E61               	addlw	low (__npowers_| (0+32768))
  4071  0250  0084               	movwf	4
  4072  0251  3090               	movlw	high (__npowers_| (0+32768))
  4073  0252  1803               	skipnc
  4074  0253  3E01               	addlw	1
  4075  0254  1283               	bcf	3,5	;RP0=0, select bank0
  4076  0255  1303               	bcf	3,6	;RP1=0, select bank0
  4077  0256  00FF               	movwf	127
  4078  0257  160A  118A  2000  120A  118A  	fcall	stringtab
  4079  025C  00AA               	movwf	___ftmul@f2
  4080  025D  160A  118A  2000  120A  118A  	fcall	stringtab
  4081  0262  00AB               	movwf	___ftmul@f2+1
  4082  0263  160A  118A  2000  120A  118A  	fcall	stringtab
  4083  0268  00AC               	movwf	___ftmul@f2+2
  4084  0269  120A  158A  20A5   	fcall	___ftmul
  4085  026C  1283               	bcf	3,5	;RP0=0, select bank0
  4086  026D  1303               	bcf	3,6	;RP1=0, select bank0
  4087  026E  0827               	movf	?___ftmul,w
  4088  026F  00B7               	movwf	?_fround
  4089  0270  0828               	movf	?___ftmul+1,w
  4090  0271  00B8               	movwf	?_fround+1
  4091  0272  0829               	movf	?___ftmul+2,w
  4092  0273  00B9               	movwf	?_fround+2
  4093  0274  0008               	return
  4094  0275                     __end_of_fround:	
  4095                           
  4096                           	psect	text5
  4097  08A5                     __ptext5:	
  4098 ;; *************** function ___ftmul *****************
  4099 ;; Defined at:
  4100 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;  f1              3    7[BANK0 ] float 
  4103 ;;  f2              3   10[BANK0 ] float 
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  4106 ;;  sign            1   22[BANK0 ] unsigned char 
  4107 ;;  cntr            1   21[BANK0 ] unsigned char 
  4108 ;;  exp             1   17[BANK0 ] unsigned char 
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  3    7[BANK0 ] float 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0, pclath, cstack
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4118 ;;      Params:         0       6       0       0       0
  4119 ;;      Locals:         0       6       0       0       0
  4120 ;;      Temps:          0       4       0       0       0
  4121 ;;      Totals:         0      16       0       0       0
  4122 ;;Total ram usage:       16 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:    1
  4125 ;; This function calls:
  4126 ;;		___ftpack
  4127 ;; This function is called by:
  4128 ;;		_main
  4129 ;;		_fround
  4130 ;;		_scale
  4131 ;;		_printf
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           
  4136                           ;psect for function ___ftmul
  4137  08A5                     ___ftmul:	
  4138                           
  4139                           ;incstack = 0
  4140                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4141  08A5  1283               	bcf	3,5	;RP0=0, select bank0
  4142  08A6  1303               	bcf	3,6	;RP1=0, select bank0
  4143  08A7  0827               	movf	___ftmul@f1,w
  4144  08A8  00AD               	movwf	??___ftmul
  4145  08A9  0828               	movf	___ftmul@f1+1,w
  4146  08AA  00AE               	movwf	??___ftmul+1
  4147  08AB  0829               	movf	___ftmul@f1+2,w
  4148  08AC  00AF               	movwf	??___ftmul+2
  4149  08AD  1003               	clrc
  4150  08AE  0D2E               	rlf	??___ftmul+1,w
  4151  08AF  0D2F               	rlf	??___ftmul+2,w
  4152  08B0  00B0               	movwf	??___ftmul+3
  4153  08B1  0830               	movf	??___ftmul+3,w
  4154  08B2  00B1               	movwf	___ftmul@exp
  4155  08B3  0831               	movf	___ftmul@exp,w
  4156  08B4  1D03               	btfss	3,2
  4157  08B5  28BD               	goto	l1661
  4158  08B6  3000               	movlw	0
  4159  08B7  00A7               	movwf	?___ftmul
  4160  08B8  3000               	movlw	0
  4161  08B9  00A8               	movwf	?___ftmul+1
  4162  08BA  3000               	movlw	0
  4163  08BB  00A9               	movwf	?___ftmul+2
  4164  08BC  0008               	return
  4165  08BD                     l1661:	
  4166  08BD  082A               	movf	___ftmul@f2,w
  4167  08BE  00AD               	movwf	??___ftmul
  4168  08BF  082B               	movf	___ftmul@f2+1,w
  4169  08C0  00AE               	movwf	??___ftmul+1
  4170  08C1  082C               	movf	___ftmul@f2+2,w
  4171  08C2  00AF               	movwf	??___ftmul+2
  4172  08C3  1003               	clrc
  4173  08C4  0D2E               	rlf	??___ftmul+1,w
  4174  08C5  0D2F               	rlf	??___ftmul+2,w
  4175  08C6  00B0               	movwf	??___ftmul+3
  4176  08C7  0830               	movf	??___ftmul+3,w
  4177  08C8  00B6               	movwf	___ftmul@sign
  4178  08C9  0836               	movf	___ftmul@sign,w
  4179  08CA  1D03               	btfss	3,2
  4180  08CB  28D3               	goto	l1667
  4181  08CC  3000               	movlw	0
  4182  08CD  00A7               	movwf	?___ftmul
  4183  08CE  3000               	movlw	0
  4184  08CF  00A8               	movwf	?___ftmul+1
  4185  08D0  3000               	movlw	0
  4186  08D1  00A9               	movwf	?___ftmul+2
  4187  08D2  0008               	return
  4188  08D3                     l1667:	
  4189  08D3  0836               	movf	___ftmul@sign,w
  4190  08D4  3E7B               	addlw	123
  4191  08D5  00AD               	movwf	??___ftmul
  4192  08D6  082D               	movf	??___ftmul,w
  4193  08D7  07B1               	addwf	___ftmul@exp,f
  4194  08D8  0827               	movf	___ftmul@f1,w
  4195  08D9  00AD               	movwf	??___ftmul
  4196  08DA  0828               	movf	___ftmul@f1+1,w
  4197  08DB  00AE               	movwf	??___ftmul+1
  4198  08DC  0829               	movf	___ftmul@f1+2,w
  4199  08DD  00AF               	movwf	??___ftmul+2
  4200  08DE  3010               	movlw	16
  4201  08DF                     u2435:	
  4202  08DF  1003               	clrc
  4203  08E0  0CAF               	rrf	??___ftmul+2,f
  4204  08E1  0CAE               	rrf	??___ftmul+1,f
  4205  08E2  0CAD               	rrf	??___ftmul,f
  4206  08E3  3EFF               	addlw	-1
  4207  08E4  1D03               	skipz
  4208  08E5  28DF               	goto	u2435
  4209  08E6  082D               	movf	??___ftmul,w
  4210  08E7  00B0               	movwf	??___ftmul+3
  4211  08E8  0830               	movf	??___ftmul+3,w
  4212  08E9  00B6               	movwf	___ftmul@sign
  4213  08EA  082A               	movf	___ftmul@f2,w
  4214  08EB  00AD               	movwf	??___ftmul
  4215  08EC  082B               	movf	___ftmul@f2+1,w
  4216  08ED  00AE               	movwf	??___ftmul+1
  4217  08EE  082C               	movf	___ftmul@f2+2,w
  4218  08EF  00AF               	movwf	??___ftmul+2
  4219  08F0  3010               	movlw	16
  4220  08F1                     u2445:	
  4221  08F1  1003               	clrc
  4222  08F2  0CAF               	rrf	??___ftmul+2,f
  4223  08F3  0CAE               	rrf	??___ftmul+1,f
  4224  08F4  0CAD               	rrf	??___ftmul,f
  4225  08F5  3EFF               	addlw	-1
  4226  08F6  1D03               	skipz
  4227  08F7  28F1               	goto	u2445
  4228  08F8  082D               	movf	??___ftmul,w
  4229  08F9  00B0               	movwf	??___ftmul+3
  4230  08FA  0830               	movf	??___ftmul+3,w
  4231  08FB  06B6               	xorwf	___ftmul@sign,f
  4232  08FC  3080               	movlw	128
  4233  08FD  00AD               	movwf	??___ftmul
  4234  08FE  082D               	movf	??___ftmul,w
  4235  08FF  05B6               	andwf	___ftmul@sign,f
  4236  0900  17A8               	bsf	___ftmul@f1+1,7
  4237  0901  17AB               	bsf	___ftmul@f2+1,7
  4238  0902  30FF               	movlw	255
  4239  0903  05AA               	andwf	___ftmul@f2,f
  4240  0904  30FF               	movlw	255
  4241  0905  05AB               	andwf	___ftmul@f2+1,f
  4242  0906  3000               	movlw	0
  4243  0907  05AC               	andwf	___ftmul@f2+2,f
  4244  0908  3000               	movlw	0
  4245  0909  00B2               	movwf	___ftmul@f3_as_product
  4246  090A  3000               	movlw	0
  4247  090B  00B3               	movwf	___ftmul@f3_as_product+1
  4248  090C  3000               	movlw	0
  4249  090D  00B4               	movwf	___ftmul@f3_as_product+2
  4250  090E  3007               	movlw	7
  4251  090F  00AD               	movwf	??___ftmul
  4252  0910  082D               	movf	??___ftmul,w
  4253  0911  00B5               	movwf	___ftmul@cntr
  4254  0912                     l1679:	
  4255  0912  1C27               	btfss	___ftmul@f1,0
  4256  0913  2922               	goto	l1683
  4257  0914  082A               	movf	___ftmul@f2,w
  4258  0915  07B2               	addwf	___ftmul@f3_as_product,f
  4259  0916  082B               	movf	___ftmul@f2+1,w
  4260  0917  1103               	clrz
  4261  0918  1803               	skipnc
  4262  0919  0A2B               	incf	___ftmul@f2+1,w
  4263  091A  1D03               	btfss	3,2
  4264  091B  07B3               	addwf	___ftmul@f3_as_product+1,f
  4265  091C  082C               	movf	___ftmul@f2+2,w
  4266  091D  1103               	clrz
  4267  091E  1803               	skipnc
  4268  091F  0A2C               	incf	___ftmul@f2+2,w
  4269  0920  1D03               	btfss	3,2
  4270  0921  07B4               	addwf	___ftmul@f3_as_product+2,f
  4271  0922                     l1683:	
  4272  0922  3001               	movlw	1
  4273  0923                     u2475:	
  4274  0923  1003               	clrc
  4275  0924  0CA9               	rrf	___ftmul@f1+2,f
  4276  0925  0CA8               	rrf	___ftmul@f1+1,f
  4277  0926  0CA7               	rrf	___ftmul@f1,f
  4278  0927  3EFF               	addlw	-1
  4279  0928  1D03               	skipz
  4280  0929  2923               	goto	u2475
  4281  092A  3001               	movlw	1
  4282  092B                     u2485:	
  4283  092B  1003               	clrc
  4284  092C  0DAA               	rlf	___ftmul@f2,f
  4285  092D  0DAB               	rlf	___ftmul@f2+1,f
  4286  092E  0DAC               	rlf	___ftmul@f2+2,f
  4287  092F  3EFF               	addlw	-1
  4288  0930  1D03               	skipz
  4289  0931  292B               	goto	u2485
  4290  0932  3001               	movlw	1
  4291  0933  02B5               	subwf	___ftmul@cntr,f
  4292  0934  1D03               	btfss	3,2
  4293  0935  2912               	goto	l1679
  4294  0936  3009               	movlw	9
  4295  0937  00AD               	movwf	??___ftmul
  4296  0938  082D               	movf	??___ftmul,w
  4297  0939  00B5               	movwf	___ftmul@cntr
  4298  093A                     l1691:	
  4299  093A  1C27               	btfss	___ftmul@f1,0
  4300  093B  294A               	goto	l1695
  4301  093C  082A               	movf	___ftmul@f2,w
  4302  093D  07B2               	addwf	___ftmul@f3_as_product,f
  4303  093E  082B               	movf	___ftmul@f2+1,w
  4304  093F  1103               	clrz
  4305  0940  1803               	skipnc
  4306  0941  0A2B               	incf	___ftmul@f2+1,w
  4307  0942  1D03               	btfss	3,2
  4308  0943  07B3               	addwf	___ftmul@f3_as_product+1,f
  4309  0944  082C               	movf	___ftmul@f2+2,w
  4310  0945  1103               	clrz
  4311  0946  1803               	skipnc
  4312  0947  0A2C               	incf	___ftmul@f2+2,w
  4313  0948  1D03               	btfss	3,2
  4314  0949  07B4               	addwf	___ftmul@f3_as_product+2,f
  4315  094A                     l1695:	
  4316  094A  3001               	movlw	1
  4317  094B                     u2525:	
  4318  094B  1003               	clrc
  4319  094C  0CA9               	rrf	___ftmul@f1+2,f
  4320  094D  0CA8               	rrf	___ftmul@f1+1,f
  4321  094E  0CA7               	rrf	___ftmul@f1,f
  4322  094F  3EFF               	addlw	-1
  4323  0950  1D03               	skipz
  4324  0951  294B               	goto	u2525
  4325  0952  3001               	movlw	1
  4326  0953                     u2535:	
  4327  0953  1003               	clrc
  4328  0954  0CB4               	rrf	___ftmul@f3_as_product+2,f
  4329  0955  0CB3               	rrf	___ftmul@f3_as_product+1,f
  4330  0956  0CB2               	rrf	___ftmul@f3_as_product,f
  4331  0957  3EFF               	addlw	-1
  4332  0958  1D03               	skipz
  4333  0959  2953               	goto	u2535
  4334  095A  3001               	movlw	1
  4335  095B  02B5               	subwf	___ftmul@cntr,f
  4336  095C  1D03               	btfss	3,2
  4337  095D  293A               	goto	l1691
  4338  095E  0832               	movf	___ftmul@f3_as_product,w
  4339  095F  00F0               	movwf	___ftpack@arg
  4340  0960  0833               	movf	___ftmul@f3_as_product+1,w
  4341  0961  00F1               	movwf	___ftpack@arg+1
  4342  0962  0834               	movf	___ftmul@f3_as_product+2,w
  4343  0963  00F2               	movwf	___ftpack@arg+2
  4344  0964  0831               	movf	___ftmul@exp,w
  4345  0965  00AD               	movwf	??___ftmul
  4346  0966  082D               	movf	??___ftmul,w
  4347  0967  00F3               	movwf	___ftpack@exp
  4348  0968  0836               	movf	___ftmul@sign,w
  4349  0969  00AE               	movwf	??___ftmul+1
  4350  096A  082E               	movf	??___ftmul+1,w
  4351  096B  00F4               	movwf	___ftpack@sign
  4352  096C  160A  118A  26D1   	fcall	___ftpack
  4353  096F  0870               	movf	?___ftpack,w
  4354  0970  1283               	bcf	3,5	;RP0=0, select bank0
  4355  0971  1303               	bcf	3,6	;RP1=0, select bank0
  4356  0972  00A7               	movwf	?___ftmul
  4357  0973  0871               	movf	?___ftpack+1,w
  4358  0974  00A8               	movwf	?___ftmul+1
  4359  0975  0872               	movf	?___ftpack+2,w
  4360  0976  00A9               	movwf	?___ftmul+2
  4361  0977  0008               	return
  4362  0978                     __end_of___ftmul:	
  4363                           
  4364                           	psect	text6
  4365  0804                     __ptext6:	
  4366 ;; *************** function ___bmul *****************
  4367 ;; Defined at:
  4368 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul8.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  multiplier      1    wreg     unsigned char 
  4371 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  multiplier      1    6[BANK0 ] unsigned char 
  4374 ;;  product         1    5[BANK0 ] unsigned char 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      unsigned char 
  4377 ;; Registers used:
  4378 ;;		wreg, status,2, status,0
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4384 ;;      Params:         0       1       0       0       0
  4385 ;;      Locals:         0       2       0       0       0
  4386 ;;      Temps:          1       0       0       0       0
  4387 ;;      Totals:         1       3       0       0       0
  4388 ;;Total ram usage:        4 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_fround
  4394 ;;		_scale
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           
  4399                           ;psect for function ___bmul
  4400  0804                     ___bmul:	
  4401                           
  4402                           ;incstack = 0
  4403                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4404                           ;___bmul@multiplier stored from wreg
  4405  0804  1283               	bcf	3,5	;RP0=0, select bank0
  4406  0805  1303               	bcf	3,6	;RP1=0, select bank0
  4407  0806  00A6               	movwf	___bmul@multiplier
  4408  0807  01A5               	clrf	___bmul@product
  4409  0808                     l1491:	
  4410  0808  1C26               	btfss	___bmul@multiplier,0
  4411  0809  280E               	goto	l1495
  4412  080A  0824               	movf	___bmul@multiplicand,w
  4413  080B  00FC               	movwf	??___bmul
  4414  080C  087C               	movf	??___bmul,w
  4415  080D  07A5               	addwf	___bmul@product,f
  4416  080E                     l1495:	
  4417  080E  1003               	clrc
  4418  080F  0DA4               	rlf	___bmul@multiplicand,f
  4419  0810  1003               	clrc
  4420  0811  0CA6               	rrf	___bmul@multiplier,f
  4421  0812  0826               	movf	___bmul@multiplier,w
  4422  0813  1D03               	btfss	3,2
  4423  0814  2808               	goto	l1491
  4424  0815  0825               	movf	___bmul@product,w
  4425  0816  0008               	return
  4426  0817                     __end_of___bmul:	
  4427                           
  4428                           	psect	text7
  4429  1524                     __ptext7:	
  4430 ;; *************** function ___awmod *****************
  4431 ;; Defined at:
  4432 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awmod.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  divisor         2    0[COMMON] int 
  4435 ;;  dividend        2    2[COMMON] int 
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  sign            1    6[COMMON] unsigned char 
  4438 ;;  counter         1    5[COMMON] unsigned char 
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  2    0[COMMON] int 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4448 ;;      Params:         4       0       0       0       0
  4449 ;;      Locals:         2       0       0       0       0
  4450 ;;      Temps:          1       0       0       0       0
  4451 ;;      Totals:         7       0       0       0       0
  4452 ;;Total ram usage:        7 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; This function calls:
  4455 ;;		Nothing
  4456 ;; This function is called by:
  4457 ;;		_fround
  4458 ;;		_scale
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           
  4463                           ;psect for function ___awmod
  4464  1524                     ___awmod:	
  4465                           
  4466                           ;incstack = 0
  4467                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4468  1524  01F6               	clrf	___awmod@sign
  4469  1525  1FF3               	btfss	___awmod@dividend+1,7
  4470  1526  2D2E               	goto	l1555
  4471  1527  09F2               	comf	___awmod@dividend,f
  4472  1528  09F3               	comf	___awmod@dividend+1,f
  4473  1529  0AF2               	incf	___awmod@dividend,f
  4474  152A  1903               	skipnz
  4475  152B  0AF3               	incf	___awmod@dividend+1,f
  4476  152C  01F6               	clrf	___awmod@sign
  4477  152D  0AF6               	incf	___awmod@sign,f
  4478  152E                     l1555:	
  4479  152E  1FF1               	btfss	___awmod@divisor+1,7
  4480  152F  2D35               	goto	l1559
  4481  1530  09F0               	comf	___awmod@divisor,f
  4482  1531  09F1               	comf	___awmod@divisor+1,f
  4483  1532  0AF0               	incf	___awmod@divisor,f
  4484  1533  1903               	skipnz
  4485  1534  0AF1               	incf	___awmod@divisor+1,f
  4486  1535                     l1559:	
  4487  1535  0870               	movf	___awmod@divisor,w
  4488  1536  0471               	iorwf	___awmod@divisor+1,w
  4489  1537  1903               	btfsc	3,2
  4490  1538  2D62               	goto	l1577
  4491  1539  01F5               	clrf	___awmod@counter
  4492  153A  0AF5               	incf	___awmod@counter,f
  4493  153B                     l1567:	
  4494  153B  1BF1               	btfsc	___awmod@divisor+1,7
  4495  153C  2D49               	goto	l1569
  4496  153D  3001               	movlw	1
  4497  153E                     u2115:	
  4498  153E  1003               	clrc
  4499  153F  0DF0               	rlf	___awmod@divisor,f
  4500  1540  0DF1               	rlf	___awmod@divisor+1,f
  4501  1541  3EFF               	addlw	-1
  4502  1542  1D03               	skipz
  4503  1543  2D3E               	goto	u2115
  4504  1544  3001               	movlw	1
  4505  1545  00F4               	movwf	??___awmod
  4506  1546  0874               	movf	??___awmod,w
  4507  1547  07F5               	addwf	___awmod@counter,f
  4508  1548  2D3B               	goto	l1567
  4509  1549                     l1569:	
  4510  1549  0871               	movf	___awmod@divisor+1,w
  4511  154A  0273               	subwf	___awmod@dividend+1,w
  4512  154B  1D03               	skipz
  4513  154C  2D4F               	goto	u2135
  4514  154D  0870               	movf	___awmod@divisor,w
  4515  154E  0272               	subwf	___awmod@dividend,w
  4516  154F                     u2135:	
  4517  154F  1C03               	skipc
  4518  1550  2D57               	goto	l1573
  4519  1551  0870               	movf	___awmod@divisor,w
  4520  1552  02F2               	subwf	___awmod@dividend,f
  4521  1553  0871               	movf	___awmod@divisor+1,w
  4522  1554  1C03               	skipc
  4523  1555  03F3               	decf	___awmod@dividend+1,f
  4524  1556  02F3               	subwf	___awmod@dividend+1,f
  4525  1557                     l1573:	
  4526  1557  3001               	movlw	1
  4527  1558                     u2145:	
  4528  1558  1003               	clrc
  4529  1559  0CF1               	rrf	___awmod@divisor+1,f
  4530  155A  0CF0               	rrf	___awmod@divisor,f
  4531  155B  3EFF               	addlw	-1
  4532  155C  1D03               	skipz
  4533  155D  2D58               	goto	u2145
  4534  155E  3001               	movlw	1
  4535  155F  02F5               	subwf	___awmod@counter,f
  4536  1560  1D03               	btfss	3,2
  4537  1561  2D49               	goto	l1569
  4538  1562                     l1577:	
  4539  1562  0876               	movf	___awmod@sign,w
  4540  1563  1903               	btfsc	3,2
  4541  1564  2D6A               	goto	l1581
  4542  1565  09F2               	comf	___awmod@dividend,f
  4543  1566  09F3               	comf	___awmod@dividend+1,f
  4544  1567  0AF2               	incf	___awmod@dividend,f
  4545  1568  1903               	skipnz
  4546  1569  0AF3               	incf	___awmod@dividend+1,f
  4547  156A                     l1581:	
  4548  156A  0873               	movf	___awmod@dividend+1,w
  4549  156B  00F1               	movwf	?___awmod+1
  4550  156C  0872               	movf	___awmod@dividend,w
  4551  156D  00F0               	movwf	?___awmod
  4552  156E  0008               	return
  4553  156F                     __end_of___awmod:	
  4554                           
  4555                           	psect	text8
  4556  15BB                     __ptext8:	
  4557 ;; *************** function ___awdiv *****************
  4558 ;; Defined at:
  4559 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  divisor         2    7[COMMON] int 
  4562 ;;  dividend        2    9[COMMON] int 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  quotient        2    2[BANK0 ] int 
  4565 ;;  sign            1    1[BANK0 ] unsigned char 
  4566 ;;  counter         1    0[BANK0 ] unsigned char 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  2    7[COMMON] int 
  4569 ;; Registers used:
  4570 ;;		wreg, status,2, status,0
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4576 ;;      Params:         4       0       0       0       0
  4577 ;;      Locals:         0       4       0       0       0
  4578 ;;      Temps:          1       0       0       0       0
  4579 ;;      Totals:         5       4       0       0       0
  4580 ;;Total ram usage:        9 bytes
  4581 ;; Hardware stack levels used:    1
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		_fround
  4586 ;;		_scale
  4587 ;;		_printf
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           
  4592                           ;psect for function ___awdiv
  4593  15BB                     ___awdiv:	
  4594                           
  4595                           ;incstack = 0
  4596                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4597  15BB  1283               	bcf	3,5	;RP0=0, select bank0
  4598  15BC  1303               	bcf	3,6	;RP1=0, select bank0
  4599  15BD  01A1               	clrf	___awdiv@sign
  4600  15BE  1FF8               	btfss	___awdiv@divisor+1,7
  4601  15BF  2DC7               	goto	l1511
  4602  15C0  09F7               	comf	___awdiv@divisor,f
  4603  15C1  09F8               	comf	___awdiv@divisor+1,f
  4604  15C2  0AF7               	incf	___awdiv@divisor,f
  4605  15C3  1903               	skipnz
  4606  15C4  0AF8               	incf	___awdiv@divisor+1,f
  4607  15C5  01A1               	clrf	___awdiv@sign
  4608  15C6  0AA1               	incf	___awdiv@sign,f
  4609  15C7                     l1511:	
  4610  15C7  1FFA               	btfss	___awdiv@dividend+1,7
  4611  15C8  2DD2               	goto	l1517
  4612  15C9  09F9               	comf	___awdiv@dividend,f
  4613  15CA  09FA               	comf	___awdiv@dividend+1,f
  4614  15CB  0AF9               	incf	___awdiv@dividend,f
  4615  15CC  1903               	skipnz
  4616  15CD  0AFA               	incf	___awdiv@dividend+1,f
  4617  15CE  3001               	movlw	1
  4618  15CF  00FB               	movwf	??___awdiv
  4619  15D0  087B               	movf	??___awdiv,w
  4620  15D1  06A1               	xorwf	___awdiv@sign,f
  4621  15D2                     l1517:	
  4622  15D2  01A2               	clrf	___awdiv@quotient
  4623  15D3  01A3               	clrf	___awdiv@quotient+1
  4624  15D4  0877               	movf	___awdiv@divisor,w
  4625  15D5  0478               	iorwf	___awdiv@divisor+1,w
  4626  15D6  1903               	btfsc	3,2
  4627  15D7  2E09               	goto	l1539
  4628  15D8  01A0               	clrf	___awdiv@counter
  4629  15D9  0AA0               	incf	___awdiv@counter,f
  4630  15DA                     l1527:	
  4631  15DA  1BF8               	btfsc	___awdiv@divisor+1,7
  4632  15DB  2DE8               	goto	l1529
  4633  15DC  3001               	movlw	1
  4634  15DD                     u2015:	
  4635  15DD  1003               	clrc
  4636  15DE  0DF7               	rlf	___awdiv@divisor,f
  4637  15DF  0DF8               	rlf	___awdiv@divisor+1,f
  4638  15E0  3EFF               	addlw	-1
  4639  15E1  1D03               	skipz
  4640  15E2  2DDD               	goto	u2015
  4641  15E3  3001               	movlw	1
  4642  15E4  00FB               	movwf	??___awdiv
  4643  15E5  087B               	movf	??___awdiv,w
  4644  15E6  07A0               	addwf	___awdiv@counter,f
  4645  15E7  2DDA               	goto	l1527
  4646  15E8                     l1529:	
  4647  15E8  3001               	movlw	1
  4648  15E9                     u2035:	
  4649  15E9  1003               	clrc
  4650  15EA  0DA2               	rlf	___awdiv@quotient,f
  4651  15EB  0DA3               	rlf	___awdiv@quotient+1,f
  4652  15EC  3EFF               	addlw	-1
  4653  15ED  1D03               	skipz
  4654  15EE  2DE9               	goto	u2035
  4655  15EF  0878               	movf	___awdiv@divisor+1,w
  4656  15F0  027A               	subwf	___awdiv@dividend+1,w
  4657  15F1  1D03               	skipz
  4658  15F2  2DF5               	goto	u2045
  4659  15F3  0877               	movf	___awdiv@divisor,w
  4660  15F4  0279               	subwf	___awdiv@dividend,w
  4661  15F5                     u2045:	
  4662  15F5  1C03               	skipc
  4663  15F6  2DFE               	goto	l1535
  4664  15F7  0877               	movf	___awdiv@divisor,w
  4665  15F8  02F9               	subwf	___awdiv@dividend,f
  4666  15F9  0878               	movf	___awdiv@divisor+1,w
  4667  15FA  1C03               	skipc
  4668  15FB  03FA               	decf	___awdiv@dividend+1,f
  4669  15FC  02FA               	subwf	___awdiv@dividend+1,f
  4670  15FD  1422               	bsf	___awdiv@quotient,0
  4671  15FE                     l1535:	
  4672  15FE  3001               	movlw	1
  4673  15FF                     u2055:	
  4674  15FF  1003               	clrc
  4675  1600  0CF8               	rrf	___awdiv@divisor+1,f
  4676  1601  0CF7               	rrf	___awdiv@divisor,f
  4677  1602  3EFF               	addlw	-1
  4678  1603  1D03               	skipz
  4679  1604  2DFF               	goto	u2055
  4680  1605  3001               	movlw	1
  4681  1606  02A0               	subwf	___awdiv@counter,f
  4682  1607  1D03               	btfss	3,2
  4683  1608  2DE8               	goto	l1529
  4684  1609                     l1539:	
  4685  1609  0821               	movf	___awdiv@sign,w
  4686  160A  1903               	btfsc	3,2
  4687  160B  2E11               	goto	l1543
  4688  160C  09A2               	comf	___awdiv@quotient,f
  4689  160D  09A3               	comf	___awdiv@quotient+1,f
  4690  160E  0AA2               	incf	___awdiv@quotient,f
  4691  160F  1903               	skipnz
  4692  1610  0AA3               	incf	___awdiv@quotient+1,f
  4693  1611                     l1543:	
  4694  1611  0823               	movf	___awdiv@quotient+1,w
  4695  1612  00F8               	movwf	?___awdiv+1
  4696  1613  0822               	movf	___awdiv@quotient,w
  4697  1614  00F7               	movwf	?___awdiv
  4698  1615  0008               	return
  4699  1616                     __end_of___awdiv:	
  4700                           
  4701                           	psect	text9
  4702  173D                     __ptext9:	
  4703 ;; *************** function __tdiv_to_l_ *****************
  4704 ;; Defined at:
  4705 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdivl.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  f1              3    0[COMMON] float 
  4708 ;;  f2              3    3[COMMON] float 
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;  quot            4    0[BANK0 ] unsigned long 
  4711 ;;  exp1            1    5[BANK0 ] unsigned char 
  4712 ;;  cntr            1    4[BANK0 ] unsigned char 
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  4    0[COMMON] unsigned long 
  4715 ;; Registers used:
  4716 ;;		wreg, status,2, status,0
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4722 ;;      Params:         6       0       0       0       0
  4723 ;;      Locals:         0       6       0       0       0
  4724 ;;      Temps:          4       0       0       0       0
  4725 ;;      Totals:        10       6       0       0       0
  4726 ;;Total ram usage:       16 bytes
  4727 ;; Hardware stack levels used:    1
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_printf
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           
  4736                           ;psect for function __tdiv_to_l_
  4737  173D                     __tdiv_to_l_:	
  4738                           
  4739                           ;incstack = 0
  4740                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4741  173D  0870               	movf	__tdiv_to_l_@f1,w
  4742  173E  00F6               	movwf	??__tdiv_to_l_
  4743  173F  0871               	movf	__tdiv_to_l_@f1+1,w
  4744  1740  00F7               	movwf	??__tdiv_to_l_+1
  4745  1741  0872               	movf	__tdiv_to_l_@f1+2,w
  4746  1742  00F8               	movwf	??__tdiv_to_l_+2
  4747  1743  1003               	clrc
  4748  1744  0D77               	rlf	??__tdiv_to_l_+1,w
  4749  1745  0D78               	rlf	??__tdiv_to_l_+2,w
  4750  1746  00F9               	movwf	??__tdiv_to_l_+3
  4751  1747  0879               	movf	??__tdiv_to_l_+3,w
  4752  1748  1283               	bcf	3,5	;RP0=0, select bank0
  4753  1749  1303               	bcf	3,6	;RP1=0, select bank0
  4754  174A  00A5               	movwf	__tdiv_to_l_@exp1
  4755  174B  0825               	movf	__tdiv_to_l_@exp1,w
  4756  174C  1D03               	btfss	3,2
  4757  174D  2F57               	goto	l1777
  4758  174E  3000               	movlw	0
  4759  174F  00F3               	movwf	?__tdiv_to_l_+3
  4760  1750  3000               	movlw	0
  4761  1751  00F2               	movwf	?__tdiv_to_l_+2
  4762  1752  3000               	movlw	0
  4763  1753  00F1               	movwf	?__tdiv_to_l_+1
  4764  1754  3000               	movlw	0
  4765  1755  00F0               	movwf	?__tdiv_to_l_
  4766  1756  0008               	return
  4767  1757                     l1777:	
  4768  1757  0873               	movf	__tdiv_to_l_@f2,w
  4769  1758  00F6               	movwf	??__tdiv_to_l_
  4770  1759  0874               	movf	__tdiv_to_l_@f2+1,w
  4771  175A  00F7               	movwf	??__tdiv_to_l_+1
  4772  175B  0875               	movf	__tdiv_to_l_@f2+2,w
  4773  175C  00F8               	movwf	??__tdiv_to_l_+2
  4774  175D  1003               	clrc
  4775  175E  0D77               	rlf	??__tdiv_to_l_+1,w
  4776  175F  0D78               	rlf	??__tdiv_to_l_+2,w
  4777  1760  00F9               	movwf	??__tdiv_to_l_+3
  4778  1761  0879               	movf	??__tdiv_to_l_+3,w
  4779  1762  00A4               	movwf	__tdiv_to_l_@cntr
  4780  1763  0824               	movf	__tdiv_to_l_@cntr,w
  4781  1764  1D03               	btfss	3,2
  4782  1765  2F6F               	goto	l456
  4783  1766  3000               	movlw	0
  4784  1767  00F3               	movwf	?__tdiv_to_l_+3
  4785  1768  3000               	movlw	0
  4786  1769  00F2               	movwf	?__tdiv_to_l_+2
  4787  176A  3000               	movlw	0
  4788  176B  00F1               	movwf	?__tdiv_to_l_+1
  4789  176C  3000               	movlw	0
  4790  176D  00F0               	movwf	?__tdiv_to_l_
  4791  176E  0008               	return
  4792  176F                     l456:	
  4793  176F  17F1               	bsf	__tdiv_to_l_@f1+1,7
  4794  1770  30FF               	movlw	255
  4795  1771  05F0               	andwf	__tdiv_to_l_@f1,f
  4796  1772  30FF               	movlw	255
  4797  1773  05F1               	andwf	__tdiv_to_l_@f1+1,f
  4798  1774  3000               	movlw	0
  4799  1775  05F2               	andwf	__tdiv_to_l_@f1+2,f
  4800  1776  17F4               	bsf	__tdiv_to_l_@f2+1,7
  4801  1777  30FF               	movlw	255
  4802  1778  05F3               	andwf	__tdiv_to_l_@f2,f
  4803  1779  30FF               	movlw	255
  4804  177A  05F4               	andwf	__tdiv_to_l_@f2+1,f
  4805  177B  3000               	movlw	0
  4806  177C  05F5               	andwf	__tdiv_to_l_@f2+2,f
  4807  177D  3000               	movlw	0
  4808  177E  00A3               	movwf	__tdiv_to_l_@quot+3
  4809  177F  3000               	movlw	0
  4810  1780  00A2               	movwf	__tdiv_to_l_@quot+2
  4811  1781  3000               	movlw	0
  4812  1782  00A1               	movwf	__tdiv_to_l_@quot+1
  4813  1783  3000               	movlw	0
  4814  1784  00A0               	movwf	__tdiv_to_l_@quot
  4815  1785  307F               	movlw	127
  4816  1786  02A5               	subwf	__tdiv_to_l_@exp1,f
  4817  1787  3098               	movlw	152
  4818  1788  0724               	addwf	__tdiv_to_l_@cntr,w
  4819  1789  00F6               	movwf	??__tdiv_to_l_
  4820  178A  0876               	movf	??__tdiv_to_l_,w
  4821  178B  02A5               	subwf	__tdiv_to_l_@exp1,f
  4822  178C  3018               	movlw	24
  4823  178D  00F6               	movwf	??__tdiv_to_l_
  4824  178E  0876               	movf	??__tdiv_to_l_,w
  4825  178F  00A4               	movwf	__tdiv_to_l_@cntr
  4826  1790                     l1791:	
  4827  1790  3001               	movlw	1
  4828  1791  00F6               	movwf	??__tdiv_to_l_
  4829  1792                     u2655:	
  4830  1792  1003               	clrc
  4831  1793  0DA0               	rlf	__tdiv_to_l_@quot,f
  4832  1794  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4833  1795  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4834  1796  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4835  1797  0BF6               	decfsz	??__tdiv_to_l_,f
  4836  1798  2F92               	goto	u2655
  4837  1799  0875               	movf	__tdiv_to_l_@f2+2,w
  4838  179A  0272               	subwf	__tdiv_to_l_@f1+2,w
  4839  179B  1D03               	skipz
  4840  179C  2FA3               	goto	u2665
  4841  179D  0874               	movf	__tdiv_to_l_@f2+1,w
  4842  179E  0271               	subwf	__tdiv_to_l_@f1+1,w
  4843  179F  1D03               	skipz
  4844  17A0  2FA3               	goto	u2665
  4845  17A1  0873               	movf	__tdiv_to_l_@f2,w
  4846  17A2  0270               	subwf	__tdiv_to_l_@f1,w
  4847  17A3                     u2665:	
  4848  17A3  1C03               	skipc
  4849  17A4  2FB0               	goto	l1799
  4850  17A5  0873               	movf	__tdiv_to_l_@f2,w
  4851  17A6  02F0               	subwf	__tdiv_to_l_@f1,f
  4852  17A7  0874               	movf	__tdiv_to_l_@f2+1,w
  4853  17A8  1C03               	skipc
  4854  17A9  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  4855  17AA  02F1               	subwf	__tdiv_to_l_@f1+1,f
  4856  17AB  0875               	movf	__tdiv_to_l_@f2+2,w
  4857  17AC  1C03               	skipc
  4858  17AD  0A75               	incf	__tdiv_to_l_@f2+2,w
  4859  17AE  02F2               	subwf	__tdiv_to_l_@f1+2,f
  4860  17AF  1420               	bsf	__tdiv_to_l_@quot,0
  4861  17B0                     l1799:	
  4862  17B0  3001               	movlw	1
  4863  17B1                     u2675:	
  4864  17B1  1003               	clrc
  4865  17B2  0DF0               	rlf	__tdiv_to_l_@f1,f
  4866  17B3  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  4867  17B4  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  4868  17B5  3EFF               	addlw	-1
  4869  17B6  1D03               	skipz
  4870  17B7  2FB1               	goto	u2675
  4871  17B8  3001               	movlw	1
  4872  17B9  02A4               	subwf	__tdiv_to_l_@cntr,f
  4873  17BA  1D03               	btfss	3,2
  4874  17BB  2F90               	goto	l1791
  4875  17BC  1FA5               	btfss	__tdiv_to_l_@exp1,7
  4876  17BD  2FDC               	goto	l1811
  4877  17BE  0825               	movf	__tdiv_to_l_@exp1,w
  4878  17BF  3A80               	xorlw	128
  4879  17C0  3E97               	addlw	151
  4880  17C1  1803               	skipnc
  4881  17C2  2FCC               	goto	l1809
  4882  17C3  3000               	movlw	0
  4883  17C4  00F3               	movwf	?__tdiv_to_l_+3
  4884  17C5  3000               	movlw	0
  4885  17C6  00F2               	movwf	?__tdiv_to_l_+2
  4886  17C7  3000               	movlw	0
  4887  17C8  00F1               	movwf	?__tdiv_to_l_+1
  4888  17C9  3000               	movlw	0
  4889  17CA  00F0               	movwf	?__tdiv_to_l_
  4890  17CB  0008               	return
  4891  17CC                     l1809:	
  4892  17CC  3001               	movlw	1
  4893  17CD                     u2715:	
  4894  17CD  1003               	clrc
  4895  17CE  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  4896  17CF  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  4897  17D0  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  4898  17D1  0CA0               	rrf	__tdiv_to_l_@quot,f
  4899  17D2  3EFF               	addlw	-1
  4900  17D3  1D03               	skipz
  4901  17D4  2FCD               	goto	u2715
  4902  17D5  3001               	movlw	1
  4903  17D6  00F6               	movwf	??__tdiv_to_l_
  4904  17D7  0876               	movf	??__tdiv_to_l_,w
  4905  17D8  07A5               	addwf	__tdiv_to_l_@exp1,f
  4906  17D9  1903               	btfsc	3,2
  4907  17DA  2FF7               	goto	l1819
  4908  17DB  2FCC               	goto	l1809
  4909  17DC                     l1811:	
  4910  17DC  3018               	movlw	24
  4911  17DD  0225               	subwf	__tdiv_to_l_@exp1,w
  4912  17DE  1C03               	skipc
  4913  17DF  2FF4               	goto	l466
  4914  17E0  3000               	movlw	0
  4915  17E1  00F3               	movwf	?__tdiv_to_l_+3
  4916  17E2  3000               	movlw	0
  4917  17E3  00F2               	movwf	?__tdiv_to_l_+2
  4918  17E4  3000               	movlw	0
  4919  17E5  00F1               	movwf	?__tdiv_to_l_+1
  4920  17E6  3000               	movlw	0
  4921  17E7  00F0               	movwf	?__tdiv_to_l_
  4922  17E8  0008               	return
  4923  17E9                     l1817:	
  4924  17E9  3001               	movlw	1
  4925  17EA  00F6               	movwf	??__tdiv_to_l_
  4926  17EB                     u2745:	
  4927  17EB  1003               	clrc
  4928  17EC  0DA0               	rlf	__tdiv_to_l_@quot,f
  4929  17ED  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4930  17EE  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4931  17EF  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4932  17F0  0BF6               	decfsz	??__tdiv_to_l_,f
  4933  17F1  2FEB               	goto	u2745
  4934  17F2  3001               	movlw	1
  4935  17F3  02A5               	subwf	__tdiv_to_l_@exp1,f
  4936  17F4                     l466:	
  4937  17F4  0825               	movf	__tdiv_to_l_@exp1,w
  4938  17F5  1D03               	btfss	3,2
  4939  17F6  2FE9               	goto	l1817
  4940  17F7                     l1819:	
  4941  17F7  0823               	movf	__tdiv_to_l_@quot+3,w
  4942  17F8  00F3               	movwf	?__tdiv_to_l_+3
  4943  17F9  0822               	movf	__tdiv_to_l_@quot+2,w
  4944  17FA  00F2               	movwf	?__tdiv_to_l_+2
  4945  17FB  0821               	movf	__tdiv_to_l_@quot+1,w
  4946  17FC  00F1               	movwf	?__tdiv_to_l_+1
  4947  17FD  0820               	movf	__tdiv_to_l_@quot,w
  4948  17FE  00F0               	movwf	?__tdiv_to_l_
  4949  17FF  0008               	return
  4950  1800                     __end_of__tdiv_to_l_:	
  4951                           
  4952                           	psect	text10
  4953  0A81                     __ptext10:	
  4954 ;; *************** function __div_to_l_ *****************
  4955 ;; Defined at:
  4956 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fldivl.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;  f1              3    0[COMMON] unsigned long 
  4959 ;;  f2              3    3[COMMON] unsigned long 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  quot            4    0[BANK0 ] unsigned long 
  4962 ;;  exp1            1    5[BANK0 ] unsigned char 
  4963 ;;  cntr            1    4[BANK0 ] unsigned char 
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  4    0[COMMON] unsigned long 
  4966 ;; Registers used:
  4967 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4973 ;;      Params:         6       0       0       0       0
  4974 ;;      Locals:         0       6       0       0       0
  4975 ;;      Temps:          8       0       0       0       0
  4976 ;;      Totals:        14       6       0       0       0
  4977 ;;Total ram usage:       20 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; This function calls:
  4980 ;;		Nothing
  4981 ;; This function is called by:
  4982 ;;		_printf
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           
  4987                           ;psect for function __div_to_l_
  4988  0A81                     __div_to_l_:	
  4989                           
  4990                           ;incstack = 0
  4991                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  4992  0A81  3070               	movlw	low (__div_to_l_@f1| 0)
  4993  0A82  0084               	movwf	4
  4994  0A83  0800               	movf	0,w
  4995  0A84  00F6               	movwf	??__div_to_l_
  4996  0A85  0A84               	incf	4,f
  4997  0A86  0800               	movf	0,w
  4998  0A87  00F7               	movwf	??__div_to_l_+1
  4999  0A88  0A84               	incf	4,f
  5000  0A89  0800               	movf	0,w
  5001  0A8A  00F8               	movwf	??__div_to_l_+2
  5002  0A8B  0A84               	incf	4,f
  5003  0A8C  0800               	movf	0,w
  5004  0A8D  00F9               	movwf	??__div_to_l_+3
  5005  0A8E  1003               	clrc
  5006  0A8F  0D78               	rlf	??__div_to_l_+2,w
  5007  0A90  0D79               	rlf	??__div_to_l_+3,w
  5008  0A91  00FA               	movwf	??__div_to_l_+4
  5009  0A92  087A               	movf	??__div_to_l_+4,w
  5010  0A93  1283               	bcf	3,5	;RP0=0, select bank0
  5011  0A94  1303               	bcf	3,6	;RP1=0, select bank0
  5012  0A95  00A5               	movwf	__div_to_l_@exp1
  5013  0A96  0825               	movf	__div_to_l_@exp1,w
  5014  0A97  1D03               	btfss	3,2
  5015  0A98  2AA2               	goto	l1829
  5016  0A99  3000               	movlw	0
  5017  0A9A  00F3               	movwf	?__div_to_l_+3
  5018  0A9B  3000               	movlw	0
  5019  0A9C  00F2               	movwf	?__div_to_l_+2
  5020  0A9D  3000               	movlw	0
  5021  0A9E  00F1               	movwf	?__div_to_l_+1
  5022  0A9F  3000               	movlw	0
  5023  0AA0  00F0               	movwf	?__div_to_l_
  5024  0AA1  0008               	return
  5025  0AA2                     l1829:	
  5026  0AA2  3073               	movlw	low (__div_to_l_@f2| 0)
  5027  0AA3  0084               	movwf	4
  5028  0AA4  0800               	movf	0,w
  5029  0AA5  00F6               	movwf	??__div_to_l_
  5030  0AA6  0A84               	incf	4,f
  5031  0AA7  0800               	movf	0,w
  5032  0AA8  00F7               	movwf	??__div_to_l_+1
  5033  0AA9  0A84               	incf	4,f
  5034  0AAA  0800               	movf	0,w
  5035  0AAB  00F8               	movwf	??__div_to_l_+2
  5036  0AAC  0A84               	incf	4,f
  5037  0AAD  0800               	movf	0,w
  5038  0AAE  00F9               	movwf	??__div_to_l_+3
  5039  0AAF  1003               	clrc
  5040  0AB0  0D78               	rlf	??__div_to_l_+2,w
  5041  0AB1  0D79               	rlf	??__div_to_l_+3,w
  5042  0AB2  00FA               	movwf	??__div_to_l_+4
  5043  0AB3  087A               	movf	??__div_to_l_+4,w
  5044  0AB4  00A4               	movwf	__div_to_l_@cntr
  5045  0AB5  0824               	movf	__div_to_l_@cntr,w
  5046  0AB6  1D03               	btfss	3,2
  5047  0AB7  2AC1               	goto	l1835
  5048  0AB8  3000               	movlw	0
  5049  0AB9  00F3               	movwf	?__div_to_l_+3
  5050  0ABA  3000               	movlw	0
  5051  0ABB  00F2               	movwf	?__div_to_l_+2
  5052  0ABC  3000               	movlw	0
  5053  0ABD  00F1               	movwf	?__div_to_l_+1
  5054  0ABE  3000               	movlw	0
  5055  0ABF  00F0               	movwf	?__div_to_l_
  5056  0AC0  0008               	return
  5057  0AC1                     l1835:	
  5058  0AC1  3070               	movlw	low (__div_to_l_@f1| 0)
  5059  0AC2  0084               	movwf	4
  5060  0AC3  3000               	movlw	0
  5061  0AC4  0480               	iorwf	0,f
  5062  0AC5  0A84               	incf	4,f
  5063  0AC6  3000               	movlw	0
  5064  0AC7  0480               	iorwf	0,f
  5065  0AC8  0A84               	incf	4,f
  5066  0AC9  3080               	movlw	128
  5067  0ACA  0480               	iorwf	0,f
  5068  0ACB  0A84               	incf	4,f
  5069  0ACC  3000               	movlw	0
  5070  0ACD  0480               	iorwf	0,f
  5071  0ACE  3070               	movlw	low (__div_to_l_@f1| 0)
  5072  0ACF  0084               	movwf	4
  5073  0AD0  30FF               	movlw	255
  5074  0AD1  0580               	andwf	0,f
  5075  0AD2  0A84               	incf	4,f
  5076  0AD3  30FF               	movlw	255
  5077  0AD4  0580               	andwf	0,f
  5078  0AD5  0A84               	incf	4,f
  5079  0AD6  30FF               	movlw	255
  5080  0AD7  0580               	andwf	0,f
  5081  0AD8  0A84               	incf	4,f
  5082  0AD9  3000               	movlw	0
  5083  0ADA  0580               	andwf	0,f
  5084  0ADB  3073               	movlw	low (__div_to_l_@f2| 0)
  5085  0ADC  0084               	movwf	4
  5086  0ADD  3000               	movlw	0
  5087  0ADE  0480               	iorwf	0,f
  5088  0ADF  0A84               	incf	4,f
  5089  0AE0  3000               	movlw	0
  5090  0AE1  0480               	iorwf	0,f
  5091  0AE2  0A84               	incf	4,f
  5092  0AE3  3080               	movlw	128
  5093  0AE4  0480               	iorwf	0,f
  5094  0AE5  0A84               	incf	4,f
  5095  0AE6  3000               	movlw	0
  5096  0AE7  0480               	iorwf	0,f
  5097  0AE8  3073               	movlw	low (__div_to_l_@f2| 0)
  5098  0AE9  0084               	movwf	4
  5099  0AEA  30FF               	movlw	255
  5100  0AEB  0580               	andwf	0,f
  5101  0AEC  0A84               	incf	4,f
  5102  0AED  30FF               	movlw	255
  5103  0AEE  0580               	andwf	0,f
  5104  0AEF  0A84               	incf	4,f
  5105  0AF0  30FF               	movlw	255
  5106  0AF1  0580               	andwf	0,f
  5107  0AF2  0A84               	incf	4,f
  5108  0AF3  3000               	movlw	0
  5109  0AF4  0580               	andwf	0,f
  5110  0AF5  3000               	movlw	0
  5111  0AF6  00A3               	movwf	__div_to_l_@quot+3
  5112  0AF7  3000               	movlw	0
  5113  0AF8  00A2               	movwf	__div_to_l_@quot+2
  5114  0AF9  3000               	movlw	0
  5115  0AFA  00A1               	movwf	__div_to_l_@quot+1
  5116  0AFB  3000               	movlw	0
  5117  0AFC  00A0               	movwf	__div_to_l_@quot
  5118  0AFD  307F               	movlw	127
  5119  0AFE  02A5               	subwf	__div_to_l_@exp1,f
  5120  0AFF  30A0               	movlw	160
  5121  0B00  0724               	addwf	__div_to_l_@cntr,w
  5122  0B01  00F6               	movwf	??__div_to_l_
  5123  0B02  0876               	movf	??__div_to_l_,w
  5124  0B03  02A5               	subwf	__div_to_l_@exp1,f
  5125  0B04  3020               	movlw	32
  5126  0B05  00F6               	movwf	??__div_to_l_
  5127  0B06  0876               	movf	??__div_to_l_,w
  5128  0B07  00A4               	movwf	__div_to_l_@cntr
  5129  0B08                     l1845:	
  5130  0B08  3001               	movlw	1
  5131  0B09  00F6               	movwf	??__div_to_l_
  5132  0B0A                     u2785:	
  5133  0B0A  1003               	clrc
  5134  0B0B  0DA0               	rlf	__div_to_l_@quot,f
  5135  0B0C  0DA1               	rlf	__div_to_l_@quot+1,f
  5136  0B0D  0DA2               	rlf	__div_to_l_@quot+2,f
  5137  0B0E  0DA3               	rlf	__div_to_l_@quot+3,f
  5138  0B0F  0BF6               	decfsz	??__div_to_l_,f
  5139  0B10  2B0A               	goto	u2785
  5140  0B11  3073               	movlw	low (__div_to_l_@f2| 0)
  5141  0B12  0084               	movwf	4
  5142  0B13  0800               	movf	0,w
  5143  0B14  00F6               	movwf	??__div_to_l_
  5144  0B15  0A84               	incf	4,f
  5145  0B16  0800               	movf	0,w
  5146  0B17  00F7               	movwf	??__div_to_l_+1
  5147  0B18  0A84               	incf	4,f
  5148  0B19  0800               	movf	0,w
  5149  0B1A  00F8               	movwf	??__div_to_l_+2
  5150  0B1B  0A84               	incf	4,f
  5151  0B1C  0800               	movf	0,w
  5152  0B1D  00F9               	movwf	??__div_to_l_+3
  5153  0B1E  3070               	movlw	low (__div_to_l_@f1| 0)
  5154  0B1F  0084               	movwf	4
  5155  0B20  0800               	movf	0,w
  5156  0B21  00FA               	movwf	??__div_to_l_+4
  5157  0B22  0A84               	incf	4,f
  5158  0B23  0800               	movf	0,w
  5159  0B24  00FB               	movwf	??__div_to_l_+5
  5160  0B25  0A84               	incf	4,f
  5161  0B26  0800               	movf	0,w
  5162  0B27  00FC               	movwf	??__div_to_l_+6
  5163  0B28  0A84               	incf	4,f
  5164  0B29  0800               	movf	0,w
  5165  0B2A  00FD               	movwf	??__div_to_l_+7
  5166  0B2B  0879               	movf	??__div_to_l_+3,w
  5167  0B2C  027D               	subwf	??__div_to_l_+7,w
  5168  0B2D  1D03               	skipz
  5169  0B2E  2B39               	goto	u2795
  5170  0B2F  0878               	movf	??__div_to_l_+2,w
  5171  0B30  027C               	subwf	??__div_to_l_+6,w
  5172  0B31  1D03               	skipz
  5173  0B32  2B39               	goto	u2795
  5174  0B33  0877               	movf	??__div_to_l_+1,w
  5175  0B34  027B               	subwf	??__div_to_l_+5,w
  5176  0B35  1D03               	skipz
  5177  0B36  2B39               	goto	u2795
  5178  0B37  0876               	movf	??__div_to_l_,w
  5179  0B38  027A               	subwf	??__div_to_l_+4,w
  5180  0B39                     u2795:	
  5181  0B39  1C03               	skipc
  5182  0B3A  2B5E               	goto	l379
  5183  0B3B  3073               	movlw	low (__div_to_l_@f2| 0)
  5184  0B3C  0084               	movwf	4
  5185  0B3D  0800               	movf	0,w
  5186  0B3E  00F6               	movwf	??__div_to_l_
  5187  0B3F  0A84               	incf	4,f
  5188  0B40  0800               	movf	0,w
  5189  0B41  00F7               	movwf	??__div_to_l_+1
  5190  0B42  0A84               	incf	4,f
  5191  0B43  0800               	movf	0,w
  5192  0B44  00F8               	movwf	??__div_to_l_+2
  5193  0B45  0A84               	incf	4,f
  5194  0B46  0800               	movf	0,w
  5195  0B47  00F9               	movwf	??__div_to_l_+3
  5196  0B48  3070               	movlw	low (__div_to_l_@f1| 0)
  5197  0B49  0084               	movwf	4
  5198  0B4A  0876               	movf	??__div_to_l_,w
  5199  0B4B  0280               	subwf	0,f
  5200  0B4C  0A84               	incf	4,f
  5201  0B4D  0877               	movf	??__div_to_l_+1,w
  5202  0B4E  1C03               	skipc
  5203  0B4F  0F77               	incfsz	??__div_to_l_+1,w
  5204  0B50  0280               	subwf	0,f
  5205  0B51  0A84               	incf	4,f
  5206  0B52  0878               	movf	??__div_to_l_+2,w
  5207  0B53  1C03               	skipc
  5208  0B54  0F78               	incfsz	??__div_to_l_+2,w
  5209  0B55  0280               	subwf	0,f
  5210  0B56  0A84               	incf	4,f
  5211  0B57  0879               	movf	??__div_to_l_+3,w
  5212  0B58  1C03               	skipc
  5213  0B59  0A79               	incf	??__div_to_l_+3,w
  5214  0B5A  0280               	subwf	0,f
  5215  0B5B  3003               	movlw	3
  5216  0B5C  0284               	subwf	4,f
  5217  0B5D  1420               	bsf	__div_to_l_@quot,0
  5218  0B5E                     l379:	
  5219  0B5E  3070               	movlw	low (__div_to_l_@f1| 0)
  5220  0B5F  0084               	movwf	4
  5221  0B60  1003               	clrc
  5222  0B61  0D80               	rlf	0,f
  5223  0B62  0A84               	incf	4,f
  5224  0B63  0D80               	rlf	0,f
  5225  0B64  0A84               	incf	4,f
  5226  0B65  0D80               	rlf	0,f
  5227  0B66  0A84               	incf	4,f
  5228  0B67  0D80               	rlf	0,f
  5229  0B68  0384               	decf	4,f
  5230  0B69  0384               	decf	4,f
  5231  0B6A  0384               	decf	4,f
  5232  0B6B  3001               	movlw	1
  5233  0B6C  02A4               	subwf	__div_to_l_@cntr,f
  5234  0B6D  1D03               	btfss	3,2
  5235  0B6E  2B08               	goto	l1845
  5236  0B6F  1FA5               	btfss	__div_to_l_@exp1,7
  5237  0B70  2B8F               	goto	l1863
  5238  0B71  0825               	movf	__div_to_l_@exp1,w
  5239  0B72  3A80               	xorlw	128
  5240  0B73  3E9F               	addlw	159
  5241  0B74  1803               	skipnc
  5242  0B75  2B7F               	goto	l1861
  5243  0B76  3000               	movlw	0
  5244  0B77  00F3               	movwf	?__div_to_l_+3
  5245  0B78  3000               	movlw	0
  5246  0B79  00F2               	movwf	?__div_to_l_+2
  5247  0B7A  3000               	movlw	0
  5248  0B7B  00F1               	movwf	?__div_to_l_+1
  5249  0B7C  3000               	movlw	0
  5250  0B7D  00F0               	movwf	?__div_to_l_
  5251  0B7E  0008               	return
  5252  0B7F                     l1861:	
  5253  0B7F  3001               	movlw	1
  5254  0B80                     u2835:	
  5255  0B80  1003               	clrc
  5256  0B81  0CA3               	rrf	__div_to_l_@quot+3,f
  5257  0B82  0CA2               	rrf	__div_to_l_@quot+2,f
  5258  0B83  0CA1               	rrf	__div_to_l_@quot+1,f
  5259  0B84  0CA0               	rrf	__div_to_l_@quot,f
  5260  0B85  3EFF               	addlw	-1
  5261  0B86  1D03               	skipz
  5262  0B87  2B80               	goto	u2835
  5263  0B88  3001               	movlw	1
  5264  0B89  00F6               	movwf	??__div_to_l_
  5265  0B8A  0876               	movf	??__div_to_l_,w
  5266  0B8B  07A5               	addwf	__div_to_l_@exp1,f
  5267  0B8C  1903               	btfsc	3,2
  5268  0B8D  2BAA               	goto	l1871
  5269  0B8E  2B7F               	goto	l1861
  5270  0B8F                     l1863:	
  5271  0B8F  3020               	movlw	32
  5272  0B90  0225               	subwf	__div_to_l_@exp1,w
  5273  0B91  1C03               	skipc
  5274  0B92  2BA7               	goto	l387
  5275  0B93  3000               	movlw	0
  5276  0B94  00F3               	movwf	?__div_to_l_+3
  5277  0B95  3000               	movlw	0
  5278  0B96  00F2               	movwf	?__div_to_l_+2
  5279  0B97  3000               	movlw	0
  5280  0B98  00F1               	movwf	?__div_to_l_+1
  5281  0B99  3000               	movlw	0
  5282  0B9A  00F0               	movwf	?__div_to_l_
  5283  0B9B  0008               	return
  5284  0B9C                     l1869:	
  5285  0B9C  3001               	movlw	1
  5286  0B9D  00F6               	movwf	??__div_to_l_
  5287  0B9E                     u2865:	
  5288  0B9E  1003               	clrc
  5289  0B9F  0DA0               	rlf	__div_to_l_@quot,f
  5290  0BA0  0DA1               	rlf	__div_to_l_@quot+1,f
  5291  0BA1  0DA2               	rlf	__div_to_l_@quot+2,f
  5292  0BA2  0DA3               	rlf	__div_to_l_@quot+3,f
  5293  0BA3  0BF6               	decfsz	??__div_to_l_,f
  5294  0BA4  2B9E               	goto	u2865
  5295  0BA5  3001               	movlw	1
  5296  0BA6  02A5               	subwf	__div_to_l_@exp1,f
  5297  0BA7                     l387:	
  5298  0BA7  0825               	movf	__div_to_l_@exp1,w
  5299  0BA8  1D03               	btfss	3,2
  5300  0BA9  2B9C               	goto	l1869
  5301  0BAA                     l1871:	
  5302  0BAA  0823               	movf	__div_to_l_@quot+3,w
  5303  0BAB  00F3               	movwf	?__div_to_l_+3
  5304  0BAC  0822               	movf	__div_to_l_@quot+2,w
  5305  0BAD  00F2               	movwf	?__div_to_l_+2
  5306  0BAE  0821               	movf	__div_to_l_@quot+1,w
  5307  0BAF  00F1               	movwf	?__div_to_l_+1
  5308  0BB0  0820               	movf	__div_to_l_@quot,w
  5309  0BB1  00F0               	movwf	?__div_to_l_
  5310  0BB2  0008               	return
  5311  0BB3                     __end_of__div_to_l_:	
  5312                           
  5313                           	psect	text11
  5314  14D8                     __ptext11:	
  5315 ;; *************** function ___wmul *****************
  5316 ;; Defined at:
  5317 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;  multiplier      2    0[COMMON] unsigned int 
  5320 ;;  multiplicand    2    2[COMMON] unsigned int 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;  product         2    4[COMMON] unsigned int 
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  2    0[COMMON] unsigned int 
  5325 ;; Registers used:
  5326 ;;		wreg, status,2, status,0
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5332 ;;      Params:         4       0       0       0       0
  5333 ;;      Locals:         2       0       0       0       0
  5334 ;;      Temps:          0       0       0       0       0
  5335 ;;      Totals:         6       0       0       0       0
  5336 ;;Total ram usage:        6 bytes
  5337 ;; Hardware stack levels used:    1
  5338 ;; This function calls:
  5339 ;;		Nothing
  5340 ;; This function is called by:
  5341 ;;		_printf
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           
  5346                           ;psect for function ___wmul
  5347  14D8                     ___wmul:	
  5348                           
  5349                           ;incstack = 0
  5350                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5351  14D8  01F4               	clrf	___wmul@product
  5352  14D9  01F5               	clrf	___wmul@product+1
  5353  14DA                     l1877:	
  5354  14DA  1C70               	btfss	___wmul@multiplier,0
  5355  14DB  2CE2               	goto	l221
  5356  14DC  0872               	movf	___wmul@multiplicand,w
  5357  14DD  07F4               	addwf	___wmul@product,f
  5358  14DE  1803               	skipnc
  5359  14DF  0AF5               	incf	___wmul@product+1,f
  5360  14E0  0873               	movf	___wmul@multiplicand+1,w
  5361  14E1  07F5               	addwf	___wmul@product+1,f
  5362  14E2                     l221:	
  5363  14E2  3001               	movlw	1
  5364  14E3                     u2895:	
  5365  14E3  1003               	clrc
  5366  14E4  0DF2               	rlf	___wmul@multiplicand,f
  5367  14E5  0DF3               	rlf	___wmul@multiplicand+1,f
  5368  14E6  3EFF               	addlw	-1
  5369  14E7  1D03               	skipz
  5370  14E8  2CE3               	goto	u2895
  5371  14E9  3001               	movlw	1
  5372  14EA                     u2905:	
  5373  14EA  1003               	clrc
  5374  14EB  0CF1               	rrf	___wmul@multiplier+1,f
  5375  14EC  0CF0               	rrf	___wmul@multiplier,f
  5376  14ED  3EFF               	addlw	-1
  5377  14EE  1D03               	skipz
  5378  14EF  2CEA               	goto	u2905
  5379  14F0  0870               	movf	___wmul@multiplier,w
  5380  14F1  0471               	iorwf	___wmul@multiplier+1,w
  5381  14F2  1D03               	btfss	3,2
  5382  14F3  2CDA               	goto	l1877
  5383  14F4  0875               	movf	___wmul@product+1,w
  5384  14F5  00F1               	movwf	?___wmul+1
  5385  14F6  0874               	movf	___wmul@product,w
  5386  14F7  00F0               	movwf	?___wmul
  5387  14F8  0008               	return
  5388  14F9                     __end_of___wmul:	
  5389                           
  5390                           	psect	text12
  5391  14F9                     __ptext12:	
  5392 ;; *************** function ___lltoft *****************
  5393 ;; Defined at:
  5394 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lltoft.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  c               4    8[COMMON] unsigned long 
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;  exp             1   13[COMMON] unsigned char 
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  3    8[COMMON] float 
  5401 ;; Registers used:
  5402 ;;		wreg, status,2, status,0, pclath, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5408 ;;      Params:         4       0       0       0       0
  5409 ;;      Locals:         1       0       0       0       0
  5410 ;;      Temps:          1       0       0       0       0
  5411 ;;      Totals:         6       0       0       0       0
  5412 ;;Total ram usage:        6 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:    1
  5415 ;; This function calls:
  5416 ;;		___ftpack
  5417 ;; This function is called by:
  5418 ;;		_printf
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           
  5423                           ;psect for function ___lltoft
  5424  14F9                     ___lltoft:	
  5425                           
  5426                           ;incstack = 0
  5427                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5428  14F9  308E               	movlw	142
  5429  14FA  00FC               	movwf	??___lltoft
  5430  14FB  087C               	movf	??___lltoft,w
  5431  14FC  00FD               	movwf	___lltoft@exp
  5432  14FD                     l2015:	
  5433  14FD  30FF               	movlw	255
  5434  14FE  057B               	andwf	___lltoft@c+3,w
  5435  14FF  1903               	btfsc	3,2
  5436  1500  2D0F               	goto	l2017
  5437  1501  3001               	movlw	1
  5438  1502                     u3225:	
  5439  1502  1003               	clrc
  5440  1503  0CFB               	rrf	___lltoft@c+3,f
  5441  1504  0CFA               	rrf	___lltoft@c+2,f
  5442  1505  0CF9               	rrf	___lltoft@c+1,f
  5443  1506  0CF8               	rrf	___lltoft@c,f
  5444  1507  3EFF               	addlw	-1
  5445  1508  1D03               	skipz
  5446  1509  2D02               	goto	u3225
  5447  150A  3001               	movlw	1
  5448  150B  00FC               	movwf	??___lltoft
  5449  150C  087C               	movf	??___lltoft,w
  5450  150D  07FD               	addwf	___lltoft@exp,f
  5451  150E  2CFD               	goto	l2015
  5452  150F                     l2017:	
  5453  150F  0878               	movf	___lltoft@c,w
  5454  1510  00F0               	movwf	___ftpack@arg
  5455  1511  0879               	movf	___lltoft@c+1,w
  5456  1512  00F1               	movwf	___ftpack@arg+1
  5457  1513  087A               	movf	___lltoft@c+2,w
  5458  1514  00F2               	movwf	___ftpack@arg+2
  5459  1515  087D               	movf	___lltoft@exp,w
  5460  1516  00FC               	movwf	??___lltoft
  5461  1517  087C               	movf	??___lltoft,w
  5462  1518  00F3               	movwf	___ftpack@exp
  5463  1519  01F4               	clrf	___ftpack@sign
  5464  151A  160A  118A  26D1   	fcall	___ftpack
  5465  151D  0870               	movf	?___ftpack,w
  5466  151E  00F8               	movwf	?___lltoft
  5467  151F  0871               	movf	?___ftpack+1,w
  5468  1520  00F9               	movwf	?___lltoft+1
  5469  1521  0872               	movf	?___ftpack+2,w
  5470  1522  00FA               	movwf	?___lltoft+2
  5471  1523  0008               	return
  5472  1524                     __end_of___lltoft:	
  5473                           
  5474                           	psect	text13
  5475  156F                     __ptext13:	
  5476 ;; *************** function ___llmod *****************
  5477 ;; Defined at:
  5478 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\llmod.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  divisor         4    0[COMMON] unsigned long 
  5481 ;;  dividend        4    4[COMMON] unsigned long 
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;  counter         1    9[COMMON] unsigned char 
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  4    0[COMMON] unsigned long 
  5486 ;; Registers used:
  5487 ;;		wreg, status,2, status,0
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5493 ;;      Params:         8       0       0       0       0
  5494 ;;      Locals:         1       0       0       0       0
  5495 ;;      Temps:          1       0       0       0       0
  5496 ;;      Totals:        10       0       0       0       0
  5497 ;;Total ram usage:       10 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; This function calls:
  5500 ;;		Nothing
  5501 ;; This function is called by:
  5502 ;;		_printf
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           
  5507                           ;psect for function ___llmod
  5508  156F                     ___llmod:	
  5509                           
  5510                           ;incstack = 0
  5511                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5512  156F  0873               	movf	___llmod@divisor+3,w
  5513  1570  0472               	iorwf	___llmod@divisor+2,w
  5514  1571  0471               	iorwf	___llmod@divisor+1,w
  5515  1572  0470               	iorwf	___llmod@divisor,w
  5516  1573  1903               	skipnz
  5517  1574  2DB2               	goto	l2007
  5518  1575  01F9               	clrf	___llmod@counter
  5519  1576  0AF9               	incf	___llmod@counter,f
  5520  1577                     l1997:	
  5521  1577  1BF3               	btfsc	___llmod@divisor+3,7
  5522  1578  2D87               	goto	l1999
  5523  1579  3001               	movlw	1
  5524  157A  00F8               	movwf	??___llmod
  5525  157B                     u3175:	
  5526  157B  1003               	clrc
  5527  157C  0DF0               	rlf	___llmod@divisor,f
  5528  157D  0DF1               	rlf	___llmod@divisor+1,f
  5529  157E  0DF2               	rlf	___llmod@divisor+2,f
  5530  157F  0DF3               	rlf	___llmod@divisor+3,f
  5531  1580  0BF8               	decfsz	??___llmod,f
  5532  1581  2D7B               	goto	u3175
  5533  1582  3001               	movlw	1
  5534  1583  00F8               	movwf	??___llmod
  5535  1584  0878               	movf	??___llmod,w
  5536  1585  07F9               	addwf	___llmod@counter,f
  5537  1586  2D77               	goto	l1997
  5538  1587                     l1999:	
  5539  1587  0873               	movf	___llmod@divisor+3,w
  5540  1588  0277               	subwf	___llmod@dividend+3,w
  5541  1589  1D03               	skipz
  5542  158A  2D95               	goto	u3195
  5543  158B  0872               	movf	___llmod@divisor+2,w
  5544  158C  0276               	subwf	___llmod@dividend+2,w
  5545  158D  1D03               	skipz
  5546  158E  2D95               	goto	u3195
  5547  158F  0871               	movf	___llmod@divisor+1,w
  5548  1590  0275               	subwf	___llmod@dividend+1,w
  5549  1591  1D03               	skipz
  5550  1592  2D95               	goto	u3195
  5551  1593  0870               	movf	___llmod@divisor,w
  5552  1594  0274               	subwf	___llmod@dividend,w
  5553  1595                     u3195:	
  5554  1595  1C03               	skipc
  5555  1596  2DA5               	goto	l2003
  5556  1597  0870               	movf	___llmod@divisor,w
  5557  1598  02F4               	subwf	___llmod@dividend,f
  5558  1599  0871               	movf	___llmod@divisor+1,w
  5559  159A  1C03               	skipc
  5560  159B  0F71               	incfsz	___llmod@divisor+1,w
  5561  159C  02F5               	subwf	___llmod@dividend+1,f
  5562  159D  0872               	movf	___llmod@divisor+2,w
  5563  159E  1C03               	skipc
  5564  159F  0F72               	incfsz	___llmod@divisor+2,w
  5565  15A0  02F6               	subwf	___llmod@dividend+2,f
  5566  15A1  0873               	movf	___llmod@divisor+3,w
  5567  15A2  1C03               	skipc
  5568  15A3  0F73               	incfsz	___llmod@divisor+3,w
  5569  15A4  02F7               	subwf	___llmod@dividend+3,f
  5570  15A5                     l2003:	
  5571  15A5  3001               	movlw	1
  5572  15A6                     u3205:	
  5573  15A6  1003               	clrc
  5574  15A7  0CF3               	rrf	___llmod@divisor+3,f
  5575  15A8  0CF2               	rrf	___llmod@divisor+2,f
  5576  15A9  0CF1               	rrf	___llmod@divisor+1,f
  5577  15AA  0CF0               	rrf	___llmod@divisor,f
  5578  15AB  3EFF               	addlw	-1
  5579  15AC  1D03               	skipz
  5580  15AD  2DA6               	goto	u3205
  5581  15AE  3001               	movlw	1
  5582  15AF  02F9               	subwf	___llmod@counter,f
  5583  15B0  1D03               	btfss	3,2
  5584  15B1  2D87               	goto	l1999
  5585  15B2                     l2007:	
  5586  15B2  0877               	movf	___llmod@dividend+3,w
  5587  15B3  00F3               	movwf	?___llmod+3
  5588  15B4  0876               	movf	___llmod@dividend+2,w
  5589  15B5  00F2               	movwf	?___llmod+2
  5590  15B6  0875               	movf	___llmod@dividend+1,w
  5591  15B7  00F1               	movwf	?___llmod+1
  5592  15B8  0874               	movf	___llmod@dividend,w
  5593  15B9  00F0               	movwf	?___llmod
  5594  15BA  0008               	return
  5595  15BB                     __end_of___llmod:	
  5596                           
  5597                           	psect	text14
  5598  1673                     __ptext14:	
  5599 ;; *************** function ___lldiv *****************
  5600 ;; Defined at:
  5601 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lldiv.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  divisor         4    0[COMMON] unsigned long 
  5604 ;;  dividend        4    4[COMMON] unsigned long 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;  quotient        4    9[COMMON] unsigned long 
  5607 ;;  counter         1   13[COMMON] unsigned char 
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  4    0[COMMON] unsigned long 
  5610 ;; Registers used:
  5611 ;;		wreg, status,2, status,0
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5617 ;;      Params:         8       0       0       0       0
  5618 ;;      Locals:         5       0       0       0       0
  5619 ;;      Temps:          1       0       0       0       0
  5620 ;;      Totals:        14       0       0       0       0
  5621 ;;Total ram usage:       14 bytes
  5622 ;; Hardware stack levels used:    1
  5623 ;; This function calls:
  5624 ;;		Nothing
  5625 ;; This function is called by:
  5626 ;;		_printf
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           
  5631                           ;psect for function ___lldiv
  5632  1673                     ___lldiv:	
  5633                           
  5634                           ;incstack = 0
  5635                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5636  1673  3000               	movlw	0
  5637  1674  00FC               	movwf	___lldiv@quotient+3
  5638  1675  3000               	movlw	0
  5639  1676  00FB               	movwf	___lldiv@quotient+2
  5640  1677  3000               	movlw	0
  5641  1678  00FA               	movwf	___lldiv@quotient+1
  5642  1679  3000               	movlw	0
  5643  167A  00F9               	movwf	___lldiv@quotient
  5644  167B  0873               	movf	___lldiv@divisor+3,w
  5645  167C  0472               	iorwf	___lldiv@divisor+2,w
  5646  167D  0471               	iorwf	___lldiv@divisor+1,w
  5647  167E  0470               	iorwf	___lldiv@divisor,w
  5648  167F  1903               	skipnz
  5649  1680  2EC8               	goto	l1987
  5650  1681  01FD               	clrf	___lldiv@counter
  5651  1682  0AFD               	incf	___lldiv@counter,f
  5652  1683                     l1973:	
  5653  1683  1BF3               	btfsc	___lldiv@divisor+3,7
  5654  1684  2E93               	goto	l1975
  5655  1685  3001               	movlw	1
  5656  1686  00F8               	movwf	??___lldiv
  5657  1687                     u3105:	
  5658  1687  1003               	clrc
  5659  1688  0DF0               	rlf	___lldiv@divisor,f
  5660  1689  0DF1               	rlf	___lldiv@divisor+1,f
  5661  168A  0DF2               	rlf	___lldiv@divisor+2,f
  5662  168B  0DF3               	rlf	___lldiv@divisor+3,f
  5663  168C  0BF8               	decfsz	??___lldiv,f
  5664  168D  2E87               	goto	u3105
  5665  168E  3001               	movlw	1
  5666  168F  00F8               	movwf	??___lldiv
  5667  1690  0878               	movf	??___lldiv,w
  5668  1691  07FD               	addwf	___lldiv@counter,f
  5669  1692  2E83               	goto	l1973
  5670  1693                     l1975:	
  5671  1693  3001               	movlw	1
  5672  1694  00F8               	movwf	??___lldiv
  5673  1695                     u3125:	
  5674  1695  1003               	clrc
  5675  1696  0DF9               	rlf	___lldiv@quotient,f
  5676  1697  0DFA               	rlf	___lldiv@quotient+1,f
  5677  1698  0DFB               	rlf	___lldiv@quotient+2,f
  5678  1699  0DFC               	rlf	___lldiv@quotient+3,f
  5679  169A  0BF8               	decfsz	??___lldiv,f
  5680  169B  2E95               	goto	u3125
  5681  169C  0873               	movf	___lldiv@divisor+3,w
  5682  169D  0277               	subwf	___lldiv@dividend+3,w
  5683  169E  1D03               	skipz
  5684  169F  2EAA               	goto	u3135
  5685  16A0  0872               	movf	___lldiv@divisor+2,w
  5686  16A1  0276               	subwf	___lldiv@dividend+2,w
  5687  16A2  1D03               	skipz
  5688  16A3  2EAA               	goto	u3135
  5689  16A4  0871               	movf	___lldiv@divisor+1,w
  5690  16A5  0275               	subwf	___lldiv@dividend+1,w
  5691  16A6  1D03               	skipz
  5692  16A7  2EAA               	goto	u3135
  5693  16A8  0870               	movf	___lldiv@divisor,w
  5694  16A9  0274               	subwf	___lldiv@dividend,w
  5695  16AA                     u3135:	
  5696  16AA  1C03               	skipc
  5697  16AB  2EBB               	goto	l1983
  5698  16AC  0870               	movf	___lldiv@divisor,w
  5699  16AD  02F4               	subwf	___lldiv@dividend,f
  5700  16AE  0871               	movf	___lldiv@divisor+1,w
  5701  16AF  1C03               	skipc
  5702  16B0  0F71               	incfsz	___lldiv@divisor+1,w
  5703  16B1  02F5               	subwf	___lldiv@dividend+1,f
  5704  16B2  0872               	movf	___lldiv@divisor+2,w
  5705  16B3  1C03               	skipc
  5706  16B4  0F72               	incfsz	___lldiv@divisor+2,w
  5707  16B5  02F6               	subwf	___lldiv@dividend+2,f
  5708  16B6  0873               	movf	___lldiv@divisor+3,w
  5709  16B7  1C03               	skipc
  5710  16B8  0F73               	incfsz	___lldiv@divisor+3,w
  5711  16B9  02F7               	subwf	___lldiv@dividend+3,f
  5712  16BA  1479               	bsf	___lldiv@quotient,0
  5713  16BB                     l1983:	
  5714  16BB  3001               	movlw	1
  5715  16BC                     u3145:	
  5716  16BC  1003               	clrc
  5717  16BD  0CF3               	rrf	___lldiv@divisor+3,f
  5718  16BE  0CF2               	rrf	___lldiv@divisor+2,f
  5719  16BF  0CF1               	rrf	___lldiv@divisor+1,f
  5720  16C0  0CF0               	rrf	___lldiv@divisor,f
  5721  16C1  3EFF               	addlw	-1
  5722  16C2  1D03               	skipz
  5723  16C3  2EBC               	goto	u3145
  5724  16C4  3001               	movlw	1
  5725  16C5  02FD               	subwf	___lldiv@counter,f
  5726  16C6  1D03               	btfss	3,2
  5727  16C7  2E93               	goto	l1975
  5728  16C8                     l1987:	
  5729  16C8  087C               	movf	___lldiv@quotient+3,w
  5730  16C9  00F3               	movwf	?___lldiv+3
  5731  16CA  087B               	movf	___lldiv@quotient+2,w
  5732  16CB  00F2               	movwf	?___lldiv+2
  5733  16CC  087A               	movf	___lldiv@quotient+1,w
  5734  16CD  00F1               	movwf	?___lldiv+1
  5735  16CE  0879               	movf	___lldiv@quotient,w
  5736  16CF  00F0               	movwf	?___lldiv
  5737  16D0  0008               	return
  5738  16D1                     __end_of___lldiv:	
  5739                           
  5740                           	psect	text15
  5741  0817                     __ptext15:	
  5742 ;; *************** function ___fttol *****************
  5743 ;; Defined at:
  5744 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;  f1              3   32[BANK0 ] float 
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;  lval            4   41[BANK0 ] unsigned long 
  5749 ;;  exp1            1   45[BANK0 ] unsigned char 
  5750 ;;  sign1           1   40[BANK0 ] unsigned char 
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  4   32[BANK0 ] long 
  5753 ;; Registers used:
  5754 ;;		wreg, status,2, status,0
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5760 ;;      Params:         0       4       0       0       0
  5761 ;;      Locals:         0       6       0       0       0
  5762 ;;      Temps:          0       4       0       0       0
  5763 ;;      Totals:         0      14       0       0       0
  5764 ;;Total ram usage:       14 bytes
  5765 ;; Hardware stack levels used:    1
  5766 ;; This function calls:
  5767 ;;		Nothing
  5768 ;; This function is called by:
  5769 ;;		_printf
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           
  5774                           ;psect for function ___fttol
  5775  0817                     ___fttol:	
  5776                           
  5777                           ;incstack = 0
  5778                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5779  0817  1283               	bcf	3,5	;RP0=0, select bank0
  5780  0818  1303               	bcf	3,6	;RP1=0, select bank0
  5781  0819  0840               	movf	___fttol@f1,w
  5782  081A  00C4               	movwf	??___fttol
  5783  081B  0841               	movf	___fttol@f1+1,w
  5784  081C  00C5               	movwf	??___fttol+1
  5785  081D  0842               	movf	___fttol@f1+2,w
  5786  081E  00C6               	movwf	??___fttol+2
  5787  081F  1003               	clrc
  5788  0820  0D45               	rlf	??___fttol+1,w
  5789  0821  0D46               	rlf	??___fttol+2,w
  5790  0822  00C7               	movwf	??___fttol+3
  5791  0823  0847               	movf	??___fttol+3,w
  5792  0824  00CD               	movwf	___fttol@exp1
  5793  0825  084D               	movf	___fttol@exp1,w
  5794  0826  1D03               	btfss	3,2
  5795  0827  2831               	goto	l1931
  5796  0828  3000               	movlw	0
  5797  0829  00C3               	movwf	?___fttol+3
  5798  082A  3000               	movlw	0
  5799  082B  00C2               	movwf	?___fttol+2
  5800  082C  3000               	movlw	0
  5801  082D  00C1               	movwf	?___fttol+1
  5802  082E  3000               	movlw	0
  5803  082F  00C0               	movwf	?___fttol
  5804  0830  0008               	return
  5805  0831                     l1931:	
  5806  0831  0840               	movf	___fttol@f1,w
  5807  0832  00C4               	movwf	??___fttol
  5808  0833  0841               	movf	___fttol@f1+1,w
  5809  0834  00C5               	movwf	??___fttol+1
  5810  0835  0842               	movf	___fttol@f1+2,w
  5811  0836  00C6               	movwf	??___fttol+2
  5812  0837  3017               	movlw	23
  5813  0838                     u3005:	
  5814  0838  1003               	clrc
  5815  0839  0CC6               	rrf	??___fttol+2,f
  5816  083A  0CC5               	rrf	??___fttol+1,f
  5817  083B  0CC4               	rrf	??___fttol,f
  5818  083C  3EFF               	addlw	-1
  5819  083D  1D03               	skipz
  5820  083E  2838               	goto	u3005
  5821  083F  0844               	movf	??___fttol,w
  5822  0840  00C7               	movwf	??___fttol+3
  5823  0841  0847               	movf	??___fttol+3,w
  5824  0842  00C8               	movwf	___fttol@sign1
  5825  0843  17C1               	bsf	___fttol@f1+1,7
  5826  0844  30FF               	movlw	255
  5827  0845  05C0               	andwf	___fttol@f1,f
  5828  0846  30FF               	movlw	255
  5829  0847  05C1               	andwf	___fttol@f1+1,f
  5830  0848  3000               	movlw	0
  5831  0849  05C2               	andwf	___fttol@f1+2,f
  5832  084A  0840               	movf	___fttol@f1,w
  5833  084B  00C9               	movwf	___fttol@lval
  5834  084C  0841               	movf	___fttol@f1+1,w
  5835  084D  00CA               	movwf	___fttol@lval+1
  5836  084E  0842               	movf	___fttol@f1+2,w
  5837  084F  00CB               	movwf	___fttol@lval+2
  5838  0850  01CC               	clrf	___fttol@lval+3
  5839  0851  308E               	movlw	142
  5840  0852  02CD               	subwf	___fttol@exp1,f
  5841  0853  1FCD               	btfss	___fttol@exp1,7
  5842  0854  2873               	goto	l1951
  5843  0855  084D               	movf	___fttol@exp1,w
  5844  0856  3A80               	xorlw	128
  5845  0857  3E8F               	addlw	143
  5846  0858  1803               	skipnc
  5847  0859  2863               	goto	l1949
  5848  085A  3000               	movlw	0
  5849  085B  00C3               	movwf	?___fttol+3
  5850  085C  3000               	movlw	0
  5851  085D  00C2               	movwf	?___fttol+2
  5852  085E  3000               	movlw	0
  5853  085F  00C1               	movwf	?___fttol+1
  5854  0860  3000               	movlw	0
  5855  0861  00C0               	movwf	?___fttol
  5856  0862  0008               	return
  5857  0863                     l1949:	
  5858  0863  3001               	movlw	1
  5859  0864                     u3035:	
  5860  0864  1003               	clrc
  5861  0865  0CCC               	rrf	___fttol@lval+3,f
  5862  0866  0CCB               	rrf	___fttol@lval+2,f
  5863  0867  0CCA               	rrf	___fttol@lval+1,f
  5864  0868  0CC9               	rrf	___fttol@lval,f
  5865  0869  3EFF               	addlw	-1
  5866  086A  1D03               	skipz
  5867  086B  2864               	goto	u3035
  5868  086C  3001               	movlw	1
  5869  086D  00C4               	movwf	??___fttol
  5870  086E  0844               	movf	??___fttol,w
  5871  086F  07CD               	addwf	___fttol@exp1,f
  5872  0870  1903               	btfsc	3,2
  5873  0871  288E               	goto	l1959
  5874  0872  2863               	goto	l1949
  5875  0873                     l1951:	
  5876  0873  3018               	movlw	24
  5877  0874  024D               	subwf	___fttol@exp1,w
  5878  0875  1C03               	skipc
  5879  0876  288B               	goto	l507
  5880  0877  3000               	movlw	0
  5881  0878  00C3               	movwf	?___fttol+3
  5882  0879  3000               	movlw	0
  5883  087A  00C2               	movwf	?___fttol+2
  5884  087B  3000               	movlw	0
  5885  087C  00C1               	movwf	?___fttol+1
  5886  087D  3000               	movlw	0
  5887  087E  00C0               	movwf	?___fttol
  5888  087F  0008               	return
  5889  0880                     l1957:	
  5890  0880  3001               	movlw	1
  5891  0881  00C4               	movwf	??___fttol
  5892  0882                     u3065:	
  5893  0882  1003               	clrc
  5894  0883  0DC9               	rlf	___fttol@lval,f
  5895  0884  0DCA               	rlf	___fttol@lval+1,f
  5896  0885  0DCB               	rlf	___fttol@lval+2,f
  5897  0886  0DCC               	rlf	___fttol@lval+3,f
  5898  0887  0BC4               	decfsz	??___fttol,f
  5899  0888  2882               	goto	u3065
  5900  0889  3001               	movlw	1
  5901  088A  02CD               	subwf	___fttol@exp1,f
  5902  088B                     l507:	
  5903  088B  084D               	movf	___fttol@exp1,w
  5904  088C  1D03               	btfss	3,2
  5905  088D  2880               	goto	l1957
  5906  088E                     l1959:	
  5907  088E  0848               	movf	___fttol@sign1,w
  5908  088F  1903               	btfsc	3,2
  5909  0890  289C               	goto	l1963
  5910  0891  09C9               	comf	___fttol@lval,f
  5911  0892  09CA               	comf	___fttol@lval+1,f
  5912  0893  09CB               	comf	___fttol@lval+2,f
  5913  0894  09CC               	comf	___fttol@lval+3,f
  5914  0895  0AC9               	incf	___fttol@lval,f
  5915  0896  1903               	skipnz
  5916  0897  0ACA               	incf	___fttol@lval+1,f
  5917  0898  1903               	skipnz
  5918  0899  0ACB               	incf	___fttol@lval+2,f
  5919  089A  1903               	skipnz
  5920  089B  0ACC               	incf	___fttol@lval+3,f
  5921  089C                     l1963:	
  5922  089C  084C               	movf	___fttol@lval+3,w
  5923  089D  00C3               	movwf	?___fttol+3
  5924  089E  084B               	movf	___fttol@lval+2,w
  5925  089F  00C2               	movwf	?___fttol+2
  5926  08A0  084A               	movf	___fttol@lval+1,w
  5927  08A1  00C1               	movwf	?___fttol+1
  5928  08A2  0849               	movf	___fttol@lval,w
  5929  08A3  00C0               	movwf	?___fttol
  5930  08A4  0008               	return
  5931  08A5                     __end_of___fttol:	
  5932                           
  5933                           	psect	text16
  5934  14B7                     __ptext16:	
  5935 ;; *************** function ___ftsub *****************
  5936 ;; Defined at:
  5937 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftsub.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;  f2              3   52[BANK0 ] float 
  5940 ;;  f1              3   55[BANK0 ] float 
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;		None
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  3   52[BANK0 ] float 
  5945 ;; Registers used:
  5946 ;;		wreg, status,2, status,0, pclath, cstack
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5952 ;;      Params:         0       6       0       0       0
  5953 ;;      Locals:         0       0       0       0       0
  5954 ;;      Temps:          0       0       0       0       0
  5955 ;;      Totals:         0       6       0       0       0
  5956 ;;Total ram usage:        6 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; Hardware stack levels required when called:    2
  5959 ;; This function calls:
  5960 ;;		___ftadd
  5961 ;; This function is called by:
  5962 ;;		_printf
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           
  5967                           ;psect for function ___ftsub
  5968  14B7                     ___ftsub:	
  5969                           
  5970                           ;incstack = 0
  5971                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5972  14B7  1283               	bcf	3,5	;RP0=0, select bank0
  5973  14B8  1303               	bcf	3,6	;RP1=0, select bank0
  5974  14B9  0856               	movf	___ftsub@f2+2,w
  5975  14BA  0455               	iorwf	___ftsub@f2+1,w
  5976  14BB  0454               	iorwf	___ftsub@f2,w
  5977  14BC  1903               	skipnz
  5978  14BD  2CC0               	goto	l1921
  5979  14BE  3080               	movlw	128
  5980  14BF  06D6               	xorwf	___ftsub@f2+2,f
  5981  14C0                     l1921:	
  5982  14C0  0857               	movf	___ftsub@f1,w
  5983  14C1  00C7               	movwf	___ftadd@f1
  5984  14C2  0858               	movf	___ftsub@f1+1,w
  5985  14C3  00C8               	movwf	___ftadd@f1+1
  5986  14C4  0859               	movf	___ftsub@f1+2,w
  5987  14C5  00C9               	movwf	___ftadd@f1+2
  5988  14C6  0854               	movf	___ftsub@f2,w
  5989  14C7  00CA               	movwf	___ftadd@f2
  5990  14C8  0855               	movf	___ftsub@f2+1,w
  5991  14C9  00CB               	movwf	___ftadd@f2+1
  5992  14CA  0856               	movf	___ftsub@f2+2,w
  5993  14CB  00CC               	movwf	___ftadd@f2+2
  5994  14CC  120A  158A  2178   	fcall	___ftadd
  5995  14CF  1283               	bcf	3,5	;RP0=0, select bank0
  5996  14D0  1303               	bcf	3,6	;RP1=0, select bank0
  5997  14D1  0847               	movf	?___ftadd,w
  5998  14D2  00D4               	movwf	?___ftsub
  5999  14D3  0848               	movf	?___ftadd+1,w
  6000  14D4  00D5               	movwf	?___ftsub+1
  6001  14D5  0849               	movf	?___ftadd+2,w
  6002  14D6  00D6               	movwf	?___ftsub+2
  6003  14D7  0008               	return
  6004  14D8                     __end_of___ftsub:	
  6005                           
  6006                           	psect	text17
  6007  0978                     __ptext17:	
  6008 ;; *************** function ___ftadd *****************
  6009 ;; Defined at:
  6010 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;  f1              3   39[BANK0 ] float 
  6013 ;;  f2              3   42[BANK0 ] float 
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;  exp1            1   51[BANK0 ] unsigned char 
  6016 ;;  exp2            1   50[BANK0 ] unsigned char 
  6017 ;;  sign            1   49[BANK0 ] unsigned char 
  6018 ;; Return value:  Size  Location     Type
  6019 ;;                  3   39[BANK0 ] float 
  6020 ;; Registers used:
  6021 ;;		wreg, status,2, status,0, pclath, cstack
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6027 ;;      Params:         0       6       0       0       0
  6028 ;;      Locals:         0       3       0       0       0
  6029 ;;      Temps:          0       4       0       0       0
  6030 ;;      Totals:         0      13       0       0       0
  6031 ;;Total ram usage:       13 bytes
  6032 ;; Hardware stack levels used:    1
  6033 ;; Hardware stack levels required when called:    1
  6034 ;; This function calls:
  6035 ;;		___ftpack
  6036 ;; This function is called by:
  6037 ;;		_main
  6038 ;;		_printf
  6039 ;;		___ftsub
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043                           
  6044                           ;psect for function ___ftadd
  6045  0978                     ___ftadd:	
  6046                           
  6047                           ;incstack = 0
  6048                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6049  0978  1283               	bcf	3,5	;RP0=0, select bank0
  6050  0979  1303               	bcf	3,6	;RP1=0, select bank0
  6051  097A  0847               	movf	___ftadd@f1,w
  6052  097B  00CD               	movwf	??___ftadd
  6053  097C  0848               	movf	___ftadd@f1+1,w
  6054  097D  00CE               	movwf	??___ftadd+1
  6055  097E  0849               	movf	___ftadd@f1+2,w
  6056  097F  00CF               	movwf	??___ftadd+2
  6057  0980  1003               	clrc
  6058  0981  0D4E               	rlf	??___ftadd+1,w
  6059  0982  0D4F               	rlf	??___ftadd+2,w
  6060  0983  00D0               	movwf	??___ftadd+3
  6061  0984  0850               	movf	??___ftadd+3,w
  6062  0985  00D3               	movwf	___ftadd@exp1
  6063  0986  084A               	movf	___ftadd@f2,w
  6064  0987  00CD               	movwf	??___ftadd
  6065  0988  084B               	movf	___ftadd@f2+1,w
  6066  0989  00CE               	movwf	??___ftadd+1
  6067  098A  084C               	movf	___ftadd@f2+2,w
  6068  098B  00CF               	movwf	??___ftadd+2
  6069  098C  1003               	clrc
  6070  098D  0D4E               	rlf	??___ftadd+1,w
  6071  098E  0D4F               	rlf	??___ftadd+2,w
  6072  098F  00D0               	movwf	??___ftadd+3
  6073  0990  0850               	movf	??___ftadd+3,w
  6074  0991  00D2               	movwf	___ftadd@exp2
  6075  0992  0853               	movf	___ftadd@exp1,w
  6076  0993  1903               	btfsc	3,2
  6077  0994  29A1               	goto	l1591
  6078  0995  0852               	movf	___ftadd@exp2,w
  6079  0996  0253               	subwf	___ftadd@exp1,w
  6080  0997  1803               	skipnc
  6081  0998  29A8               	goto	l1595
  6082  0999  0353               	decf	___ftadd@exp1,w
  6083  099A  3AFF               	xorlw	255
  6084  099B  0752               	addwf	___ftadd@exp2,w
  6085  099C  00CD               	movwf	??___ftadd
  6086  099D  3019               	movlw	25
  6087  099E  024D               	subwf	??___ftadd,w
  6088  099F  1C03               	skipc
  6089  09A0  29A8               	goto	l1595
  6090  09A1                     l1591:	
  6091  09A1  084A               	movf	___ftadd@f2,w
  6092  09A2  00C7               	movwf	?___ftadd
  6093  09A3  084B               	movf	___ftadd@f2+1,w
  6094  09A4  00C8               	movwf	?___ftadd+1
  6095  09A5  084C               	movf	___ftadd@f2+2,w
  6096  09A6  00C9               	movwf	?___ftadd+2
  6097  09A7  0008               	return
  6098  09A8                     l1595:	
  6099  09A8  0852               	movf	___ftadd@exp2,w
  6100  09A9  1903               	btfsc	3,2
  6101  09AA  0008               	return
  6102  09AB  0853               	movf	___ftadd@exp1,w
  6103  09AC  0252               	subwf	___ftadd@exp2,w
  6104  09AD  1803               	skipnc
  6105  09AE  29B7               	goto	l1601
  6106  09AF  0352               	decf	___ftadd@exp2,w
  6107  09B0  3AFF               	xorlw	255
  6108  09B1  0753               	addwf	___ftadd@exp1,w
  6109  09B2  00CD               	movwf	??___ftadd
  6110  09B3  3019               	movlw	25
  6111  09B4  024D               	subwf	??___ftadd,w
  6112  09B5  1803               	btfsc	3,0
  6113  09B6  0008               	return
  6114  09B7                     l1601:	
  6115  09B7  3006               	movlw	6
  6116  09B8  00CD               	movwf	??___ftadd
  6117  09B9  084D               	movf	??___ftadd,w
  6118  09BA  00D1               	movwf	___ftadd@sign
  6119  09BB  1BC9               	btfsc	___ftadd@f1+2,7
  6120  09BC  17D1               	bsf	___ftadd@sign,7
  6121  09BD  1BCC               	btfsc	___ftadd@f2+2,7
  6122  09BE  1751               	bsf	___ftadd@sign,6
  6123  09BF  17C8               	bsf	___ftadd@f1+1,7
  6124  09C0  30FF               	movlw	255
  6125  09C1  05C7               	andwf	___ftadd@f1,f
  6126  09C2  30FF               	movlw	255
  6127  09C3  05C8               	andwf	___ftadd@f1+1,f
  6128  09C4  3000               	movlw	0
  6129  09C5  05C9               	andwf	___ftadd@f1+2,f
  6130  09C6  17CB               	bsf	___ftadd@f2+1,7
  6131  09C7  30FF               	movlw	255
  6132  09C8  05CA               	andwf	___ftadd@f2,f
  6133  09C9  30FF               	movlw	255
  6134  09CA  05CB               	andwf	___ftadd@f2+1,f
  6135  09CB  3000               	movlw	0
  6136  09CC  05CC               	andwf	___ftadd@f2+2,f
  6137  09CD  0852               	movf	___ftadd@exp2,w
  6138  09CE  0253               	subwf	___ftadd@exp1,w
  6139  09CF  1803               	skipnc
  6140  09D0  29F7               	goto	l1623
  6141  09D1                     l1613:	
  6142  09D1  3001               	movlw	1
  6143  09D2                     u2265:	
  6144  09D2  1003               	clrc
  6145  09D3  0DCA               	rlf	___ftadd@f2,f
  6146  09D4  0DCB               	rlf	___ftadd@f2+1,f
  6147  09D5  0DCC               	rlf	___ftadd@f2+2,f
  6148  09D6  3EFF               	addlw	-1
  6149  09D7  1D03               	skipz
  6150  09D8  29D2               	goto	u2265
  6151  09D9  3001               	movlw	1
  6152  09DA  02D2               	subwf	___ftadd@exp2,f
  6153  09DB  0852               	movf	___ftadd@exp2,w
  6154  09DC  0653               	xorwf	___ftadd@exp1,w
  6155  09DD  1903               	skipnz
  6156  09DE  29F2               	goto	l1621
  6157  09DF  3001               	movlw	1
  6158  09E0  02D1               	subwf	___ftadd@sign,f
  6159  09E1  0851               	movf	___ftadd@sign,w
  6160  09E2  3907               	andlw	7
  6161  09E3  1903               	btfsc	3,2
  6162  09E4  29F2               	goto	l1621
  6163  09E5  29D1               	goto	l1613
  6164  09E6                     l1619:	
  6165  09E6  3001               	movlw	1
  6166  09E7                     u2295:	
  6167  09E7  1003               	clrc
  6168  09E8  0CC9               	rrf	___ftadd@f1+2,f
  6169  09E9  0CC8               	rrf	___ftadd@f1+1,f
  6170  09EA  0CC7               	rrf	___ftadd@f1,f
  6171  09EB  3EFF               	addlw	-1
  6172  09EC  1D03               	skipz
  6173  09ED  29E7               	goto	u2295
  6174  09EE  3001               	movlw	1
  6175  09EF  00CD               	movwf	??___ftadd
  6176  09F0  084D               	movf	??___ftadd,w
  6177  09F1  07D3               	addwf	___ftadd@exp1,f
  6178  09F2                     l1621:	
  6179  09F2  0853               	movf	___ftadd@exp1,w
  6180  09F3  0652               	xorwf	___ftadd@exp2,w
  6181  09F4  1903               	btfsc	3,2
  6182  09F5  2A20               	goto	l430
  6183  09F6  29E6               	goto	l1619
  6184  09F7                     l1623:	
  6185  09F7  0853               	movf	___ftadd@exp1,w
  6186  09F8  0252               	subwf	___ftadd@exp2,w
  6187  09F9  1803               	skipnc
  6188  09FA  2A20               	goto	l430
  6189  09FB                     l1625:	
  6190  09FB  3001               	movlw	1
  6191  09FC                     u2325:	
  6192  09FC  1003               	clrc
  6193  09FD  0DC7               	rlf	___ftadd@f1,f
  6194  09FE  0DC8               	rlf	___ftadd@f1+1,f
  6195  09FF  0DC9               	rlf	___ftadd@f1+2,f
  6196  0A00  3EFF               	addlw	-1
  6197  0A01  1D03               	skipz
  6198  0A02  29FC               	goto	u2325
  6199  0A03  3001               	movlw	1
  6200  0A04  02D3               	subwf	___ftadd@exp1,f
  6201  0A05  0852               	movf	___ftadd@exp2,w
  6202  0A06  0653               	xorwf	___ftadd@exp1,w
  6203  0A07  1903               	skipnz
  6204  0A08  2A1C               	goto	l1633
  6205  0A09  3001               	movlw	1
  6206  0A0A  02D1               	subwf	___ftadd@sign,f
  6207  0A0B  0851               	movf	___ftadd@sign,w
  6208  0A0C  3907               	andlw	7
  6209  0A0D  1903               	btfsc	3,2
  6210  0A0E  2A1C               	goto	l1633
  6211  0A0F  29FB               	goto	l1625
  6212  0A10                     l1631:	
  6213  0A10  3001               	movlw	1
  6214  0A11                     u2355:	
  6215  0A11  1003               	clrc
  6216  0A12  0CCC               	rrf	___ftadd@f2+2,f
  6217  0A13  0CCB               	rrf	___ftadd@f2+1,f
  6218  0A14  0CCA               	rrf	___ftadd@f2,f
  6219  0A15  3EFF               	addlw	-1
  6220  0A16  1D03               	skipz
  6221  0A17  2A11               	goto	u2355
  6222  0A18  3001               	movlw	1
  6223  0A19  00CD               	movwf	??___ftadd
  6224  0A1A  084D               	movf	??___ftadd,w
  6225  0A1B  07D2               	addwf	___ftadd@exp2,f
  6226  0A1C                     l1633:	
  6227  0A1C  0853               	movf	___ftadd@exp1,w
  6228  0A1D  0652               	xorwf	___ftadd@exp2,w
  6229  0A1E  1D03               	skipz
  6230  0A1F  2A10               	goto	l1631
  6231  0A20                     l430:	
  6232  0A20  1FD1               	btfss	___ftadd@sign,7
  6233  0A21  2A32               	goto	l1637
  6234  0A22  30FF               	movlw	255
  6235  0A23  06C7               	xorwf	___ftadd@f1,f
  6236  0A24  30FF               	movlw	255
  6237  0A25  06C8               	xorwf	___ftadd@f1+1,f
  6238  0A26  30FF               	movlw	255
  6239  0A27  06C9               	xorwf	___ftadd@f1+2,f
  6240  0A28  3001               	movlw	1
  6241  0A29  07C7               	addwf	___ftadd@f1,f
  6242  0A2A  3000               	movlw	0
  6243  0A2B  1803               	skipnc
  6244  0A2C  3001               	movlw	1
  6245  0A2D  07C8               	addwf	___ftadd@f1+1,f
  6246  0A2E  3000               	movlw	0
  6247  0A2F  1803               	skipnc
  6248  0A30  3001               	movlw	1
  6249  0A31  07C9               	addwf	___ftadd@f1+2,f
  6250  0A32                     l1637:	
  6251  0A32  1F51               	btfss	___ftadd@sign,6
  6252  0A33  2A44               	goto	l1641
  6253  0A34  30FF               	movlw	255
  6254  0A35  06CA               	xorwf	___ftadd@f2,f
  6255  0A36  30FF               	movlw	255
  6256  0A37  06CB               	xorwf	___ftadd@f2+1,f
  6257  0A38  30FF               	movlw	255
  6258  0A39  06CC               	xorwf	___ftadd@f2+2,f
  6259  0A3A  3001               	movlw	1
  6260  0A3B  07CA               	addwf	___ftadd@f2,f
  6261  0A3C  3000               	movlw	0
  6262  0A3D  1803               	skipnc
  6263  0A3E  3001               	movlw	1
  6264  0A3F  07CB               	addwf	___ftadd@f2+1,f
  6265  0A40  3000               	movlw	0
  6266  0A41  1803               	skipnc
  6267  0A42  3001               	movlw	1
  6268  0A43  07CC               	addwf	___ftadd@f2+2,f
  6269  0A44                     l1641:	
  6270  0A44  01D1               	clrf	___ftadd@sign
  6271  0A45  0847               	movf	___ftadd@f1,w
  6272  0A46  07CA               	addwf	___ftadd@f2,f
  6273  0A47  0848               	movf	___ftadd@f1+1,w
  6274  0A48  1103               	clrz
  6275  0A49  1803               	skipnc
  6276  0A4A  0A48               	incf	___ftadd@f1+1,w
  6277  0A4B  1D03               	btfss	3,2
  6278  0A4C  07CB               	addwf	___ftadd@f2+1,f
  6279  0A4D  0849               	movf	___ftadd@f1+2,w
  6280  0A4E  1103               	clrz
  6281  0A4F  1803               	skipnc
  6282  0A50  0A49               	incf	___ftadd@f1+2,w
  6283  0A51  1D03               	btfss	3,2
  6284  0A52  07CC               	addwf	___ftadd@f2+2,f
  6285  0A53  1FCC               	btfss	___ftadd@f2+2,7
  6286  0A54  2A67               	goto	l1651
  6287  0A55  30FF               	movlw	255
  6288  0A56  06CA               	xorwf	___ftadd@f2,f
  6289  0A57  30FF               	movlw	255
  6290  0A58  06CB               	xorwf	___ftadd@f2+1,f
  6291  0A59  30FF               	movlw	255
  6292  0A5A  06CC               	xorwf	___ftadd@f2+2,f
  6293  0A5B  3001               	movlw	1
  6294  0A5C  07CA               	addwf	___ftadd@f2,f
  6295  0A5D  3000               	movlw	0
  6296  0A5E  1803               	skipnc
  6297  0A5F  3001               	movlw	1
  6298  0A60  07CB               	addwf	___ftadd@f2+1,f
  6299  0A61  3000               	movlw	0
  6300  0A62  1803               	skipnc
  6301  0A63  3001               	movlw	1
  6302  0A64  07CC               	addwf	___ftadd@f2+2,f
  6303  0A65  01D1               	clrf	___ftadd@sign
  6304  0A66  0AD1               	incf	___ftadd@sign,f
  6305  0A67                     l1651:	
  6306  0A67  084A               	movf	___ftadd@f2,w
  6307  0A68  00F0               	movwf	___ftpack@arg
  6308  0A69  084B               	movf	___ftadd@f2+1,w
  6309  0A6A  00F1               	movwf	___ftpack@arg+1
  6310  0A6B  084C               	movf	___ftadd@f2+2,w
  6311  0A6C  00F2               	movwf	___ftpack@arg+2
  6312  0A6D  0853               	movf	___ftadd@exp1,w
  6313  0A6E  00CD               	movwf	??___ftadd
  6314  0A6F  084D               	movf	??___ftadd,w
  6315  0A70  00F3               	movwf	___ftpack@exp
  6316  0A71  0851               	movf	___ftadd@sign,w
  6317  0A72  00CE               	movwf	??___ftadd+1
  6318  0A73  084E               	movf	??___ftadd+1,w
  6319  0A74  00F4               	movwf	___ftpack@sign
  6320  0A75  160A  118A  26D1   	fcall	___ftpack
  6321  0A78  0870               	movf	?___ftpack,w
  6322  0A79  1283               	bcf	3,5	;RP0=0, select bank0
  6323  0A7A  1303               	bcf	3,6	;RP1=0, select bank0
  6324  0A7B  00C7               	movwf	?___ftadd
  6325  0A7C  0871               	movf	?___ftpack+1,w
  6326  0A7D  00C8               	movwf	?___ftadd+1
  6327  0A7E  0872               	movf	?___ftpack+2,w
  6328  0A7F  00C9               	movwf	?___ftadd+2
  6329  0A80  0008               	return
  6330  0A81                     __end_of___ftadd:	
  6331                           
  6332                           	psect	text18
  6333  14AF                     __ptext18:	
  6334 ;; *************** function ___ftneg *****************
  6335 ;; Defined at:
  6336 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftneg.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  f1              3    0[COMMON] float 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;		None
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  3    0[COMMON] float 
  6343 ;; Registers used:
  6344 ;;		wreg
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6350 ;;      Params:         3       0       0       0       0
  6351 ;;      Locals:         0       0       0       0       0
  6352 ;;      Temps:          0       0       0       0       0
  6353 ;;      Totals:         3       0       0       0       0
  6354 ;;Total ram usage:        3 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; This function calls:
  6357 ;;		Nothing
  6358 ;; This function is called by:
  6359 ;;		_main
  6360 ;;		_printf
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           
  6365                           ;psect for function ___ftneg
  6366  14AF                     ___ftneg:	
  6367                           
  6368                           ;incstack = 0
  6369                           ; Regs used in ___ftneg: [wreg]
  6370  14AF  0872               	movf	___ftneg@f1+2,w
  6371  14B0  0471               	iorwf	___ftneg@f1+1,w
  6372  14B1  0470               	iorwf	___ftneg@f1,w
  6373  14B2  1903               	skipnz
  6374  14B3  0008               	return
  6375  14B4  3080               	movlw	128
  6376  14B5  06F2               	xorwf	___ftneg@f1+2,f
  6377  14B6  0008               	return
  6378  14B7                     __end_of___ftneg:	
  6379                           
  6380                           	psect	text19
  6381  1616                     __ptext19:	
  6382 ;; *************** function ___ftge *****************
  6383 ;; Defined at:
  6384 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;  ff1             3    0[COMMON] float 
  6387 ;;  ff2             3    3[COMMON] float 
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;		None
  6390 ;; Return value:  Size  Location     Type
  6391 ;;		None               void
  6392 ;; Registers used:
  6393 ;;		wreg, status,2, status,0
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6399 ;;      Params:         6       0       0       0       0
  6400 ;;      Locals:         0       0       0       0       0
  6401 ;;      Temps:          6       0       0       0       0
  6402 ;;      Totals:        12       0       0       0       0
  6403 ;;Total ram usage:       12 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; This function calls:
  6406 ;;		Nothing
  6407 ;; This function is called by:
  6408 ;;		_printf
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           
  6413                           ;psect for function ___ftge
  6414  1616                     ___ftge:	
  6415                           
  6416                           ;incstack = 0
  6417                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6418  1616  1FF2               	btfss	___ftge@ff1+2,7
  6419  1617  2E3D               	goto	l1893
  6420  1618  3000               	movlw	0
  6421  1619  00F6               	movwf	??___ftge
  6422  161A  3000               	movlw	0
  6423  161B  00F7               	movwf	??___ftge+1
  6424  161C  3080               	movlw	128
  6425  161D  00F8               	movwf	??___ftge+2
  6426  161E  0970               	comf	___ftge@ff1,w
  6427  161F  00F9               	movwf	??___ftge+3
  6428  1620  0971               	comf	___ftge@ff1+1,w
  6429  1621  00FA               	movwf	??___ftge+4
  6430  1622  0972               	comf	___ftge@ff1+2,w
  6431  1623  00FB               	movwf	??___ftge+5
  6432  1624  0AF9               	incf	??___ftge+3,f
  6433  1625  1903               	skipnz
  6434  1626  0AFA               	incf	??___ftge+4,f
  6435  1627  1903               	skipnz
  6436  1628  0AFB               	incf	??___ftge+5,f
  6437  1629  0879               	movf	??___ftge+3,w
  6438  162A  07F6               	addwf	??___ftge,f
  6439  162B  087A               	movf	??___ftge+4,w
  6440  162C  1803               	skipnc
  6441  162D  0F7A               	incfsz	??___ftge+4,w
  6442  162E  2E30               	goto	u2931
  6443  162F  2E31               	goto	u2932
  6444  1630                     u2931:	
  6445  1630  07F7               	addwf	??___ftge+1,f
  6446  1631                     u2932:	
  6447  1631  087B               	movf	??___ftge+5,w
  6448  1632  1803               	skipnc
  6449  1633  0F7B               	incfsz	??___ftge+5,w
  6450  1634  2E36               	goto	u2933
  6451  1635  2E37               	goto	u2934
  6452  1636                     u2933:	
  6453  1636  07F8               	addwf	??___ftge+2,f
  6454  1637                     u2934:	
  6455  1637  0876               	movf	??___ftge,w
  6456  1638  00F0               	movwf	___ftge@ff1
  6457  1639  0877               	movf	??___ftge+1,w
  6458  163A  00F1               	movwf	___ftge@ff1+1
  6459  163B  0878               	movf	??___ftge+2,w
  6460  163C  00F2               	movwf	___ftge@ff1+2
  6461  163D                     l1893:	
  6462  163D  1FF5               	btfss	___ftge@ff2+2,7
  6463  163E  2E64               	goto	l1897
  6464  163F  3000               	movlw	0
  6465  1640  00F6               	movwf	??___ftge
  6466  1641  3000               	movlw	0
  6467  1642  00F7               	movwf	??___ftge+1
  6468  1643  3080               	movlw	128
  6469  1644  00F8               	movwf	??___ftge+2
  6470  1645  0973               	comf	___ftge@ff2,w
  6471  1646  00F9               	movwf	??___ftge+3
  6472  1647  0974               	comf	___ftge@ff2+1,w
  6473  1648  00FA               	movwf	??___ftge+4
  6474  1649  0975               	comf	___ftge@ff2+2,w
  6475  164A  00FB               	movwf	??___ftge+5
  6476  164B  0AF9               	incf	??___ftge+3,f
  6477  164C  1903               	skipnz
  6478  164D  0AFA               	incf	??___ftge+4,f
  6479  164E  1903               	skipnz
  6480  164F  0AFB               	incf	??___ftge+5,f
  6481  1650  0879               	movf	??___ftge+3,w
  6482  1651  07F6               	addwf	??___ftge,f
  6483  1652  087A               	movf	??___ftge+4,w
  6484  1653  1803               	skipnc
  6485  1654  0F7A               	incfsz	??___ftge+4,w
  6486  1655  2E57               	goto	u2951
  6487  1656  2E58               	goto	u2952
  6488  1657                     u2951:	
  6489  1657  07F7               	addwf	??___ftge+1,f
  6490  1658                     u2952:	
  6491  1658  087B               	movf	??___ftge+5,w
  6492  1659  1803               	skipnc
  6493  165A  0F7B               	incfsz	??___ftge+5,w
  6494  165B  2E5D               	goto	u2953
  6495  165C  2E5E               	goto	u2954
  6496  165D                     u2953:	
  6497  165D  07F8               	addwf	??___ftge+2,f
  6498  165E                     u2954:	
  6499  165E  0876               	movf	??___ftge,w
  6500  165F  00F3               	movwf	___ftge@ff2
  6501  1660  0877               	movf	??___ftge+1,w
  6502  1661  00F4               	movwf	___ftge@ff2+1
  6503  1662  0878               	movf	??___ftge+2,w
  6504  1663  00F5               	movwf	___ftge@ff2+2
  6505  1664                     l1897:	
  6506  1664  3080               	movlw	128
  6507  1665  06F2               	xorwf	___ftge@ff1+2,f
  6508  1666  3080               	movlw	128
  6509  1667  06F5               	xorwf	___ftge@ff2+2,f
  6510  1668  0875               	movf	___ftge@ff2+2,w
  6511  1669  0272               	subwf	___ftge@ff1+2,w
  6512  166A  1D03               	skipz
  6513  166B  0008               	return
  6514  166C  0874               	movf	___ftge@ff2+1,w
  6515  166D  0271               	subwf	___ftge@ff1+1,w
  6516  166E  1D03               	skipz
  6517  166F  0008               	return
  6518  1670  0873               	movf	___ftge@ff2,w
  6519  1671  0270               	subwf	___ftge@ff1,w
  6520  1672  0008               	return
  6521  1673                     __end_of___ftge:	
  6522                           
  6523                           	psect	text20
  6524  14A8                     __ptext20:	
  6525 ;; *************** function _iniciar_uart *****************
  6526 ;; Defined at:
  6527 ;;		line 9 in file "config.h"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;		None
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;		None
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  1    wreg      void 
  6534 ;; Registers used:
  6535 ;;		None
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6541 ;;      Params:         0       0       0       0       0
  6542 ;;      Locals:         0       0       0       0       0
  6543 ;;      Temps:          0       0       0       0       0
  6544 ;;      Totals:         0       0       0       0       0
  6545 ;;Total ram usage:        0 bytes
  6546 ;; Hardware stack levels used:    1
  6547 ;; This function calls:
  6548 ;;		Nothing
  6549 ;; This function is called by:
  6550 ;;		_main
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           
  6555                           ;psect for function _iniciar_uart
  6556  14A8                     _iniciar_uart:	
  6557                           
  6558                           ;config.h: 10: TXSTAbits.TXEN = 1;
  6559                           
  6560                           ;incstack = 0
  6561                           ; Regs used in _iniciar_uart: []
  6562  14A8  1683               	bsf	3,5	;RP0=1, select bank1
  6563  14A9  1303               	bcf	3,6	;RP1=0, select bank1
  6564  14AA  1698               	bsf	24,5	;volatile
  6565                           
  6566                           ;config.h: 11: RCSTAbits.SPEN = 1;
  6567  14AB  1283               	bcf	3,5	;RP0=0, select bank0
  6568  14AC  1303               	bcf	3,6	;RP1=0, select bank0
  6569  14AD  1798               	bsf	24,7	;volatile
  6570  14AE  0008               	return
  6571  14AF                     __end_of_iniciar_uart:	
  6572                           
  6573                           	psect	text21
  6574  000D                     __ptext21:	
  6575 ;; *************** function ___ftdiv *****************
  6576 ;; Defined at:
  6577 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;  f2              3    8[COMMON] float 
  6580 ;;  f1              3   11[COMMON] float 
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;  f3              3    5[BANK0 ] float 
  6583 ;;  sign            1    9[BANK0 ] unsigned char 
  6584 ;;  exp             1    8[BANK0 ] unsigned char 
  6585 ;;  cntr            1    4[BANK0 ] unsigned char 
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  3    8[COMMON] float 
  6588 ;; Registers used:
  6589 ;;		wreg, status,2, status,0, pclath, cstack
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6595 ;;      Params:         6       0       0       0       0
  6596 ;;      Locals:         0       6       0       0       0
  6597 ;;      Temps:          0       4       0       0       0
  6598 ;;      Totals:         6      10       0       0       0
  6599 ;;Total ram usage:       16 bytes
  6600 ;; Hardware stack levels used:    1
  6601 ;; Hardware stack levels required when called:    1
  6602 ;; This function calls:
  6603 ;;		___ftpack
  6604 ;; This function is called by:
  6605 ;;		_main
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           
  6610                           ;psect for function ___ftdiv
  6611  000D                     ___ftdiv:	
  6612                           
  6613                           ;incstack = 0
  6614                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6615  000D  087B               	movf	___ftdiv@f1,w
  6616  000E  1283               	bcf	3,5	;RP0=0, select bank0
  6617  000F  1303               	bcf	3,6	;RP1=0, select bank0
  6618  0010  00A0               	movwf	??___ftdiv
  6619  0011  087C               	movf	___ftdiv@f1+1,w
  6620  0012  00A1               	movwf	??___ftdiv+1
  6621  0013  087D               	movf	___ftdiv@f1+2,w
  6622  0014  00A2               	movwf	??___ftdiv+2
  6623  0015  1003               	clrc
  6624  0016  0D21               	rlf	??___ftdiv+1,w
  6625  0017  0D22               	rlf	??___ftdiv+2,w
  6626  0018  00A3               	movwf	??___ftdiv+3
  6627  0019  0823               	movf	??___ftdiv+3,w
  6628  001A  00A8               	movwf	___ftdiv@exp
  6629  001B  0828               	movf	___ftdiv@exp,w
  6630  001C  1D03               	btfss	3,2
  6631  001D  2825               	goto	l2177
  6632  001E  3000               	movlw	0
  6633  001F  00F8               	movwf	?___ftdiv
  6634  0020  3000               	movlw	0
  6635  0021  00F9               	movwf	?___ftdiv+1
  6636  0022  3000               	movlw	0
  6637  0023  00FA               	movwf	?___ftdiv+2
  6638  0024  0008               	return
  6639  0025                     l2177:	
  6640  0025  0878               	movf	___ftdiv@f2,w
  6641  0026  00A0               	movwf	??___ftdiv
  6642  0027  0879               	movf	___ftdiv@f2+1,w
  6643  0028  00A1               	movwf	??___ftdiv+1
  6644  0029  087A               	movf	___ftdiv@f2+2,w
  6645  002A  00A2               	movwf	??___ftdiv+2
  6646  002B  1003               	clrc
  6647  002C  0D21               	rlf	??___ftdiv+1,w
  6648  002D  0D22               	rlf	??___ftdiv+2,w
  6649  002E  00A3               	movwf	??___ftdiv+3
  6650  002F  0823               	movf	??___ftdiv+3,w
  6651  0030  00A9               	movwf	___ftdiv@sign
  6652  0031  0829               	movf	___ftdiv@sign,w
  6653  0032  1D03               	btfss	3,2
  6654  0033  283B               	goto	l2183
  6655  0034  3000               	movlw	0
  6656  0035  00F8               	movwf	?___ftdiv
  6657  0036  3000               	movlw	0
  6658  0037  00F9               	movwf	?___ftdiv+1
  6659  0038  3000               	movlw	0
  6660  0039  00FA               	movwf	?___ftdiv+2
  6661  003A  0008               	return
  6662  003B                     l2183:	
  6663  003B  3000               	movlw	0
  6664  003C  00A5               	movwf	___ftdiv@f3
  6665  003D  3000               	movlw	0
  6666  003E  00A6               	movwf	___ftdiv@f3+1
  6667  003F  3000               	movlw	0
  6668  0040  00A7               	movwf	___ftdiv@f3+2
  6669  0041  3089               	movlw	137
  6670  0042  0729               	addwf	___ftdiv@sign,w
  6671  0043  00A0               	movwf	??___ftdiv
  6672  0044  0820               	movf	??___ftdiv,w
  6673  0045  02A8               	subwf	___ftdiv@exp,f
  6674  0046  087B               	movf	___ftdiv@f1,w
  6675  0047  00A0               	movwf	??___ftdiv
  6676  0048  087C               	movf	___ftdiv@f1+1,w
  6677  0049  00A1               	movwf	??___ftdiv+1
  6678  004A  087D               	movf	___ftdiv@f1+2,w
  6679  004B  00A2               	movwf	??___ftdiv+2
  6680  004C  3010               	movlw	16
  6681  004D                     u3565:	
  6682  004D  1003               	clrc
  6683  004E  0CA2               	rrf	??___ftdiv+2,f
  6684  004F  0CA1               	rrf	??___ftdiv+1,f
  6685  0050  0CA0               	rrf	??___ftdiv,f
  6686  0051  3EFF               	addlw	-1
  6687  0052  1D03               	skipz
  6688  0053  284D               	goto	u3565
  6689  0054  0820               	movf	??___ftdiv,w
  6690  0055  00A3               	movwf	??___ftdiv+3
  6691  0056  0823               	movf	??___ftdiv+3,w
  6692  0057  00A9               	movwf	___ftdiv@sign
  6693  0058  0878               	movf	___ftdiv@f2,w
  6694  0059  00A0               	movwf	??___ftdiv
  6695  005A  0879               	movf	___ftdiv@f2+1,w
  6696  005B  00A1               	movwf	??___ftdiv+1
  6697  005C  087A               	movf	___ftdiv@f2+2,w
  6698  005D  00A2               	movwf	??___ftdiv+2
  6699  005E  3010               	movlw	16
  6700  005F                     u3575:	
  6701  005F  1003               	clrc
  6702  0060  0CA2               	rrf	??___ftdiv+2,f
  6703  0061  0CA1               	rrf	??___ftdiv+1,f
  6704  0062  0CA0               	rrf	??___ftdiv,f
  6705  0063  3EFF               	addlw	-1
  6706  0064  1D03               	skipz
  6707  0065  285F               	goto	u3575
  6708  0066  0820               	movf	??___ftdiv,w
  6709  0067  00A3               	movwf	??___ftdiv+3
  6710  0068  0823               	movf	??___ftdiv+3,w
  6711  0069  06A9               	xorwf	___ftdiv@sign,f
  6712  006A  3080               	movlw	128
  6713  006B  00A0               	movwf	??___ftdiv
  6714  006C  0820               	movf	??___ftdiv,w
  6715  006D  05A9               	andwf	___ftdiv@sign,f
  6716  006E  17FC               	bsf	___ftdiv@f1+1,7
  6717  006F  30FF               	movlw	255
  6718  0070  05FB               	andwf	___ftdiv@f1,f
  6719  0071  30FF               	movlw	255
  6720  0072  05FC               	andwf	___ftdiv@f1+1,f
  6721  0073  3000               	movlw	0
  6722  0074  05FD               	andwf	___ftdiv@f1+2,f
  6723  0075  17F9               	bsf	___ftdiv@f2+1,7
  6724  0076  30FF               	movlw	255
  6725  0077  05F8               	andwf	___ftdiv@f2,f
  6726  0078  30FF               	movlw	255
  6727  0079  05F9               	andwf	___ftdiv@f2+1,f
  6728  007A  3000               	movlw	0
  6729  007B  05FA               	andwf	___ftdiv@f2+2,f
  6730  007C  3018               	movlw	24
  6731  007D  00A0               	movwf	??___ftdiv
  6732  007E  0820               	movf	??___ftdiv,w
  6733  007F  00A4               	movwf	___ftdiv@cntr
  6734  0080                     l2197:	
  6735  0080  3001               	movlw	1
  6736  0081                     u3585:	
  6737  0081  1003               	clrc
  6738  0082  0DA5               	rlf	___ftdiv@f3,f
  6739  0083  0DA6               	rlf	___ftdiv@f3+1,f
  6740  0084  0DA7               	rlf	___ftdiv@f3+2,f
  6741  0085  3EFF               	addlw	-1
  6742  0086  1D03               	skipz
  6743  0087  2881               	goto	u3585
  6744  0088  087A               	movf	___ftdiv@f2+2,w
  6745  0089  027D               	subwf	___ftdiv@f1+2,w
  6746  008A  1D03               	skipz
  6747  008B  2892               	goto	u3595
  6748  008C  0879               	movf	___ftdiv@f2+1,w
  6749  008D  027C               	subwf	___ftdiv@f1+1,w
  6750  008E  1D03               	skipz
  6751  008F  2892               	goto	u3595
  6752  0090  0878               	movf	___ftdiv@f2,w
  6753  0091  027B               	subwf	___ftdiv@f1,w
  6754  0092                     u3595:	
  6755  0092  1C03               	skipc
  6756  0093  289F               	goto	l2205
  6757  0094  0878               	movf	___ftdiv@f2,w
  6758  0095  02FB               	subwf	___ftdiv@f1,f
  6759  0096  0879               	movf	___ftdiv@f2+1,w
  6760  0097  1C03               	skipc
  6761  0098  0F79               	incfsz	___ftdiv@f2+1,w
  6762  0099  02FC               	subwf	___ftdiv@f1+1,f
  6763  009A  087A               	movf	___ftdiv@f2+2,w
  6764  009B  1C03               	skipc
  6765  009C  0A7A               	incf	___ftdiv@f2+2,w
  6766  009D  02FD               	subwf	___ftdiv@f1+2,f
  6767  009E  1425               	bsf	___ftdiv@f3,0
  6768  009F                     l2205:	
  6769  009F  3001               	movlw	1
  6770  00A0                     u3605:	
  6771  00A0  1003               	clrc
  6772  00A1  0DFB               	rlf	___ftdiv@f1,f
  6773  00A2  0DFC               	rlf	___ftdiv@f1+1,f
  6774  00A3  0DFD               	rlf	___ftdiv@f1+2,f
  6775  00A4  3EFF               	addlw	-1
  6776  00A5  1D03               	skipz
  6777  00A6  28A0               	goto	u3605
  6778  00A7  3001               	movlw	1
  6779  00A8  02A4               	subwf	___ftdiv@cntr,f
  6780  00A9  1D03               	btfss	3,2
  6781  00AA  2880               	goto	l2197
  6782  00AB  0825               	movf	___ftdiv@f3,w
  6783  00AC  00F0               	movwf	___ftpack@arg
  6784  00AD  0826               	movf	___ftdiv@f3+1,w
  6785  00AE  00F1               	movwf	___ftpack@arg+1
  6786  00AF  0827               	movf	___ftdiv@f3+2,w
  6787  00B0  00F2               	movwf	___ftpack@arg+2
  6788  00B1  0828               	movf	___ftdiv@exp,w
  6789  00B2  00A0               	movwf	??___ftdiv
  6790  00B3  0820               	movf	??___ftdiv,w
  6791  00B4  00F3               	movwf	___ftpack@exp
  6792  00B5  0829               	movf	___ftdiv@sign,w
  6793  00B6  00A1               	movwf	??___ftdiv+1
  6794  00B7  0821               	movf	??___ftdiv+1,w
  6795  00B8  00F4               	movwf	___ftpack@sign
  6796  00B9  160A  118A  26D1   	fcall	___ftpack
  6797  00BC  0870               	movf	?___ftpack,w
  6798  00BD  00F8               	movwf	?___ftdiv
  6799  00BE  0871               	movf	?___ftpack+1,w
  6800  00BF  00F9               	movwf	?___ftdiv+1
  6801  00C0  0872               	movf	?___ftpack+2,w
  6802  00C1  00FA               	movwf	?___ftdiv+2
  6803  00C2  0008               	return
  6804  00C3                     __end_of___ftdiv:	
  6805                           
  6806                           	psect	text22
  6807  16D1                     __ptext22:	
  6808 ;; *************** function ___ftpack *****************
  6809 ;; Defined at:
  6810 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;  arg             3    0[COMMON] unsigned um
  6813 ;;  exp             1    3[COMMON] unsigned char 
  6814 ;;  sign            1    4[COMMON] unsigned char 
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;		None
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  3    0[COMMON] float 
  6819 ;; Registers used:
  6820 ;;		wreg, status,2, status,0
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6826 ;;      Params:         5       0       0       0       0
  6827 ;;      Locals:         0       0       0       0       0
  6828 ;;      Temps:          3       0       0       0       0
  6829 ;;      Totals:         8       0       0       0       0
  6830 ;;Total ram usage:        8 bytes
  6831 ;; Hardware stack levels used:    1
  6832 ;; This function calls:
  6833 ;;		Nothing
  6834 ;; This function is called by:
  6835 ;;		___ftadd
  6836 ;;		___ftdiv
  6837 ;;		___ftmul
  6838 ;;		___lltoft
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           
  6843                           ;psect for function ___ftpack
  6844  16D1                     ___ftpack:	
  6845                           
  6846                           ;incstack = 0
  6847                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6848  16D1  0873               	movf	___ftpack@exp,w
  6849  16D2  1903               	btfsc	3,2
  6850  16D3  2ED9               	goto	l1461
  6851  16D4  0872               	movf	___ftpack@arg+2,w
  6852  16D5  0471               	iorwf	___ftpack@arg+1,w
  6853  16D6  0470               	iorwf	___ftpack@arg,w
  6854  16D7  1D03               	skipz
  6855  16D8  2EEC               	goto	l1467
  6856  16D9                     l1461:	
  6857  16D9  3000               	movlw	0
  6858  16DA  00F0               	movwf	?___ftpack
  6859  16DB  3000               	movlw	0
  6860  16DC  00F1               	movwf	?___ftpack+1
  6861  16DD  3000               	movlw	0
  6862  16DE  00F2               	movwf	?___ftpack+2
  6863  16DF  0008               	return
  6864  16E0                     l1465:	
  6865  16E0  3001               	movlw	1
  6866  16E1  00F5               	movwf	??___ftpack
  6867  16E2  0875               	movf	??___ftpack,w
  6868  16E3  07F3               	addwf	___ftpack@exp,f
  6869  16E4  3001               	movlw	1
  6870  16E5                     u1865:	
  6871  16E5  1003               	clrc
  6872  16E6  0CF2               	rrf	___ftpack@arg+2,f
  6873  16E7  0CF1               	rrf	___ftpack@arg+1,f
  6874  16E8  0CF0               	rrf	___ftpack@arg,f
  6875  16E9  3EFF               	addlw	-1
  6876  16EA  1D03               	skipz
  6877  16EB  2EE5               	goto	u1865
  6878  16EC                     l1467:	
  6879  16EC  30FE               	movlw	254
  6880  16ED  0572               	andwf	___ftpack@arg+2,w
  6881  16EE  1903               	btfsc	3,2
  6882  16EF  2F07               	goto	l399
  6883  16F0  2EE0               	goto	l1465
  6884  16F1                     l1469:	
  6885  16F1  3001               	movlw	1
  6886  16F2  00F5               	movwf	??___ftpack
  6887  16F3  0875               	movf	??___ftpack,w
  6888  16F4  07F3               	addwf	___ftpack@exp,f
  6889  16F5  3001               	movlw	1
  6890  16F6  07F0               	addwf	___ftpack@arg,f
  6891  16F7  3000               	movlw	0
  6892  16F8  1803               	skipnc
  6893  16F9  3001               	movlw	1
  6894  16FA  07F1               	addwf	___ftpack@arg+1,f
  6895  16FB  3000               	movlw	0
  6896  16FC  1803               	skipnc
  6897  16FD  3001               	movlw	1
  6898  16FE  07F2               	addwf	___ftpack@arg+2,f
  6899  16FF  3001               	movlw	1
  6900  1700                     u1885:	
  6901  1700  1003               	clrc
  6902  1701  0CF2               	rrf	___ftpack@arg+2,f
  6903  1702  0CF1               	rrf	___ftpack@arg+1,f
  6904  1703  0CF0               	rrf	___ftpack@arg,f
  6905  1704  3EFF               	addlw	-1
  6906  1705  1D03               	skipz
  6907  1706  2F00               	goto	u1885
  6908  1707                     l399:	
  6909  1707  30FF               	movlw	255
  6910  1708  0572               	andwf	___ftpack@arg+2,w
  6911  1709  1903               	btfsc	3,2
  6912  170A  2F16               	goto	l1477
  6913  170B  2EF1               	goto	l1469
  6914  170C                     l1475:	
  6915  170C  3001               	movlw	1
  6916  170D  02F3               	subwf	___ftpack@exp,f
  6917  170E  3001               	movlw	1
  6918  170F                     u1905:	
  6919  170F  1003               	clrc
  6920  1710  0DF0               	rlf	___ftpack@arg,f
  6921  1711  0DF1               	rlf	___ftpack@arg+1,f
  6922  1712  0DF2               	rlf	___ftpack@arg+2,f
  6923  1713  3EFF               	addlw	-1
  6924  1714  1D03               	skipz
  6925  1715  2F0F               	goto	u1905
  6926  1716                     l1477:	
  6927  1716  1BF1               	btfsc	___ftpack@arg+1,7
  6928  1717  2F1C               	goto	l406
  6929  1718  3002               	movlw	2
  6930  1719  0273               	subwf	___ftpack@exp,w
  6931  171A  1803               	skipnc
  6932  171B  2F0C               	goto	l1475
  6933  171C                     l406:	
  6934  171C  1873               	btfsc	___ftpack@exp,0
  6935  171D  2F24               	goto	l407
  6936  171E  30FF               	movlw	255
  6937  171F  05F0               	andwf	___ftpack@arg,f
  6938  1720  307F               	movlw	127
  6939  1721  05F1               	andwf	___ftpack@arg+1,f
  6940  1722  30FF               	movlw	255
  6941  1723  05F2               	andwf	___ftpack@arg+2,f
  6942  1724                     l407:	
  6943  1724  1003               	clrc
  6944  1725  0CF3               	rrf	___ftpack@exp,f
  6945  1726  0873               	movf	___ftpack@exp,w
  6946  1727  00F5               	movwf	??___ftpack
  6947  1728  01F6               	clrf	??___ftpack+1
  6948  1729  01F7               	clrf	??___ftpack+2
  6949  172A  3010               	movlw	16
  6950  172B                     u1945:	
  6951  172B  1003               	clrc
  6952  172C  0DF5               	rlf	??___ftpack,f
  6953  172D  0DF6               	rlf	??___ftpack+1,f
  6954  172E  0DF7               	rlf	??___ftpack+2,f
  6955  172F  3EFF               	addlw	-1
  6956  1730  1D03               	skipz
  6957  1731  2F2B               	goto	u1945
  6958  1732  0875               	movf	??___ftpack,w
  6959  1733  04F0               	iorwf	___ftpack@arg,f
  6960  1734  0876               	movf	??___ftpack+1,w
  6961  1735  04F1               	iorwf	___ftpack@arg+1,f
  6962  1736  0877               	movf	??___ftpack+2,w
  6963  1737  04F2               	iorwf	___ftpack@arg+2,f
  6964  1738  0874               	movf	___ftpack@sign,w
  6965  1739  1903               	btfsc	3,2
  6966  173A  0008               	return
  6967  173B  17F2               	bsf	___ftpack@arg+2,7
  6968  173C  0008               	return
  6969  173D                     __end_of___ftpack:	
  6970  007E                     btemp	set	126	;btemp
  6971  007E                     wtemp0	set	126


Data Sizes:
    Strings     384
    Constant    118
    Data        3
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     69      78
    BANK1            80     22      34
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_12(CODE[20]), STR_11(CODE[36]), STR_10(CODE[39]), STR_9(CODE[42]), 
		 -> STR_8(CODE[33]), STR_7(CODE[32]), STR_6(CODE[38]), STR_5(CODE[36]), 
		 -> STR_4(CODE[36]), STR_3(CODE[36]), STR_2(CODE[36]), STR_1(CODE[38]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->___ftdiv
    _printf->___lldiv
    _printf->___lltoft
    _printf->__div_to_l_
    _scale->___bmul
    _fround->___bmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___ftsub->___lltoft
    ___ftdiv->___ftpack

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   42386
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                       _iniciar_uart
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              40    35      5   33442
                                             58 BANK0     11     6      5
                                              0 BANK1     22    22      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               12     9      3    7282
                                             23 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              19    16      3    7084
                                             23 BANK0     16    13      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3623
                                              7 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                             12 COMMON     1     1      0
                                              4 BANK0      3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1250
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1360
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1170
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1829
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     477
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             32 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3144
                                             52 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2971
                                             39 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     151
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     560
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (1) _iniciar_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2199
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftadd
     ___ftneg (ARG)
     ___ftpack (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
   ___ftdiv
     ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___ftpack (ARG)
   ___ftneg
   _iniciar_uart
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftneg (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftneg (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     16      22       7       42.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     45      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7E      12        0.0%
ABS                  0      0      7E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Tue Aug 29 23:06:06 2017

                      _a 006B                        _b 0068                        pc 0002  
         ___bmul@product 0025                       l19 0006                       l95 02A7  
           ___awdiv@sign 0021                       fsr 0004      ___wmul@multiplicand 0072  
           ___ftadd@exp1 0053             ___ftadd@exp2 0052             ___ftadd@sign 0051  
                    l221 14E2                      l137 07D5                      l406 171C  
                    l430 0A20                      l407 1724                      l507 088B  
                    l456 176F                      l466 17F4                      l387 0BA7  
                    l379 0B5E                      l399 1707                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076             ___ftdiv@cntr 0024  
           ___ftdiv@sign 0029                     l2003 15A5                     l2007 15B2  
                   l2015 14FD                     l2103 04EB                     l2017 150F  
                   l2113 0560                     l2033 02A9                     l2131 063C  
                   l2107 055A                     l2035 02C5                     l2205 009F  
                   l2141 0664                     l2029 02A2                     l1511 15C7  
                   l2135 064A                     l2119 05B4                     l1601 09B7  
                   l2129 05CA                     l2081 0454                     l2073 03F1  
                   l2065 0384                     l2049 031A                     l2217 0BBA  
                   l2163 07B7                     l2147 068A                     l2251 0CDD  
                   l2243 0C9F                     l1461 16D9                     l1621 09F2  
                   l1613 09D1                     l1517 15D2                     l2093 04A9  
                   l2077 040E                     l2165 07BC                     l2261 0D29  
                   l2183 003B                     l1631 0A10                     l1623 09F7  
                   l1543 1611                     l1535 15FE                     l1527 15DA  
                   l2159 07A9                     l2247 0CBE                     l1465 16E0  
                   l2177 0025                     l1641 0A44                     l1633 0A1C  
                   l1625 09FB                     l1529 15E8                     l2089 0492  
                   l2169 027D                     l2257 0CF0                     l1475 170C  
                   l1467 16EC                     l1651 0A67                     l1619 09E6  
                   l1811 17DC                     l1539 1609                     l1555 152E  
                   l1491 0808                     l1477 1716                     l1469 16F1  
                   l2197 0080                     l1637 0A32                     l1581 156A  
                   l1573 1557                     l1661 08BD                     l1591 09A1  
                   l1567 153B                     l1559 1535                     l1495 080E  
                   l1727 023F                     l1719 01AD                     l1743 0E05  
                   l1921 14C0                     l1817 17E9                     l1809 17CC  
                   l1569 1549                     l1577 1562                     l1761 0F67  
                   l1753 0E9E                     l1595 09A8                     l1931 0831  
                   l1835 0AC1                     l1819 17F7                     l1691 093A  
                   l1683 0922                     l1667 08D3                     l1861 0B7F  
                   l1845 0B08                     l1829 0AA2                     l1749 0E7B  
                   l1951 0873                     l1871 0BAA                     l1863 0B8F  
                   l1791 1790                     l1695 094A                     l1679 0912  
                   l1767 0FDD                     l1777 1757                     l1963 089C  
                   l1893 163D                     l1957 0880                     l1949 0863  
                   l1973 1683                     l1877 14DA                     l1869 0B9C  
                   l1959 088E                     l1983 16BB                     l1975 1693  
                   l1799 17B0                     l1897 1664                     l1987 16C8  
                   l1997 1577                     l1999 1587                     STR_1 10D9  
                   STR_2 1123                     STR_3 1147                     STR_4 10FF  
                   STR_5 116B                     STR_6 10D9                     STR_7 11D4  
                   STR_8 11B3                     STR_9 1088                     u2015 15DD  
                   u2035 15E9                     u2115 153E                     u3005 0838  
                   u2045 15F5                     u2055 15FF                     u2135 154F  
                   u3105 1687                     u2145 1558                     u3035 0864  
                   u2325 09FC                     u3125 1695                     u3205 15A6  
                   u3135 16AA                     u2265 09D2                     u3065 0882  
                   u3145 16BC                     u3225 1502                     u2355 0A11  
                   u2435 08DF                     u2525 094B                     u2445 08F1  
                   u3405 05A6                     u3325 0419                     u2295 09E7  
                   u3175 157B                     u2535 0953                     u3335 045F  
                   u1905 170F                     u3195 1595                     u2715 17CD  
                   u2475 0923                     u3435 05DC             printf@tmpval 00AE  
                   u3605 00A0                     u2485 092B                     u3365 0490  
                   u3285 0334                     u2655 1792                     u3455 0653  
                   u1945 172B                     u1865 16E5                     u2905 14EA  
                   u2745 17EB                     u2665 17A3                     u3465 0660  
                   u2931 1630                     u2835 0B80                     u2675 17B1  
                   u3395 0565                     u2932 1631                     u1885 1700  
                   u3565 004D                     u2933 1636                     u3485 0700  
                   u2934 1637                     u3575 005F                     u2951 1657  
                   u3495 076B                     u2952 1658                     u3585 0081  
                   u2953 165D                     u2865 0B9E                     u2785 0B0A  
                   u2954 165E                     u3595 0092                     u2795 0B39  
                   u2895 14E3                     _main 0BB3             ___ftpack@arg 0070  
           ___ftpack@exp 0073                     _suma 0065                     btemp 007E  
                   start 0000        ___bmul@multiplier 0026             ___ftmul@cntr 0035  
           ___ftmul@sign 0036             ___fttol@exp1 004D             ___fttol@lval 0049  
                  ?_main 0070          __end_of___awdiv 1616          __end_of___ftadd 0A81  
                  STR_10 10B2                    STR_11 118F                    STR_12 11F4  
        __end_of___awmod 156F          __end_of___ftdiv 00C3          __end_of___ftneg 14B7  
        __end_of___lldiv 16D1          __end_of___ftmul 0978          ___awdiv@divisor 0077  
        __end_of___llmod 15BB          __end_of___ftsub 14D8          __end_of___fttol 08A5  
        ___awdiv@counter 0020                    _PORTB 0006                    _TRISB 0086  
                  _TXREG 0019             ___lltoft@exp 007D          __end_of_dpowers 103A  
                  _scale 0D35                    _resta 00BC            ___ftpack@sign 0074  
                  _putch 0005                    pclath 000A                    status 0003  
                  wtemp0 007E            ?_iniciar_uart 0070          __initialization 07D6  
           __end_of_main 0D35                   ??_main 007E            ___fttol@sign1 0048  
   __size_of__tdiv_to_l_ 00C3         ___llmod@dividend 0074                   ?_scale 0037  
       ___awdiv@dividend 0079                   ?_putch 0070         __end_of___ftpack 173D  
       __end_of___lltoft 1524           ??_iniciar_uart 0070         __end_of__powers_ 1061  
                 ___bmul 0804                   ___ftge 1616                   ___wmul 14D8  
              ??___awdiv 007B                ??___ftadd 004D                ??___awmod 0074  
              ??___ftdiv 0020                ??___ftneg 0073                ??___lldiv 0078  
              ??___ftmul 002D                ??___llmod 0078                ??___ftsub 007E  
              ??___fttol 0044                   _fround 00C3         ___awdiv@quotient 0022  
        ___awmod@divisor 0070          ___awmod@counter 0075                   _printf 0275  
  ___ftmul@f3_as_product 0032  __end_of__initialization 07FC               ___ftadd@f1 0047  
             ___ftadd@f2 004A               ___ftge@ff1 0070               ___ftge@ff2 0073  
             ___ftdiv@f1 007B               ___ftdiv@f2 0078               ___ftdiv@f3 0025  
             ___ftneg@f1 0070      ___bmul@multiplicand 0024               ___ftmul@f1 0027  
             ___ftmul@f2 002A               ___ftsub@f1 0057               ___ftsub@f2 0054  
             ___fttol@f1 0040           __pcstackCOMMON 0070             __pidataBANK0 0801  
             ___lltoft@c 0078            __end_of_scale 1000            __end_of_putch 000D  
             __div_to_l_ 0A81          __div_to_l_@exp1 0025          __div_to_l_@cntr 0024  
                ??_scale 003A          __div_to_l_@quot 0020                  ??_putch 0070  
             __pbssBANK0 0065               __pbssBANK1 00B6            __div_to_l_@f1 0070  
          __div_to_l_@f2 0073               __pmaintext 0BB3                  ?___bmul 0024  
                ?___ftge 0070                  ?___wmul 0070                  ?_fround 0037  
              ?___ftpack 0070                  ?_printf 005A                ?___lltoft 0078  
   __end_of_iniciar_uart 14AF               __stringtab 1000        __end_of__npowers_ 1088  
        __size_of___bmul 0013          __size_of___ftge 005D                  ___awdiv 15BB  
                ___ftadd 0978                  ___awmod 1524                  ___ftdiv 000D  
                ___ftneg 14AF                  ___lldiv 1673          __size_of___wmul 0021  
                ___ftmul 08A5                  ___llmod 156F                  ___ftsub 14B7  
                ___fttol 0817               _fround$660 0043               _fround$661 0040  
             ??___ftpack 0075          __size_of_fround 01B2               ??___lltoft 007C  
                __ptext1 0275                  __ptext2 0D35                  __ptext3 0005  
                __ptext4 00C3                  __ptext5 08A5                  __ptext6 0804  
                __ptext7 1524                  __ptext8 15BB                  __ptext9 173D  
        __size_of_printf 0561              ?__div_to_l_ 0070                  _dpowers 1012  
       ___awmod@dividend 0072     end_of_initialization 07FC          ___lldiv@divisor 0070  
        ___lldiv@counter 007D                _RCSTAbits 0018                  printf@c 00B5  
                printf@f 005A             __pstringtext 1000           __tdiv_to_l_@f1 0070  
         __tdiv_to_l_@f2 0073               _printf$663 00A0            ??__tdiv_to_l_ 0076  
              _PORTBbits 0006              ___ftdiv@exp 0028                _TXSTAbits 0098  
    __size_of__div_to_l_ 0132              ___ftmul@exp 0031           __end_of___bmul 0817  
         __end_of___ftge 1673           __end_of___wmul 14F9    __size_of_iniciar_uart 0007  
         __end_of_fround 0275           __end_of_printf 07D6      start_initialization 07D6  
    __end_of__tdiv_to_l_ 1800          ___llmod@divisor 0070          ___llmod@counter 0079  
           _iniciar_uart 14A8                 ??___bmul 007C                 ??___ftge 0076  
               ??___wmul 0074              __pdataBANK0 006B                 ??_fround 003A  
               ??_printf 005F               fround@prec 0046        __size_of___ftpack 006C  
      __size_of___lltoft 002B                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00A0                 ?___awdiv 0077                 ?___ftadd 0047  
               ?___awmod 0070                 ?___ftdiv 0078                 ?___ftneg 0070  
               ?___lldiv 0070                 ?___ftmul 0027                 ?___llmod 0070  
               ?___ftsub 0054                __npowers_ 1061                 ?___fttol 0040  
            __tdiv_to_l_ 173D             ??__div_to_l_ 0076                _scale$662 003C  
         __size_of_scale 02CB           __size_of_putch 0008           ___wmul@product 0074  
               _PIR1bits 000C       __end_of__div_to_l_ 0BB3                _resultado 00BF  
            __stringbase 1012        ___wmul@multiplier 0070               printf@flag 00A4  
             printf@fval 00B2               printf@prec 00A6         __size_of___awdiv 005B  
       __size_of___ftadd 0109         __size_of___awmod 004B         __size_of___ftdiv 00B6  
       __size_of___ftneg 0008         __size_of___lldiv 005E         __size_of___ftmul 00D3  
       __size_of___llmod 004C         __size_of___ftsub 0021         __size_of___fttol 008E  
               ___ftpack 16D1       __end_of__stringtab 1012                 ___lltoft 14F9  
               __ptext10 0A81                 __ptext11 14D8                 __ptext20 14A8  
               __ptext12 14F9                 __ptext21 000D                 __ptext13 156F  
               __ptext22 16D1                 __ptext14 1673                 __ptext15 0817  
               __ptext16 14B7                 __ptext17 0978                 __ptext18 14AF  
               __ptext19 1616                 __powers_ 103A           _multiplicacion 00B9  
               _division 00B6            __size_of_main 0182                printf@exp 00AC  
              printf@val 00A8                putch@dato 0070                 scale@scl 003F  
       __tdiv_to_l_@exp1 0025         __tdiv_to_l_@cntr 0024         __tdiv_to_l_@quot 0020  
       ___lldiv@dividend 0074                stringcode 100A                 printf@ap 00A3  
           ?__tdiv_to_l_ 0070         ___lldiv@quotient 0079                 stringtab 1000  
