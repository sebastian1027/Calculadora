

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sun Sep 03 09:40:10 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 1.43
    39                           ; Generated 25/07/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150                           
   151                           	psect	idataBANK0
   152  0800                     __pidataBANK0:	
   153                           
   154                           ;initializer for _a
   155  0800  3400               	retlw	0
   156  0801  3420               	retlw	32
   157  0802  3441               	retlw	65
   158                           
   159                           	psect	stringtext
   160  1000                     __pstringtext:	
   161  1000                     stringtab:	
   162  1000                     __stringtab:	
   163                           
   164                           ;	String table - string pointers are 2 bytes each
   165  1000  1BFF               	btfsc	btemp+1,7
   166  1001  280A               	ljmp	stringcode
   167  1002  1383               	bcf	3,7
   168  1003  187F               	btfsc	btemp+1,0
   169  1004  1783               	bsf	3,7
   170  1005  0800               	movf	0,w
   171  1006  0A84               	incf	4,f
   172  1007  1903               	skipnz
   173  1008  0AFF               	incf	btemp+1,f
   174  1009  0008               	return
   175  100A                     stringcode:	
   176  100A  087F               	movf	btemp+1,w
   177  100B  397F               	andlw	127
   178  100C  008A               	movwf	10
   179  100D  0804               	movf	4,w
   180  100E  0A84               	incf	4,f
   181  100F  1903               	skipnz
   182  1010  0AFF               	incf	btemp+1,f
   183  1011  0082               	movwf	2
   184  1012                     __stringbase:	
   185  1012                     __end_of__stringtab:	
   186  1012                     _dpowers:	
   187  1012  3401               	retlw	1
   188  1013  3400               	retlw	0
   189  1014  3400               	retlw	0
   190  1015  3400               	retlw	0
   191  1016  340A               	retlw	10
   192  1017  3400               	retlw	0
   193  1018  3400               	retlw	0
   194  1019  3400               	retlw	0
   195  101A  3464               	retlw	100
   196  101B  3400               	retlw	0
   197  101C  3400               	retlw	0
   198  101D  3400               	retlw	0
   199  101E  34E8               	retlw	232
   200  101F  3403               	retlw	3
   201  1020  3400               	retlw	0
   202  1021  3400               	retlw	0
   203  1022  3410               	retlw	16
   204  1023  3427               	retlw	39
   205  1024  3400               	retlw	0
   206  1025  3400               	retlw	0
   207  1026  34A0               	retlw	160
   208  1027  3486               	retlw	134
   209  1028  3401               	retlw	1
   210  1029  3400               	retlw	0
   211  102A  3440               	retlw	64
   212  102B  3442               	retlw	66
   213  102C  340F               	retlw	15
   214  102D  3400               	retlw	0
   215  102E  3480               	retlw	128
   216  102F  3496               	retlw	150
   217  1030  3498               	retlw	152
   218  1031  3400               	retlw	0
   219  1032  3400               	retlw	0
   220  1033  34E1               	retlw	225
   221  1034  34F5               	retlw	245
   222  1035  3405               	retlw	5
   223  1036  3400               	retlw	0
   224  1037  34CA               	retlw	202
   225  1038  349A               	retlw	154
   226  1039  343B               	retlw	59
   227  103A                     __end_of_dpowers:	
   228  103A                     __powers_:	
   229  103A  3400               	retlw	0
   230  103B  3480               	retlw	128
   231  103C  343F               	retlw	63
   232  103D  3400               	retlw	0
   233  103E  3420               	retlw	32
   234  103F  3441               	retlw	65
   235  1040  3400               	retlw	0
   236  1041  34C8               	retlw	200
   237  1042  3442               	retlw	66
   238  1043  3400               	retlw	0
   239  1044  347A               	retlw	122
   240  1045  3444               	retlw	68
   241  1046  3440               	retlw	64
   242  1047  341C               	retlw	28
   243  1048  3446               	retlw	70
   244  1049  3450               	retlw	80
   245  104A  34C3               	retlw	195
   246  104B  3447               	retlw	71
   247  104C  3424               	retlw	36
   248  104D  3474               	retlw	116
   249  104E  3449               	retlw	73
   250  104F  3497               	retlw	151
   251  1050  3418               	retlw	24
   252  1051  344B               	retlw	75
   253  1052  34BC               	retlw	188
   254  1053  34BE               	retlw	190
   255  1054  344C               	retlw	76
   256  1055  346B               	retlw	107
   257  1056  346E               	retlw	110
   258  1057  344E               	retlw	78
   259  1058  3403               	retlw	3
   260  1059  3415               	retlw	21
   261  105A  3450               	retlw	80
   262  105B  3479               	retlw	121
   263  105C  34AD               	retlw	173
   264  105D  3460               	retlw	96
   265  105E  34F3               	retlw	243
   266  105F  3449               	retlw	73
   267  1060  3471               	retlw	113
   268  1061                     __end_of__powers_:	
   269  1061                     __npowers_:	
   270  1061  3400               	retlw	0
   271  1062  3480               	retlw	128
   272  1063  343F               	retlw	63
   273  1064  34CD               	retlw	205
   274  1065  34CC               	retlw	204
   275  1066  343D               	retlw	61
   276  1067  34D7               	retlw	215
   277  1068  3423               	retlw	35
   278  1069  343C               	retlw	60
   279  106A  3412               	retlw	18
   280  106B  3483               	retlw	131
   281  106C  343A               	retlw	58
   282  106D  34B7               	retlw	183
   283  106E  34D1               	retlw	209
   284  106F  3438               	retlw	56
   285  1070  34C6               	retlw	198
   286  1071  3427               	retlw	39
   287  1072  3437               	retlw	55
   288  1073  3438               	retlw	56
   289  1074  3486               	retlw	134
   290  1075  3435               	retlw	53
   291  1076  34C0               	retlw	192
   292  1077  34D6               	retlw	214
   293  1078  3433               	retlw	51
   294  1079  34CC               	retlw	204
   295  107A  342B               	retlw	43
   296  107B  3432               	retlw	50
   297  107C  3470               	retlw	112
   298  107D  3489               	retlw	137
   299  107E  3430               	retlw	48
   300  107F  34E7               	retlw	231
   301  1080  34DB               	retlw	219
   302  1081  342E               	retlw	46
   303  1082  34E5               	retlw	229
   304  1083  343C               	retlw	60
   305  1084  341E               	retlw	30
   306  1085  3442               	retlw	66
   307  1086  34A2               	retlw	162
   308  1087  340D               	retlw	13
   309  1088                     __end_of__npowers_:	
   310  0006                     _PORTBbits	set	6
   311  0006                     _PORTB	set	6
   312  0018                     _RCSTAbits	set	24
   313  0019                     _TXREG	set	25
   314  000C                     _PIR1bits	set	12
   315  0086                     _TRISB	set	134
   316  0098                     _TXSTAbits	set	152
   317  1088                     STR_4:	
   318  1088  342A               	retlw	42	;'*'
   319  1089  342A               	retlw	42	;'*'
   320  108A  342A               	retlw	42	;'*'
   321  108B  342A               	retlw	42	;'*'
   322  108C  342A               	retlw	42	;'*'
   323  108D  3420               	retlw	32	;' '
   324  108E  3420               	retlw	32	;' '
   325  108F  3433               	retlw	51	;'3'
   326  1090  342E               	retlw	46	;'.'
   327  1091  3428               	retlw	40	;'('
   328  1092  3452               	retlw	82	;'R'
   329  1093  3442               	retlw	66	;'B'
   330  1094  3432               	retlw	50	;'2'
   331  1095  3429               	retlw	41	;')'
   332  1096  342E               	retlw	46	;'.'
   333  1097  3420               	retlw	32	;' '
   334  1098  344D               	retlw	77	;'M'
   335  1099  3475               	retlw	117	;'u'
   336  109A  346C               	retlw	108	;'l'
   337  109B  3474               	retlw	116	;'t'
   338  109C  3469               	retlw	105	;'i'
   339  109D  3470               	retlw	112	;'p'
   340  109E  346C               	retlw	108	;'l'
   341  109F  3469               	retlw	105	;'i'
   342  10A0  3463               	retlw	99	;'c'
   343  10A1  3461               	retlw	97	;'a'
   344  10A2  3463               	retlw	99	;'c'
   345  10A3  3469               	retlw	105	;'i'
   346  10A4  346F               	retlw	111	;'o'
   347  10A5  346E               	retlw	110	;'n'
   348  10A6  3420               	retlw	32	;' '
   349  10A7  3420               	retlw	32	;' '
   350  10A8  342A               	retlw	42	;'*'
   351  10A9  342A               	retlw	42	;'*'
   352  10AA  342A               	retlw	42	;'*'
   353  10AB  342A               	retlw	42	;'*'
   354  10AC  342A               	retlw	42	;'*'
   355  10AD  342A               	retlw	42	;'*'
   356  10AE  342A               	retlw	42	;'*'
   357  10AF  342A               	retlw	42	;'*'
   358  10B0  340A               	retlw	10
   359  10B1  3400               	retlw	0
   360  10B2                     STR_2:	
   361  10B2  342A               	retlw	42	;'*'
   362  10B3  342A               	retlw	42	;'*'
   363  10B4  342A               	retlw	42	;'*'
   364  10B5  342A               	retlw	42	;'*'
   365  10B6  342A               	retlw	42	;'*'
   366  10B7  342A               	retlw	42	;'*'
   367  10B8  3420               	retlw	32	;' '
   368  10B9  3420               	retlw	32	;' '
   369  10BA  3420               	retlw	32	;' '
   370  10BB  3420               	retlw	32	;' '
   371  10BC  3420               	retlw	32	;' '
   372  10BD  3420               	retlw	32	;' '
   373  10BE  3431               	retlw	49	;'1'
   374  10BF  342E               	retlw	46	;'.'
   375  10C0  3428               	retlw	40	;'('
   376  10C1  3452               	retlw	82	;'R'
   377  10C2  3442               	retlw	66	;'B'
   378  10C3  3430               	retlw	48	;'0'
   379  10C4  3429               	retlw	41	;')'
   380  10C5  342E               	retlw	46	;'.'
   381  10C6  3420               	retlw	32	;' '
   382  10C7  3453               	retlw	83	;'S'
   383  10C8  3475               	retlw	117	;'u'
   384  10C9  346D               	retlw	109	;'m'
   385  10CA  3461               	retlw	97	;'a'
   386  10CB  3420               	retlw	32	;' '
   387  10CC  3420               	retlw	32	;' '
   388  10CD  3420               	retlw	32	;' '
   389  10CE  3420               	retlw	32	;' '
   390  10CF  3420               	retlw	32	;' '
   391  10D0  3420               	retlw	32	;' '
   392  10D1  342A               	retlw	42	;'*'
   393  10D2  342A               	retlw	42	;'*'
   394  10D3  342A               	retlw	42	;'*'
   395  10D4  342A               	retlw	42	;'*'
   396  10D5  342A               	retlw	42	;'*'
   397  10D6  342A               	retlw	42	;'*'
   398  10D7  342A               	retlw	42	;'*'
   399  10D8  342A               	retlw	42	;'*'
   400  10D9  342A               	retlw	42	;'*'
   401  10DA  340A               	retlw	10
   402  10DB  3400               	retlw	0
   403  10DC                     STR_3:	
   404  10DC  342A               	retlw	42	;'*'
   405  10DD  342A               	retlw	42	;'*'
   406  10DE  342A               	retlw	42	;'*'
   407  10DF  342A               	retlw	42	;'*'
   408  10E0  342A               	retlw	42	;'*'
   409  10E1  342A               	retlw	42	;'*'
   410  10E2  3420               	retlw	32	;' '
   411  10E3  3420               	retlw	32	;' '
   412  10E4  3420               	retlw	32	;' '
   413  10E5  3420               	retlw	32	;' '
   414  10E6  3420               	retlw	32	;' '
   415  10E7  3420               	retlw	32	;' '
   416  10E8  3432               	retlw	50	;'2'
   417  10E9  342E               	retlw	46	;'.'
   418  10EA  3428               	retlw	40	;'('
   419  10EB  3452               	retlw	82	;'R'
   420  10EC  3442               	retlw	66	;'B'
   421  10ED  3431               	retlw	49	;'1'
   422  10EE  3429               	retlw	41	;')'
   423  10EF  342E               	retlw	46	;'.'
   424  10F0  3420               	retlw	32	;' '
   425  10F1  3452               	retlw	82	;'R'
   426  10F2  3465               	retlw	101	;'e'
   427  10F3  3473               	retlw	115	;'s'
   428  10F4  3474               	retlw	116	;'t'
   429  10F5  3461               	retlw	97	;'a'
   430  10F6  3420               	retlw	32	;' '
   431  10F7  3420               	retlw	32	;' '
   432  10F8  3420               	retlw	32	;' '
   433  10F9  3420               	retlw	32	;' '
   434  10FA  3420               	retlw	32	;' '
   435  10FB  342A               	retlw	42	;'*'
   436  10FC  342A               	retlw	42	;'*'
   437  10FD  342A               	retlw	42	;'*'
   438  10FE  342A               	retlw	42	;'*'
   439  10FF  342A               	retlw	42	;'*'
   440  1100  342A               	retlw	42	;'*'
   441  1101  342A               	retlw	42	;'*'
   442  1102  342A               	retlw	42	;'*'
   443  1103  342A               	retlw	42	;'*'
   444  1104  340A               	retlw	10
   445  1105  3400               	retlw	0
   446  1106                     STR_5:	
   447  1106  342A               	retlw	42	;'*'
   448  1107  342A               	retlw	42	;'*'
   449  1108  342A               	retlw	42	;'*'
   450  1109  342A               	retlw	42	;'*'
   451  110A  342A               	retlw	42	;'*'
   452  110B  342A               	retlw	42	;'*'
   453  110C  3420               	retlw	32	;' '
   454  110D  3420               	retlw	32	;' '
   455  110E  3420               	retlw	32	;' '
   456  110F  3420               	retlw	32	;' '
   457  1110  3420               	retlw	32	;' '
   458  1111  3434               	retlw	52	;'4'
   459  1112  342E               	retlw	46	;'.'
   460  1113  3428               	retlw	40	;'('
   461  1114  3452               	retlw	82	;'R'
   462  1115  3442               	retlw	66	;'B'
   463  1116  3433               	retlw	51	;'3'
   464  1117  3429               	retlw	41	;')'
   465  1118  342E               	retlw	46	;'.'
   466  1119  3420               	retlw	32	;' '
   467  111A  3444               	retlw	68	;'D'
   468  111B  3469               	retlw	105	;'i'
   469  111C  3476               	retlw	118	;'v'
   470  111D  3469               	retlw	105	;'i'
   471  111E  3473               	retlw	115	;'s'
   472  111F  3469               	retlw	105	;'i'
   473  1120  346F               	retlw	111	;'o'
   474  1121  346E               	retlw	110	;'n'
   475  1122  3420               	retlw	32	;' '
   476  1123  3420               	retlw	32	;' '
   477  1124  3420               	retlw	32	;' '
   478  1125  342A               	retlw	42	;'*'
   479  1126  342A               	retlw	42	;'*'
   480  1127  342A               	retlw	42	;'*'
   481  1128  342A               	retlw	42	;'*'
   482  1129  342A               	retlw	42	;'*'
   483  112A  342A               	retlw	42	;'*'
   484  112B  342A               	retlw	42	;'*'
   485  112C  342A               	retlw	42	;'*'
   486  112D  342A               	retlw	42	;'*'
   487  112E  340A               	retlw	10
   488  112F  3400               	retlw	0
   489  1130                     STR_1:	
   490  1130  342A               	retlw	42	;'*'
   491  1131  342A               	retlw	42	;'*'
   492  1132  342A               	retlw	42	;'*'
   493  1133  342A               	retlw	42	;'*'
   494  1134  342A               	retlw	42	;'*'
   495  1135  342A               	retlw	42	;'*'
   496  1136  342A               	retlw	42	;'*'
   497  1137  342A               	retlw	42	;'*'
   498  1138  342A               	retlw	42	;'*'
   499  1139  342A               	retlw	42	;'*'
   500  113A  342A               	retlw	42	;'*'
   501  113B  342A               	retlw	42	;'*'
   502  113C  342A               	retlw	42	;'*'
   503  113D  342A               	retlw	42	;'*'
   504  113E  342A               	retlw	42	;'*'
   505  113F  342A               	retlw	42	;'*'
   506  1140  342A               	retlw	42	;'*'
   507  1141  342A               	retlw	42	;'*'
   508  1142  342A               	retlw	42	;'*'
   509  1143  342A               	retlw	42	;'*'
   510  1144  342A               	retlw	42	;'*'
   511  1145  342A               	retlw	42	;'*'
   512  1146  342A               	retlw	42	;'*'
   513  1147  342A               	retlw	42	;'*'
   514  1148  342A               	retlw	42	;'*'
   515  1149  342A               	retlw	42	;'*'
   516  114A  342A               	retlw	42	;'*'
   517  114B  342A               	retlw	42	;'*'
   518  114C  342A               	retlw	42	;'*'
   519  114D  342A               	retlw	42	;'*'
   520  114E  342A               	retlw	42	;'*'
   521  114F  342A               	retlw	42	;'*'
   522  1150  342A               	retlw	42	;'*'
   523  1151  342A               	retlw	42	;'*'
   524  1152  342A               	retlw	42	;'*'
   525  1153  342A               	retlw	42	;'*'
   526  1154  342A               	retlw	42	;'*'
   527  1155  342A               	retlw	42	;'*'
   528  1156  342A               	retlw	42	;'*'
   529  1157  342A               	retlw	42	;'*'
   530  1158  340A               	retlw	10
   531  1159  3400               	retlw	0
   532  115A                     STR_9:	
   533  115A  3445               	retlw	69	;'E'
   534  115B  346C               	retlw	108	;'l'
   535  115C  3420               	retlw	32	;' '
   536  115D  3472               	retlw	114	;'r'
   537  115E  3465               	retlw	101	;'e'
   538  115F  3473               	retlw	115	;'s'
   539  1160  3475               	retlw	117	;'u'
   540  1161  346C               	retlw	108	;'l'
   541  1162  3474               	retlw	116	;'t'
   542  1163  3461               	retlw	97	;'a'
   543  1164  3464               	retlw	100	;'d'
   544  1165  346F               	retlw	111	;'o'
   545  1166  3420               	retlw	32	;' '
   546  1167  3464               	retlw	100	;'d'
   547  1168  3465               	retlw	101	;'e'
   548  1169  3420               	retlw	32	;' '
   549  116A  346C               	retlw	108	;'l'
   550  116B  3461               	retlw	97	;'a'
   551  116C  3420               	retlw	32	;' '
   552  116D  344D               	retlw	77	;'M'
   553  116E  3475               	retlw	117	;'u'
   554  116F  346C               	retlw	108	;'l'
   555  1170  3474               	retlw	116	;'t'
   556  1171  3469               	retlw	105	;'i'
   557  1172  3470               	retlw	112	;'p'
   558  1173  346C               	retlw	108	;'l'
   559  1174  3469               	retlw	105	;'i'
   560  1175  3463               	retlw	99	;'c'
   561  1176  3461               	retlw	97	;'a'
   562  1177  3463               	retlw	99	;'c'
   563  1178  3469               	retlw	105	;'i'
   564  1179  346F               	retlw	111	;'o'
   565  117A  346E               	retlw	110	;'n'
   566  117B  3420               	retlw	32	;' '
   567  117C  3465               	retlw	101	;'e'
   568  117D  3473               	retlw	115	;'s'
   569  117E  343A               	retlw	58	;':'
   570  117F  3420               	retlw	32	;' '
   571  1180  3425               	retlw	37	;'%'
   572  1181  3466               	retlw	102	;'f'
   573  1182  340A               	retlw	10
   574  1183  3400               	retlw	0
   575  1184                     STR_10:	
   576  1184  3445               	retlw	69	;'E'
   577  1185  3472               	retlw	114	;'r'
   578  1186  3472               	retlw	114	;'r'
   579  1187  346F               	retlw	111	;'o'
   580  1188  3472               	retlw	114	;'r'
   581  1189  342C               	retlw	44	;','
   582  118A  3420               	retlw	32	;' '
   583  118B  346E               	retlw	110	;'n'
   584  118C  346F               	retlw	111	;'o'
   585  118D  3420               	retlw	32	;' '
   586  118E  3465               	retlw	101	;'e'
   587  118F  3473               	retlw	115	;'s'
   588  1190  3420               	retlw	32	;' '
   589  1191  3470               	retlw	112	;'p'
   590  1192  346F               	retlw	111	;'o'
   591  1193  3473               	retlw	115	;'s'
   592  1194  3469               	retlw	105	;'i'
   593  1195  3462               	retlw	98	;'b'
   594  1196  346C               	retlw	108	;'l'
   595  1197  3465               	retlw	101	;'e'
   596  1198  3420               	retlw	32	;' '
   597  1199  3464               	retlw	100	;'d'
   598  119A  3469               	retlw	105	;'i'
   599  119B  3476               	retlw	118	;'v'
   600  119C  3469               	retlw	105	;'i'
   601  119D  3464               	retlw	100	;'d'
   602  119E  3469               	retlw	105	;'i'
   603  119F  3472               	retlw	114	;'r'
   604  11A0  3420               	retlw	32	;' '
   605  11A1  3465               	retlw	101	;'e'
   606  11A2  346E               	retlw	110	;'n'
   607  11A3  3474               	retlw	116	;'t'
   608  11A4  3472               	retlw	114	;'r'
   609  11A5  3465               	retlw	101	;'e'
   610  11A6  3420               	retlw	32	;' '
   611  11A7  3430               	retlw	48	;'0'
   612  11A8  342E               	retlw	46	;'.'
   613  11A9  340A               	retlw	10
   614  11AA  3400               	retlw	0
   615  11AB                     STR_11:	
   616  11AB  3445               	retlw	69	;'E'
   617  11AC  346C               	retlw	108	;'l'
   618  11AD  3420               	retlw	32	;' '
   619  11AE  3472               	retlw	114	;'r'
   620  11AF  3465               	retlw	101	;'e'
   621  11B0  3473               	retlw	115	;'s'
   622  11B1  3475               	retlw	117	;'u'
   623  11B2  346C               	retlw	108	;'l'
   624  11B3  3474               	retlw	116	;'t'
   625  11B4  3461               	retlw	97	;'a'
   626  11B5  3464               	retlw	100	;'d'
   627  11B6  346F               	retlw	111	;'o'
   628  11B7  3420               	retlw	32	;' '
   629  11B8  3464               	retlw	100	;'d'
   630  11B9  3465               	retlw	101	;'e'
   631  11BA  3420               	retlw	32	;' '
   632  11BB  346C               	retlw	108	;'l'
   633  11BC  3461               	retlw	97	;'a'
   634  11BD  3420               	retlw	32	;' '
   635  11BE  3444               	retlw	68	;'D'
   636  11BF  3469               	retlw	105	;'i'
   637  11C0  3476               	retlw	118	;'v'
   638  11C1  3469               	retlw	105	;'i'
   639  11C2  3473               	retlw	115	;'s'
   640  11C3  3469               	retlw	105	;'i'
   641  11C4  346F               	retlw	111	;'o'
   642  11C5  346E               	retlw	110	;'n'
   643  11C6  3420               	retlw	32	;' '
   644  11C7  3465               	retlw	101	;'e'
   645  11C8  3473               	retlw	115	;'s'
   646  11C9  343A               	retlw	58	;':'
   647  11CA  3420               	retlw	32	;' '
   648  11CB  3425               	retlw	37	;'%'
   649  11CC  3466               	retlw	102	;'f'
   650  11CD  340A               	retlw	10
   651  11CE  3400               	retlw	0
   652  11CF                     STR_8:	
   653  11CF  3445               	retlw	69	;'E'
   654  11D0  346C               	retlw	108	;'l'
   655  11D1  3420               	retlw	32	;' '
   656  11D2  3472               	retlw	114	;'r'
   657  11D3  3465               	retlw	101	;'e'
   658  11D4  3473               	retlw	115	;'s'
   659  11D5  3475               	retlw	117	;'u'
   660  11D6  346C               	retlw	108	;'l'
   661  11D7  3474               	retlw	116	;'t'
   662  11D8  3461               	retlw	97	;'a'
   663  11D9  3464               	retlw	100	;'d'
   664  11DA  346F               	retlw	111	;'o'
   665  11DB  3420               	retlw	32	;' '
   666  11DC  3464               	retlw	100	;'d'
   667  11DD  3465               	retlw	101	;'e'
   668  11DE  3420               	retlw	32	;' '
   669  11DF  346C               	retlw	108	;'l'
   670  11E0  3461               	retlw	97	;'a'
   671  11E1  3420               	retlw	32	;' '
   672  11E2  3452               	retlw	82	;'R'
   673  11E3  3465               	retlw	101	;'e'
   674  11E4  3473               	retlw	115	;'s'
   675  11E5  3474               	retlw	116	;'t'
   676  11E6  3461               	retlw	97	;'a'
   677  11E7  3420               	retlw	32	;' '
   678  11E8  3465               	retlw	101	;'e'
   679  11E9  3473               	retlw	115	;'s'
   680  11EA  343A               	retlw	58	;':'
   681  11EB  3420               	retlw	32	;' '
   682  11EC  3425               	retlw	37	;'%'
   683  11ED  3466               	retlw	102	;'f'
   684  11EE  340A               	retlw	10
   685  11EF  3400               	retlw	0
   686  11F0                     STR_7:	
   687  11F0  3445               	retlw	69	;'E'
   688  11F1  346C               	retlw	108	;'l'
   689  11F2  3420               	retlw	32	;' '
   690  11F3  3472               	retlw	114	;'r'
   691  11F4  3465               	retlw	101	;'e'
   692  11F5  3473               	retlw	115	;'s'
   693  11F6  3475               	retlw	117	;'u'
   694  11F7  346C               	retlw	108	;'l'
   695  11F8  3474               	retlw	116	;'t'
   696  11F9  3461               	retlw	97	;'a'
   697  11FA  3464               	retlw	100	;'d'
   698  11FB  346F               	retlw	111	;'o'
   699  11FC  3420               	retlw	32	;' '
   700  11FD  3464               	retlw	100	;'d'
   701  11FE  3465               	retlw	101	;'e'
   702  11FF  3420               	retlw	32	;' '
   703  1200  346C               	retlw	108	;'l'
   704  1201  3461               	retlw	97	;'a'
   705  1202  3420               	retlw	32	;' '
   706  1203  3453               	retlw	83	;'S'
   707  1204  3475               	retlw	117	;'u'
   708  1205  346D               	retlw	109	;'m'
   709  1206  3461               	retlw	97	;'a'
   710  1207  3420               	retlw	32	;' '
   711  1208  3465               	retlw	101	;'e'
   712  1209  3473               	retlw	115	;'s'
   713  120A  343A               	retlw	58	;':'
   714  120B  3420               	retlw	32	;' '
   715  120C  3425               	retlw	37	;'%'
   716  120D  3466               	retlw	102	;'f'
   717  120E  340A               	retlw	10
   718  120F  3400               	retlw	0
   719  1130                     
   720                           	psect	cinit
   721  07D9                     start_initialization:	
   722                           ; #config settings
   723                           
   724  07D9                     __initialization:	
   725                           
   726                           ; Initialize objects allocated to BANK0
   727  07D9  120A  158A  2000  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   728  07DE  00EB               	movwf	__pdataBANK0& (0+127)
   729  07DF  120A  158A  2001  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   730  07E4  00EC               	movwf	(__pdataBANK0+1)& (0+127)
   731  07E5  120A  158A  2002   	fcall	__pidataBANK0+2	;fetch initializer
   732  07E8  00ED               	movwf	(__pdataBANK0+2)& (0+127)
   733                           
   734                           ; Clear objects allocated to BANK1
   735  07E9  1683               	bsf	3,5	;RP0=1, select bank1
   736  07EA  1303               	bcf	3,6	;RP1=0, select bank1
   737  07EB  01B6               	clrf	__pbssBANK1& (0+127)
   738  07EC  01B7               	clrf	(__pbssBANK1+1)& (0+127)
   739  07ED  01B8               	clrf	(__pbssBANK1+2)& (0+127)
   740  07EE  01B9               	clrf	(__pbssBANK1+3)& (0+127)
   741  07EF  01BA               	clrf	(__pbssBANK1+4)& (0+127)
   742  07F0  01BB               	clrf	(__pbssBANK1+5)& (0+127)
   743  07F1  01BC               	clrf	(__pbssBANK1+6)& (0+127)
   744  07F2  01BD               	clrf	(__pbssBANK1+7)& (0+127)
   745  07F3  01BE               	clrf	(__pbssBANK1+8)& (0+127)
   746                           
   747                           ; Clear objects allocated to BANK0
   748  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   749  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   750  07F6  01E5               	clrf	__pbssBANK0& (0+127)
   751  07F7  01E6               	clrf	(__pbssBANK0+1)& (0+127)
   752  07F8  01E7               	clrf	(__pbssBANK0+2)& (0+127)
   753  07F9  01E8               	clrf	(__pbssBANK0+3)& (0+127)
   754  07FA  01E9               	clrf	(__pbssBANK0+4)& (0+127)
   755  07FB  01EA               	clrf	(__pbssBANK0+5)& (0+127)
   756  07FC                     end_of_initialization:	
   757                           ;End of C runtime variable initialization code
   758                           
   759  07FC                     __end_of__initialization:	
   760  07FC  0183               	clrf	3
   761  07FD  120A  158A  2BDA   	ljmp	_main	;jump to C main() function
   762                           
   763                           	psect	bssBANK0
   764  0065                     __pbssBANK0:	
   765  0065                     _suma:	
   766  0065                     	ds	3
   767  0068                     _b:	
   768  0068                     	ds	3
   769                           
   770                           	psect	dataBANK0
   771  006B                     __pdataBANK0:	
   772  006B                     _a:	
   773  006B                     	ds	3
   774                           
   775                           	psect	bssBANK1
   776  00B6                     __pbssBANK1:	
   777  00B6                     _division:	
   778  00B6                     	ds	3
   779  00B9                     _multiplicacion:	
   780  00B9                     	ds	3
   781  00BC                     _resta:	
   782  00BC                     	ds	3
   783                           
   784                           	psect	cstackBANK1
   785  00A0                     __pcstackBANK1:	
   786  00A0                     _printf$661:	
   787                           
   788                           ; 3 bytes @ 0x0
   789  00A0                     	ds	3
   790  00A3                     printf@ap:	
   791                           
   792                           ; 1 bytes @ 0x3
   793  00A3                     	ds	1
   794  00A4                     printf@flag:	
   795                           
   796                           ; 2 bytes @ 0x4
   797  00A4                     	ds	2
   798  00A6                     printf@prec:	
   799                           
   800                           ; 2 bytes @ 0x6
   801  00A6                     	ds	2
   802  00A8                     printf@val:	
   803                           
   804                           ; 4 bytes @ 0x8
   805  00A8                     	ds	4
   806  00AC                     printf@exp:	
   807                           
   808                           ; 2 bytes @ 0xC
   809  00AC                     	ds	2
   810  00AE                     printf@tmpval:	
   811                           
   812                           ; 4 bytes @ 0xE
   813  00AE                     	ds	4
   814  00B2                     printf@fval:	
   815                           
   816                           ; 3 bytes @ 0x12
   817  00B2                     	ds	3
   818  00B5                     printf@c:	
   819                           
   820                           ; 1 bytes @ 0x15
   821  00B5                     	ds	1
   822                           
   823                           	psect	cstackCOMMON
   824  0070                     __pcstackCOMMON:	
   825  0070                     ?___ftge:	
   826  0070                     ?_putch:	
   827                           ; 1 bit 
   828                           
   829  0070                     ??_putch:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     ?_iniciar_uart:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0070                     ??_iniciar_uart:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     ?_main:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ?___wmul:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?___awmod:	
   845                           ; 2 bytes @ 0x0
   846                           
   847  0070                     ?___ftpack:	
   848                           ; 2 bytes @ 0x0
   849                           
   850  0070                     ?___ftneg:	
   851                           ; 3 bytes @ 0x0
   852                           
   853  0070                     ?__tdiv_to_l_:	
   854                           ; 3 bytes @ 0x0
   855                           
   856  0070                     ?__div_to_l_:	
   857                           ; 4 bytes @ 0x0
   858                           
   859  0070                     ?___lldiv:	
   860                           ; 4 bytes @ 0x0
   861                           
   862  0070                     ?___llmod:	
   863                           ; 4 bytes @ 0x0
   864                           
   865  0070                     putch@dato:	
   866                           ; 4 bytes @ 0x0
   867                           
   868  0070                     ___wmul@multiplier:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ___awmod@divisor:	
   872                           ; 2 bytes @ 0x0
   873                           
   874  0070                     __div_to_l_@f1:	
   875                           ; 2 bytes @ 0x0
   876                           
   877  0070                     ___ftpack@arg:	
   878                           ; 3 bytes @ 0x0
   879                           
   880  0070                     __tdiv_to_l_@f1:	
   881                           ; 3 bytes @ 0x0
   882                           
   883  0070                     ___ftge@ff1:	
   884                           ; 3 bytes @ 0x0
   885                           
   886  0070                     ___ftneg@f1:	
   887                           ; 3 bytes @ 0x0
   888                           
   889  0070                     ___lldiv@divisor:	
   890                           ; 3 bytes @ 0x0
   891                           
   892  0070                     ___llmod@divisor:	
   893                           ; 4 bytes @ 0x0
   894                           
   895                           
   896                           ; 4 bytes @ 0x0
   897  0070                     	ds	2
   898  0072                     ___wmul@multiplicand:	
   899  0072                     ___awmod@dividend:	
   900                           ; 2 bytes @ 0x2
   901                           
   902                           
   903                           ; 2 bytes @ 0x2
   904  0072                     	ds	1
   905  0073                     ??___ftneg:	
   906  0073                     ___ftpack@exp:	
   907                           ; 1 bytes @ 0x3
   908                           
   909  0073                     __div_to_l_@f2:	
   910                           ; 1 bytes @ 0x3
   911                           
   912  0073                     __tdiv_to_l_@f2:	
   913                           ; 3 bytes @ 0x3
   914                           
   915  0073                     ___ftge@ff2:	
   916                           ; 3 bytes @ 0x3
   917                           
   918                           
   919                           ; 3 bytes @ 0x3
   920  0073                     	ds	1
   921  0074                     ??___wmul:	
   922  0074                     ??___awmod:	
   923                           ; 1 bytes @ 0x4
   924                           
   925  0074                     ___ftpack@sign:	
   926                           ; 1 bytes @ 0x4
   927                           
   928  0074                     ___wmul@product:	
   929                           ; 1 bytes @ 0x4
   930                           
   931  0074                     ___lldiv@dividend:	
   932                           ; 2 bytes @ 0x4
   933                           
   934  0074                     ___llmod@dividend:	
   935                           ; 4 bytes @ 0x4
   936                           
   937                           
   938                           ; 4 bytes @ 0x4
   939  0074                     	ds	1
   940  0075                     ??___ftpack:	
   941  0075                     ___awmod@counter:	
   942                           ; 1 bytes @ 0x5
   943                           
   944                           
   945                           ; 1 bytes @ 0x5
   946  0075                     	ds	1
   947  0076                     ??__tdiv_to_l_:	
   948  0076                     ??__div_to_l_:	
   949                           ; 1 bytes @ 0x6
   950                           
   951  0076                     ??___ftge:	
   952                           ; 1 bytes @ 0x6
   953                           
   954  0076                     ___awmod@sign:	
   955                           ; 1 bytes @ 0x6
   956                           
   957                           
   958                           ; 1 bytes @ 0x6
   959  0076                     	ds	1
   960  0077                     ?___awdiv:	
   961  0077                     ___awdiv@divisor:	
   962                           ; 2 bytes @ 0x7
   963                           
   964                           
   965                           ; 2 bytes @ 0x7
   966  0077                     	ds	1
   967  0078                     ??___lldiv:	
   968  0078                     ??___llmod:	
   969                           ; 1 bytes @ 0x8
   970                           
   971  0078                     ?___ftdiv:	
   972                           ; 1 bytes @ 0x8
   973                           
   974  0078                     ?___lltoft:	
   975                           ; 3 bytes @ 0x8
   976                           
   977  0078                     ___ftdiv@f2:	
   978                           ; 3 bytes @ 0x8
   979                           
   980  0078                     ___lltoft@c:	
   981                           ; 3 bytes @ 0x8
   982                           
   983                           
   984                           ; 4 bytes @ 0x8
   985  0078                     	ds	1
   986  0079                     ___llmod@counter:	
   987  0079                     ___awdiv@dividend:	
   988                           ; 1 bytes @ 0x9
   989                           
   990  0079                     ___lldiv@quotient:	
   991                           ; 2 bytes @ 0x9
   992                           
   993                           
   994                           ; 4 bytes @ 0x9
   995  0079                     	ds	2
   996  007B                     ??___awdiv:	
   997  007B                     ___ftdiv@f1:	
   998                           ; 1 bytes @ 0xB
   999                           
  1000                           
  1001                           ; 3 bytes @ 0xB
  1002  007B                     	ds	1
  1003  007C                     ??___bmul:	
  1004  007C                     ??___lltoft:	
  1005                           ; 1 bytes @ 0xC
  1006                           
  1007                           
  1008                           ; 1 bytes @ 0xC
  1009  007C                     	ds	1
  1010  007D                     ___lldiv@counter:	
  1011  007D                     ___lltoft@exp:	
  1012                           ; 1 bytes @ 0xD
  1013                           
  1014                           
  1015                           ; 1 bytes @ 0xD
  1016  007D                     	ds	1
  1017  007E                     ??_main:	
  1018  007E                     ??___ftsub:	
  1019                           ; 1 bytes @ 0xE
  1020                           
  1021                           
  1022                           	psect	cstackBANK0
  1023  0020                     __pcstackBANK0:	
  1024                           ; 1 bytes @ 0xE
  1025                           
  1026  0020                     ??___ftdiv:	
  1027  0020                     ___awdiv@counter:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030  0020                     __div_to_l_@quot:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033  0020                     __tdiv_to_l_@quot:	
  1034                           ; 4 bytes @ 0x0
  1035                           
  1036                           
  1037                           ; 4 bytes @ 0x0
  1038  0020                     	ds	1
  1039  0021                     ___awdiv@sign:	
  1040                           
  1041                           ; 1 bytes @ 0x1
  1042  0021                     	ds	1
  1043  0022                     ___awdiv@quotient:	
  1044                           
  1045                           ; 2 bytes @ 0x2
  1046  0022                     	ds	2
  1047  0024                     ?___bmul:	
  1048  0024                     ___bmul@multiplicand:	
  1049                           ; 1 bytes @ 0x4
  1050                           
  1051  0024                     __div_to_l_@cntr:	
  1052                           ; 1 bytes @ 0x4
  1053                           
  1054  0024                     ___ftdiv@cntr:	
  1055                           ; 1 bytes @ 0x4
  1056                           
  1057  0024                     __tdiv_to_l_@cntr:	
  1058                           ; 1 bytes @ 0x4
  1059                           
  1060                           
  1061                           ; 1 bytes @ 0x4
  1062  0024                     	ds	1
  1063  0025                     ___bmul@product:	
  1064  0025                     __div_to_l_@exp1:	
  1065                           ; 1 bytes @ 0x5
  1066                           
  1067  0025                     __tdiv_to_l_@exp1:	
  1068                           ; 1 bytes @ 0x5
  1069                           
  1070  0025                     ___ftdiv@f3:	
  1071                           ; 1 bytes @ 0x5
  1072                           
  1073                           
  1074                           ; 3 bytes @ 0x5
  1075  0025                     	ds	1
  1076  0026                     ___bmul@multiplier:	
  1077                           
  1078                           ; 1 bytes @ 0x6
  1079  0026                     	ds	1
  1080  0027                     ?___ftmul:	
  1081  0027                     ___ftmul@f1:	
  1082                           ; 3 bytes @ 0x7
  1083                           
  1084                           
  1085                           ; 3 bytes @ 0x7
  1086  0027                     	ds	1
  1087  0028                     ___ftdiv@exp:	
  1088                           
  1089                           ; 1 bytes @ 0x8
  1090  0028                     	ds	1
  1091  0029                     ___ftdiv@sign:	
  1092                           
  1093                           ; 1 bytes @ 0x9
  1094  0029                     	ds	1
  1095  002A                     ___ftmul@f2:	
  1096                           
  1097                           ; 3 bytes @ 0xA
  1098  002A                     	ds	3
  1099  002D                     ??___ftmul:	
  1100                           
  1101                           ; 1 bytes @ 0xD
  1102  002D                     	ds	4
  1103  0031                     ___ftmul@exp:	
  1104                           
  1105                           ; 1 bytes @ 0x11
  1106  0031                     	ds	1
  1107  0032                     ___ftmul@f3_as_product:	
  1108                           
  1109                           ; 3 bytes @ 0x12
  1110  0032                     	ds	3
  1111  0035                     ___ftmul@cntr:	
  1112                           
  1113                           ; 1 bytes @ 0x15
  1114  0035                     	ds	1
  1115  0036                     ___ftmul@sign:	
  1116                           
  1117                           ; 1 bytes @ 0x16
  1118  0036                     	ds	1
  1119  0037                     ?_fround:	
  1120  0037                     ?_scale:	
  1121                           ; 3 bytes @ 0x17
  1122                           
  1123                           
  1124                           ; 3 bytes @ 0x17
  1125  0037                     	ds	3
  1126  003A                     ??_fround:	
  1127  003A                     ??_scale:	
  1128                           ; 1 bytes @ 0x1A
  1129                           
  1130                           
  1131                           ; 1 bytes @ 0x1A
  1132  003A                     	ds	2
  1133  003C                     _scale$660:	
  1134                           
  1135                           ; 3 bytes @ 0x1C
  1136  003C                     	ds	3
  1137  003F                     scale@scl:	
  1138                           
  1139                           ; 1 bytes @ 0x1F
  1140  003F                     	ds	1
  1141  0040                     ?___fttol:	
  1142  0040                     ___fttol@f1:	
  1143                           ; 4 bytes @ 0x20
  1144                           
  1145  0040                     _fround$659:	
  1146                           ; 3 bytes @ 0x20
  1147                           
  1148                           
  1149                           ; 3 bytes @ 0x20
  1150  0040                     	ds	3
  1151  0043                     _fround$658:	
  1152                           
  1153                           ; 3 bytes @ 0x23
  1154  0043                     	ds	1
  1155  0044                     ??___fttol:	
  1156                           
  1157                           ; 1 bytes @ 0x24
  1158  0044                     	ds	2
  1159  0046                     fround@prec:	
  1160                           
  1161                           ; 1 bytes @ 0x26
  1162  0046                     	ds	1
  1163  0047                     ?___ftadd:	
  1164  0047                     ___ftadd@f1:	
  1165                           ; 3 bytes @ 0x27
  1166                           
  1167                           
  1168                           ; 3 bytes @ 0x27
  1169  0047                     	ds	1
  1170  0048                     ___fttol@sign1:	
  1171                           
  1172                           ; 1 bytes @ 0x28
  1173  0048                     	ds	1
  1174  0049                     ___fttol@lval:	
  1175                           
  1176                           ; 4 bytes @ 0x29
  1177  0049                     	ds	1
  1178  004A                     ___ftadd@f2:	
  1179                           
  1180                           ; 3 bytes @ 0x2A
  1181  004A                     	ds	3
  1182  004D                     ??___ftadd:	
  1183  004D                     ___fttol@exp1:	
  1184                           ; 1 bytes @ 0x2D
  1185                           
  1186                           
  1187                           ; 1 bytes @ 0x2D
  1188  004D                     	ds	4
  1189  0051                     ___ftadd@sign:	
  1190                           
  1191                           ; 1 bytes @ 0x31
  1192  0051                     	ds	1
  1193  0052                     ___ftadd@exp2:	
  1194                           
  1195                           ; 1 bytes @ 0x32
  1196  0052                     	ds	1
  1197  0053                     ___ftadd@exp1:	
  1198                           
  1199                           ; 1 bytes @ 0x33
  1200  0053                     	ds	1
  1201  0054                     ?___ftsub:	
  1202  0054                     ___ftsub@f2:	
  1203                           ; 3 bytes @ 0x34
  1204                           
  1205                           
  1206                           ; 3 bytes @ 0x34
  1207  0054                     	ds	3
  1208  0057                     ___ftsub@f1:	
  1209                           
  1210                           ; 3 bytes @ 0x37
  1211  0057                     	ds	3
  1212  005A                     ?_printf:	
  1213  005A                     printf@f:	
  1214                           ; 2 bytes @ 0x3A
  1215                           
  1216                           
  1217                           ; 2 bytes @ 0x3A
  1218  005A                     	ds	5
  1219  005F                     ??_printf:	
  1220                           
  1221                           ; 1 bytes @ 0x3F
  1222  005F                     	ds	6
  1223                           
  1224                           	psect	maintext
  1225  0BDA                     __pmaintext:	
  1226 ;;
  1227 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1228 ;;
  1229 ;; *************** function _main *****************
  1230 ;; Defined at:
  1231 ;;		line 20 in file "Calculadora.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : B00/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1245 ;;      Params:         0       0       0       0       0
  1246 ;;      Locals:         0       0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0
  1248 ;;      Totals:         0       0       0       0       0
  1249 ;;Total ram usage:        0 bytes
  1250 ;; Hardware stack levels required when called:    4
  1251 ;; This function calls:
  1252 ;;		___ftadd
  1253 ;;		___ftdiv
  1254 ;;		___ftmul
  1255 ;;		___ftneg
  1256 ;;		_iniciar_uart
  1257 ;;		_printf
  1258 ;; This function is called by:
  1259 ;;		Startup code after reset
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           
  1264                           ;psect for function _main
  1265  0BDA                     _main:	
  1266                           
  1267                           ;Calculadora.c: 22: TRISB = 0b11111111;
  1268                           
  1269                           ;incstack = 0
  1270                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1271  0BDA  30FF               	movlw	255
  1272  0BDB  1683               	bsf	3,5	;RP0=1, select bank1
  1273  0BDC  1303               	bcf	3,6	;RP1=0, select bank1
  1274  0BDD  0086               	movwf	6	;volatile
  1275                           
  1276                           ;Calculadora.c: 23: PORTB = 0;
  1277  0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0BDF  1303               	bcf	3,6	;RP1=0, select bank0
  1279  0BE0  0186               	clrf	6	;volatile
  1280  0BE1                     l2210:	
  1281                           ;Calculadora.c: 24: while (1) {
  1282                           
  1283                           
  1284                           ;Calculadora.c: 26: iniciar_uart();
  1285  0BE1  160A  118A  24D5  120A  158A  	fcall	_iniciar_uart
  1286                           
  1287                           ;Calculadora.c: 28: printf("****************************************\n");
  1288  0BE6  3030               	movlw	low (STR_1| (0+32768))
  1289  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  1290  0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  1291  0BE9  00DA               	movwf	printf@f
  1292  0BEA  3091               	movlw	high (STR_1| (0+32768))
  1293  0BEB  00DB               	movwf	printf@f+1
  1294  0BEC  120A  118A  2278  120A  158A  	fcall	_printf
  1295                           
  1296                           ;Calculadora.c: 29: printf("******      1.(RB0). Suma      *********\n");
  1297  0BF1  30B2               	movlw	low (STR_2| (0+32768))
  1298  0BF2  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0BF3  1303               	bcf	3,6	;RP1=0, select bank0
  1300  0BF4  00DA               	movwf	printf@f
  1301  0BF5  3090               	movlw	high (STR_2| (0+32768))
  1302  0BF6  00DB               	movwf	printf@f+1
  1303  0BF7  120A  118A  2278  120A  158A  	fcall	_printf
  1304                           
  1305                           ;Calculadora.c: 30: printf("******      2.(RB1). Resta     *********\n");
  1306  0BFC  30DC               	movlw	low (STR_3| (0+32768))
  1307  0BFD  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0BFE  1303               	bcf	3,6	;RP1=0, select bank0
  1309  0BFF  00DA               	movwf	printf@f
  1310  0C00  3090               	movlw	high (STR_3| (0+32768))
  1311  0C01  00DB               	movwf	printf@f+1
  1312  0C02  120A  118A  2278  120A  158A  	fcall	_printf
  1313                           
  1314                           ;Calculadora.c: 31: printf("*****  3.(RB2). Multiplicacion  ********\n");
  1315  0C07  3088               	movlw	low (STR_4| (0+32768))
  1316  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0C09  1303               	bcf	3,6	;RP1=0, select bank0
  1318  0C0A  00DA               	movwf	printf@f
  1319  0C0B  3090               	movlw	high (STR_4| (0+32768))
  1320  0C0C  00DB               	movwf	printf@f+1
  1321  0C0D  120A  118A  2278  120A  158A  	fcall	_printf
  1322                           
  1323                           ;Calculadora.c: 32: printf("******     4.(RB3). Division   *********\n");
  1324  0C12  3006               	movlw	low (STR_5| (0+32768))
  1325  0C13  1283               	bcf	3,5	;RP0=0, select bank0
  1326  0C14  1303               	bcf	3,6	;RP1=0, select bank0
  1327  0C15  00DA               	movwf	printf@f
  1328  0C16  3091               	movlw	high (STR_5| (0+32768))
  1329  0C17  00DB               	movwf	printf@f+1
  1330  0C18  120A  118A  2278  120A  158A  	fcall	_printf
  1331                           
  1332                           ;Calculadora.c: 33: printf("****************************************\n");
  1333  0C1D  3030               	movlw	low (STR_1| (0+32768))
  1334  0C1E  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0C1F  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0C20  00DA               	movwf	printf@f
  1337  0C21  3091               	movlw	high (STR_1| (0+32768))
  1338  0C22  00DB               	movwf	printf@f+1
  1339  0C23  120A  118A  2278  120A  158A  	fcall	_printf
  1340                           
  1341                           ;Calculadora.c: 36: suma = a+b;
  1342  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0C29  1303               	bcf	3,6	;RP1=0, select bank0
  1344  0C2A  0868               	movf	_b,w
  1345  0C2B  00C7               	movwf	___ftadd@f1
  1346  0C2C  0869               	movf	_b+1,w
  1347  0C2D  00C8               	movwf	___ftadd@f1+1
  1348  0C2E  086A               	movf	_b+2,w
  1349  0C2F  00C9               	movwf	___ftadd@f1+2
  1350  0C30  086B               	movf	_a,w
  1351  0C31  00CA               	movwf	___ftadd@f2
  1352  0C32  086C               	movf	_a+1,w
  1353  0C33  00CB               	movwf	___ftadd@f2+1
  1354  0C34  086D               	movf	_a+2,w
  1355  0C35  00CC               	movwf	___ftadd@f2+2
  1356  0C36  120A  158A  219F  120A  158A  	fcall	___ftadd
  1357  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  1358  0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  1359  0C3D  0847               	movf	?___ftadd,w
  1360  0C3E  00E5               	movwf	_suma
  1361  0C3F  0848               	movf	?___ftadd+1,w
  1362  0C40  00E6               	movwf	_suma+1
  1363  0C41  0849               	movf	?___ftadd+2,w
  1364  0C42  00E7               	movwf	_suma+2
  1365                           
  1366                           ;Calculadora.c: 37: resta = a-b;
  1367  0C43  086B               	movf	_a,w
  1368  0C44  00C7               	movwf	___ftadd@f1
  1369  0C45  086C               	movf	_a+1,w
  1370  0C46  00C8               	movwf	___ftadd@f1+1
  1371  0C47  086D               	movf	_a+2,w
  1372  0C48  00C9               	movwf	___ftadd@f1+2
  1373  0C49  0868               	movf	_b,w
  1374  0C4A  00F0               	movwf	___ftneg@f1
  1375  0C4B  0869               	movf	_b+1,w
  1376  0C4C  00F1               	movwf	___ftneg@f1+1
  1377  0C4D  086A               	movf	_b+2,w
  1378  0C4E  00F2               	movwf	___ftneg@f1+2
  1379  0C4F  160A  118A  24DC  120A  158A  	fcall	___ftneg
  1380  0C54  0870               	movf	?___ftneg,w
  1381  0C55  1283               	bcf	3,5	;RP0=0, select bank0
  1382  0C56  1303               	bcf	3,6	;RP1=0, select bank0
  1383  0C57  00CA               	movwf	___ftadd@f2
  1384  0C58  0871               	movf	?___ftneg+1,w
  1385  0C59  00CB               	movwf	___ftadd@f2+1
  1386  0C5A  0872               	movf	?___ftneg+2,w
  1387  0C5B  00CC               	movwf	___ftadd@f2+2
  1388  0C5C  120A  158A  219F  120A  158A  	fcall	___ftadd
  1389  0C61  1283               	bcf	3,5	;RP0=0, select bank0
  1390  0C62  1303               	bcf	3,6	;RP1=0, select bank0
  1391  0C63  0847               	movf	?___ftadd,w
  1392  0C64  1683               	bsf	3,5	;RP0=1, select bank1
  1393  0C65  1303               	bcf	3,6	;RP1=0, select bank1
  1394  0C66  00BC               	movwf	_resta^(0+128)
  1395  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  1396  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  1397  0C69  0848               	movf	?___ftadd+1,w
  1398  0C6A  1683               	bsf	3,5	;RP0=1, select bank1
  1399  0C6B  1303               	bcf	3,6	;RP1=0, select bank1
  1400  0C6C  00BD               	movwf	(_resta+1)^(0+128)
  1401  0C6D  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0C6E  1303               	bcf	3,6	;RP1=0, select bank0
  1403  0C6F  0849               	movf	?___ftadd+2,w
  1404  0C70  1683               	bsf	3,5	;RP0=1, select bank1
  1405  0C71  1303               	bcf	3,6	;RP1=0, select bank1
  1406  0C72  00BE               	movwf	(_resta+2)^(0+128)
  1407                           
  1408                           ;Calculadora.c: 38: multiplicacion = a*b;
  1409  0C73  1283               	bcf	3,5	;RP0=0, select bank0
  1410  0C74  1303               	bcf	3,6	;RP1=0, select bank0
  1411  0C75  0868               	movf	_b,w
  1412  0C76  00A7               	movwf	___ftmul@f1
  1413  0C77  0869               	movf	_b+1,w
  1414  0C78  00A8               	movwf	___ftmul@f1+1
  1415  0C79  086A               	movf	_b+2,w
  1416  0C7A  00A9               	movwf	___ftmul@f1+2
  1417  0C7B  086B               	movf	_a,w
  1418  0C7C  00AA               	movwf	___ftmul@f2
  1419  0C7D  086C               	movf	_a+1,w
  1420  0C7E  00AB               	movwf	___ftmul@f2+1
  1421  0C7F  086D               	movf	_a+2,w
  1422  0C80  00AC               	movwf	___ftmul@f2+2
  1423  0C81  120A  158A  20CC  120A  158A  	fcall	___ftmul
  1424  0C86  1283               	bcf	3,5	;RP0=0, select bank0
  1425  0C87  1303               	bcf	3,6	;RP1=0, select bank0
  1426  0C88  0827               	movf	?___ftmul,w
  1427  0C89  1683               	bsf	3,5	;RP0=1, select bank1
  1428  0C8A  1303               	bcf	3,6	;RP1=0, select bank1
  1429  0C8B  00B9               	movwf	_multiplicacion^(0+128)
  1430  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  1431  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  1432  0C8E  0828               	movf	?___ftmul+1,w
  1433  0C8F  1683               	bsf	3,5	;RP0=1, select bank1
  1434  0C90  1303               	bcf	3,6	;RP1=0, select bank1
  1435  0C91  00BA               	movwf	(_multiplicacion+1)^(0+128)
  1436  0C92  1283               	bcf	3,5	;RP0=0, select bank0
  1437  0C93  1303               	bcf	3,6	;RP1=0, select bank0
  1438  0C94  0829               	movf	?___ftmul+2,w
  1439  0C95  1683               	bsf	3,5	;RP0=1, select bank1
  1440  0C96  1303               	bcf	3,6	;RP1=0, select bank1
  1441  0C97  00BB               	movwf	(_multiplicacion+2)^(0+128)
  1442                           
  1443                           ;Calculadora.c: 39: division = a/b;
  1444  0C98  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0C99  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0C9A  0868               	movf	_b,w
  1447  0C9B  00F8               	movwf	___ftdiv@f2
  1448  0C9C  0869               	movf	_b+1,w
  1449  0C9D  00F9               	movwf	___ftdiv@f2+1
  1450  0C9E  086A               	movf	_b+2,w
  1451  0C9F  00FA               	movwf	___ftdiv@f2+2
  1452  0CA0  086B               	movf	_a,w
  1453  0CA1  00FB               	movwf	___ftdiv@f1
  1454  0CA2  086C               	movf	_a+1,w
  1455  0CA3  00FC               	movwf	___ftdiv@f1+1
  1456  0CA4  086D               	movf	_a+2,w
  1457  0CA5  00FD               	movwf	___ftdiv@f1+2
  1458  0CA6  120A  158A  2016  120A  158A  	fcall	___ftdiv
  1459  0CAB  0878               	movf	?___ftdiv,w
  1460  0CAC  1683               	bsf	3,5	;RP0=1, select bank1
  1461  0CAD  1303               	bcf	3,6	;RP1=0, select bank1
  1462  0CAE  00B6               	movwf	_division^(0+128)
  1463  0CAF  0879               	movf	?___ftdiv+1,w
  1464  0CB0  00B7               	movwf	(_division+1)^(0+128)
  1465  0CB1  087A               	movf	?___ftdiv+2,w
  1466  0CB2  00B8               	movwf	(_division+2)^(0+128)
  1467                           
  1468                           ;Calculadora.c: 41: if (PORTBbits.RB0 == 1){
  1469  0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  1470  0CB4  1303               	bcf	3,6	;RP1=0, select bank0
  1471  0CB5  1C06               	btfss	6,0	;volatile
  1472  0CB6  2CC6               	goto	l2236
  1473                           
  1474                           ;Calculadora.c: 42: printf("El resultado de la Suma es: %f\n", suma);
  1475  0CB7  30F0               	movlw	low (STR_7| (0+32768))
  1476  0CB8  00DA               	movwf	printf@f
  1477  0CB9  3091               	movlw	high (STR_7| (0+32768))
  1478  0CBA  00DB               	movwf	printf@f+1
  1479  0CBB  0865               	movf	_suma,w
  1480  0CBC  00DC               	movwf	?_printf+2
  1481  0CBD  0866               	movf	_suma+1,w
  1482  0CBE  00DD               	movwf	?_printf+3
  1483  0CBF  0867               	movf	_suma+2,w
  1484  0CC0  00DE               	movwf	?_printf+4
  1485  0CC1  120A  118A  2278  120A  158A  	fcall	_printf
  1486  0CC6                     l2236:	
  1487                           
  1488                           ;Calculadora.c: 43: }
  1489                           ;Calculadora.c: 44: if (PORTBbits.RB1 == 1){
  1490  0CC6  1283               	bcf	3,5	;RP0=0, select bank0
  1491  0CC7  1303               	bcf	3,6	;RP1=0, select bank0
  1492  0CC8  1C86               	btfss	6,1	;volatile
  1493  0CC9  2CE5               	goto	l2240
  1494                           
  1495                           ;Calculadora.c: 45: printf("El resultado de la Resta es: %f\n", resta);
  1496  0CCA  30CF               	movlw	low (STR_8| (0+32768))
  1497  0CCB  00DA               	movwf	printf@f
  1498  0CCC  3091               	movlw	high (STR_8| (0+32768))
  1499  0CCD  00DB               	movwf	printf@f+1
  1500  0CCE  1683               	bsf	3,5	;RP0=1, select bank1
  1501  0CCF  1303               	bcf	3,6	;RP1=0, select bank1
  1502  0CD0  083C               	movf	_resta^(0+128),w
  1503  0CD1  1283               	bcf	3,5	;RP0=0, select bank0
  1504  0CD2  1303               	bcf	3,6	;RP1=0, select bank0
  1505  0CD3  00DC               	movwf	?_printf+2
  1506  0CD4  1683               	bsf	3,5	;RP0=1, select bank1
  1507  0CD5  1303               	bcf	3,6	;RP1=0, select bank1
  1508  0CD6  083D               	movf	(_resta+1)^(0+128),w
  1509  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  1510  0CD8  1303               	bcf	3,6	;RP1=0, select bank0
  1511  0CD9  00DD               	movwf	?_printf+3
  1512  0CDA  1683               	bsf	3,5	;RP0=1, select bank1
  1513  0CDB  1303               	bcf	3,6	;RP1=0, select bank1
  1514  0CDC  083E               	movf	(_resta+2)^(0+128),w
  1515  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0CDE  1303               	bcf	3,6	;RP1=0, select bank0
  1517  0CDF  00DE               	movwf	?_printf+4
  1518  0CE0  120A  118A  2278  120A  158A  	fcall	_printf
  1519  0CE5                     l2240:	
  1520                           
  1521                           ;Calculadora.c: 47: }
  1522                           ;Calculadora.c: 48: if (PORTBbits.RB2 == 1){
  1523  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  1524  0CE6  1303               	bcf	3,6	;RP1=0, select bank0
  1525  0CE7  1D06               	btfss	6,2	;volatile
  1526  0CE8  2D04               	goto	l2244
  1527                           
  1528                           ;Calculadora.c: 49: printf("El resultado de la Multiplicacion es: %f\n", multiplicacion)
      +                          ;
  1529  0CE9  305A               	movlw	low (STR_9| (0+32768))
  1530  0CEA  00DA               	movwf	printf@f
  1531  0CEB  3091               	movlw	high (STR_9| (0+32768))
  1532  0CEC  00DB               	movwf	printf@f+1
  1533  0CED  1683               	bsf	3,5	;RP0=1, select bank1
  1534  0CEE  1303               	bcf	3,6	;RP1=0, select bank1
  1535  0CEF  0839               	movf	_multiplicacion^(0+128),w
  1536  0CF0  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0CF1  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0CF2  00DC               	movwf	?_printf+2
  1539  0CF3  1683               	bsf	3,5	;RP0=1, select bank1
  1540  0CF4  1303               	bcf	3,6	;RP1=0, select bank1
  1541  0CF5  083A               	movf	(_multiplicacion+1)^(0+128),w
  1542  0CF6  1283               	bcf	3,5	;RP0=0, select bank0
  1543  0CF7  1303               	bcf	3,6	;RP1=0, select bank0
  1544  0CF8  00DD               	movwf	?_printf+3
  1545  0CF9  1683               	bsf	3,5	;RP0=1, select bank1
  1546  0CFA  1303               	bcf	3,6	;RP1=0, select bank1
  1547  0CFB  083B               	movf	(_multiplicacion+2)^(0+128),w
  1548  0CFC  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0CFD  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0CFE  00DE               	movwf	?_printf+4
  1551  0CFF  120A  118A  2278  120A  158A  	fcall	_printf
  1552  0D04                     l2244:	
  1553                           
  1554                           ;Calculadora.c: 50: }
  1555                           ;Calculadora.c: 51: if (PORTBbits.RB3 == 1){
  1556  0D04  1283               	bcf	3,5	;RP0=0, select bank0
  1557  0D05  1303               	bcf	3,6	;RP1=0, select bank0
  1558  0D06  1D86               	btfss	6,3	;volatile
  1559  0D07  2BE1               	goto	l2210
  1560                           
  1561                           ;Calculadora.c: 52: if (b==0){
  1562  0D08  086A               	movf	_b+2,w
  1563  0D09  0469               	iorwf	_b+1,w
  1564  0D0A  0468               	iorwf	_b,w
  1565  0D0B  1D03               	skipz
  1566  0D0C  2D17               	goto	l2250
  1567                           
  1568                           ;Calculadora.c: 53: printf("Error, no es posible dividir entre 0.\n");
  1569  0D0D  3084               	movlw	low (STR_10| (0+32768))
  1570  0D0E  00DA               	movwf	printf@f
  1571  0D0F  3091               	movlw	high (STR_10| (0+32768))
  1572  0D10  00DB               	movwf	printf@f+1
  1573  0D11  120A  118A  2278  120A  158A  	fcall	_printf
  1574                           
  1575                           ;Calculadora.c: 54: }
  1576  0D16  2BE1               	goto	l2210
  1577  0D17                     l2250:	
  1578                           
  1579                           ;Calculadora.c: 55: else {
  1580                           ;Calculadora.c: 56: printf("El resultado de la Division es: %f\n", division);
  1581  0D17  30AB               	movlw	low (STR_11| (0+32768))
  1582  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  1583  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  1584  0D1A  00DA               	movwf	printf@f
  1585  0D1B  3091               	movlw	high (STR_11| (0+32768))
  1586  0D1C  00DB               	movwf	printf@f+1
  1587  0D1D  1683               	bsf	3,5	;RP0=1, select bank1
  1588  0D1E  1303               	bcf	3,6	;RP1=0, select bank1
  1589  0D1F  0836               	movf	_division^(0+128),w
  1590  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  1591  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  1592  0D22  00DC               	movwf	?_printf+2
  1593  0D23  1683               	bsf	3,5	;RP0=1, select bank1
  1594  0D24  1303               	bcf	3,6	;RP1=0, select bank1
  1595  0D25  0837               	movf	(_division+1)^(0+128),w
  1596  0D26  1283               	bcf	3,5	;RP0=0, select bank0
  1597  0D27  1303               	bcf	3,6	;RP1=0, select bank0
  1598  0D28  00DD               	movwf	?_printf+3
  1599  0D29  1683               	bsf	3,5	;RP0=1, select bank1
  1600  0D2A  1303               	bcf	3,6	;RP1=0, select bank1
  1601  0D2B  0838               	movf	(_division+2)^(0+128),w
  1602  0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  1603  0D2D  1303               	bcf	3,6	;RP1=0, select bank0
  1604  0D2E  00DE               	movwf	?_printf+4
  1605  0D2F  120A  118A  2278  120A  158A  	fcall	_printf
  1606  0D34  2BE1               	goto	l2210
  1607  0D35                     __end_of_main:	
  1608                           
  1609                           	psect	text1
  1610  0278                     __ptext1:	
  1611 ;; *************** function _printf *****************
  1612 ;; Defined at:
  1613 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  f               2   58[BANK0 ] PTR const unsigned char 
  1616 ;;		 -> STR_11(36), STR_10(39), STR_9(42), STR_8(33), 
  1617 ;;		 -> STR_7(32), STR_6(42), STR_5(42), STR_4(42), 
  1618 ;;		 -> STR_3(42), STR_2(42), STR_1(42), 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  tmpval          4   14[BANK1 ] struct .
  1621 ;;  val             4    8[BANK1 ] unsigned long 
  1622 ;;  fval            3   18[BANK1 ] unsigned long 
  1623 ;;  exp             2   12[BANK1 ] int 
  1624 ;;  prec            2    6[BANK1 ] int 
  1625 ;;  flag            2    4[BANK1 ] unsigned short 
  1626 ;;  cp              2    0        PTR const unsigned char 
  1627 ;;  len             2    0        unsigned int 
  1628 ;;  width           2    0        int 
  1629 ;;  c               1   21[BANK1 ] char 
  1630 ;;  ap              1    3[BANK1 ] PTR void [1]
  1631 ;;		 -> ?_printf(2), 
  1632 ;;  d               1    0        unsigned char 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  2   58[BANK0 ] int 
  1635 ;; Registers used:
  1636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1642 ;;      Params:         0       5       0       0       0
  1643 ;;      Locals:         0       0      22       0       0
  1644 ;;      Temps:          0       6       0       0       0
  1645 ;;      Totals:         0      11      22       0       0
  1646 ;;Total ram usage:       33 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:    3
  1649 ;; This function calls:
  1650 ;;		___awdiv
  1651 ;;		___ftadd
  1652 ;;		___ftge
  1653 ;;		___ftmul
  1654 ;;		___ftneg
  1655 ;;		___ftsub
  1656 ;;		___fttol
  1657 ;;		___lldiv
  1658 ;;		___llmod
  1659 ;;		___lltoft
  1660 ;;		___wmul
  1661 ;;		__div_to_l_
  1662 ;;		__tdiv_to_l_
  1663 ;;		_fround
  1664 ;;		_putch
  1665 ;;		_scale
  1666 ;; This function is called by:
  1667 ;;		_main
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           
  1672                           ;psect for function _printf
  1673  0278                     _printf:	
  1674                           
  1675                           ;doprnt.c: 466: va_list ap;
  1676                           ;doprnt.c: 499: signed char c;
  1677                           ;doprnt.c: 501: int width;
  1678                           ;doprnt.c: 504: int prec;
  1679                           ;doprnt.c: 508: unsigned short flag;
  1680                           ;doprnt.c: 515: char d;
  1681                           ;doprnt.c: 516: double fval;
  1682                           ;doprnt.c: 517: int exp;
  1683                           ;doprnt.c: 523: union {
  1684                           ;doprnt.c: 524: unsigned long vd;
  1685                           ;doprnt.c: 525: double integ;
  1686                           ;doprnt.c: 526: } tmpval;
  1687                           ;doprnt.c: 528: unsigned long val;
  1688                           ;doprnt.c: 529: unsigned len;
  1689                           ;doprnt.c: 530: const char * cp;
  1690                           ;doprnt.c: 533: *ap = __va_start();
  1691                           
  1692                           ;incstack = 0
  1693                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1694  0278  305C               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1695  0279  1283               	bcf	3,5	;RP0=0, select bank0
  1696  027A  1303               	bcf	3,6	;RP1=0, select bank0
  1697  027B  00DF               	movwf	??_printf
  1698  027C  085F               	movf	??_printf,w
  1699  027D  1683               	bsf	3,5	;RP0=1, select bank1
  1700  027E  1303               	bcf	3,6	;RP1=0, select bank1
  1701  027F  00A3               	movwf	printf@ap^(0+128)
  1702  0280                     l2162:	
  1703                           ;doprnt.c: 536: while(c = *f++) {
  1704                           
  1705  0280  1283               	bcf	3,5	;RP0=0, select bank0
  1706  0281  1303               	bcf	3,6	;RP1=0, select bank0
  1707  0282  085B               	movf	printf@f+1,w
  1708  0283  00E0               	movwf	??_printf+1
  1709  0284  085A               	movf	printf@f,w
  1710  0285  00DF               	movwf	??_printf
  1711  0286  0ADA               	incf	printf@f,f
  1712  0287  1903               	skipnz
  1713  0288  0ADB               	incf	printf@f+1,f
  1714  0289  0860               	movf	??_printf+1,w
  1715  028A  00FF               	movwf	127
  1716  028B  085F               	movf	??_printf,w
  1717  028C  0084               	movwf	4
  1718  028D  160A  118A  2000  120A  118A  	fcall	stringtab
  1719  0292  00E1               	movwf	??_printf+2
  1720  0293  0861               	movf	??_printf+2,w
  1721  0294  1683               	bsf	3,5	;RP0=1, select bank1
  1722  0295  1303               	bcf	3,6	;RP1=0, select bank1
  1723  0296  00B5               	movwf	printf@c^(0+128)
  1724  0297  0835               	movf	printf@c^(0+128),w
  1725  0298  1903               	btfsc	3,2
  1726  0299  0008               	return
  1727                           
  1728                           ;doprnt.c: 538: if(c != '%')
  1729  029A  3025               	movlw	37
  1730  029B  0635               	xorwf	printf@c^(0+128),w
  1731  029C  1903               	btfsc	3,2
  1732  029D  2AA5               	goto	l2022
  1733                           
  1734                           ;doprnt.c: 540: {
  1735                           ;doprnt.c: 541: (putch(c) );
  1736  029E  0835               	movf	printf@c^(0+128),w
  1737  029F  160A  118A  24E4  120A  118A  	fcall	_putch
  1738                           
  1739                           ;doprnt.c: 542: continue;
  1740  02A4  2A80               	goto	l2162
  1741  02A5                     l2022:	
  1742                           
  1743                           ;doprnt.c: 543: }
  1744                           ;doprnt.c: 548: flag = 0;
  1745  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  1746  02A6  1303               	bcf	3,6	;RP1=0, select bank1
  1747  02A7  01A4               	clrf	printf@flag^(0+128)
  1748  02A8  01A5               	clrf	(printf@flag+1)^(0+128)
  1749                           
  1750                           ;doprnt.c: 635: switch(c = *f++) {
  1751  02A9  2AAC               	goto	l2026
  1752  02AA                     l92:	
  1753                           ;doprnt.c: 662: case 'f':
  1754                           
  1755                           ;doprnt.c: 638: goto alldone;
  1756                           
  1757                           ;doprnt.c: 637: case 0:
  1758                           
  1759                           
  1760                           ;doprnt.c: 663: flag |= 0x400;
  1761  02AA  1525               	bsf	(printf@flag^(0+128)+1),2
  1762                           
  1763                           ;doprnt.c: 664: break;
  1764  02AB  2AC8               	goto	l2028
  1765  02AC                     l2026:	
  1766                           ;doprnt.c: 822: }
  1767                           
  1768                           ;doprnt.c: 813: continue;
  1769                           
  1770                           ;doprnt.c: 802: default:
  1771                           
  1772  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1773  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  1774  02AE  085B               	movf	printf@f+1,w
  1775  02AF  00E0               	movwf	??_printf+1
  1776  02B0  085A               	movf	printf@f,w
  1777  02B1  00DF               	movwf	??_printf
  1778  02B2  0ADA               	incf	printf@f,f
  1779  02B3  1903               	skipnz
  1780  02B4  0ADB               	incf	printf@f+1,f
  1781  02B5  0860               	movf	??_printf+1,w
  1782  02B6  00FF               	movwf	127
  1783  02B7  085F               	movf	??_printf,w
  1784  02B8  0084               	movwf	4
  1785  02B9  160A  118A  2000  120A  118A  	fcall	stringtab
  1786  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  1787  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  1788  02C0  00B5               	movwf	printf@c^(0+128)
  1789                           
  1790                           ; Switch size 1, requested type "space"
  1791                           ; Number of cases is 2, Range of values is 0 to 102
  1792                           ; switch strategies available:
  1793                           ; Name         Instructions Cycles
  1794                           ; simple_byte            7     4 (average)
  1795                           ; jumptable            260     6 (fixed)
  1796                           ;	Chosen strategy is simple_byte
  1797  02C1  3A00               	xorlw	0	; case 0
  1798  02C2  1903               	skipnz
  1799  02C3  2FD8               	goto	l134
  1800  02C4  3A66               	xorlw	102	; case 102
  1801  02C5  1903               	skipnz
  1802  02C6  2AAA               	goto	l92
  1803  02C7  2A80               	goto	l2162
  1804  02C8                     l2028:	
  1805                           
  1806                           ;doprnt.c: 825: if(flag & (0x700)) {
  1807  02C8  3000               	movlw	0
  1808  02C9  0524               	andwf	printf@flag^(0+128),w
  1809  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1810  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1811  02CC  00DF               	movwf	??_printf
  1812  02CD  3007               	movlw	7
  1813  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  1814  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  1815  02D0  0525               	andwf	(printf@flag+1)^(0+128),w
  1816  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1817  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1818  02D3  00E0               	movwf	??_printf+1
  1819  02D4  085F               	movf	??_printf,w
  1820  02D5  0460               	iorwf	??_printf+1,w
  1821  02D6  1903               	btfsc	3,2
  1822  02D7  2FBF               	goto	l2158
  1823                           
  1824                           ;doprnt.c: 829: prec = 6;
  1825  02D8  3006               	movlw	6
  1826  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  1827  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  1828  02DB  00A6               	movwf	printf@prec^(0+128)
  1829  02DC  3000               	movlw	0
  1830  02DD  00A7               	movwf	(printf@prec^(0+128)+1)
  1831                           
  1832                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1833  02DE  0823               	movf	printf@ap^(0+128),w
  1834  02DF  0084               	movwf	4
  1835  02E0  1383               	bcf	3,7	;select IRP bank0
  1836  02E1  0800               	movf	0,w
  1837  02E2  00B2               	movwf	printf@fval^(0+128)
  1838  02E3  0A84               	incf	4,f
  1839  02E4  0800               	movf	0,w
  1840  02E5  00B3               	movwf	(printf@fval+1)^(0+128)
  1841  02E6  0A84               	incf	4,f
  1842  02E7  0800               	movf	0,w
  1843  02E8  00B4               	movwf	(printf@fval+2)^(0+128)
  1844  02E9  3003               	movlw	3
  1845  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  1846  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  1847  02EC  00DF               	movwf	??_printf
  1848  02ED  085F               	movf	??_printf,w
  1849  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  1850  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  1851  02F0  07A3               	addwf	printf@ap^(0+128),f
  1852                           
  1853                           ;doprnt.c: 831: if(fval < 0.0) {
  1854  02F1  0832               	movf	printf@fval^(0+128),w
  1855  02F2  00F0               	movwf	___ftge@ff1
  1856  02F3  0833               	movf	(printf@fval+1)^(0+128),w
  1857  02F4  00F1               	movwf	___ftge@ff1+1
  1858  02F5  0834               	movf	(printf@fval+2)^(0+128),w
  1859  02F6  00F2               	movwf	___ftge@ff1+2
  1860  02F7  3000               	movlw	0
  1861  02F8  00F3               	movwf	___ftge@ff2
  1862  02F9  3000               	movlw	0
  1863  02FA  00F4               	movwf	___ftge@ff2+1
  1864  02FB  3000               	movlw	0
  1865  02FC  00F5               	movwf	___ftge@ff2+2
  1866  02FD  160A  118A  264B  120A  118A  	fcall	___ftge
  1867  0302  1803               	btfsc	3,0
  1868  0303  2B1D               	goto	l2042
  1869                           
  1870                           ;doprnt.c: 832: fval = -fval;
  1871  0304  1683               	bsf	3,5	;RP0=1, select bank1
  1872  0305  1303               	bcf	3,6	;RP1=0, select bank1
  1873  0306  0832               	movf	printf@fval^(0+128),w
  1874  0307  00F0               	movwf	___ftneg@f1
  1875  0308  0833               	movf	(printf@fval+1)^(0+128),w
  1876  0309  00F1               	movwf	___ftneg@f1+1
  1877  030A  0834               	movf	(printf@fval+2)^(0+128),w
  1878  030B  00F2               	movwf	___ftneg@f1+2
  1879  030C  160A  118A  24DC  120A  118A  	fcall	___ftneg
  1880  0311  0870               	movf	?___ftneg,w
  1881  0312  1683               	bsf	3,5	;RP0=1, select bank1
  1882  0313  1303               	bcf	3,6	;RP1=0, select bank1
  1883  0314  00B2               	movwf	printf@fval^(0+128)
  1884  0315  0871               	movf	?___ftneg+1,w
  1885  0316  00B3               	movwf	(printf@fval+1)^(0+128)
  1886  0317  0872               	movf	?___ftneg+2,w
  1887  0318  00B4               	movwf	(printf@fval+2)^(0+128)
  1888                           
  1889                           ;doprnt.c: 833: flag |= 0x03;
  1890  0319  3003               	movlw	3
  1891  031A  04A4               	iorwf	printf@flag^(0+128),f
  1892  031B  3000               	movlw	0
  1893  031C  04A5               	iorwf	(printf@flag+1)^(0+128),f
  1894  031D                     l2042:	
  1895                           
  1896                           ;doprnt.c: 834: }
  1897                           ;doprnt.c: 835: exp = 0;
  1898  031D  1683               	bsf	3,5	;RP0=1, select bank1
  1899  031E  1303               	bcf	3,6	;RP1=0, select bank1
  1900  031F  01AC               	clrf	printf@exp^(0+128)
  1901  0320  01AD               	clrf	(printf@exp+1)^(0+128)
  1902                           
  1903                           ;doprnt.c: 836: if( fval!=0) {
  1904  0321  0834               	movf	(printf@fval+2)^(0+128),w
  1905  0322  0433               	iorwf	(printf@fval+1)^(0+128),w
  1906  0323  0432               	iorwf	printf@fval^(0+128),w
  1907  0324  1903               	skipnz
  1908  0325  2C11               	goto	l2070
  1909                           
  1910                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1911  0326  30B2               	movlw	low (printf@fval| 0)
  1912  0327  0084               	movwf	4
  1913  0328  1383               	bcf	3,7	;select IRP bank1
  1914  0329  0800               	movf	0,w
  1915  032A  1283               	bcf	3,5	;RP0=0, select bank0
  1916  032B  1303               	bcf	3,6	;RP1=0, select bank0
  1917  032C  00DF               	movwf	??_printf
  1918  032D  0A84               	incf	4,f
  1919  032E  0800               	movf	0,w
  1920  032F  00E0               	movwf	??_printf+1
  1921  0330  0A84               	incf	4,f
  1922  0331  0800               	movf	0,w
  1923  0332  00E1               	movwf	??_printf+2
  1924  0333  0A84               	incf	4,f
  1925  0334  0800               	movf	0,w
  1926  0335  00E2               	movwf	??_printf+3
  1927  0336  300F               	movlw	15
  1928  0337                     u3285:	
  1929  0337  1003               	clrc
  1930  0338  0CE2               	rrf	??_printf+3,f
  1931  0339  0CE1               	rrf	??_printf+2,f
  1932  033A  0CE0               	rrf	??_printf+1,f
  1933  033B  0CDF               	rrf	??_printf,f
  1934  033C  3EFF               	addlw	-1
  1935  033D  1D03               	skipz
  1936  033E  2B37               	goto	u3285
  1937  033F  30FF               	movlw	255
  1938  0340  055F               	andwf	??_printf,w
  1939  0341  00E3               	movwf	??_printf+4
  1940  0342  3000               	movlw	0
  1941  0343  0560               	andwf	??_printf+1,w
  1942  0344  00E4               	movwf	??_printf+5
  1943  0345  0863               	movf	??_printf+4,w
  1944  0346  3E82               	addlw	130
  1945  0347  1683               	bsf	3,5	;RP0=1, select bank1
  1946  0348  1303               	bcf	3,6	;RP1=0, select bank1
  1947  0349  00AC               	movwf	printf@exp^(0+128)
  1948  034A  1283               	bcf	3,5	;RP0=0, select bank0
  1949  034B  1303               	bcf	3,6	;RP1=0, select bank0
  1950  034C  0864               	movf	??_printf+5,w
  1951  034D  1803               	skipnc
  1952  034E  3E01               	addlw	1
  1953  034F  3EFF               	addlw	255
  1954  0350  1683               	bsf	3,5	;RP0=1, select bank1
  1955  0351  1303               	bcf	3,6	;RP1=0, select bank1
  1956  0352  00AD               	movwf	(printf@exp+1)^(0+128)
  1957                           
  1958                           ;doprnt.c: 838: exp--;
  1959  0353  30FF               	movlw	255
  1960  0354  07AC               	addwf	printf@exp^(0+128),f
  1961  0355  1803               	skipnc
  1962  0356  0AAD               	incf	(printf@exp+1)^(0+128),f
  1963  0357  30FF               	movlw	255
  1964  0358  07AD               	addwf	(printf@exp+1)^(0+128),f
  1965                           
  1966                           ;doprnt.c: 839: exp *= 3;
  1967  0359  3003               	movlw	3
  1968  035A  00F0               	movwf	___wmul@multiplier
  1969  035B  3000               	movlw	0
  1970  035C  00F1               	movwf	___wmul@multiplier+1
  1971  035D  082D               	movf	(printf@exp+1)^(0+128),w
  1972  035E  00F3               	movwf	___wmul@multiplicand+1
  1973  035F  082C               	movf	printf@exp^(0+128),w
  1974  0360  00F2               	movwf	___wmul@multiplicand
  1975  0361  160A  118A  250D  120A  118A  	fcall	___wmul
  1976  0366  0871               	movf	?___wmul+1,w
  1977  0367  1683               	bsf	3,5	;RP0=1, select bank1
  1978  0368  1303               	bcf	3,6	;RP1=0, select bank1
  1979  0369  00AD               	movwf	(printf@exp+1)^(0+128)
  1980  036A  0870               	movf	?___wmul,w
  1981  036B  00AC               	movwf	printf@exp^(0+128)
  1982                           
  1983                           ;doprnt.c: 840: exp /= 10;
  1984  036C  300A               	movlw	10
  1985  036D  00F7               	movwf	___awdiv@divisor
  1986  036E  3000               	movlw	0
  1987  036F  00F8               	movwf	___awdiv@divisor+1
  1988  0370  082D               	movf	(printf@exp+1)^(0+128),w
  1989  0371  00FA               	movwf	___awdiv@dividend+1
  1990  0372  082C               	movf	printf@exp^(0+128),w
  1991  0373  00F9               	movwf	___awdiv@dividend
  1992  0374  160A  118A  25F0  120A  118A  	fcall	___awdiv
  1993  0379  0878               	movf	?___awdiv+1,w
  1994  037A  1683               	bsf	3,5	;RP0=1, select bank1
  1995  037B  1303               	bcf	3,6	;RP1=0, select bank1
  1996  037C  00AD               	movwf	(printf@exp+1)^(0+128)
  1997  037D  0877               	movf	?___awdiv,w
  1998  037E  00AC               	movwf	printf@exp^(0+128)
  1999                           
  2000                           ;doprnt.c: 841: if(exp < 0)
  2001  037F  1FAD               	btfss	(printf@exp+1)^(0+128),7
  2002  0380  2B87               	goto	l2058
  2003                           
  2004                           ;doprnt.c: 842: exp--;
  2005  0381  30FF               	movlw	255
  2006  0382  07AC               	addwf	printf@exp^(0+128),f
  2007  0383  1803               	skipnc
  2008  0384  0AAD               	incf	(printf@exp+1)^(0+128),f
  2009  0385  30FF               	movlw	255
  2010  0386  07AD               	addwf	(printf@exp+1)^(0+128),f
  2011  0387                     l2058:	
  2012                           
  2013                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2014  0387  032C               	decf	printf@exp^(0+128),w
  2015  0388  3AFF               	xorlw	255
  2016  0389  120A  158A  2535  120A  118A  	fcall	_scale
  2017  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2018  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2019  0390  0837               	movf	?_scale,w
  2020  0391  1683               	bsf	3,5	;RP0=1, select bank1
  2021  0392  1303               	bcf	3,6	;RP1=0, select bank1
  2022  0393  00AE               	movwf	printf@tmpval^(0+128)
  2023  0394  1283               	bcf	3,5	;RP0=0, select bank0
  2024  0395  1303               	bcf	3,6	;RP1=0, select bank0
  2025  0396  0838               	movf	?_scale+1,w
  2026  0397  1683               	bsf	3,5	;RP0=1, select bank1
  2027  0398  1303               	bcf	3,6	;RP1=0, select bank1
  2028  0399  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2029  039A  1283               	bcf	3,5	;RP0=0, select bank0
  2030  039B  1303               	bcf	3,6	;RP1=0, select bank0
  2031  039C  0839               	movf	?_scale+2,w
  2032  039D  1683               	bsf	3,5	;RP0=1, select bank1
  2033  039E  1303               	bcf	3,6	;RP1=0, select bank1
  2034  039F  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2035                           
  2036                           ;doprnt.c: 847: tmpval.integ *= fval;
  2037  03A0  0832               	movf	printf@fval^(0+128),w
  2038  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2039  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2040  03A3  00A7               	movwf	___ftmul@f1
  2041  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  2042  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  2043  03A6  0833               	movf	(printf@fval+1)^(0+128),w
  2044  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2045  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2046  03A9  00A8               	movwf	___ftmul@f1+1
  2047  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  2048  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  2049  03AC  0834               	movf	(printf@fval+2)^(0+128),w
  2050  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2051  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2052  03AF  00A9               	movwf	___ftmul@f1+2
  2053  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  2054  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  2055  03B2  082E               	movf	printf@tmpval^(0+128),w
  2056  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2057  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2058  03B5  00AA               	movwf	___ftmul@f2
  2059  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  2060  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  2061  03B8  082F               	movf	(printf@tmpval+1)^(0+128),w
  2062  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2063  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2064  03BB  00AB               	movwf	___ftmul@f2+1
  2065  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  2066  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  2067  03BE  0830               	movf	(printf@tmpval+2)^(0+128),w
  2068  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2069  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  2070  03C1  00AC               	movwf	___ftmul@f2+2
  2071  03C2  120A  158A  20CC  120A  118A  	fcall	___ftmul
  2072  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2073  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2074  03C9  0827               	movf	?___ftmul,w
  2075  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  2076  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  2077  03CC  00AE               	movwf	printf@tmpval^(0+128)
  2078  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2079  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2080  03CF  0828               	movf	?___ftmul+1,w
  2081  03D0  1683               	bsf	3,5	;RP0=1, select bank1
  2082  03D1  1303               	bcf	3,6	;RP1=0, select bank1
  2083  03D2  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2084  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2085  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2086  03D5  0829               	movf	?___ftmul+2,w
  2087  03D6  1683               	bsf	3,5	;RP0=1, select bank1
  2088  03D7  1303               	bcf	3,6	;RP1=0, select bank1
  2089  03D8  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2090                           
  2091                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2092  03D9  082E               	movf	printf@tmpval^(0+128),w
  2093  03DA  00F0               	movwf	___ftge@ff1
  2094  03DB  082F               	movf	(printf@tmpval+1)^(0+128),w
  2095  03DC  00F1               	movwf	___ftge@ff1+1
  2096  03DD  0830               	movf	(printf@tmpval+2)^(0+128),w
  2097  03DE  00F2               	movwf	___ftge@ff1+2
  2098  03DF  3000               	movlw	0
  2099  03E0  00F3               	movwf	___ftge@ff2
  2100  03E1  3080               	movlw	128
  2101  03E2  00F4               	movwf	___ftge@ff2+1
  2102  03E3  303F               	movlw	63
  2103  03E4  00F5               	movwf	___ftge@ff2+2
  2104  03E5  160A  118A  264B  120A  118A  	fcall	___ftge
  2105  03EA  1803               	btfsc	3,0
  2106  03EB  2BF4               	goto	l2066
  2107                           
  2108                           ;doprnt.c: 849: exp--;
  2109  03EC  30FF               	movlw	255
  2110  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2111  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2112  03EF  07AC               	addwf	printf@exp^(0+128),f
  2113  03F0  1803               	skipnc
  2114  03F1  0AAD               	incf	(printf@exp+1)^(0+128),f
  2115  03F2  30FF               	movlw	255
  2116  03F3  2C10               	goto	L1
  2117  03F4                     l2066:	
  2118                           
  2119                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2120  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2121  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  2122  03F6  082E               	movf	printf@tmpval^(0+128),w
  2123  03F7  00F0               	movwf	___ftge@ff1
  2124  03F8  082F               	movf	(printf@tmpval+1)^(0+128),w
  2125  03F9  00F1               	movwf	___ftge@ff1+1
  2126  03FA  0830               	movf	(printf@tmpval+2)^(0+128),w
  2127  03FB  00F2               	movwf	___ftge@ff1+2
  2128  03FC  3000               	movlw	0
  2129  03FD  00F3               	movwf	___ftge@ff2
  2130  03FE  3020               	movlw	32
  2131  03FF  00F4               	movwf	___ftge@ff2+1
  2132  0400  3041               	movlw	65
  2133  0401  00F5               	movwf	___ftge@ff2+2
  2134  0402  160A  118A  264B  120A  118A  	fcall	___ftge
  2135  0407  1C03               	btfss	3,0
  2136  0408  2C11               	goto	l2070
  2137                           
  2138                           ;doprnt.c: 851: exp++;
  2139  0409  3001               	movlw	1
  2140  040A  1683               	bsf	3,5	;RP0=1, select bank1
  2141  040B  1303               	bcf	3,6	;RP1=0, select bank1
  2142  040C  07AC               	addwf	printf@exp^(0+128),f
  2143  040D  1803               	skipnc
  2144  040E  0AAD               	incf	(printf@exp+1)^(0+128),f
  2145  040F  3000               	movlw	0
  2146  0410                     L1:	
  2147  0410  07AD               	addwf	(printf@exp+1)^(0+128),f
  2148  0411                     l2070:	
  2149                           
  2150                           ;doprnt.c: 852: }
  2151                           ;doprnt.c: 1112: if(prec <= 12)
  2152  0411  1683               	bsf	3,5	;RP0=1, select bank1
  2153  0412  1303               	bcf	3,6	;RP1=0, select bank1
  2154  0413  0827               	movf	(printf@prec+1)^(0+128),w
  2155  0414  3A80               	xorlw	128
  2156  0415  00FF               	movwf	127
  2157  0416  3080               	movlw	128
  2158  0417  027F               	subwf	127,w
  2159  0418  1D03               	skipz
  2160  0419  2C1C               	goto	u3325
  2161  041A  300D               	movlw	13
  2162  041B  0226               	subwf	printf@prec^(0+128),w
  2163  041C                     u3325:	
  2164  041C  1803               	skipnc
  2165  041D  2C57               	goto	l2074
  2166                           
  2167                           ;doprnt.c: 1113: fval += fround(prec);
  2168  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2169  041F  1303               	bcf	3,6	;RP1=0, select bank1
  2170  0420  0826               	movf	printf@prec^(0+128),w
  2171  0421  120A  118A  20C6  120A  118A  	fcall	_fround
  2172  0426  1283               	bcf	3,5	;RP0=0, select bank0
  2173  0427  1303               	bcf	3,6	;RP1=0, select bank0
  2174  0428  0837               	movf	?_fround,w
  2175  0429  00C7               	movwf	___ftadd@f1
  2176  042A  0838               	movf	?_fround+1,w
  2177  042B  00C8               	movwf	___ftadd@f1+1
  2178  042C  0839               	movf	?_fround+2,w
  2179  042D  00C9               	movwf	___ftadd@f1+2
  2180  042E  1683               	bsf	3,5	;RP0=1, select bank1
  2181  042F  1303               	bcf	3,6	;RP1=0, select bank1
  2182  0430  0832               	movf	printf@fval^(0+128),w
  2183  0431  1283               	bcf	3,5	;RP0=0, select bank0
  2184  0432  1303               	bcf	3,6	;RP1=0, select bank0
  2185  0433  00CA               	movwf	___ftadd@f2
  2186  0434  1683               	bsf	3,5	;RP0=1, select bank1
  2187  0435  1303               	bcf	3,6	;RP1=0, select bank1
  2188  0436  0833               	movf	(printf@fval+1)^(0+128),w
  2189  0437  1283               	bcf	3,5	;RP0=0, select bank0
  2190  0438  1303               	bcf	3,6	;RP1=0, select bank0
  2191  0439  00CB               	movwf	___ftadd@f2+1
  2192  043A  1683               	bsf	3,5	;RP0=1, select bank1
  2193  043B  1303               	bcf	3,6	;RP1=0, select bank1
  2194  043C  0834               	movf	(printf@fval+2)^(0+128),w
  2195  043D  1283               	bcf	3,5	;RP0=0, select bank0
  2196  043E  1303               	bcf	3,6	;RP1=0, select bank0
  2197  043F  00CC               	movwf	___ftadd@f2+2
  2198  0440  120A  158A  219F  120A  118A  	fcall	___ftadd
  2199  0445  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0446  1303               	bcf	3,6	;RP1=0, select bank0
  2201  0447  0847               	movf	?___ftadd,w
  2202  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2203  0449  1303               	bcf	3,6	;RP1=0, select bank1
  2204  044A  00B2               	movwf	printf@fval^(0+128)
  2205  044B  1283               	bcf	3,5	;RP0=0, select bank0
  2206  044C  1303               	bcf	3,6	;RP1=0, select bank0
  2207  044D  0848               	movf	?___ftadd+1,w
  2208  044E  1683               	bsf	3,5	;RP0=1, select bank1
  2209  044F  1303               	bcf	3,6	;RP1=0, select bank1
  2210  0450  00B3               	movwf	(printf@fval+1)^(0+128)
  2211  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2212  0452  1303               	bcf	3,6	;RP1=0, select bank0
  2213  0453  0849               	movf	?___ftadd+2,w
  2214  0454  1683               	bsf	3,5	;RP0=1, select bank1
  2215  0455  1303               	bcf	3,6	;RP1=0, select bank1
  2216  0456  00B4               	movwf	(printf@fval+2)^(0+128)
  2217  0457                     l2074:	
  2218                           
  2219                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2220  0457  1683               	bsf	3,5	;RP0=1, select bank1
  2221  0458  1303               	bcf	3,6	;RP1=0, select bank1
  2222  0459  082D               	movf	(printf@exp+1)^(0+128),w
  2223  045A  3A80               	xorlw	128
  2224  045B  00FF               	movwf	127
  2225  045C  3080               	movlw	128
  2226  045D  027F               	subwf	127,w
  2227  045E  1D03               	skipz
  2228  045F  2C62               	goto	u3335
  2229  0460  300A               	movlw	10
  2230  0461  022C               	subwf	printf@exp^(0+128),w
  2231  0462                     u3335:	
  2232  0462  1803               	skipnc
  2233  0463  2C95               	goto	l2082
  2234  0464  1683               	bsf	3,5	;RP0=1, select bank1
  2235  0465  1303               	bcf	3,6	;RP1=0, select bank1
  2236  0466  0834               	movf	(printf@fval+2)^(0+128),w
  2237  0467  0433               	iorwf	(printf@fval+1)^(0+128),w
  2238  0468  0432               	iorwf	printf@fval^(0+128),w
  2239  0469  1903               	skipnz
  2240  046A  2CEE               	goto	l2096
  2241  046B  0832               	movf	printf@fval^(0+128),w
  2242  046C  1283               	bcf	3,5	;RP0=0, select bank0
  2243  046D  1303               	bcf	3,6	;RP1=0, select bank0
  2244  046E  00C0               	movwf	___fttol@f1
  2245  046F  1683               	bsf	3,5	;RP0=1, select bank1
  2246  0470  1303               	bcf	3,6	;RP1=0, select bank1
  2247  0471  0833               	movf	(printf@fval+1)^(0+128),w
  2248  0472  1283               	bcf	3,5	;RP0=0, select bank0
  2249  0473  1303               	bcf	3,6	;RP1=0, select bank0
  2250  0474  00C1               	movwf	___fttol@f1+1
  2251  0475  1683               	bsf	3,5	;RP0=1, select bank1
  2252  0476  1303               	bcf	3,6	;RP1=0, select bank1
  2253  0477  0834               	movf	(printf@fval+2)^(0+128),w
  2254  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2255  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2256  047A  00C2               	movwf	___fttol@f1+2
  2257  047B  160A  118A  2772  120A  118A  	fcall	___fttol
  2258  0480  1283               	bcf	3,5	;RP0=0, select bank0
  2259  0481  1303               	bcf	3,6	;RP1=0, select bank0
  2260  0482  0843               	movf	?___fttol+3,w
  2261  0483  0442               	iorwf	?___fttol+2,w
  2262  0484  0441               	iorwf	?___fttol+1,w
  2263  0485  0440               	iorwf	?___fttol,w
  2264  0486  1D03               	skipz
  2265  0487  2CEE               	goto	l2096
  2266  0488  1683               	bsf	3,5	;RP0=1, select bank1
  2267  0489  1303               	bcf	3,6	;RP1=0, select bank1
  2268  048A  082D               	movf	(printf@exp+1)^(0+128),w
  2269  048B  3A80               	xorlw	128
  2270  048C  00FF               	movwf	127
  2271  048D  3080               	movlw	128
  2272  048E  027F               	subwf	127,w
  2273  048F  1D03               	skipz
  2274  0490  2C93               	goto	u3365
  2275  0491  3002               	movlw	2
  2276  0492  022C               	subwf	printf@exp^(0+128),w
  2277  0493                     u3365:	
  2278  0493  1C03               	skipc
  2279  0494  2CEE               	goto	l2096
  2280  0495                     l2082:	
  2281                           
  2282                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2283  0495  1683               	bsf	3,5	;RP0=1, select bank1
  2284  0496  1303               	bcf	3,6	;RP1=0, select bank1
  2285  0497  082E               	movf	printf@tmpval^(0+128),w
  2286  0498  00F0               	movwf	___ftge@ff1
  2287  0499  082F               	movf	(printf@tmpval+1)^(0+128),w
  2288  049A  00F1               	movwf	___ftge@ff1+1
  2289  049B  0830               	movf	(printf@tmpval+2)^(0+128),w
  2290  049C  00F2               	movwf	___ftge@ff1+2
  2291  049D  3070               	movlw	112
  2292  049E  00F3               	movwf	___ftge@ff2
  2293  049F  3089               	movlw	137
  2294  04A0  00F4               	movwf	___ftge@ff2+1
  2295  04A1  3040               	movlw	64
  2296  04A2  00F5               	movwf	___ftge@ff2+2
  2297  04A3  160A  118A  264B  120A  118A  	fcall	___ftge
  2298  04A8  1803               	btfsc	3,0
  2299  04A9  2CAC               	goto	l2086
  2300                           
  2301                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2302  04AA  30F7               	movlw	247
  2303  04AB  2CAD               	goto	L2
  2304  04AC                     l2086:	
  2305                           ;doprnt.c: 1122: }else{
  2306                           
  2307                           
  2308                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2309  04AC  30F8               	movlw	248
  2310  04AD                     L2:	
  2311  04AD  1683               	bsf	3,5	;RP0=1, select bank1
  2312  04AE  1303               	bcf	3,6	;RP1=0, select bank1
  2313  04AF  07AC               	addwf	printf@exp^(0+128),f
  2314  04B0  1803               	skipnc
  2315  04B1  0AAD               	incf	(printf@exp+1)^(0+128),f
  2316  04B2  30FF               	movlw	255
  2317  04B3  07AD               	addwf	(printf@exp+1)^(0+128),f
  2318                           
  2319                           ;doprnt.c: 1124: }
  2320                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2321  04B4  082C               	movf	printf@exp^(0+128),w
  2322  04B5  120A  158A  2535  120A  118A  	fcall	_scale
  2323  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2324  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2325  04BC  0837               	movf	?_scale,w
  2326  04BD  1683               	bsf	3,5	;RP0=1, select bank1
  2327  04BE  1303               	bcf	3,6	;RP1=0, select bank1
  2328  04BF  00AE               	movwf	printf@tmpval^(0+128)
  2329  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2330  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2331  04C2  0838               	movf	?_scale+1,w
  2332  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2333  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  2334  04C5  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2335  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2336  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2337  04C8  0839               	movf	?_scale+2,w
  2338  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  2339  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  2340  04CB  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2341                           
  2342                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2343  04CC  0832               	movf	printf@fval^(0+128),w
  2344  04CD  00F0               	movwf	__tdiv_to_l_@f1
  2345  04CE  0833               	movf	(printf@fval+1)^(0+128),w
  2346  04CF  00F1               	movwf	__tdiv_to_l_@f1+1
  2347  04D0  0834               	movf	(printf@fval+2)^(0+128),w
  2348  04D1  00F2               	movwf	__tdiv_to_l_@f1+2
  2349  04D2  082E               	movf	printf@tmpval^(0+128),w
  2350  04D3  00F3               	movwf	__tdiv_to_l_@f2
  2351  04D4  082F               	movf	(printf@tmpval+1)^(0+128),w
  2352  04D5  00F4               	movwf	__tdiv_to_l_@f2+1
  2353  04D6  0830               	movf	(printf@tmpval+2)^(0+128),w
  2354  04D7  00F5               	movwf	__tdiv_to_l_@f2+2
  2355  04D8  120A  118A  2003  120A  118A  	fcall	__tdiv_to_l_
  2356  04DD  0873               	movf	?__tdiv_to_l_+3,w
  2357  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  2358  04DF  1303               	bcf	3,6	;RP1=0, select bank1
  2359  04E0  00AB               	movwf	(printf@val+3)^(0+128)
  2360  04E1  0872               	movf	?__tdiv_to_l_+2,w
  2361  04E2  00AA               	movwf	(printf@val+2)^(0+128)
  2362  04E3  0871               	movf	?__tdiv_to_l_+1,w
  2363  04E4  00A9               	movwf	(printf@val+1)^(0+128)
  2364  04E5  0870               	movf	?__tdiv_to_l_,w
  2365  04E6  00A8               	movwf	printf@val^(0+128)
  2366                           
  2367                           ;doprnt.c: 1129: fval = 0.0;
  2368  04E7  3000               	movlw	0
  2369  04E8  00B2               	movwf	printf@fval^(0+128)
  2370  04E9  3000               	movlw	0
  2371  04EA  00B3               	movwf	(printf@fval+1)^(0+128)
  2372  04EB  3000               	movlw	0
  2373  04EC  00B4               	movwf	(printf@fval+2)^(0+128)
  2374                           
  2375                           ;doprnt.c: 1130: } else {
  2376  04ED  2D5D               	goto	l2100
  2377  04EE                     l2096:	
  2378                           
  2379                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2380  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  2381  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  2382  04F0  0832               	movf	printf@fval^(0+128),w
  2383  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2384  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2385  04F3  00C0               	movwf	___fttol@f1
  2386  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  2387  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  2388  04F6  0833               	movf	(printf@fval+1)^(0+128),w
  2389  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2390  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2391  04F9  00C1               	movwf	___fttol@f1+1
  2392  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  2393  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  2394  04FC  0834               	movf	(printf@fval+2)^(0+128),w
  2395  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2396  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2397  04FF  00C2               	movwf	___fttol@f1+2
  2398  0500  160A  118A  2772  120A  118A  	fcall	___fttol
  2399  0505  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0506  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0507  0843               	movf	?___fttol+3,w
  2402  0508  1683               	bsf	3,5	;RP0=1, select bank1
  2403  0509  1303               	bcf	3,6	;RP1=0, select bank1
  2404  050A  00AB               	movwf	(printf@val+3)^(0+128)
  2405  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2406  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2407  050D  0842               	movf	?___fttol+2,w
  2408  050E  1683               	bsf	3,5	;RP0=1, select bank1
  2409  050F  1303               	bcf	3,6	;RP1=0, select bank1
  2410  0510  00AA               	movwf	(printf@val+2)^(0+128)
  2411  0511  1283               	bcf	3,5	;RP0=0, select bank0
  2412  0512  1303               	bcf	3,6	;RP1=0, select bank0
  2413  0513  0841               	movf	?___fttol+1,w
  2414  0514  1683               	bsf	3,5	;RP0=1, select bank1
  2415  0515  1303               	bcf	3,6	;RP1=0, select bank1
  2416  0516  00A9               	movwf	(printf@val+1)^(0+128)
  2417  0517  1283               	bcf	3,5	;RP0=0, select bank0
  2418  0518  1303               	bcf	3,6	;RP1=0, select bank0
  2419  0519  0840               	movf	?___fttol,w
  2420  051A  1683               	bsf	3,5	;RP0=1, select bank1
  2421  051B  1303               	bcf	3,6	;RP1=0, select bank1
  2422  051C  00A8               	movwf	printf@val^(0+128)
  2423                           
  2424                           ;doprnt.c: 1132: fval -= (double)val;
  2425  051D  082B               	movf	(printf@val+3)^(0+128),w
  2426  051E  00FB               	movwf	___lltoft@c+3
  2427  051F  082A               	movf	(printf@val+2)^(0+128),w
  2428  0520  00FA               	movwf	___lltoft@c+2
  2429  0521  0829               	movf	(printf@val+1)^(0+128),w
  2430  0522  00F9               	movwf	___lltoft@c+1
  2431  0523  0828               	movf	printf@val^(0+128),w
  2432  0524  00F8               	movwf	___lltoft@c
  2433  0525  160A  118A  252E  120A  118A  	fcall	___lltoft
  2434  052A  0878               	movf	?___lltoft,w
  2435  052B  1283               	bcf	3,5	;RP0=0, select bank0
  2436  052C  1303               	bcf	3,6	;RP1=0, select bank0
  2437  052D  00D4               	movwf	___ftsub@f2
  2438  052E  0879               	movf	?___lltoft+1,w
  2439  052F  00D5               	movwf	___ftsub@f2+1
  2440  0530  087A               	movf	?___lltoft+2,w
  2441  0531  00D6               	movwf	___ftsub@f2+2
  2442  0532  1683               	bsf	3,5	;RP0=1, select bank1
  2443  0533  1303               	bcf	3,6	;RP1=0, select bank1
  2444  0534  0832               	movf	printf@fval^(0+128),w
  2445  0535  1283               	bcf	3,5	;RP0=0, select bank0
  2446  0536  1303               	bcf	3,6	;RP1=0, select bank0
  2447  0537  00D7               	movwf	___ftsub@f1
  2448  0538  1683               	bsf	3,5	;RP0=1, select bank1
  2449  0539  1303               	bcf	3,6	;RP1=0, select bank1
  2450  053A  0833               	movf	(printf@fval+1)^(0+128),w
  2451  053B  1283               	bcf	3,5	;RP0=0, select bank0
  2452  053C  1303               	bcf	3,6	;RP1=0, select bank0
  2453  053D  00D8               	movwf	___ftsub@f1+1
  2454  053E  1683               	bsf	3,5	;RP0=1, select bank1
  2455  053F  1303               	bcf	3,6	;RP1=0, select bank1
  2456  0540  0834               	movf	(printf@fval+2)^(0+128),w
  2457  0541  1283               	bcf	3,5	;RP0=0, select bank0
  2458  0542  1303               	bcf	3,6	;RP1=0, select bank0
  2459  0543  00D9               	movwf	___ftsub@f1+2
  2460  0544  160A  118A  24EC  120A  118A  	fcall	___ftsub
  2461  0549  1283               	bcf	3,5	;RP0=0, select bank0
  2462  054A  1303               	bcf	3,6	;RP1=0, select bank0
  2463  054B  0854               	movf	?___ftsub,w
  2464  054C  1683               	bsf	3,5	;RP0=1, select bank1
  2465  054D  1303               	bcf	3,6	;RP1=0, select bank1
  2466  054E  00B2               	movwf	printf@fval^(0+128)
  2467  054F  1283               	bcf	3,5	;RP0=0, select bank0
  2468  0550  1303               	bcf	3,6	;RP1=0, select bank0
  2469  0551  0855               	movf	?___ftsub+1,w
  2470  0552  1683               	bsf	3,5	;RP0=1, select bank1
  2471  0553  1303               	bcf	3,6	;RP1=0, select bank1
  2472  0554  00B3               	movwf	(printf@fval+1)^(0+128)
  2473  0555  1283               	bcf	3,5	;RP0=0, select bank0
  2474  0556  1303               	bcf	3,6	;RP1=0, select bank0
  2475  0557  0856               	movf	?___ftsub+2,w
  2476  0558  1683               	bsf	3,5	;RP0=1, select bank1
  2477  0559  1303               	bcf	3,6	;RP1=0, select bank1
  2478  055A  00B4               	movwf	(printf@fval+2)^(0+128)
  2479                           
  2480                           ;doprnt.c: 1133: exp = 0;
  2481  055B  01AC               	clrf	printf@exp^(0+128)
  2482  055C  01AD               	clrf	(printf@exp+1)^(0+128)
  2483  055D                     l2100:	
  2484                           
  2485                           ;doprnt.c: 1134: }
  2486                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2487  055D  01B5               	clrf	printf@c^(0+128)
  2488  055E  0AB5               	incf	printf@c^(0+128),f
  2489  055F  300A               	movlw	10
  2490  0560  0635               	xorwf	printf@c^(0+128),w
  2491  0561  1903               	btfsc	3,2
  2492  0562  2DB7               	goto	l2112
  2493  0563                     l2106:	
  2494                           
  2495                           ;doprnt.c: 1137: if(val < dpowers[c])
  2496  0563  0835               	movf	printf@c^(0+128),w
  2497  0564  1283               	bcf	3,5	;RP0=0, select bank0
  2498  0565  1303               	bcf	3,6	;RP1=0, select bank0
  2499  0566  00DF               	movwf	??_printf
  2500  0567  3001               	movlw	1
  2501  0568                     u3395:	
  2502  0568  1003               	clrc
  2503  0569  0DDF               	rlf	??_printf,f
  2504  056A  3EFF               	addlw	-1
  2505  056B  1D03               	skipz
  2506  056C  2D68               	goto	u3395
  2507  056D  1003               	clrc
  2508  056E  0D5F               	rlf	??_printf,w
  2509  056F  3E12               	addlw	low (_dpowers| (0+32768))
  2510  0570  0084               	movwf	4
  2511  0571  3090               	movlw	high (_dpowers| (0+32768))
  2512  0572  1803               	skipnc
  2513  0573  3E01               	addlw	1
  2514  0574  00FF               	movwf	127
  2515  0575  160A  118A  2000  120A  118A  	fcall	stringtab
  2516  057A  00E0               	movwf	??_printf+1
  2517  057B  160A  118A  2000  120A  118A  	fcall	stringtab
  2518  0580  00E1               	movwf	??_printf+2
  2519  0581  160A  118A  2000  120A  118A  	fcall	stringtab
  2520  0586  00E2               	movwf	??_printf+3
  2521  0587  160A  118A  2000  120A  118A  	fcall	stringtab
  2522  058C  00E3               	movwf	??_printf+4
  2523  058D  0863               	movf	??_printf+4,w
  2524  058E  1683               	bsf	3,5	;RP0=1, select bank1
  2525  058F  1303               	bcf	3,6	;RP1=0, select bank1
  2526  0590  022B               	subwf	(printf@val+3)^(0+128),w
  2527  0591  1D03               	skipz
  2528  0592  2DA9               	goto	u3405
  2529  0593  1283               	bcf	3,5	;RP0=0, select bank0
  2530  0594  1303               	bcf	3,6	;RP1=0, select bank0
  2531  0595  0862               	movf	??_printf+3,w
  2532  0596  1683               	bsf	3,5	;RP0=1, select bank1
  2533  0597  1303               	bcf	3,6	;RP1=0, select bank1
  2534  0598  022A               	subwf	(printf@val+2)^(0+128),w
  2535  0599  1D03               	skipz
  2536  059A  2DA9               	goto	u3405
  2537  059B  1283               	bcf	3,5	;RP0=0, select bank0
  2538  059C  1303               	bcf	3,6	;RP1=0, select bank0
  2539  059D  0861               	movf	??_printf+2,w
  2540  059E  1683               	bsf	3,5	;RP0=1, select bank1
  2541  059F  1303               	bcf	3,6	;RP1=0, select bank1
  2542  05A0  0229               	subwf	(printf@val+1)^(0+128),w
  2543  05A1  1D03               	skipz
  2544  05A2  2DA9               	goto	u3405
  2545  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  2546  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  2547  05A5  0860               	movf	??_printf+1,w
  2548  05A6  1683               	bsf	3,5	;RP0=1, select bank1
  2549  05A7  1303               	bcf	3,6	;RP1=0, select bank1
  2550  05A8  0228               	subwf	printf@val^(0+128),w
  2551  05A9                     u3405:	
  2552  05A9  1C03               	btfss	3,0
  2553  05AA  2DB7               	goto	l2112
  2554                           
  2555                           ;doprnt.c: 1138: break;
  2556  05AB  3001               	movlw	1
  2557  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  2558  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  2559  05AE  00DF               	movwf	??_printf
  2560  05AF  085F               	movf	??_printf,w
  2561  05B0  1683               	bsf	3,5	;RP0=1, select bank1
  2562  05B1  1303               	bcf	3,6	;RP1=0, select bank1
  2563  05B2  07B5               	addwf	printf@c^(0+128),f
  2564  05B3  300A               	movlw	10
  2565  05B4  0635               	xorwf	printf@c^(0+128),w
  2566  05B5  1D03               	btfss	3,2
  2567  05B6  2D63               	goto	l2106
  2568  05B7                     l2112:	
  2569                           
  2570                           ;doprnt.c: 1175: {
  2571                           ;doprnt.c: 1188: if(flag & 0x03)
  2572  05B7  3003               	movlw	3
  2573  05B8  0524               	andwf	printf@flag^(0+128),w
  2574  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  2575  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  2576  05BB  00DF               	movwf	??_printf
  2577  05BC  3000               	movlw	0
  2578  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  2579  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  2580  05BF  0525               	andwf	(printf@flag+1)^(0+128),w
  2581  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  2582  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  2583  05C2  00E0               	movwf	??_printf+1
  2584  05C3  085F               	movf	??_printf,w
  2585  05C4  0460               	iorwf	??_printf+1,w
  2586  05C5  1903               	btfsc	3,2
  2587  05C6  2DCD               	goto	l2122
  2588                           
  2589                           ;doprnt.c: 1190: (putch('-') );
  2590  05C7  302D               	movlw	45
  2591  05C8                     L5:	
  2592  05C8  160A  118A  24E4  120A  118A  	fcall	_putch
  2593  05CD                     l2122:	
  2594                           ;doprnt.c: 1195: }
  2595                           ;doprnt.c: 1196: while(c--) {
  2596                           
  2597  05CD  30FF               	movlw	255
  2598  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2599  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2600  05D0  00DF               	movwf	??_printf
  2601  05D1  085F               	movf	??_printf,w
  2602  05D2  1683               	bsf	3,5	;RP0=1, select bank1
  2603  05D3  1303               	bcf	3,6	;RP1=0, select bank1
  2604  05D4  07B5               	addwf	printf@c^(0+128),f
  2605  05D5  0A35               	incf	printf@c^(0+128),w
  2606  05D6  1903               	btfsc	3,2
  2607  05D7  2E4D               	goto	l2128
  2608                           
  2609                           ;doprnt.c: 1200: {
  2610                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  2611  05D8  1683               	bsf	3,5	;RP0=1, select bank1
  2612  05D9  1303               	bcf	3,6	;RP1=0, select bank1
  2613  05DA  0835               	movf	printf@c^(0+128),w
  2614  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  2615  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  2616  05DD  00DF               	movwf	??_printf
  2617  05DE  3001               	movlw	1
  2618  05DF                     u3435:	
  2619  05DF  1003               	clrc
  2620  05E0  0DDF               	rlf	??_printf,f
  2621  05E1  3EFF               	addlw	-1
  2622  05E2  1D03               	skipz
  2623  05E3  2DDF               	goto	u3435
  2624  05E4  1003               	clrc
  2625  05E5  0D5F               	rlf	??_printf,w
  2626  05E6  3E12               	addlw	low (_dpowers| (0+32768))
  2627  05E7  0084               	movwf	4
  2628  05E8  3090               	movlw	high (_dpowers| (0+32768))
  2629  05E9  1803               	skipnc
  2630  05EA  3E01               	addlw	1
  2631  05EB  00FF               	movwf	127
  2632  05EC  160A  118A  2000  120A  118A  	fcall	stringtab
  2633  05F1  00F0               	movwf	___lldiv@divisor
  2634  05F2  160A  118A  2000  120A  118A  	fcall	stringtab
  2635  05F7  00F1               	movwf	___lldiv@divisor+1
  2636  05F8  160A  118A  2000  120A  118A  	fcall	stringtab
  2637  05FD  00F2               	movwf	___lldiv@divisor+2
  2638  05FE  160A  118A  2000  120A  118A  	fcall	stringtab
  2639  0603  00F3               	movwf	___lldiv@divisor+3
  2640  0604  1683               	bsf	3,5	;RP0=1, select bank1
  2641  0605  1303               	bcf	3,6	;RP1=0, select bank1
  2642  0606  082B               	movf	(printf@val+3)^(0+128),w
  2643  0607  00F7               	movwf	___lldiv@dividend+3
  2644  0608  082A               	movf	(printf@val+2)^(0+128),w
  2645  0609  00F6               	movwf	___lldiv@dividend+2
  2646  060A  0829               	movf	(printf@val+1)^(0+128),w
  2647  060B  00F5               	movwf	___lldiv@dividend+1
  2648  060C  0828               	movf	printf@val^(0+128),w
  2649  060D  00F4               	movwf	___lldiv@dividend
  2650  060E  160A  118A  26A8  120A  118A  	fcall	___lldiv
  2651  0613  0873               	movf	?___lldiv+3,w
  2652  0614  1683               	bsf	3,5	;RP0=1, select bank1
  2653  0615  1303               	bcf	3,6	;RP1=0, select bank1
  2654  0616  00B1               	movwf	(printf@tmpval+3)^(0+128)
  2655  0617  0872               	movf	?___lldiv+2,w
  2656  0618  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2657  0619  0871               	movf	?___lldiv+1,w
  2658  061A  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2659  061B  0870               	movf	?___lldiv,w
  2660  061C  00AE               	movwf	printf@tmpval^(0+128)
  2661                           
  2662                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2663  061D  3000               	movlw	0
  2664  061E  00F3               	movwf	___llmod@divisor+3
  2665  061F  3000               	movlw	0
  2666  0620  00F2               	movwf	___llmod@divisor+2
  2667  0621  3000               	movlw	0
  2668  0622  00F1               	movwf	___llmod@divisor+1
  2669  0623  300A               	movlw	10
  2670  0624  00F0               	movwf	___llmod@divisor
  2671  0625  0831               	movf	(printf@tmpval+3)^(0+128),w
  2672  0626  00F7               	movwf	___llmod@dividend+3
  2673  0627  0830               	movf	(printf@tmpval+2)^(0+128),w
  2674  0628  00F6               	movwf	___llmod@dividend+2
  2675  0629  082F               	movf	(printf@tmpval+1)^(0+128),w
  2676  062A  00F5               	movwf	___llmod@dividend+1
  2677  062B  082E               	movf	printf@tmpval^(0+128),w
  2678  062C  00F4               	movwf	___llmod@dividend
  2679  062D  160A  118A  25A4  120A  118A  	fcall	___llmod
  2680  0632  0873               	movf	?___llmod+3,w
  2681  0633  1683               	bsf	3,5	;RP0=1, select bank1
  2682  0634  1303               	bcf	3,6	;RP1=0, select bank1
  2683  0635  00B1               	movwf	(printf@tmpval+3)^(0+128)
  2684  0636  0872               	movf	?___llmod+2,w
  2685  0637  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2686  0638  0871               	movf	?___llmod+1,w
  2687  0639  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2688  063A  0870               	movf	?___llmod,w
  2689  063B  00AE               	movwf	printf@tmpval^(0+128)
  2690                           
  2691                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  2692  063C  082E               	movf	printf@tmpval^(0+128),w
  2693  063D  3E30               	addlw	48
  2694  063E  2DC8               	goto	L5
  2695  063F                     l2124:	
  2696                           ;doprnt.c: 1204: }
  2697                           ;doprnt.c: 1206: }
  2698                           ;doprnt.c: 1207: while(exp > 0) {
  2699                           
  2700                           
  2701                           ;doprnt.c: 1208: (putch('0') );
  2702  063F  3030               	movlw	48
  2703  0640  160A  118A  24E4  120A  118A  	fcall	_putch
  2704                           
  2705                           ;doprnt.c: 1209: exp--;
  2706  0645  30FF               	movlw	255
  2707  0646  1683               	bsf	3,5	;RP0=1, select bank1
  2708  0647  1303               	bcf	3,6	;RP1=0, select bank1
  2709  0648  07AC               	addwf	printf@exp^(0+128),f
  2710  0649  1803               	skipnc
  2711  064A  0AAD               	incf	(printf@exp+1)^(0+128),f
  2712  064B  30FF               	movlw	255
  2713  064C  07AD               	addwf	(printf@exp+1)^(0+128),f
  2714  064D                     l2128:	
  2715  064D  082D               	movf	(printf@exp+1)^(0+128),w
  2716  064E  3A80               	xorlw	128
  2717  064F  00FF               	movwf	127
  2718  0650  3080               	movlw	128
  2719  0651  027F               	subwf	127,w
  2720  0652  1D03               	skipz
  2721  0653  2E56               	goto	u3455
  2722  0654  3001               	movlw	1
  2723  0655  022C               	subwf	printf@exp^(0+128),w
  2724  0656                     u3455:	
  2725  0656  1803               	skipnc
  2726  0657  2E3F               	goto	l2124
  2727                           
  2728                           ;doprnt.c: 1210: }
  2729                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2730  0658  1683               	bsf	3,5	;RP0=1, select bank1
  2731  0659  1303               	bcf	3,6	;RP1=0, select bank1
  2732  065A  0827               	movf	(printf@prec+1)^(0+128),w
  2733  065B  3A80               	xorlw	128
  2734  065C  00FF               	movwf	127
  2735  065D  3080               	movlw	128
  2736  065E  027F               	subwf	127,w
  2737  065F  1D03               	skipz
  2738  0660  2E63               	goto	u3465
  2739  0661  3009               	movlw	9
  2740  0662  0226               	subwf	printf@prec^(0+128),w
  2741  0663                     u3465:	
  2742  0663  1C03               	skipc
  2743  0664  2E67               	goto	l2134
  2744                           
  2745                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2746  0665  3008               	movlw	8
  2747  0666  2E6A               	goto	L3
  2748  0667                     l2134:	
  2749                           
  2750                           ;doprnt.c: 1213: else
  2751                           ;doprnt.c: 1214: c = prec;
  2752  0667  1683               	bsf	3,5	;RP0=1, select bank1
  2753  0668  1303               	bcf	3,6	;RP1=0, select bank1
  2754  0669  0826               	movf	printf@prec^(0+128),w
  2755  066A                     L3:	
  2756  066A  1283               	bcf	3,5	;RP0=0, select bank0
  2757  066B  1303               	bcf	3,6	;RP1=0, select bank0
  2758  066C  00DF               	movwf	??_printf
  2759  066D  085F               	movf	??_printf,w
  2760  066E  1683               	bsf	3,5	;RP0=1, select bank1
  2761  066F  1303               	bcf	3,6	;RP1=0, select bank1
  2762  0670  00B5               	movwf	printf@c^(0+128)
  2763                           
  2764                           ;doprnt.c: 1215: prec -= c;
  2765  0671  0835               	movf	printf@c^(0+128),w
  2766  0672  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0673  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0674  00DF               	movwf	??_printf
  2769  0675  01E0               	clrf	??_printf+1
  2770  0676  1BDF               	btfsc	??_printf,7
  2771  0677  03E0               	decf	??_printf+1,f
  2772  0678  085F               	movf	??_printf,w
  2773  0679  1683               	bsf	3,5	;RP0=1, select bank1
  2774  067A  1303               	bcf	3,6	;RP1=0, select bank1
  2775  067B  02A6               	subwf	printf@prec^(0+128),f
  2776  067C  1283               	bcf	3,5	;RP0=0, select bank0
  2777  067D  1303               	bcf	3,6	;RP1=0, select bank0
  2778  067E  0860               	movf	??_printf+1,w
  2779  067F  1683               	bsf	3,5	;RP0=1, select bank1
  2780  0680  1303               	bcf	3,6	;RP1=0, select bank1
  2781  0681  1C03               	skipc
  2782  0682  03A7               	decf	(printf@prec+1)^(0+128),f
  2783  0683  02A7               	subwf	(printf@prec+1)^(0+128),f
  2784                           
  2785                           ;doprnt.c: 1219: if(c)
  2786  0684  0835               	movf	printf@c^(0+128),w
  2787  0685  1903               	btfsc	3,2
  2788  0686  2E8D               	goto	l2140
  2789                           
  2790                           ;doprnt.c: 1221: (putch('.') );
  2791  0687  302E               	movlw	46
  2792  0688  160A  118A  24E4  120A  118A  	fcall	_putch
  2793  068D                     l2140:	
  2794                           
  2795                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2796  068D  1683               	bsf	3,5	;RP0=1, select bank1
  2797  068E  1303               	bcf	3,6	;RP1=0, select bank1
  2798  068F  0835               	movf	printf@c^(0+128),w
  2799  0690  120A  158A  2535  120A  118A  	fcall	_scale
  2800  0695  1283               	bcf	3,5	;RP0=0, select bank0
  2801  0696  1303               	bcf	3,6	;RP1=0, select bank0
  2802  0697  0837               	movf	?_scale,w
  2803  0698  1683               	bsf	3,5	;RP0=1, select bank1
  2804  0699  1303               	bcf	3,6	;RP1=0, select bank1
  2805  069A  00A0               	movwf	_printf$661^(0+128)
  2806  069B  1283               	bcf	3,5	;RP0=0, select bank0
  2807  069C  1303               	bcf	3,6	;RP1=0, select bank0
  2808  069D  0838               	movf	?_scale+1,w
  2809  069E  1683               	bsf	3,5	;RP0=1, select bank1
  2810  069F  1303               	bcf	3,6	;RP1=0, select bank1
  2811  06A0  00A1               	movwf	(_printf$661+1)^(0+128)
  2812  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  2813  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  2814  06A3  0839               	movf	?_scale+2,w
  2815  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  2816  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  2817  06A6  00A2               	movwf	(_printf$661+2)^(0+128)
  2818                           
  2819                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2820  06A7  0820               	movf	_printf$661^(0+128),w
  2821  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  2822  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  2823  06AA  00AA               	movwf	___ftmul@f2
  2824  06AB  1683               	bsf	3,5	;RP0=1, select bank1
  2825  06AC  1303               	bcf	3,6	;RP1=0, select bank1
  2826  06AD  0821               	movf	(_printf$661+1)^(0+128),w
  2827  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  2828  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  2829  06B0  00AB               	movwf	___ftmul@f2+1
  2830  06B1  1683               	bsf	3,5	;RP0=1, select bank1
  2831  06B2  1303               	bcf	3,6	;RP1=0, select bank1
  2832  06B3  0822               	movf	(_printf$661+2)^(0+128),w
  2833  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  2834  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  2835  06B6  00AC               	movwf	___ftmul@f2+2
  2836  06B7  1683               	bsf	3,5	;RP0=1, select bank1
  2837  06B8  1303               	bcf	3,6	;RP1=0, select bank1
  2838  06B9  0832               	movf	printf@fval^(0+128),w
  2839  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  2840  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  2841  06BC  00A7               	movwf	___ftmul@f1
  2842  06BD  1683               	bsf	3,5	;RP0=1, select bank1
  2843  06BE  1303               	bcf	3,6	;RP1=0, select bank1
  2844  06BF  0833               	movf	(printf@fval+1)^(0+128),w
  2845  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  2846  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  2847  06C2  00A8               	movwf	___ftmul@f1+1
  2848  06C3  1683               	bsf	3,5	;RP0=1, select bank1
  2849  06C4  1303               	bcf	3,6	;RP1=0, select bank1
  2850  06C5  0834               	movf	(printf@fval+2)^(0+128),w
  2851  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  2852  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  2853  06C8  00A9               	movwf	___ftmul@f1+2
  2854  06C9  120A  158A  20CC  120A  118A  	fcall	___ftmul
  2855  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2856  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2857  06D0  0827               	movf	?___ftmul,w
  2858  06D1  00C0               	movwf	___fttol@f1
  2859  06D2  0828               	movf	?___ftmul+1,w
  2860  06D3  00C1               	movwf	___fttol@f1+1
  2861  06D4  0829               	movf	?___ftmul+2,w
  2862  06D5  00C2               	movwf	___fttol@f1+2
  2863  06D6  160A  118A  2772  120A  118A  	fcall	___fttol
  2864  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  2865  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  2866  06DD  0843               	movf	?___fttol+3,w
  2867  06DE  1683               	bsf	3,5	;RP0=1, select bank1
  2868  06DF  1303               	bcf	3,6	;RP1=0, select bank1
  2869  06E0  00AB               	movwf	(printf@val+3)^(0+128)
  2870  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  2871  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  2872  06E3  0842               	movf	?___fttol+2,w
  2873  06E4  1683               	bsf	3,5	;RP0=1, select bank1
  2874  06E5  1303               	bcf	3,6	;RP1=0, select bank1
  2875  06E6  00AA               	movwf	(printf@val+2)^(0+128)
  2876  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  2877  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  2878  06E9  0841               	movf	?___fttol+1,w
  2879  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  2880  06EB  1303               	bcf	3,6	;RP1=0, select bank1
  2881  06EC  00A9               	movwf	(printf@val+1)^(0+128)
  2882  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  2883  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  2884  06EF  0840               	movf	?___fttol,w
  2885  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  2886  06F1  1303               	bcf	3,6	;RP1=0, select bank1
  2887  06F2                     L4:	
  2888  06F2  00A8               	movwf	printf@val^(0+128)
  2889  06F3  30FF               	movlw	255
  2890  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  2891  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  2892  06F6  00DF               	movwf	??_printf
  2893  06F7  085F               	movf	??_printf,w
  2894  06F8  1683               	bsf	3,5	;RP0=1, select bank1
  2895  06F9  1303               	bcf	3,6	;RP1=0, select bank1
  2896  06FA  07B5               	addwf	printf@c^(0+128),f
  2897  06FB  0A35               	incf	printf@c^(0+128),w
  2898  06FC  1903               	btfsc	3,2
  2899  06FD  2FBA               	goto	l2156
  2900                           
  2901                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2902                           
  2903                           ;doprnt.c: 1228: while(c--) {
  2904  06FE  0835               	movf	printf@c^(0+128),w
  2905  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  2906  0700  1303               	bcf	3,6	;RP1=0, select bank0
  2907  0701  00DF               	movwf	??_printf
  2908  0702  3001               	movlw	1
  2909  0703                     u3485:	
  2910  0703  1003               	clrc
  2911  0704  0DDF               	rlf	??_printf,f
  2912  0705  3EFF               	addlw	-1
  2913  0706  1D03               	skipz
  2914  0707  2F03               	goto	u3485
  2915  0708  1003               	clrc
  2916  0709  0D5F               	rlf	??_printf,w
  2917  070A  3E12               	addlw	low (_dpowers| (0+32768))
  2918  070B  0084               	movwf	4
  2919  070C  3090               	movlw	high (_dpowers| (0+32768))
  2920  070D  1803               	skipnc
  2921  070E  3E01               	addlw	1
  2922  070F  00FF               	movwf	127
  2923  0710  160A  118A  2000  120A  118A  	fcall	stringtab
  2924  0715  00F0               	movwf	___lldiv@divisor
  2925  0716  160A  118A  2000  120A  118A  	fcall	stringtab
  2926  071B  00F1               	movwf	___lldiv@divisor+1
  2927  071C  160A  118A  2000  120A  118A  	fcall	stringtab
  2928  0721  00F2               	movwf	___lldiv@divisor+2
  2929  0722  160A  118A  2000  120A  118A  	fcall	stringtab
  2930  0727  00F3               	movwf	___lldiv@divisor+3
  2931  0728  1683               	bsf	3,5	;RP0=1, select bank1
  2932  0729  1303               	bcf	3,6	;RP1=0, select bank1
  2933  072A  082B               	movf	(printf@val+3)^(0+128),w
  2934  072B  00F7               	movwf	___lldiv@dividend+3
  2935  072C  082A               	movf	(printf@val+2)^(0+128),w
  2936  072D  00F6               	movwf	___lldiv@dividend+2
  2937  072E  0829               	movf	(printf@val+1)^(0+128),w
  2938  072F  00F5               	movwf	___lldiv@dividend+1
  2939  0730  0828               	movf	printf@val^(0+128),w
  2940  0731  00F4               	movwf	___lldiv@dividend
  2941  0732  160A  118A  26A8  120A  118A  	fcall	___lldiv
  2942  0737  0873               	movf	?___lldiv+3,w
  2943  0738  1683               	bsf	3,5	;RP0=1, select bank1
  2944  0739  1303               	bcf	3,6	;RP1=0, select bank1
  2945  073A  00B1               	movwf	(printf@tmpval+3)^(0+128)
  2946  073B  0872               	movf	?___lldiv+2,w
  2947  073C  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2948  073D  0871               	movf	?___lldiv+1,w
  2949  073E  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2950  073F  0870               	movf	?___lldiv,w
  2951  0740  00AE               	movwf	printf@tmpval^(0+128)
  2952                           
  2953                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2954  0741  3000               	movlw	0
  2955  0742  00F3               	movwf	___llmod@divisor+3
  2956  0743  3000               	movlw	0
  2957  0744  00F2               	movwf	___llmod@divisor+2
  2958  0745  3000               	movlw	0
  2959  0746  00F1               	movwf	___llmod@divisor+1
  2960  0747  300A               	movlw	10
  2961  0748  00F0               	movwf	___llmod@divisor
  2962  0749  0831               	movf	(printf@tmpval+3)^(0+128),w
  2963  074A  00F7               	movwf	___llmod@dividend+3
  2964  074B  0830               	movf	(printf@tmpval+2)^(0+128),w
  2965  074C  00F6               	movwf	___llmod@dividend+2
  2966  074D  082F               	movf	(printf@tmpval+1)^(0+128),w
  2967  074E  00F5               	movwf	___llmod@dividend+1
  2968  074F  082E               	movf	printf@tmpval^(0+128),w
  2969  0750  00F4               	movwf	___llmod@dividend
  2970  0751  160A  118A  25A4  120A  118A  	fcall	___llmod
  2971  0756  0873               	movf	?___llmod+3,w
  2972  0757  1683               	bsf	3,5	;RP0=1, select bank1
  2973  0758  1303               	bcf	3,6	;RP1=0, select bank1
  2974  0759  00B1               	movwf	(printf@tmpval+3)^(0+128)
  2975  075A  0872               	movf	?___llmod+2,w
  2976  075B  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2977  075C  0871               	movf	?___llmod+1,w
  2978  075D  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2979  075E  0870               	movf	?___llmod,w
  2980  075F  00AE               	movwf	printf@tmpval^(0+128)
  2981                           
  2982                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  2983  0760  082E               	movf	printf@tmpval^(0+128),w
  2984  0761  3E30               	addlw	48
  2985  0762  160A  118A  24E4  120A  118A  	fcall	_putch
  2986                           
  2987                           ;doprnt.c: 1232: val %= dpowers[c];
  2988  0767  1683               	bsf	3,5	;RP0=1, select bank1
  2989  0768  1303               	bcf	3,6	;RP1=0, select bank1
  2990  0769  0835               	movf	printf@c^(0+128),w
  2991  076A  1283               	bcf	3,5	;RP0=0, select bank0
  2992  076B  1303               	bcf	3,6	;RP1=0, select bank0
  2993  076C  00DF               	movwf	??_printf
  2994  076D  3001               	movlw	1
  2995  076E                     u3495:	
  2996  076E  1003               	clrc
  2997  076F  0DDF               	rlf	??_printf,f
  2998  0770  3EFF               	addlw	-1
  2999  0771  1D03               	skipz
  3000  0772  2F6E               	goto	u3495
  3001  0773  1003               	clrc
  3002  0774  0D5F               	rlf	??_printf,w
  3003  0775  3E12               	addlw	low (_dpowers| (0+32768))
  3004  0776  0084               	movwf	4
  3005  0777  3090               	movlw	high (_dpowers| (0+32768))
  3006  0778  1803               	skipnc
  3007  0779  3E01               	addlw	1
  3008  077A  00FF               	movwf	127
  3009  077B  160A  118A  2000  120A  118A  	fcall	stringtab
  3010  0780  00F0               	movwf	___llmod@divisor
  3011  0781  160A  118A  2000  120A  118A  	fcall	stringtab
  3012  0786  00F1               	movwf	___llmod@divisor+1
  3013  0787  160A  118A  2000  120A  118A  	fcall	stringtab
  3014  078C  00F2               	movwf	___llmod@divisor+2
  3015  078D  160A  118A  2000  120A  118A  	fcall	stringtab
  3016  0792  00F3               	movwf	___llmod@divisor+3
  3017  0793  1683               	bsf	3,5	;RP0=1, select bank1
  3018  0794  1303               	bcf	3,6	;RP1=0, select bank1
  3019  0795  082B               	movf	(printf@val+3)^(0+128),w
  3020  0796  00F7               	movwf	___llmod@dividend+3
  3021  0797  082A               	movf	(printf@val+2)^(0+128),w
  3022  0798  00F6               	movwf	___llmod@dividend+2
  3023  0799  0829               	movf	(printf@val+1)^(0+128),w
  3024  079A  00F5               	movwf	___llmod@dividend+1
  3025  079B  0828               	movf	printf@val^(0+128),w
  3026  079C  00F4               	movwf	___llmod@dividend
  3027  079D  160A  118A  25A4  120A  118A  	fcall	___llmod
  3028  07A2  0873               	movf	?___llmod+3,w
  3029  07A3  1683               	bsf	3,5	;RP0=1, select bank1
  3030  07A4  1303               	bcf	3,6	;RP1=0, select bank1
  3031  07A5  00AB               	movwf	(printf@val+3)^(0+128)
  3032  07A6  0872               	movf	?___llmod+2,w
  3033  07A7  00AA               	movwf	(printf@val+2)^(0+128)
  3034  07A8  0871               	movf	?___llmod+1,w
  3035  07A9  00A9               	movwf	(printf@val+1)^(0+128)
  3036  07AA  0870               	movf	?___llmod,w
  3037  07AB  2EF2               	goto	L4
  3038  07AC                     l2152:	
  3039                           ;doprnt.c: 1233: }
  3040                           ;doprnt.c: 1235: while(prec) {
  3041                           
  3042                           
  3043                           ;doprnt.c: 1236: (putch('0') );
  3044  07AC  3030               	movlw	48
  3045  07AD  160A  118A  24E4  120A  118A  	fcall	_putch
  3046                           
  3047                           ;doprnt.c: 1237: prec--;
  3048  07B2  30FF               	movlw	255
  3049  07B3  1683               	bsf	3,5	;RP0=1, select bank1
  3050  07B4  1303               	bcf	3,6	;RP1=0, select bank1
  3051  07B5  07A6               	addwf	printf@prec^(0+128),f
  3052  07B6  1803               	skipnc
  3053  07B7  0AA7               	incf	(printf@prec+1)^(0+128),f
  3054  07B8  30FF               	movlw	255
  3055  07B9  07A7               	addwf	(printf@prec+1)^(0+128),f
  3056  07BA                     l2156:	
  3057  07BA  0826               	movf	printf@prec^(0+128),w
  3058  07BB  0427               	iorwf	(printf@prec+1)^(0+128),w
  3059  07BC  1903               	btfsc	3,2
  3060  07BD  2A80               	goto	l2162
  3061  07BE  2FAC               	goto	l2152
  3062  07BF                     l2158:	
  3063                           ;doprnt.c: 1238: }
  3064                           ;doprnt.c: 1245: continue;
  3065                           
  3066                           
  3067                           ;doprnt.c: 1246: }
  3068                           ;doprnt.c: 1422: {
  3069                           ;doprnt.c: 1438: if(flag & 0x03)
  3070  07BF  3003               	movlw	3
  3071  07C0  1683               	bsf	3,5	;RP0=1, select bank1
  3072  07C1  1303               	bcf	3,6	;RP1=0, select bank1
  3073  07C2  0524               	andwf	printf@flag^(0+128),w
  3074  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  3075  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  3076  07C5  00DF               	movwf	??_printf
  3077  07C6  3000               	movlw	0
  3078  07C7  1683               	bsf	3,5	;RP0=1, select bank1
  3079  07C8  1303               	bcf	3,6	;RP1=0, select bank1
  3080  07C9  0525               	andwf	(printf@flag+1)^(0+128),w
  3081  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  3082  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  3083  07CC  00E0               	movwf	??_printf+1
  3084  07CD  085F               	movf	??_printf,w
  3085  07CE  0460               	iorwf	??_printf+1,w
  3086  07CF  1903               	btfsc	3,2
  3087  07D0  2A80               	goto	l2162
  3088                           
  3089                           ;doprnt.c: 1439: (putch('-') );
  3090  07D1  302D               	movlw	45
  3091  07D2  160A  118A  24E4  120A  118A  	fcall	_putch
  3092  07D7  2A80               	goto	l2162
  3093  07D8                     l134:	
  3094                           ;doprnt.c: 1540: return 0;
  3095                           ;	Return value of _printf is never used
  3096                           
  3097                           ;doprnt.c: 1469: }
  3098                           ;doprnt.c: 1533: }
  3099                           ;doprnt.c: 1535: alldone:
  3100                           
  3101  07D8  0008               	return
  3102  07D9                     __end_of_printf:	
  3103                           
  3104                           	psect	text2
  3105  0D35                     __ptext2:	
  3106 ;; *************** function _scale *****************
  3107 ;; Defined at:
  3108 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  scl             1    wreg     char 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  scl             1   31[BANK0 ] char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  3   23[BANK0 ] char 
  3115 ;; Registers used:
  3116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         0       3       0       0       0
  3123 ;;      Locals:         0       4       0       0       0
  3124 ;;      Temps:          0       2       0       0       0
  3125 ;;      Totals:         0       9       0       0       0
  3126 ;;Total ram usage:        9 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    2
  3129 ;; This function calls:
  3130 ;;		___awdiv
  3131 ;;		___awmod
  3132 ;;		___bmul
  3133 ;;		___ftmul
  3134 ;; This function is called by:
  3135 ;;		_printf
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           
  3140                           ;psect for function _scale
  3141  0D35                     _scale:	
  3142                           
  3143                           ;incstack = 0
  3144                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3145                           ;scale@scl stored from wreg
  3146  0D35  1283               	bcf	3,5	;RP0=0, select bank0
  3147  0D36  1303               	bcf	3,6	;RP1=0, select bank0
  3148  0D37  00BF               	movwf	scale@scl
  3149                           
  3150                           ;doprnt.c: 428: if(scl < 0) {
  3151  0D38  1FBF               	btfss	scale@scl,7
  3152  0D39  2E9E               	goto	l1746
  3153                           
  3154                           ;doprnt.c: 429: scl = -scl;
  3155  0D3A  09BF               	comf	scale@scl,f
  3156  0D3B  0ABF               	incf	scale@scl,f
  3157                           
  3158                           ;doprnt.c: 430: if(scl>=110)
  3159  0D3C  083F               	movf	scale@scl,w
  3160  0D3D  3A80               	xorlw	128
  3161  0D3E  3E12               	addlw	-238
  3162  0D3F  1C03               	skipc
  3163  0D40  2E05               	goto	l1736
  3164                           
  3165                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3166  0D41  3003               	movlw	3
  3167  0D42  00BA               	movwf	??_scale
  3168  0D43  083A               	movf	??_scale,w
  3169  0D44  00A4               	movwf	___bmul@multiplicand
  3170  0D45  300A               	movlw	10
  3171  0D46  00F7               	movwf	___awdiv@divisor
  3172  0D47  3000               	movlw	0
  3173  0D48  00F8               	movwf	___awdiv@divisor+1
  3174  0D49  083F               	movf	scale@scl,w
  3175  0D4A  00F2               	movwf	___awmod@dividend
  3176  0D4B  01F3               	clrf	___awmod@dividend+1
  3177  0D4C  1BF2               	btfsc	___awmod@dividend,7
  3178  0D4D  03F3               	decf	___awmod@dividend+1,f
  3179  0D4E  3064               	movlw	100
  3180  0D4F  00F0               	movwf	___awmod@divisor
  3181  0D50  3000               	movlw	0
  3182  0D51  00F1               	movwf	___awmod@divisor+1
  3183  0D52  160A  118A  2559  120A  158A  	fcall	___awmod
  3184  0D57  0871               	movf	?___awmod+1,w
  3185  0D58  00FA               	movwf	___awdiv@dividend+1
  3186  0D59  0870               	movf	?___awmod,w
  3187  0D5A  00F9               	movwf	___awdiv@dividend
  3188  0D5B  160A  118A  25F0  120A  158A  	fcall	___awdiv
  3189  0D60  0877               	movf	?___awdiv,w
  3190  0D61  3E09               	addlw	9
  3191  0D62  120A  158A  2003  120A  158A  	fcall	___bmul
  3192  0D67  3E61               	addlw	low (__npowers_| (0+32768))
  3193  0D68  0084               	movwf	4
  3194  0D69  3090               	movlw	high (__npowers_| (0+32768))
  3195  0D6A  1803               	skipnc
  3196  0D6B  3E01               	addlw	1
  3197  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  3199  0D6E  00FF               	movwf	127
  3200  0D6F  160A  118A  2000  120A  158A  	fcall	stringtab
  3201  0D74  00A7               	movwf	___ftmul@f1
  3202  0D75  160A  118A  2000  120A  158A  	fcall	stringtab
  3203  0D7A  00A8               	movwf	___ftmul@f1+1
  3204  0D7B  160A  118A  2000  120A  158A  	fcall	stringtab
  3205  0D80  00A9               	movwf	___ftmul@f1+2
  3206  0D81  3003               	movlw	3
  3207  0D82  00BB               	movwf	??_scale+1
  3208  0D83  083B               	movf	??_scale+1,w
  3209  0D84  00A4               	movwf	___bmul@multiplicand
  3210  0D85  3064               	movlw	100
  3211  0D86  00F7               	movwf	___awdiv@divisor
  3212  0D87  3000               	movlw	0
  3213  0D88  00F8               	movwf	___awdiv@divisor+1
  3214  0D89  083F               	movf	scale@scl,w
  3215  0D8A  00F9               	movwf	___awdiv@dividend
  3216  0D8B  01FA               	clrf	___awdiv@dividend+1
  3217  0D8C  1BF9               	btfsc	___awdiv@dividend,7
  3218  0D8D  03FA               	decf	___awdiv@dividend+1,f
  3219  0D8E  160A  118A  25F0  120A  158A  	fcall	___awdiv
  3220  0D93  0877               	movf	?___awdiv,w
  3221  0D94  3E12               	addlw	18
  3222  0D95  120A  158A  2003  120A  158A  	fcall	___bmul
  3223  0D9A  3E61               	addlw	low (__npowers_| (0+32768))
  3224  0D9B  0084               	movwf	4
  3225  0D9C  3090               	movlw	high (__npowers_| (0+32768))
  3226  0D9D  1803               	skipnc
  3227  0D9E  3E01               	addlw	1
  3228  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  3229  0DA0  1303               	bcf	3,6	;RP1=0, select bank0
  3230  0DA1  00FF               	movwf	127
  3231  0DA2  160A  118A  2000  120A  158A  	fcall	stringtab
  3232  0DA7  00AA               	movwf	___ftmul@f2
  3233  0DA8  160A  118A  2000  120A  158A  	fcall	stringtab
  3234  0DAD  00AB               	movwf	___ftmul@f2+1
  3235  0DAE  160A  118A  2000  120A  158A  	fcall	stringtab
  3236  0DB3  00AC               	movwf	___ftmul@f2+2
  3237  0DB4  120A  158A  20CC  120A  158A  	fcall	___ftmul
  3238  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  3239  0DBA  1303               	bcf	3,6	;RP1=0, select bank0
  3240  0DBB  0827               	movf	?___ftmul,w
  3241  0DBC  00BC               	movwf	_scale$660
  3242  0DBD  0828               	movf	?___ftmul+1,w
  3243  0DBE  00BD               	movwf	_scale$660+1
  3244  0DBF  0829               	movf	?___ftmul+2,w
  3245  0DC0  00BE               	movwf	_scale$660+2
  3246                           
  3247                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3248  0DC1  3003               	movlw	3
  3249  0DC2  00BA               	movwf	??_scale
  3250  0DC3  083A               	movf	??_scale,w
  3251  0DC4  00A4               	movwf	___bmul@multiplicand
  3252  0DC5  083F               	movf	scale@scl,w
  3253  0DC6  00F2               	movwf	___awmod@dividend
  3254  0DC7  01F3               	clrf	___awmod@dividend+1
  3255  0DC8  1BF2               	btfsc	___awmod@dividend,7
  3256  0DC9  03F3               	decf	___awmod@dividend+1,f
  3257  0DCA  300A               	movlw	10
  3258  0DCB  00F0               	movwf	___awmod@divisor
  3259  0DCC  3000               	movlw	0
  3260  0DCD  00F1               	movwf	___awmod@divisor+1
  3261  0DCE  160A  118A  2559  120A  158A  	fcall	___awmod
  3262  0DD3  0870               	movf	?___awmod,w
  3263  0DD4  120A  158A  2003  120A  158A  	fcall	___bmul
  3264  0DD9  3E61               	addlw	low (__npowers_| (0+32768))
  3265  0DDA  0084               	movwf	4
  3266  0DDB  3090               	movlw	high (__npowers_| (0+32768))
  3267  0DDC  1803               	skipnc
  3268  0DDD  3E01               	addlw	1
  3269  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  3270  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  3271  0DE0  00FF               	movwf	127
  3272  0DE1  160A  118A  2000  120A  158A  	fcall	stringtab
  3273  0DE6  00A7               	movwf	___ftmul@f1
  3274  0DE7  160A  118A  2000  120A  158A  	fcall	stringtab
  3275  0DEC  00A8               	movwf	___ftmul@f1+1
  3276  0DED  160A  118A  2000  120A  158A  	fcall	stringtab
  3277  0DF2  00A9               	movwf	___ftmul@f1+2
  3278  0DF3  083C               	movf	_scale$660,w
  3279  0DF4  00AA               	movwf	___ftmul@f2
  3280  0DF5  083D               	movf	_scale$660+1,w
  3281  0DF6  00AB               	movwf	___ftmul@f2+1
  3282  0DF7  083E               	movf	_scale$660+2,w
  3283  0DF8  00AC               	movwf	___ftmul@f2+2
  3284  0DF9  120A  158A  20CC   	fcall	___ftmul
  3285  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  3286  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  3287  0DFE  0827               	movf	?___ftmul,w
  3288  0DFF  00B7               	movwf	?_scale
  3289  0E00  0828               	movf	?___ftmul+1,w
  3290  0E01  00B8               	movwf	?_scale+1
  3291  0E02  0829               	movf	?___ftmul+2,w
  3292  0E03  00B9               	movwf	?_scale+2
  3293  0E04  0008               	return
  3294  0E05                     l1736:	
  3295                           
  3296                           ;doprnt.c: 432: else if(scl > 10)
  3297  0E05  083F               	movf	scale@scl,w
  3298  0E06  3A80               	xorlw	128
  3299  0E07  3E75               	addlw	-139
  3300  0E08  1C03               	skipc
  3301  0E09  2E7B               	goto	l1742
  3302                           
  3303                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3304  0E0A  3003               	movlw	3
  3305  0E0B  00BA               	movwf	??_scale
  3306  0E0C  083A               	movf	??_scale,w
  3307  0E0D  00A4               	movwf	___bmul@multiplicand
  3308  0E0E  083F               	movf	scale@scl,w
  3309  0E0F  00F2               	movwf	___awmod@dividend
  3310  0E10  01F3               	clrf	___awmod@dividend+1
  3311  0E11  1BF2               	btfsc	___awmod@dividend,7
  3312  0E12  03F3               	decf	___awmod@dividend+1,f
  3313  0E13  300A               	movlw	10
  3314  0E14  00F0               	movwf	___awmod@divisor
  3315  0E15  3000               	movlw	0
  3316  0E16  00F1               	movwf	___awmod@divisor+1
  3317  0E17  160A  118A  2559  120A  158A  	fcall	___awmod
  3318  0E1C  0870               	movf	?___awmod,w
  3319  0E1D  120A  158A  2003  120A  158A  	fcall	___bmul
  3320  0E22  3E61               	addlw	low (__npowers_| (0+32768))
  3321  0E23  0084               	movwf	4
  3322  0E24  3090               	movlw	high (__npowers_| (0+32768))
  3323  0E25  1803               	skipnc
  3324  0E26  3E01               	addlw	1
  3325  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  3326  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  3327  0E29  00FF               	movwf	127
  3328  0E2A  160A  118A  2000  120A  158A  	fcall	stringtab
  3329  0E2F  00A7               	movwf	___ftmul@f1
  3330  0E30  160A  118A  2000  120A  158A  	fcall	stringtab
  3331  0E35  00A8               	movwf	___ftmul@f1+1
  3332  0E36  160A  118A  2000  120A  158A  	fcall	stringtab
  3333  0E3B  00A9               	movwf	___ftmul@f1+2
  3334  0E3C  3003               	movlw	3
  3335  0E3D  00BB               	movwf	??_scale+1
  3336  0E3E  083B               	movf	??_scale+1,w
  3337  0E3F  00A4               	movwf	___bmul@multiplicand
  3338  0E40  300A               	movlw	10
  3339  0E41  00F7               	movwf	___awdiv@divisor
  3340  0E42  3000               	movlw	0
  3341  0E43  00F8               	movwf	___awdiv@divisor+1
  3342  0E44  083F               	movf	scale@scl,w
  3343  0E45  00F9               	movwf	___awdiv@dividend
  3344  0E46  01FA               	clrf	___awdiv@dividend+1
  3345  0E47  1BF9               	btfsc	___awdiv@dividend,7
  3346  0E48  03FA               	decf	___awdiv@dividend+1,f
  3347  0E49  160A  118A  25F0  120A  158A  	fcall	___awdiv
  3348  0E4E  0877               	movf	?___awdiv,w
  3349  0E4F  3E09               	addlw	9
  3350  0E50  120A  158A  2003  120A  158A  	fcall	___bmul
  3351  0E55  3E61               	addlw	low (__npowers_| (0+32768))
  3352  0E56  0084               	movwf	4
  3353  0E57  3090               	movlw	high (__npowers_| (0+32768))
  3354  0E58  1803               	skipnc
  3355  0E59  3E01               	addlw	1
  3356  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  3357  0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  3358  0E5C  00FF               	movwf	127
  3359  0E5D  160A  118A  2000  120A  158A  	fcall	stringtab
  3360  0E62  00AA               	movwf	___ftmul@f2
  3361  0E63  160A  118A  2000  120A  158A  	fcall	stringtab
  3362  0E68  00AB               	movwf	___ftmul@f2+1
  3363  0E69  160A  118A  2000  120A  158A  	fcall	stringtab
  3364  0E6E  00AC               	movwf	___ftmul@f2+2
  3365  0E6F  120A  158A  20CC   	fcall	___ftmul
  3366  0E72  1283               	bcf	3,5	;RP0=0, select bank0
  3367  0E73  1303               	bcf	3,6	;RP1=0, select bank0
  3368  0E74  0827               	movf	?___ftmul,w
  3369  0E75  00B7               	movwf	?_scale
  3370  0E76  0828               	movf	?___ftmul+1,w
  3371  0E77  00B8               	movwf	?_scale+1
  3372  0E78  0829               	movf	?___ftmul+2,w
  3373  0E79  00B9               	movwf	?_scale+2
  3374  0E7A  0008               	return
  3375  0E7B                     l1742:	
  3376                           
  3377                           ;doprnt.c: 434: return _npowers_[scl];
  3378  0E7B  3003               	movlw	3
  3379  0E7C  00BA               	movwf	??_scale
  3380  0E7D  083A               	movf	??_scale,w
  3381  0E7E  00A4               	movwf	___bmul@multiplicand
  3382  0E7F  083F               	movf	scale@scl,w
  3383  0E80  120A  158A  2003  120A  158A  	fcall	___bmul
  3384  0E85  3E61               	addlw	low (__npowers_| (0+32768))
  3385  0E86  0084               	movwf	4
  3386  0E87  3090               	movlw	high (__npowers_| (0+32768))
  3387  0E88  1803               	skipnc
  3388  0E89  3E01               	addlw	1
  3389  0E8A  1283               	bcf	3,5	;RP0=0, select bank0
  3390  0E8B  1303               	bcf	3,6	;RP1=0, select bank0
  3391  0E8C  00FF               	movwf	127
  3392  0E8D  160A  118A  2000  120A  158A  	fcall	stringtab
  3393  0E92  00B7               	movwf	?_scale
  3394  0E93  160A  118A  2000  120A  158A  	fcall	stringtab
  3395  0E98  00B8               	movwf	?_scale+1
  3396  0E99  160A  118A  2000   	fcall	stringtab
  3397  0E9C  00B9               	movwf	?_scale+2
  3398  0E9D  0008               	return
  3399  0E9E                     l1746:	
  3400                           
  3401                           ;doprnt.c: 435: }
  3402                           ;doprnt.c: 436: if(scl>=110)
  3403  0E9E  083F               	movf	scale@scl,w
  3404  0E9F  3A80               	xorlw	128
  3405  0EA0  3E12               	addlw	-238
  3406  0EA1  1C03               	skipc
  3407  0EA2  2F67               	goto	l1754
  3408                           
  3409                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3410  0EA3  3003               	movlw	3
  3411  0EA4  00BA               	movwf	??_scale
  3412  0EA5  083A               	movf	??_scale,w
  3413  0EA6  00A4               	movwf	___bmul@multiplicand
  3414  0EA7  300A               	movlw	10
  3415  0EA8  00F7               	movwf	___awdiv@divisor
  3416  0EA9  3000               	movlw	0
  3417  0EAA  00F8               	movwf	___awdiv@divisor+1
  3418  0EAB  083F               	movf	scale@scl,w
  3419  0EAC  00F2               	movwf	___awmod@dividend
  3420  0EAD  01F3               	clrf	___awmod@dividend+1
  3421  0EAE  1BF2               	btfsc	___awmod@dividend,7
  3422  0EAF  03F3               	decf	___awmod@dividend+1,f
  3423  0EB0  3064               	movlw	100
  3424  0EB1  00F0               	movwf	___awmod@divisor
  3425  0EB2  3000               	movlw	0
  3426  0EB3  00F1               	movwf	___awmod@divisor+1
  3427  0EB4  160A  118A  2559  120A  158A  	fcall	___awmod
  3428  0EB9  0871               	movf	?___awmod+1,w
  3429  0EBA  00FA               	movwf	___awdiv@dividend+1
  3430  0EBB  0870               	movf	?___awmod,w
  3431  0EBC  00F9               	movwf	___awdiv@dividend
  3432  0EBD  160A  118A  25F0  120A  158A  	fcall	___awdiv
  3433  0EC2  0877               	movf	?___awdiv,w
  3434  0EC3  3E09               	addlw	9
  3435  0EC4  120A  158A  2003  120A  158A  	fcall	___bmul
  3436  0EC9  3E3A               	addlw	low (__powers_| (0+32768))
  3437  0ECA  0084               	movwf	4
  3438  0ECB  3090               	movlw	high (__powers_| (0+32768))
  3439  0ECC  1803               	skipnc
  3440  0ECD  3E01               	addlw	1
  3441  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  3442  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  3443  0ED0  00FF               	movwf	127
  3444  0ED1  160A  118A  2000  120A  158A  	fcall	stringtab
  3445  0ED6  00A7               	movwf	___ftmul@f1
  3446  0ED7  160A  118A  2000  120A  158A  	fcall	stringtab
  3447  0EDC  00A8               	movwf	___ftmul@f1+1
  3448  0EDD  160A  118A  2000  120A  158A  	fcall	stringtab
  3449  0EE2  00A9               	movwf	___ftmul@f1+2
  3450  0EE3  3003               	movlw	3
  3451  0EE4  00BB               	movwf	??_scale+1
  3452  0EE5  083B               	movf	??_scale+1,w
  3453  0EE6  00A4               	movwf	___bmul@multiplicand
  3454  0EE7  3064               	movlw	100
  3455  0EE8  00F7               	movwf	___awdiv@divisor
  3456  0EE9  3000               	movlw	0
  3457  0EEA  00F8               	movwf	___awdiv@divisor+1
  3458  0EEB  083F               	movf	scale@scl,w
  3459  0EEC  00F9               	movwf	___awdiv@dividend
  3460  0EED  01FA               	clrf	___awdiv@dividend+1
  3461  0EEE  1BF9               	btfsc	___awdiv@dividend,7
  3462  0EEF  03FA               	decf	___awdiv@dividend+1,f
  3463  0EF0  160A  118A  25F0  120A  158A  	fcall	___awdiv
  3464  0EF5  0877               	movf	?___awdiv,w
  3465  0EF6  3E12               	addlw	18
  3466  0EF7  120A  158A  2003  120A  158A  	fcall	___bmul
  3467  0EFC  3E3A               	addlw	low (__powers_| (0+32768))
  3468  0EFD  0084               	movwf	4
  3469  0EFE  3090               	movlw	high (__powers_| (0+32768))
  3470  0EFF  1803               	skipnc
  3471  0F00  3E01               	addlw	1
  3472  0F01  1283               	bcf	3,5	;RP0=0, select bank0
  3473  0F02  1303               	bcf	3,6	;RP1=0, select bank0
  3474  0F03  00FF               	movwf	127
  3475  0F04  160A  118A  2000  120A  158A  	fcall	stringtab
  3476  0F09  00AA               	movwf	___ftmul@f2
  3477  0F0A  160A  118A  2000  120A  158A  	fcall	stringtab
  3478  0F0F  00AB               	movwf	___ftmul@f2+1
  3479  0F10  160A  118A  2000  120A  158A  	fcall	stringtab
  3480  0F15  00AC               	movwf	___ftmul@f2+2
  3481  0F16  120A  158A  20CC  120A  158A  	fcall	___ftmul
  3482  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  3483  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  3484  0F1D  0827               	movf	?___ftmul,w
  3485  0F1E  00BC               	movwf	_scale$660
  3486  0F1F  0828               	movf	?___ftmul+1,w
  3487  0F20  00BD               	movwf	_scale$660+1
  3488  0F21  0829               	movf	?___ftmul+2,w
  3489  0F22  00BE               	movwf	_scale$660+2
  3490                           
  3491                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3492  0F23  3003               	movlw	3
  3493  0F24  00BA               	movwf	??_scale
  3494  0F25  083A               	movf	??_scale,w
  3495  0F26  00A4               	movwf	___bmul@multiplicand
  3496  0F27  083F               	movf	scale@scl,w
  3497  0F28  00F2               	movwf	___awmod@dividend
  3498  0F29  01F3               	clrf	___awmod@dividend+1
  3499  0F2A  1BF2               	btfsc	___awmod@dividend,7
  3500  0F2B  03F3               	decf	___awmod@dividend+1,f
  3501  0F2C  300A               	movlw	10
  3502  0F2D  00F0               	movwf	___awmod@divisor
  3503  0F2E  3000               	movlw	0
  3504  0F2F  00F1               	movwf	___awmod@divisor+1
  3505  0F30  160A  118A  2559  120A  158A  	fcall	___awmod
  3506  0F35  0870               	movf	?___awmod,w
  3507  0F36  120A  158A  2003  120A  158A  	fcall	___bmul
  3508  0F3B  3E3A               	addlw	low (__powers_| (0+32768))
  3509  0F3C  0084               	movwf	4
  3510  0F3D  3090               	movlw	high (__powers_| (0+32768))
  3511  0F3E  1803               	skipnc
  3512  0F3F  3E01               	addlw	1
  3513  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  3514  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  3515  0F42  00FF               	movwf	127
  3516  0F43  160A  118A  2000  120A  158A  	fcall	stringtab
  3517  0F48  00A7               	movwf	___ftmul@f1
  3518  0F49  160A  118A  2000  120A  158A  	fcall	stringtab
  3519  0F4E  00A8               	movwf	___ftmul@f1+1
  3520  0F4F  160A  118A  2000  120A  158A  	fcall	stringtab
  3521  0F54  00A9               	movwf	___ftmul@f1+2
  3522  0F55  083C               	movf	_scale$660,w
  3523  0F56  00AA               	movwf	___ftmul@f2
  3524  0F57  083D               	movf	_scale$660+1,w
  3525  0F58  00AB               	movwf	___ftmul@f2+1
  3526  0F59  083E               	movf	_scale$660+2,w
  3527  0F5A  00AC               	movwf	___ftmul@f2+2
  3528  0F5B  120A  158A  20CC   	fcall	___ftmul
  3529  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3530  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3531  0F60  0827               	movf	?___ftmul,w
  3532  0F61  00B7               	movwf	?_scale
  3533  0F62  0828               	movf	?___ftmul+1,w
  3534  0F63  00B8               	movwf	?_scale+1
  3535  0F64  0829               	movf	?___ftmul+2,w
  3536  0F65  00B9               	movwf	?_scale+2
  3537  0F66  0008               	return
  3538  0F67                     l1754:	
  3539                           
  3540                           ;doprnt.c: 438: else if(scl > 10)
  3541  0F67  083F               	movf	scale@scl,w
  3542  0F68  3A80               	xorlw	128
  3543  0F69  3E75               	addlw	-139
  3544  0F6A  1C03               	skipc
  3545  0F6B  2FDD               	goto	l1760
  3546                           
  3547                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3548  0F6C  3003               	movlw	3
  3549  0F6D  00BA               	movwf	??_scale
  3550  0F6E  083A               	movf	??_scale,w
  3551  0F6F  00A4               	movwf	___bmul@multiplicand
  3552  0F70  083F               	movf	scale@scl,w
  3553  0F71  00F2               	movwf	___awmod@dividend
  3554  0F72  01F3               	clrf	___awmod@dividend+1
  3555  0F73  1BF2               	btfsc	___awmod@dividend,7
  3556  0F74  03F3               	decf	___awmod@dividend+1,f
  3557  0F75  300A               	movlw	10
  3558  0F76  00F0               	movwf	___awmod@divisor
  3559  0F77  3000               	movlw	0
  3560  0F78  00F1               	movwf	___awmod@divisor+1
  3561  0F79  160A  118A  2559  120A  158A  	fcall	___awmod
  3562  0F7E  0870               	movf	?___awmod,w
  3563  0F7F  120A  158A  2003  120A  158A  	fcall	___bmul
  3564  0F84  3E3A               	addlw	low (__powers_| (0+32768))
  3565  0F85  0084               	movwf	4
  3566  0F86  3090               	movlw	high (__powers_| (0+32768))
  3567  0F87  1803               	skipnc
  3568  0F88  3E01               	addlw	1
  3569  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  3570  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  3571  0F8B  00FF               	movwf	127
  3572  0F8C  160A  118A  2000  120A  158A  	fcall	stringtab
  3573  0F91  00A7               	movwf	___ftmul@f1
  3574  0F92  160A  118A  2000  120A  158A  	fcall	stringtab
  3575  0F97  00A8               	movwf	___ftmul@f1+1
  3576  0F98  160A  118A  2000  120A  158A  	fcall	stringtab
  3577  0F9D  00A9               	movwf	___ftmul@f1+2
  3578  0F9E  3003               	movlw	3
  3579  0F9F  00BB               	movwf	??_scale+1
  3580  0FA0  083B               	movf	??_scale+1,w
  3581  0FA1  00A4               	movwf	___bmul@multiplicand
  3582  0FA2  300A               	movlw	10
  3583  0FA3  00F7               	movwf	___awdiv@divisor
  3584  0FA4  3000               	movlw	0
  3585  0FA5  00F8               	movwf	___awdiv@divisor+1
  3586  0FA6  083F               	movf	scale@scl,w
  3587  0FA7  00F9               	movwf	___awdiv@dividend
  3588  0FA8  01FA               	clrf	___awdiv@dividend+1
  3589  0FA9  1BF9               	btfsc	___awdiv@dividend,7
  3590  0FAA  03FA               	decf	___awdiv@dividend+1,f
  3591  0FAB  160A  118A  25F0  120A  158A  	fcall	___awdiv
  3592  0FB0  0877               	movf	?___awdiv,w
  3593  0FB1  3E09               	addlw	9
  3594  0FB2  120A  158A  2003  120A  158A  	fcall	___bmul
  3595  0FB7  3E3A               	addlw	low (__powers_| (0+32768))
  3596  0FB8  0084               	movwf	4
  3597  0FB9  3090               	movlw	high (__powers_| (0+32768))
  3598  0FBA  1803               	skipnc
  3599  0FBB  3E01               	addlw	1
  3600  0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  3601  0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  3602  0FBE  00FF               	movwf	127
  3603  0FBF  160A  118A  2000  120A  158A  	fcall	stringtab
  3604  0FC4  00AA               	movwf	___ftmul@f2
  3605  0FC5  160A  118A  2000  120A  158A  	fcall	stringtab
  3606  0FCA  00AB               	movwf	___ftmul@f2+1
  3607  0FCB  160A  118A  2000  120A  158A  	fcall	stringtab
  3608  0FD0  00AC               	movwf	___ftmul@f2+2
  3609  0FD1  120A  158A  20CC   	fcall	___ftmul
  3610  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3611  0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  3612  0FD6  0827               	movf	?___ftmul,w
  3613  0FD7  00B7               	movwf	?_scale
  3614  0FD8  0828               	movf	?___ftmul+1,w
  3615  0FD9  00B8               	movwf	?_scale+1
  3616  0FDA  0829               	movf	?___ftmul+2,w
  3617  0FDB  00B9               	movwf	?_scale+2
  3618  0FDC  0008               	return
  3619  0FDD                     l1760:	
  3620                           
  3621                           ;doprnt.c: 440: return _powers_[scl];
  3622  0FDD  3003               	movlw	3
  3623  0FDE  00BA               	movwf	??_scale
  3624  0FDF  083A               	movf	??_scale,w
  3625  0FE0  00A4               	movwf	___bmul@multiplicand
  3626  0FE1  083F               	movf	scale@scl,w
  3627  0FE2  120A  158A  2003  120A  158A  	fcall	___bmul
  3628  0FE7  3E3A               	addlw	low (__powers_| (0+32768))
  3629  0FE8  0084               	movwf	4
  3630  0FE9  3090               	movlw	high (__powers_| (0+32768))
  3631  0FEA  1803               	skipnc
  3632  0FEB  3E01               	addlw	1
  3633  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  3634  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  3635  0FEE  00FF               	movwf	127
  3636  0FEF  160A  118A  2000  120A  158A  	fcall	stringtab
  3637  0FF4  00B7               	movwf	?_scale
  3638  0FF5  160A  118A  2000  120A  158A  	fcall	stringtab
  3639  0FFA  00B8               	movwf	?_scale+1
  3640  0FFB  160A  118A  2000   	fcall	stringtab
  3641  0FFE  00B9               	movwf	?_scale+2
  3642  0FFF  0008               	return
  3643  1000                     __end_of_scale:	
  3644                           
  3645                           	psect	text3
  3646  14E4                     __ptext3:	
  3647 ;; *************** function _putch *****************
  3648 ;; Defined at:
  3649 ;;		line 3 in file "config.h"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  dato            1    wreg     unsigned char 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  dato            1    0[COMMON] unsigned char 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  1    wreg      void 
  3656 ;; Registers used:
  3657 ;;		wreg
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3663 ;;      Params:         0       0       0       0       0
  3664 ;;      Locals:         1       0       0       0       0
  3665 ;;      Temps:          0       0       0       0       0
  3666 ;;      Totals:         1       0       0       0       0
  3667 ;;Total ram usage:        1 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_printf
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           
  3677                           ;psect for function _putch
  3678  14E4                     _putch:	
  3679                           
  3680                           ;incstack = 0
  3681                           ; Regs used in _putch: [wreg]
  3682                           ;putch@dato stored from wreg
  3683  14E4  00F0               	movwf	putch@dato
  3684  14E5                     l19:	
  3685                           ;config.h: 5: continue;
  3686                           
  3687                           ;config.h: 4: while (! PIR1bits.TXIF)
  3688                           
  3689  14E5  1283               	bcf	3,5	;RP0=0, select bank0
  3690  14E6  1303               	bcf	3,6	;RP1=0, select bank0
  3691  14E7  1E0C               	btfss	12,4	;volatile
  3692  14E8  2CE5               	goto	l19
  3693                           
  3694                           ;config.h: 6: TXREG = dato;
  3695  14E9  0870               	movf	putch@dato,w
  3696  14EA  0099               	movwf	25	;volatile
  3697  14EB  0008               	return
  3698  14EC                     __end_of_putch:	
  3699                           
  3700                           	psect	text4
  3701  00C6                     __ptext4:	
  3702 ;; *************** function _fround *****************
  3703 ;; Defined at:
  3704 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;  prec            1    wreg     unsigned char 
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;  prec            1   38[BANK0 ] unsigned char 
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  3   23[BANK0 ] unsigned char 
  3711 ;; Registers used:
  3712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3718 ;;      Params:         0       3       0       0       0
  3719 ;;      Locals:         0       7       0       0       0
  3720 ;;      Temps:          0       6       0       0       0
  3721 ;;      Totals:         0      16       0       0       0
  3722 ;;Total ram usage:       16 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    2
  3725 ;; This function calls:
  3726 ;;		___awdiv
  3727 ;;		___awmod
  3728 ;;		___bmul
  3729 ;;		___ftmul
  3730 ;; This function is called by:
  3731 ;;		_printf
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           
  3736                           ;psect for function _fround
  3737  00C6                     _fround:	
  3738                           
  3739                           ;incstack = 0
  3740                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3741                           ;fround@prec stored from wreg
  3742  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  3743  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  3744  00C8  00C6               	movwf	fround@prec
  3745                           
  3746                           ;doprnt.c: 413: if(prec>=110)
  3747  00C9  306E               	movlw	110
  3748  00CA  0246               	subwf	fround@prec,w
  3749  00CB  1C03               	skipc
  3750  00CC  29B0               	goto	l1712
  3751                           
  3752                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3753  00CD  3003               	movlw	3
  3754  00CE  00BA               	movwf	??_fround
  3755  00CF  083A               	movf	??_fround,w
  3756  00D0  00A4               	movwf	___bmul@multiplicand
  3757  00D1  300A               	movlw	10
  3758  00D2  00F7               	movwf	___awdiv@divisor
  3759  00D3  3000               	movlw	0
  3760  00D4  00F8               	movwf	___awdiv@divisor+1
  3761  00D5  0846               	movf	fround@prec,w
  3762  00D6  00BB               	movwf	??_fround+1
  3763  00D7  01BC               	clrf	??_fround+2
  3764  00D8  083B               	movf	??_fround+1,w
  3765  00D9  00F2               	movwf	___awmod@dividend
  3766  00DA  083C               	movf	??_fround+2,w
  3767  00DB  00F3               	movwf	___awmod@dividend+1
  3768  00DC  3064               	movlw	100
  3769  00DD  00F0               	movwf	___awmod@divisor
  3770  00DE  3000               	movlw	0
  3771  00DF  00F1               	movwf	___awmod@divisor+1
  3772  00E0  160A  118A  2559  120A  118A  	fcall	___awmod
  3773  00E5  0871               	movf	?___awmod+1,w
  3774  00E6  00FA               	movwf	___awdiv@dividend+1
  3775  00E7  0870               	movf	?___awmod,w
  3776  00E8  00F9               	movwf	___awdiv@dividend
  3777  00E9  160A  118A  25F0  120A  118A  	fcall	___awdiv
  3778  00EE  0877               	movf	?___awdiv,w
  3779  00EF  3E09               	addlw	9
  3780  00F0  120A  158A  2003  120A  118A  	fcall	___bmul
  3781  00F5  3E61               	addlw	low (__npowers_| (0+32768))
  3782  00F6  0084               	movwf	4
  3783  00F7  3090               	movlw	high (__npowers_| (0+32768))
  3784  00F8  1803               	skipnc
  3785  00F9  3E01               	addlw	1
  3786  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  3787  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  3788  00FC  00FF               	movwf	127
  3789  00FD  160A  118A  2000  120A  118A  	fcall	stringtab
  3790  0102  00A7               	movwf	___ftmul@f1
  3791  0103  160A  118A  2000  120A  118A  	fcall	stringtab
  3792  0108  00A8               	movwf	___ftmul@f1+1
  3793  0109  160A  118A  2000  120A  118A  	fcall	stringtab
  3794  010E  00A9               	movwf	___ftmul@f1+2
  3795  010F  3003               	movlw	3
  3796  0110  00BD               	movwf	??_fround+3
  3797  0111  083D               	movf	??_fround+3,w
  3798  0112  00A4               	movwf	___bmul@multiplicand
  3799  0113  3064               	movlw	100
  3800  0114  00F7               	movwf	___awdiv@divisor
  3801  0115  3000               	movlw	0
  3802  0116  00F8               	movwf	___awdiv@divisor+1
  3803  0117  0846               	movf	fround@prec,w
  3804  0118  00BE               	movwf	??_fround+4
  3805  0119  01BF               	clrf	??_fround+5
  3806  011A  083E               	movf	??_fround+4,w
  3807  011B  00F9               	movwf	___awdiv@dividend
  3808  011C  083F               	movf	??_fround+5,w
  3809  011D  00FA               	movwf	___awdiv@dividend+1
  3810  011E  160A  118A  25F0  120A  118A  	fcall	___awdiv
  3811  0123  0877               	movf	?___awdiv,w
  3812  0124  3E12               	addlw	18
  3813  0125  120A  158A  2003  120A  118A  	fcall	___bmul
  3814  012A  3E61               	addlw	low (__npowers_| (0+32768))
  3815  012B  0084               	movwf	4
  3816  012C  3090               	movlw	high (__npowers_| (0+32768))
  3817  012D  1803               	skipnc
  3818  012E  3E01               	addlw	1
  3819  012F  1283               	bcf	3,5	;RP0=0, select bank0
  3820  0130  1303               	bcf	3,6	;RP1=0, select bank0
  3821  0131  00FF               	movwf	127
  3822  0132  160A  118A  2000  120A  118A  	fcall	stringtab
  3823  0137  00AA               	movwf	___ftmul@f2
  3824  0138  160A  118A  2000  120A  118A  	fcall	stringtab
  3825  013D  00AB               	movwf	___ftmul@f2+1
  3826  013E  160A  118A  2000  120A  118A  	fcall	stringtab
  3827  0143  00AC               	movwf	___ftmul@f2+2
  3828  0144  120A  158A  20CC  120A  118A  	fcall	___ftmul
  3829  0149  1283               	bcf	3,5	;RP0=0, select bank0
  3830  014A  1303               	bcf	3,6	;RP1=0, select bank0
  3831  014B  0827               	movf	?___ftmul,w
  3832  014C  00C3               	movwf	_fround$658
  3833  014D  0828               	movf	?___ftmul+1,w
  3834  014E  00C4               	movwf	_fround$658+1
  3835  014F  0829               	movf	?___ftmul+2,w
  3836  0150  00C5               	movwf	_fround$658+2
  3837                           
  3838                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3839  0151  3003               	movlw	3
  3840  0152  00BA               	movwf	??_fround
  3841  0153  083A               	movf	??_fround,w
  3842  0154  00A4               	movwf	___bmul@multiplicand
  3843  0155  0846               	movf	fround@prec,w
  3844  0156  00BB               	movwf	??_fround+1
  3845  0157  01BC               	clrf	??_fround+2
  3846  0158  083B               	movf	??_fround+1,w
  3847  0159  00F2               	movwf	___awmod@dividend
  3848  015A  083C               	movf	??_fround+2,w
  3849  015B  00F3               	movwf	___awmod@dividend+1
  3850  015C  300A               	movlw	10
  3851  015D  00F0               	movwf	___awmod@divisor
  3852  015E  3000               	movlw	0
  3853  015F  00F1               	movwf	___awmod@divisor+1
  3854  0160  160A  118A  2559  120A  118A  	fcall	___awmod
  3855  0165  0870               	movf	?___awmod,w
  3856  0166  120A  158A  2003  120A  118A  	fcall	___bmul
  3857  016B  3E61               	addlw	low (__npowers_| (0+32768))
  3858  016C  0084               	movwf	4
  3859  016D  3090               	movlw	high (__npowers_| (0+32768))
  3860  016E  1803               	skipnc
  3861  016F  3E01               	addlw	1
  3862  0170  1283               	bcf	3,5	;RP0=0, select bank0
  3863  0171  1303               	bcf	3,6	;RP1=0, select bank0
  3864  0172  00FF               	movwf	127
  3865  0173  160A  118A  2000  120A  118A  	fcall	stringtab
  3866  0178  00A7               	movwf	___ftmul@f1
  3867  0179  160A  118A  2000  120A  118A  	fcall	stringtab
  3868  017E  00A8               	movwf	___ftmul@f1+1
  3869  017F  160A  118A  2000  120A  118A  	fcall	stringtab
  3870  0184  00A9               	movwf	___ftmul@f1+2
  3871  0185  0843               	movf	_fround$658,w
  3872  0186  00AA               	movwf	___ftmul@f2
  3873  0187  0844               	movf	_fround$658+1,w
  3874  0188  00AB               	movwf	___ftmul@f2+1
  3875  0189  0845               	movf	_fround$658+2,w
  3876  018A  00AC               	movwf	___ftmul@f2+2
  3877  018B  120A  158A  20CC  120A  118A  	fcall	___ftmul
  3878  0190  1283               	bcf	3,5	;RP0=0, select bank0
  3879  0191  1303               	bcf	3,6	;RP1=0, select bank0
  3880  0192  0827               	movf	?___ftmul,w
  3881  0193  00C0               	movwf	_fround$659
  3882  0194  0828               	movf	?___ftmul+1,w
  3883  0195  00C1               	movwf	_fround$659+1
  3884  0196  0829               	movf	?___ftmul+2,w
  3885  0197  00C2               	movwf	_fround$659+2
  3886                           
  3887                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3888  0198  3000               	movlw	0
  3889  0199  00A7               	movwf	___ftmul@f1
  3890  019A  3000               	movlw	0
  3891  019B  00A8               	movwf	___ftmul@f1+1
  3892  019C  303F               	movlw	63
  3893  019D  00A9               	movwf	___ftmul@f1+2
  3894  019E  0840               	movf	_fround$659,w
  3895  019F  00AA               	movwf	___ftmul@f2
  3896  01A0  0841               	movf	_fround$659+1,w
  3897  01A1  00AB               	movwf	___ftmul@f2+1
  3898  01A2  0842               	movf	_fround$659+2,w
  3899  01A3  00AC               	movwf	___ftmul@f2+2
  3900  01A4  120A  158A  20CC   	fcall	___ftmul
  3901  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  3902  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  3903  01A9  0827               	movf	?___ftmul,w
  3904  01AA  00B7               	movwf	?_fround
  3905  01AB  0828               	movf	?___ftmul+1,w
  3906  01AC  00B8               	movwf	?_fround+1
  3907  01AD  0829               	movf	?___ftmul+2,w
  3908  01AE  00B9               	movwf	?_fround+2
  3909  01AF  0008               	return
  3910  01B0                     l1712:	
  3911                           
  3912                           ;doprnt.c: 415: else if(prec > 10)
  3913  01B0  300B               	movlw	11
  3914  01B1  0246               	subwf	fround@prec,w
  3915  01B2  1C03               	skipc
  3916  01B3  2A42               	goto	l1720
  3917                           
  3918                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3919  01B4  3003               	movlw	3
  3920  01B5  00BA               	movwf	??_fround
  3921  01B6  083A               	movf	??_fround,w
  3922  01B7  00A4               	movwf	___bmul@multiplicand
  3923  01B8  0846               	movf	fround@prec,w
  3924  01B9  00BB               	movwf	??_fround+1
  3925  01BA  01BC               	clrf	??_fround+2
  3926  01BB  083B               	movf	??_fround+1,w
  3927  01BC  00F2               	movwf	___awmod@dividend
  3928  01BD  083C               	movf	??_fround+2,w
  3929  01BE  00F3               	movwf	___awmod@dividend+1
  3930  01BF  300A               	movlw	10
  3931  01C0  00F0               	movwf	___awmod@divisor
  3932  01C1  3000               	movlw	0
  3933  01C2  00F1               	movwf	___awmod@divisor+1
  3934  01C3  160A  118A  2559  120A  118A  	fcall	___awmod
  3935  01C8  0870               	movf	?___awmod,w
  3936  01C9  120A  158A  2003  120A  118A  	fcall	___bmul
  3937  01CE  3E61               	addlw	low (__npowers_| (0+32768))
  3938  01CF  0084               	movwf	4
  3939  01D0  3090               	movlw	high (__npowers_| (0+32768))
  3940  01D1  1803               	skipnc
  3941  01D2  3E01               	addlw	1
  3942  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  3943  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  3944  01D5  00FF               	movwf	127
  3945  01D6  160A  118A  2000  120A  118A  	fcall	stringtab
  3946  01DB  00A7               	movwf	___ftmul@f1
  3947  01DC  160A  118A  2000  120A  118A  	fcall	stringtab
  3948  01E1  00A8               	movwf	___ftmul@f1+1
  3949  01E2  160A  118A  2000  120A  118A  	fcall	stringtab
  3950  01E7  00A9               	movwf	___ftmul@f1+2
  3951  01E8  3003               	movlw	3
  3952  01E9  00BD               	movwf	??_fround+3
  3953  01EA  083D               	movf	??_fround+3,w
  3954  01EB  00A4               	movwf	___bmul@multiplicand
  3955  01EC  300A               	movlw	10
  3956  01ED  00F7               	movwf	___awdiv@divisor
  3957  01EE  3000               	movlw	0
  3958  01EF  00F8               	movwf	___awdiv@divisor+1
  3959  01F0  0846               	movf	fround@prec,w
  3960  01F1  00BE               	movwf	??_fround+4
  3961  01F2  01BF               	clrf	??_fround+5
  3962  01F3  083E               	movf	??_fround+4,w
  3963  01F4  00F9               	movwf	___awdiv@dividend
  3964  01F5  083F               	movf	??_fround+5,w
  3965  01F6  00FA               	movwf	___awdiv@dividend+1
  3966  01F7  160A  118A  25F0  120A  118A  	fcall	___awdiv
  3967  01FC  0877               	movf	?___awdiv,w
  3968  01FD  3E09               	addlw	9
  3969  01FE  120A  158A  2003  120A  118A  	fcall	___bmul
  3970  0203  3E61               	addlw	low (__npowers_| (0+32768))
  3971  0204  0084               	movwf	4
  3972  0205  3090               	movlw	high (__npowers_| (0+32768))
  3973  0206  1803               	skipnc
  3974  0207  3E01               	addlw	1
  3975  0208  1283               	bcf	3,5	;RP0=0, select bank0
  3976  0209  1303               	bcf	3,6	;RP1=0, select bank0
  3977  020A  00FF               	movwf	127
  3978  020B  160A  118A  2000  120A  118A  	fcall	stringtab
  3979  0210  00AA               	movwf	___ftmul@f2
  3980  0211  160A  118A  2000  120A  118A  	fcall	stringtab
  3981  0216  00AB               	movwf	___ftmul@f2+1
  3982  0217  160A  118A  2000  120A  118A  	fcall	stringtab
  3983  021C  00AC               	movwf	___ftmul@f2+2
  3984  021D  120A  158A  20CC  120A  118A  	fcall	___ftmul
  3985  0222  1283               	bcf	3,5	;RP0=0, select bank0
  3986  0223  1303               	bcf	3,6	;RP1=0, select bank0
  3987  0224  0827               	movf	?___ftmul,w
  3988  0225  00C3               	movwf	_fround$658
  3989  0226  0828               	movf	?___ftmul+1,w
  3990  0227  00C4               	movwf	_fround$658+1
  3991  0228  0829               	movf	?___ftmul+2,w
  3992  0229  00C5               	movwf	_fround$658+2
  3993                           
  3994                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3995  022A  3000               	movlw	0
  3996  022B  00A7               	movwf	___ftmul@f1
  3997  022C  3000               	movlw	0
  3998  022D  00A8               	movwf	___ftmul@f1+1
  3999  022E  303F               	movlw	63
  4000  022F  00A9               	movwf	___ftmul@f1+2
  4001  0230  0843               	movf	_fround$658,w
  4002  0231  00AA               	movwf	___ftmul@f2
  4003  0232  0844               	movf	_fround$658+1,w
  4004  0233  00AB               	movwf	___ftmul@f2+1
  4005  0234  0845               	movf	_fround$658+2,w
  4006  0235  00AC               	movwf	___ftmul@f2+2
  4007  0236  120A  158A  20CC   	fcall	___ftmul
  4008  0239  1283               	bcf	3,5	;RP0=0, select bank0
  4009  023A  1303               	bcf	3,6	;RP1=0, select bank0
  4010  023B  0827               	movf	?___ftmul,w
  4011  023C  00B7               	movwf	?_fround
  4012  023D  0828               	movf	?___ftmul+1,w
  4013  023E  00B8               	movwf	?_fround+1
  4014  023F  0829               	movf	?___ftmul+2,w
  4015  0240  00B9               	movwf	?_fround+2
  4016  0241  0008               	return
  4017  0242                     l1720:	
  4018                           
  4019                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4020  0242  3000               	movlw	0
  4021  0243  00A7               	movwf	___ftmul@f1
  4022  0244  3000               	movlw	0
  4023  0245  00A8               	movwf	___ftmul@f1+1
  4024  0246  303F               	movlw	63
  4025  0247  00A9               	movwf	___ftmul@f1+2
  4026  0248  3003               	movlw	3
  4027  0249  00BA               	movwf	??_fround
  4028  024A  083A               	movf	??_fround,w
  4029  024B  00A4               	movwf	___bmul@multiplicand
  4030  024C  0846               	movf	fround@prec,w
  4031  024D  120A  158A  2003  120A  118A  	fcall	___bmul
  4032  0252  3E61               	addlw	low (__npowers_| (0+32768))
  4033  0253  0084               	movwf	4
  4034  0254  3090               	movlw	high (__npowers_| (0+32768))
  4035  0255  1803               	skipnc
  4036  0256  3E01               	addlw	1
  4037  0257  1283               	bcf	3,5	;RP0=0, select bank0
  4038  0258  1303               	bcf	3,6	;RP1=0, select bank0
  4039  0259  00FF               	movwf	127
  4040  025A  160A  118A  2000  120A  118A  	fcall	stringtab
  4041  025F  00AA               	movwf	___ftmul@f2
  4042  0260  160A  118A  2000  120A  118A  	fcall	stringtab
  4043  0265  00AB               	movwf	___ftmul@f2+1
  4044  0266  160A  118A  2000  120A  118A  	fcall	stringtab
  4045  026B  00AC               	movwf	___ftmul@f2+2
  4046  026C  120A  158A  20CC   	fcall	___ftmul
  4047  026F  1283               	bcf	3,5	;RP0=0, select bank0
  4048  0270  1303               	bcf	3,6	;RP1=0, select bank0
  4049  0271  0827               	movf	?___ftmul,w
  4050  0272  00B7               	movwf	?_fround
  4051  0273  0828               	movf	?___ftmul+1,w
  4052  0274  00B8               	movwf	?_fround+1
  4053  0275  0829               	movf	?___ftmul+2,w
  4054  0276  00B9               	movwf	?_fround+2
  4055  0277  0008               	return
  4056  0278                     __end_of_fround:	
  4057                           
  4058                           	psect	text5
  4059  08CC                     __ptext5:	
  4060 ;; *************** function ___ftmul *****************
  4061 ;; Defined at:
  4062 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  f1              3    7[BANK0 ] float 
  4065 ;;  f2              3   10[BANK0 ] float 
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  4068 ;;  sign            1   22[BANK0 ] unsigned char 
  4069 ;;  cntr            1   21[BANK0 ] unsigned char 
  4070 ;;  exp             1   17[BANK0 ] unsigned char 
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  3    7[BANK0 ] float 
  4073 ;; Registers used:
  4074 ;;		wreg, status,2, status,0, pclath, cstack
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4080 ;;      Params:         0       6       0       0       0
  4081 ;;      Locals:         0       6       0       0       0
  4082 ;;      Temps:          0       4       0       0       0
  4083 ;;      Totals:         0      16       0       0       0
  4084 ;;Total ram usage:       16 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:    1
  4087 ;; This function calls:
  4088 ;;		___ftpack
  4089 ;; This function is called by:
  4090 ;;		_main
  4091 ;;		_fround
  4092 ;;		_scale
  4093 ;;		_printf
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           
  4098                           ;psect for function ___ftmul
  4099  08CC                     ___ftmul:	
  4100                           
  4101                           ;incstack = 0
  4102                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4103  08CC  1283               	bcf	3,5	;RP0=0, select bank0
  4104  08CD  1303               	bcf	3,6	;RP1=0, select bank0
  4105  08CE  0827               	movf	___ftmul@f1,w
  4106  08CF  00AD               	movwf	??___ftmul
  4107  08D0  0828               	movf	___ftmul@f1+1,w
  4108  08D1  00AE               	movwf	??___ftmul+1
  4109  08D2  0829               	movf	___ftmul@f1+2,w
  4110  08D3  00AF               	movwf	??___ftmul+2
  4111  08D4  1003               	clrc
  4112  08D5  0D2E               	rlf	??___ftmul+1,w
  4113  08D6  0D2F               	rlf	??___ftmul+2,w
  4114  08D7  00B0               	movwf	??___ftmul+3
  4115  08D8  0830               	movf	??___ftmul+3,w
  4116  08D9  00B1               	movwf	___ftmul@exp
  4117  08DA  0831               	movf	___ftmul@exp,w
  4118  08DB  1D03               	btfss	3,2
  4119  08DC  28E4               	goto	l1654
  4120  08DD  3000               	movlw	0
  4121  08DE  00A7               	movwf	?___ftmul
  4122  08DF  3000               	movlw	0
  4123  08E0  00A8               	movwf	?___ftmul+1
  4124  08E1  3000               	movlw	0
  4125  08E2  00A9               	movwf	?___ftmul+2
  4126  08E3  0008               	return
  4127  08E4                     l1654:	
  4128  08E4  082A               	movf	___ftmul@f2,w
  4129  08E5  00AD               	movwf	??___ftmul
  4130  08E6  082B               	movf	___ftmul@f2+1,w
  4131  08E7  00AE               	movwf	??___ftmul+1
  4132  08E8  082C               	movf	___ftmul@f2+2,w
  4133  08E9  00AF               	movwf	??___ftmul+2
  4134  08EA  1003               	clrc
  4135  08EB  0D2E               	rlf	??___ftmul+1,w
  4136  08EC  0D2F               	rlf	??___ftmul+2,w
  4137  08ED  00B0               	movwf	??___ftmul+3
  4138  08EE  0830               	movf	??___ftmul+3,w
  4139  08EF  00B6               	movwf	___ftmul@sign
  4140  08F0  0836               	movf	___ftmul@sign,w
  4141  08F1  1D03               	btfss	3,2
  4142  08F2  28FA               	goto	l1660
  4143  08F3  3000               	movlw	0
  4144  08F4  00A7               	movwf	?___ftmul
  4145  08F5  3000               	movlw	0
  4146  08F6  00A8               	movwf	?___ftmul+1
  4147  08F7  3000               	movlw	0
  4148  08F8  00A9               	movwf	?___ftmul+2
  4149  08F9  0008               	return
  4150  08FA                     l1660:	
  4151  08FA  0836               	movf	___ftmul@sign,w
  4152  08FB  3E7B               	addlw	123
  4153  08FC  00AD               	movwf	??___ftmul
  4154  08FD  082D               	movf	??___ftmul,w
  4155  08FE  07B1               	addwf	___ftmul@exp,f
  4156  08FF  0827               	movf	___ftmul@f1,w
  4157  0900  00AD               	movwf	??___ftmul
  4158  0901  0828               	movf	___ftmul@f1+1,w
  4159  0902  00AE               	movwf	??___ftmul+1
  4160  0903  0829               	movf	___ftmul@f1+2,w
  4161  0904  00AF               	movwf	??___ftmul+2
  4162  0905  3010               	movlw	16
  4163  0906                     u2435:	
  4164  0906  1003               	clrc
  4165  0907  0CAF               	rrf	??___ftmul+2,f
  4166  0908  0CAE               	rrf	??___ftmul+1,f
  4167  0909  0CAD               	rrf	??___ftmul,f
  4168  090A  3EFF               	addlw	-1
  4169  090B  1D03               	skipz
  4170  090C  2906               	goto	u2435
  4171  090D  082D               	movf	??___ftmul,w
  4172  090E  00B0               	movwf	??___ftmul+3
  4173  090F  0830               	movf	??___ftmul+3,w
  4174  0910  00B6               	movwf	___ftmul@sign
  4175  0911  082A               	movf	___ftmul@f2,w
  4176  0912  00AD               	movwf	??___ftmul
  4177  0913  082B               	movf	___ftmul@f2+1,w
  4178  0914  00AE               	movwf	??___ftmul+1
  4179  0915  082C               	movf	___ftmul@f2+2,w
  4180  0916  00AF               	movwf	??___ftmul+2
  4181  0917  3010               	movlw	16
  4182  0918                     u2445:	
  4183  0918  1003               	clrc
  4184  0919  0CAF               	rrf	??___ftmul+2,f
  4185  091A  0CAE               	rrf	??___ftmul+1,f
  4186  091B  0CAD               	rrf	??___ftmul,f
  4187  091C  3EFF               	addlw	-1
  4188  091D  1D03               	skipz
  4189  091E  2918               	goto	u2445
  4190  091F  082D               	movf	??___ftmul,w
  4191  0920  00B0               	movwf	??___ftmul+3
  4192  0921  0830               	movf	??___ftmul+3,w
  4193  0922  06B6               	xorwf	___ftmul@sign,f
  4194  0923  3080               	movlw	128
  4195  0924  00AD               	movwf	??___ftmul
  4196  0925  082D               	movf	??___ftmul,w
  4197  0926  05B6               	andwf	___ftmul@sign,f
  4198  0927  17A8               	bsf	___ftmul@f1+1,7
  4199  0928  17AB               	bsf	___ftmul@f2+1,7
  4200  0929  30FF               	movlw	255
  4201  092A  05AA               	andwf	___ftmul@f2,f
  4202  092B  30FF               	movlw	255
  4203  092C  05AB               	andwf	___ftmul@f2+1,f
  4204  092D  3000               	movlw	0
  4205  092E  05AC               	andwf	___ftmul@f2+2,f
  4206  092F  3000               	movlw	0
  4207  0930  00B2               	movwf	___ftmul@f3_as_product
  4208  0931  3000               	movlw	0
  4209  0932  00B3               	movwf	___ftmul@f3_as_product+1
  4210  0933  3000               	movlw	0
  4211  0934  00B4               	movwf	___ftmul@f3_as_product+2
  4212  0935  3007               	movlw	7
  4213  0936  00AD               	movwf	??___ftmul
  4214  0937  082D               	movf	??___ftmul,w
  4215  0938  00B5               	movwf	___ftmul@cntr
  4216  0939                     l1672:	
  4217  0939  1C27               	btfss	___ftmul@f1,0
  4218  093A  2949               	goto	l1676
  4219  093B  082A               	movf	___ftmul@f2,w
  4220  093C  07B2               	addwf	___ftmul@f3_as_product,f
  4221  093D  082B               	movf	___ftmul@f2+1,w
  4222  093E  1103               	clrz
  4223  093F  1803               	skipnc
  4224  0940  0A2B               	incf	___ftmul@f2+1,w
  4225  0941  1D03               	btfss	3,2
  4226  0942  07B3               	addwf	___ftmul@f3_as_product+1,f
  4227  0943  082C               	movf	___ftmul@f2+2,w
  4228  0944  1103               	clrz
  4229  0945  1803               	skipnc
  4230  0946  0A2C               	incf	___ftmul@f2+2,w
  4231  0947  1D03               	btfss	3,2
  4232  0948  07B4               	addwf	___ftmul@f3_as_product+2,f
  4233  0949                     l1676:	
  4234  0949  3001               	movlw	1
  4235  094A                     u2475:	
  4236  094A  1003               	clrc
  4237  094B  0CA9               	rrf	___ftmul@f1+2,f
  4238  094C  0CA8               	rrf	___ftmul@f1+1,f
  4239  094D  0CA7               	rrf	___ftmul@f1,f
  4240  094E  3EFF               	addlw	-1
  4241  094F  1D03               	skipz
  4242  0950  294A               	goto	u2475
  4243  0951  3001               	movlw	1
  4244  0952                     u2485:	
  4245  0952  1003               	clrc
  4246  0953  0DAA               	rlf	___ftmul@f2,f
  4247  0954  0DAB               	rlf	___ftmul@f2+1,f
  4248  0955  0DAC               	rlf	___ftmul@f2+2,f
  4249  0956  3EFF               	addlw	-1
  4250  0957  1D03               	skipz
  4251  0958  2952               	goto	u2485
  4252  0959  3001               	movlw	1
  4253  095A  02B5               	subwf	___ftmul@cntr,f
  4254  095B  1D03               	btfss	3,2
  4255  095C  2939               	goto	l1672
  4256  095D  3009               	movlw	9
  4257  095E  00AD               	movwf	??___ftmul
  4258  095F  082D               	movf	??___ftmul,w
  4259  0960  00B5               	movwf	___ftmul@cntr
  4260  0961                     l1684:	
  4261  0961  1C27               	btfss	___ftmul@f1,0
  4262  0962  2971               	goto	l1688
  4263  0963  082A               	movf	___ftmul@f2,w
  4264  0964  07B2               	addwf	___ftmul@f3_as_product,f
  4265  0965  082B               	movf	___ftmul@f2+1,w
  4266  0966  1103               	clrz
  4267  0967  1803               	skipnc
  4268  0968  0A2B               	incf	___ftmul@f2+1,w
  4269  0969  1D03               	btfss	3,2
  4270  096A  07B3               	addwf	___ftmul@f3_as_product+1,f
  4271  096B  082C               	movf	___ftmul@f2+2,w
  4272  096C  1103               	clrz
  4273  096D  1803               	skipnc
  4274  096E  0A2C               	incf	___ftmul@f2+2,w
  4275  096F  1D03               	btfss	3,2
  4276  0970  07B4               	addwf	___ftmul@f3_as_product+2,f
  4277  0971                     l1688:	
  4278  0971  3001               	movlw	1
  4279  0972                     u2525:	
  4280  0972  1003               	clrc
  4281  0973  0CA9               	rrf	___ftmul@f1+2,f
  4282  0974  0CA8               	rrf	___ftmul@f1+1,f
  4283  0975  0CA7               	rrf	___ftmul@f1,f
  4284  0976  3EFF               	addlw	-1
  4285  0977  1D03               	skipz
  4286  0978  2972               	goto	u2525
  4287  0979  3001               	movlw	1
  4288  097A                     u2535:	
  4289  097A  1003               	clrc
  4290  097B  0CB4               	rrf	___ftmul@f3_as_product+2,f
  4291  097C  0CB3               	rrf	___ftmul@f3_as_product+1,f
  4292  097D  0CB2               	rrf	___ftmul@f3_as_product,f
  4293  097E  3EFF               	addlw	-1
  4294  097F  1D03               	skipz
  4295  0980  297A               	goto	u2535
  4296  0981  3001               	movlw	1
  4297  0982  02B5               	subwf	___ftmul@cntr,f
  4298  0983  1D03               	btfss	3,2
  4299  0984  2961               	goto	l1684
  4300  0985  0832               	movf	___ftmul@f3_as_product,w
  4301  0986  00F0               	movwf	___ftpack@arg
  4302  0987  0833               	movf	___ftmul@f3_as_product+1,w
  4303  0988  00F1               	movwf	___ftpack@arg+1
  4304  0989  0834               	movf	___ftmul@f3_as_product+2,w
  4305  098A  00F2               	movwf	___ftpack@arg+2
  4306  098B  0831               	movf	___ftmul@exp,w
  4307  098C  00AD               	movwf	??___ftmul
  4308  098D  082D               	movf	??___ftmul,w
  4309  098E  00F3               	movwf	___ftpack@exp
  4310  098F  0836               	movf	___ftmul@sign,w
  4311  0990  00AE               	movwf	??___ftmul+1
  4312  0991  082E               	movf	??___ftmul+1,w
  4313  0992  00F4               	movwf	___ftpack@sign
  4314  0993  160A  118A  2706   	fcall	___ftpack
  4315  0996  0870               	movf	?___ftpack,w
  4316  0997  1283               	bcf	3,5	;RP0=0, select bank0
  4317  0998  1303               	bcf	3,6	;RP1=0, select bank0
  4318  0999  00A7               	movwf	?___ftmul
  4319  099A  0871               	movf	?___ftpack+1,w
  4320  099B  00A8               	movwf	?___ftmul+1
  4321  099C  0872               	movf	?___ftpack+2,w
  4322  099D  00A9               	movwf	?___ftmul+2
  4323  099E  0008               	return
  4324  099F                     __end_of___ftmul:	
  4325                           
  4326                           	psect	text6
  4327  0803                     __ptext6:	
  4328 ;; *************** function ___bmul *****************
  4329 ;; Defined at:
  4330 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul8.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  multiplier      1    wreg     unsigned char 
  4333 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  multiplier      1    6[BANK0 ] unsigned char 
  4336 ;;  product         1    5[BANK0 ] unsigned char 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  1    wreg      unsigned char 
  4339 ;; Registers used:
  4340 ;;		wreg, status,2, status,0
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4346 ;;      Params:         0       1       0       0       0
  4347 ;;      Locals:         0       2       0       0       0
  4348 ;;      Temps:          1       0       0       0       0
  4349 ;;      Totals:         1       3       0       0       0
  4350 ;;Total ram usage:        4 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; This function calls:
  4353 ;;		Nothing
  4354 ;; This function is called by:
  4355 ;;		_fround
  4356 ;;		_scale
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           
  4361                           ;psect for function ___bmul
  4362  0803                     ___bmul:	
  4363                           
  4364                           ;incstack = 0
  4365                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4366                           ;___bmul@multiplier stored from wreg
  4367  0803  1283               	bcf	3,5	;RP0=0, select bank0
  4368  0804  1303               	bcf	3,6	;RP1=0, select bank0
  4369  0805  00A6               	movwf	___bmul@multiplier
  4370  0806  01A5               	clrf	___bmul@product
  4371  0807                     l1484:	
  4372  0807  1C26               	btfss	___bmul@multiplier,0
  4373  0808  280D               	goto	l1488
  4374  0809  0824               	movf	___bmul@multiplicand,w
  4375  080A  00FC               	movwf	??___bmul
  4376  080B  087C               	movf	??___bmul,w
  4377  080C  07A5               	addwf	___bmul@product,f
  4378  080D                     l1488:	
  4379  080D  1003               	clrc
  4380  080E  0DA4               	rlf	___bmul@multiplicand,f
  4381  080F  1003               	clrc
  4382  0810  0CA6               	rrf	___bmul@multiplier,f
  4383  0811  0826               	movf	___bmul@multiplier,w
  4384  0812  1D03               	btfss	3,2
  4385  0813  2807               	goto	l1484
  4386  0814  0825               	movf	___bmul@product,w
  4387  0815  0008               	return
  4388  0816                     __end_of___bmul:	
  4389                           
  4390                           	psect	text7
  4391  1559                     __ptext7:	
  4392 ;; *************** function ___awmod *****************
  4393 ;; Defined at:
  4394 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awmod.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  divisor         2    0[COMMON] int 
  4397 ;;  dividend        2    2[COMMON] int 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;  sign            1    6[COMMON] unsigned char 
  4400 ;;  counter         1    5[COMMON] unsigned char 
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  2    0[COMMON] int 
  4403 ;; Registers used:
  4404 ;;		wreg, status,2, status,0
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4410 ;;      Params:         4       0       0       0       0
  4411 ;;      Locals:         2       0       0       0       0
  4412 ;;      Temps:          1       0       0       0       0
  4413 ;;      Totals:         7       0       0       0       0
  4414 ;;Total ram usage:        7 bytes
  4415 ;; Hardware stack levels used:    1
  4416 ;; This function calls:
  4417 ;;		Nothing
  4418 ;; This function is called by:
  4419 ;;		_fround
  4420 ;;		_scale
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           
  4425                           ;psect for function ___awmod
  4426  1559                     ___awmod:	
  4427                           
  4428                           ;incstack = 0
  4429                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4430  1559  01F6               	clrf	___awmod@sign
  4431  155A  1FF3               	btfss	___awmod@dividend+1,7
  4432  155B  2D63               	goto	l1548
  4433  155C  09F2               	comf	___awmod@dividend,f
  4434  155D  09F3               	comf	___awmod@dividend+1,f
  4435  155E  0AF2               	incf	___awmod@dividend,f
  4436  155F  1903               	skipnz
  4437  1560  0AF3               	incf	___awmod@dividend+1,f
  4438  1561  01F6               	clrf	___awmod@sign
  4439  1562  0AF6               	incf	___awmod@sign,f
  4440  1563                     l1548:	
  4441  1563  1FF1               	btfss	___awmod@divisor+1,7
  4442  1564  2D6A               	goto	l1552
  4443  1565  09F0               	comf	___awmod@divisor,f
  4444  1566  09F1               	comf	___awmod@divisor+1,f
  4445  1567  0AF0               	incf	___awmod@divisor,f
  4446  1568  1903               	skipnz
  4447  1569  0AF1               	incf	___awmod@divisor+1,f
  4448  156A                     l1552:	
  4449  156A  0870               	movf	___awmod@divisor,w
  4450  156B  0471               	iorwf	___awmod@divisor+1,w
  4451  156C  1903               	btfsc	3,2
  4452  156D  2D97               	goto	l1570
  4453  156E  01F5               	clrf	___awmod@counter
  4454  156F  0AF5               	incf	___awmod@counter,f
  4455  1570                     l1560:	
  4456  1570  1BF1               	btfsc	___awmod@divisor+1,7
  4457  1571  2D7E               	goto	l1562
  4458  1572  3001               	movlw	1
  4459  1573                     u2115:	
  4460  1573  1003               	clrc
  4461  1574  0DF0               	rlf	___awmod@divisor,f
  4462  1575  0DF1               	rlf	___awmod@divisor+1,f
  4463  1576  3EFF               	addlw	-1
  4464  1577  1D03               	skipz
  4465  1578  2D73               	goto	u2115
  4466  1579  3001               	movlw	1
  4467  157A  00F4               	movwf	??___awmod
  4468  157B  0874               	movf	??___awmod,w
  4469  157C  07F5               	addwf	___awmod@counter,f
  4470  157D  2D70               	goto	l1560
  4471  157E                     l1562:	
  4472  157E  0871               	movf	___awmod@divisor+1,w
  4473  157F  0273               	subwf	___awmod@dividend+1,w
  4474  1580  1D03               	skipz
  4475  1581  2D84               	goto	u2135
  4476  1582  0870               	movf	___awmod@divisor,w
  4477  1583  0272               	subwf	___awmod@dividend,w
  4478  1584                     u2135:	
  4479  1584  1C03               	skipc
  4480  1585  2D8C               	goto	l1566
  4481  1586  0870               	movf	___awmod@divisor,w
  4482  1587  02F2               	subwf	___awmod@dividend,f
  4483  1588  0871               	movf	___awmod@divisor+1,w
  4484  1589  1C03               	skipc
  4485  158A  03F3               	decf	___awmod@dividend+1,f
  4486  158B  02F3               	subwf	___awmod@dividend+1,f
  4487  158C                     l1566:	
  4488  158C  3001               	movlw	1
  4489  158D                     u2145:	
  4490  158D  1003               	clrc
  4491  158E  0CF1               	rrf	___awmod@divisor+1,f
  4492  158F  0CF0               	rrf	___awmod@divisor,f
  4493  1590  3EFF               	addlw	-1
  4494  1591  1D03               	skipz
  4495  1592  2D8D               	goto	u2145
  4496  1593  3001               	movlw	1
  4497  1594  02F5               	subwf	___awmod@counter,f
  4498  1595  1D03               	btfss	3,2
  4499  1596  2D7E               	goto	l1562
  4500  1597                     l1570:	
  4501  1597  0876               	movf	___awmod@sign,w
  4502  1598  1903               	btfsc	3,2
  4503  1599  2D9F               	goto	l1574
  4504  159A  09F2               	comf	___awmod@dividend,f
  4505  159B  09F3               	comf	___awmod@dividend+1,f
  4506  159C  0AF2               	incf	___awmod@dividend,f
  4507  159D  1903               	skipnz
  4508  159E  0AF3               	incf	___awmod@dividend+1,f
  4509  159F                     l1574:	
  4510  159F  0873               	movf	___awmod@dividend+1,w
  4511  15A0  00F1               	movwf	?___awmod+1
  4512  15A1  0872               	movf	___awmod@dividend,w
  4513  15A2  00F0               	movwf	?___awmod
  4514  15A3  0008               	return
  4515  15A4                     __end_of___awmod:	
  4516                           
  4517                           	psect	text8
  4518  15F0                     __ptext8:	
  4519 ;; *************** function ___awdiv *****************
  4520 ;; Defined at:
  4521 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  divisor         2    7[COMMON] int 
  4524 ;;  dividend        2    9[COMMON] int 
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;  quotient        2    2[BANK0 ] int 
  4527 ;;  sign            1    1[BANK0 ] unsigned char 
  4528 ;;  counter         1    0[BANK0 ] unsigned char 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  2    7[COMMON] int 
  4531 ;; Registers used:
  4532 ;;		wreg, status,2, status,0
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4538 ;;      Params:         4       0       0       0       0
  4539 ;;      Locals:         0       4       0       0       0
  4540 ;;      Temps:          1       0       0       0       0
  4541 ;;      Totals:         5       4       0       0       0
  4542 ;;Total ram usage:        9 bytes
  4543 ;; Hardware stack levels used:    1
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		_fround
  4548 ;;		_scale
  4549 ;;		_printf
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553                           
  4554                           ;psect for function ___awdiv
  4555  15F0                     ___awdiv:	
  4556                           
  4557                           ;incstack = 0
  4558                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4559  15F0  1283               	bcf	3,5	;RP0=0, select bank0
  4560  15F1  1303               	bcf	3,6	;RP1=0, select bank0
  4561  15F2  01A1               	clrf	___awdiv@sign
  4562  15F3  1FF8               	btfss	___awdiv@divisor+1,7
  4563  15F4  2DFC               	goto	l1504
  4564  15F5  09F7               	comf	___awdiv@divisor,f
  4565  15F6  09F8               	comf	___awdiv@divisor+1,f
  4566  15F7  0AF7               	incf	___awdiv@divisor,f
  4567  15F8  1903               	skipnz
  4568  15F9  0AF8               	incf	___awdiv@divisor+1,f
  4569  15FA  01A1               	clrf	___awdiv@sign
  4570  15FB  0AA1               	incf	___awdiv@sign,f
  4571  15FC                     l1504:	
  4572  15FC  1FFA               	btfss	___awdiv@dividend+1,7
  4573  15FD  2E07               	goto	l1510
  4574  15FE  09F9               	comf	___awdiv@dividend,f
  4575  15FF  09FA               	comf	___awdiv@dividend+1,f
  4576  1600  0AF9               	incf	___awdiv@dividend,f
  4577  1601  1903               	skipnz
  4578  1602  0AFA               	incf	___awdiv@dividend+1,f
  4579  1603  3001               	movlw	1
  4580  1604  00FB               	movwf	??___awdiv
  4581  1605  087B               	movf	??___awdiv,w
  4582  1606  06A1               	xorwf	___awdiv@sign,f
  4583  1607                     l1510:	
  4584  1607  01A2               	clrf	___awdiv@quotient
  4585  1608  01A3               	clrf	___awdiv@quotient+1
  4586  1609  0877               	movf	___awdiv@divisor,w
  4587  160A  0478               	iorwf	___awdiv@divisor+1,w
  4588  160B  1903               	btfsc	3,2
  4589  160C  2E3E               	goto	l1532
  4590  160D  01A0               	clrf	___awdiv@counter
  4591  160E  0AA0               	incf	___awdiv@counter,f
  4592  160F                     l1520:	
  4593  160F  1BF8               	btfsc	___awdiv@divisor+1,7
  4594  1610  2E1D               	goto	l1522
  4595  1611  3001               	movlw	1
  4596  1612                     u2015:	
  4597  1612  1003               	clrc
  4598  1613  0DF7               	rlf	___awdiv@divisor,f
  4599  1614  0DF8               	rlf	___awdiv@divisor+1,f
  4600  1615  3EFF               	addlw	-1
  4601  1616  1D03               	skipz
  4602  1617  2E12               	goto	u2015
  4603  1618  3001               	movlw	1
  4604  1619  00FB               	movwf	??___awdiv
  4605  161A  087B               	movf	??___awdiv,w
  4606  161B  07A0               	addwf	___awdiv@counter,f
  4607  161C  2E0F               	goto	l1520
  4608  161D                     l1522:	
  4609  161D  3001               	movlw	1
  4610  161E                     u2035:	
  4611  161E  1003               	clrc
  4612  161F  0DA2               	rlf	___awdiv@quotient,f
  4613  1620  0DA3               	rlf	___awdiv@quotient+1,f
  4614  1621  3EFF               	addlw	-1
  4615  1622  1D03               	skipz
  4616  1623  2E1E               	goto	u2035
  4617  1624  0878               	movf	___awdiv@divisor+1,w
  4618  1625  027A               	subwf	___awdiv@dividend+1,w
  4619  1626  1D03               	skipz
  4620  1627  2E2A               	goto	u2045
  4621  1628  0877               	movf	___awdiv@divisor,w
  4622  1629  0279               	subwf	___awdiv@dividend,w
  4623  162A                     u2045:	
  4624  162A  1C03               	skipc
  4625  162B  2E33               	goto	l1528
  4626  162C  0877               	movf	___awdiv@divisor,w
  4627  162D  02F9               	subwf	___awdiv@dividend,f
  4628  162E  0878               	movf	___awdiv@divisor+1,w
  4629  162F  1C03               	skipc
  4630  1630  03FA               	decf	___awdiv@dividend+1,f
  4631  1631  02FA               	subwf	___awdiv@dividend+1,f
  4632  1632  1422               	bsf	___awdiv@quotient,0
  4633  1633                     l1528:	
  4634  1633  3001               	movlw	1
  4635  1634                     u2055:	
  4636  1634  1003               	clrc
  4637  1635  0CF8               	rrf	___awdiv@divisor+1,f
  4638  1636  0CF7               	rrf	___awdiv@divisor,f
  4639  1637  3EFF               	addlw	-1
  4640  1638  1D03               	skipz
  4641  1639  2E34               	goto	u2055
  4642  163A  3001               	movlw	1
  4643  163B  02A0               	subwf	___awdiv@counter,f
  4644  163C  1D03               	btfss	3,2
  4645  163D  2E1D               	goto	l1522
  4646  163E                     l1532:	
  4647  163E  0821               	movf	___awdiv@sign,w
  4648  163F  1903               	btfsc	3,2
  4649  1640  2E46               	goto	l1536
  4650  1641  09A2               	comf	___awdiv@quotient,f
  4651  1642  09A3               	comf	___awdiv@quotient+1,f
  4652  1643  0AA2               	incf	___awdiv@quotient,f
  4653  1644  1903               	skipnz
  4654  1645  0AA3               	incf	___awdiv@quotient+1,f
  4655  1646                     l1536:	
  4656  1646  0823               	movf	___awdiv@quotient+1,w
  4657  1647  00F8               	movwf	?___awdiv+1
  4658  1648  0822               	movf	___awdiv@quotient,w
  4659  1649  00F7               	movwf	?___awdiv
  4660  164A  0008               	return
  4661  164B                     __end_of___awdiv:	
  4662                           
  4663                           	psect	text9
  4664  0003                     __ptext9:	
  4665 ;; *************** function __tdiv_to_l_ *****************
  4666 ;; Defined at:
  4667 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdivl.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  f1              3    0[COMMON] float 
  4670 ;;  f2              3    3[COMMON] float 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  quot            4    0[BANK0 ] unsigned long 
  4673 ;;  exp1            1    5[BANK0 ] unsigned char 
  4674 ;;  cntr            1    4[BANK0 ] unsigned char 
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  4    0[COMMON] unsigned long 
  4677 ;; Registers used:
  4678 ;;		wreg, status,2, status,0
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4684 ;;      Params:         6       0       0       0       0
  4685 ;;      Locals:         0       6       0       0       0
  4686 ;;      Temps:          4       0       0       0       0
  4687 ;;      Totals:        10       6       0       0       0
  4688 ;;Total ram usage:       16 bytes
  4689 ;; Hardware stack levels used:    1
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_printf
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           
  4698                           ;psect for function __tdiv_to_l_
  4699  0003                     __tdiv_to_l_:	
  4700                           
  4701                           ;incstack = 0
  4702                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4703  0003  0870               	movf	__tdiv_to_l_@f1,w
  4704  0004  00F6               	movwf	??__tdiv_to_l_
  4705  0005  0871               	movf	__tdiv_to_l_@f1+1,w
  4706  0006  00F7               	movwf	??__tdiv_to_l_+1
  4707  0007  0872               	movf	__tdiv_to_l_@f1+2,w
  4708  0008  00F8               	movwf	??__tdiv_to_l_+2
  4709  0009  1003               	clrc
  4710  000A  0D77               	rlf	??__tdiv_to_l_+1,w
  4711  000B  0D78               	rlf	??__tdiv_to_l_+2,w
  4712  000C  00F9               	movwf	??__tdiv_to_l_+3
  4713  000D  0879               	movf	??__tdiv_to_l_+3,w
  4714  000E  1283               	bcf	3,5	;RP0=0, select bank0
  4715  000F  1303               	bcf	3,6	;RP1=0, select bank0
  4716  0010  00A5               	movwf	__tdiv_to_l_@exp1
  4717  0011  0825               	movf	__tdiv_to_l_@exp1,w
  4718  0012  1D03               	btfss	3,2
  4719  0013  281D               	goto	l1770
  4720  0014  3000               	movlw	0
  4721  0015  00F3               	movwf	?__tdiv_to_l_+3
  4722  0016  3000               	movlw	0
  4723  0017  00F2               	movwf	?__tdiv_to_l_+2
  4724  0018  3000               	movlw	0
  4725  0019  00F1               	movwf	?__tdiv_to_l_+1
  4726  001A  3000               	movlw	0
  4727  001B  00F0               	movwf	?__tdiv_to_l_
  4728  001C  0008               	return
  4729  001D                     l1770:	
  4730  001D  0873               	movf	__tdiv_to_l_@f2,w
  4731  001E  00F6               	movwf	??__tdiv_to_l_
  4732  001F  0874               	movf	__tdiv_to_l_@f2+1,w
  4733  0020  00F7               	movwf	??__tdiv_to_l_+1
  4734  0021  0875               	movf	__tdiv_to_l_@f2+2,w
  4735  0022  00F8               	movwf	??__tdiv_to_l_+2
  4736  0023  1003               	clrc
  4737  0024  0D77               	rlf	??__tdiv_to_l_+1,w
  4738  0025  0D78               	rlf	??__tdiv_to_l_+2,w
  4739  0026  00F9               	movwf	??__tdiv_to_l_+3
  4740  0027  0879               	movf	??__tdiv_to_l_+3,w
  4741  0028  00A4               	movwf	__tdiv_to_l_@cntr
  4742  0029  0824               	movf	__tdiv_to_l_@cntr,w
  4743  002A  1D03               	btfss	3,2
  4744  002B  2835               	goto	l453
  4745  002C  3000               	movlw	0
  4746  002D  00F3               	movwf	?__tdiv_to_l_+3
  4747  002E  3000               	movlw	0
  4748  002F  00F2               	movwf	?__tdiv_to_l_+2
  4749  0030  3000               	movlw	0
  4750  0031  00F1               	movwf	?__tdiv_to_l_+1
  4751  0032  3000               	movlw	0
  4752  0033  00F0               	movwf	?__tdiv_to_l_
  4753  0034  0008               	return
  4754  0035                     l453:	
  4755  0035  17F1               	bsf	__tdiv_to_l_@f1+1,7
  4756  0036  30FF               	movlw	255
  4757  0037  05F0               	andwf	__tdiv_to_l_@f1,f
  4758  0038  30FF               	movlw	255
  4759  0039  05F1               	andwf	__tdiv_to_l_@f1+1,f
  4760  003A  3000               	movlw	0
  4761  003B  05F2               	andwf	__tdiv_to_l_@f1+2,f
  4762  003C  17F4               	bsf	__tdiv_to_l_@f2+1,7
  4763  003D  30FF               	movlw	255
  4764  003E  05F3               	andwf	__tdiv_to_l_@f2,f
  4765  003F  30FF               	movlw	255
  4766  0040  05F4               	andwf	__tdiv_to_l_@f2+1,f
  4767  0041  3000               	movlw	0
  4768  0042  05F5               	andwf	__tdiv_to_l_@f2+2,f
  4769  0043  3000               	movlw	0
  4770  0044  00A3               	movwf	__tdiv_to_l_@quot+3
  4771  0045  3000               	movlw	0
  4772  0046  00A2               	movwf	__tdiv_to_l_@quot+2
  4773  0047  3000               	movlw	0
  4774  0048  00A1               	movwf	__tdiv_to_l_@quot+1
  4775  0049  3000               	movlw	0
  4776  004A  00A0               	movwf	__tdiv_to_l_@quot
  4777  004B  307F               	movlw	127
  4778  004C  02A5               	subwf	__tdiv_to_l_@exp1,f
  4779  004D  3098               	movlw	152
  4780  004E  0724               	addwf	__tdiv_to_l_@cntr,w
  4781  004F  00F6               	movwf	??__tdiv_to_l_
  4782  0050  0876               	movf	??__tdiv_to_l_,w
  4783  0051  02A5               	subwf	__tdiv_to_l_@exp1,f
  4784  0052  3018               	movlw	24
  4785  0053  00F6               	movwf	??__tdiv_to_l_
  4786  0054  0876               	movf	??__tdiv_to_l_,w
  4787  0055  00A4               	movwf	__tdiv_to_l_@cntr
  4788  0056                     l1784:	
  4789  0056  3001               	movlw	1
  4790  0057  00F6               	movwf	??__tdiv_to_l_
  4791  0058                     u2655:	
  4792  0058  1003               	clrc
  4793  0059  0DA0               	rlf	__tdiv_to_l_@quot,f
  4794  005A  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4795  005B  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4796  005C  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4797  005D  0BF6               	decfsz	??__tdiv_to_l_,f
  4798  005E  2858               	goto	u2655
  4799  005F  0875               	movf	__tdiv_to_l_@f2+2,w
  4800  0060  0272               	subwf	__tdiv_to_l_@f1+2,w
  4801  0061  1D03               	skipz
  4802  0062  2869               	goto	u2665
  4803  0063  0874               	movf	__tdiv_to_l_@f2+1,w
  4804  0064  0271               	subwf	__tdiv_to_l_@f1+1,w
  4805  0065  1D03               	skipz
  4806  0066  2869               	goto	u2665
  4807  0067  0873               	movf	__tdiv_to_l_@f2,w
  4808  0068  0270               	subwf	__tdiv_to_l_@f1,w
  4809  0069                     u2665:	
  4810  0069  1C03               	skipc
  4811  006A  2876               	goto	l1792
  4812  006B  0873               	movf	__tdiv_to_l_@f2,w
  4813  006C  02F0               	subwf	__tdiv_to_l_@f1,f
  4814  006D  0874               	movf	__tdiv_to_l_@f2+1,w
  4815  006E  1C03               	skipc
  4816  006F  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  4817  0070  02F1               	subwf	__tdiv_to_l_@f1+1,f
  4818  0071  0875               	movf	__tdiv_to_l_@f2+2,w
  4819  0072  1C03               	skipc
  4820  0073  0A75               	incf	__tdiv_to_l_@f2+2,w
  4821  0074  02F2               	subwf	__tdiv_to_l_@f1+2,f
  4822  0075  1420               	bsf	__tdiv_to_l_@quot,0
  4823  0076                     l1792:	
  4824  0076  3001               	movlw	1
  4825  0077                     u2675:	
  4826  0077  1003               	clrc
  4827  0078  0DF0               	rlf	__tdiv_to_l_@f1,f
  4828  0079  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  4829  007A  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  4830  007B  3EFF               	addlw	-1
  4831  007C  1D03               	skipz
  4832  007D  2877               	goto	u2675
  4833  007E  3001               	movlw	1
  4834  007F  02A4               	subwf	__tdiv_to_l_@cntr,f
  4835  0080  1D03               	btfss	3,2
  4836  0081  2856               	goto	l1784
  4837  0082  1FA5               	btfss	__tdiv_to_l_@exp1,7
  4838  0083  28A2               	goto	l1804
  4839  0084  0825               	movf	__tdiv_to_l_@exp1,w
  4840  0085  3A80               	xorlw	128
  4841  0086  3E97               	addlw	151
  4842  0087  1803               	skipnc
  4843  0088  2892               	goto	l1802
  4844  0089  3000               	movlw	0
  4845  008A  00F3               	movwf	?__tdiv_to_l_+3
  4846  008B  3000               	movlw	0
  4847  008C  00F2               	movwf	?__tdiv_to_l_+2
  4848  008D  3000               	movlw	0
  4849  008E  00F1               	movwf	?__tdiv_to_l_+1
  4850  008F  3000               	movlw	0
  4851  0090  00F0               	movwf	?__tdiv_to_l_
  4852  0091  0008               	return
  4853  0092                     l1802:	
  4854  0092  3001               	movlw	1
  4855  0093                     u2715:	
  4856  0093  1003               	clrc
  4857  0094  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  4858  0095  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  4859  0096  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  4860  0097  0CA0               	rrf	__tdiv_to_l_@quot,f
  4861  0098  3EFF               	addlw	-1
  4862  0099  1D03               	skipz
  4863  009A  2893               	goto	u2715
  4864  009B  3001               	movlw	1
  4865  009C  00F6               	movwf	??__tdiv_to_l_
  4866  009D  0876               	movf	??__tdiv_to_l_,w
  4867  009E  07A5               	addwf	__tdiv_to_l_@exp1,f
  4868  009F  1903               	btfsc	3,2
  4869  00A0  28BD               	goto	l1812
  4870  00A1  2892               	goto	l1802
  4871  00A2                     l1804:	
  4872  00A2  3018               	movlw	24
  4873  00A3  0225               	subwf	__tdiv_to_l_@exp1,w
  4874  00A4  1C03               	skipc
  4875  00A5  28BA               	goto	l463
  4876  00A6  3000               	movlw	0
  4877  00A7  00F3               	movwf	?__tdiv_to_l_+3
  4878  00A8  3000               	movlw	0
  4879  00A9  00F2               	movwf	?__tdiv_to_l_+2
  4880  00AA  3000               	movlw	0
  4881  00AB  00F1               	movwf	?__tdiv_to_l_+1
  4882  00AC  3000               	movlw	0
  4883  00AD  00F0               	movwf	?__tdiv_to_l_
  4884  00AE  0008               	return
  4885  00AF                     l1810:	
  4886  00AF  3001               	movlw	1
  4887  00B0  00F6               	movwf	??__tdiv_to_l_
  4888  00B1                     u2745:	
  4889  00B1  1003               	clrc
  4890  00B2  0DA0               	rlf	__tdiv_to_l_@quot,f
  4891  00B3  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4892  00B4  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4893  00B5  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4894  00B6  0BF6               	decfsz	??__tdiv_to_l_,f
  4895  00B7  28B1               	goto	u2745
  4896  00B8  3001               	movlw	1
  4897  00B9  02A5               	subwf	__tdiv_to_l_@exp1,f
  4898  00BA                     l463:	
  4899  00BA  0825               	movf	__tdiv_to_l_@exp1,w
  4900  00BB  1D03               	btfss	3,2
  4901  00BC  28AF               	goto	l1810
  4902  00BD                     l1812:	
  4903  00BD  0823               	movf	__tdiv_to_l_@quot+3,w
  4904  00BE  00F3               	movwf	?__tdiv_to_l_+3
  4905  00BF  0822               	movf	__tdiv_to_l_@quot+2,w
  4906  00C0  00F2               	movwf	?__tdiv_to_l_+2
  4907  00C1  0821               	movf	__tdiv_to_l_@quot+1,w
  4908  00C2  00F1               	movwf	?__tdiv_to_l_+1
  4909  00C3  0820               	movf	__tdiv_to_l_@quot,w
  4910  00C4  00F0               	movwf	?__tdiv_to_l_
  4911  00C5  0008               	return
  4912  00C6                     __end_of__tdiv_to_l_:	
  4913                           
  4914                           	psect	text10
  4915  0AA8                     __ptext10:	
  4916 ;; *************** function __div_to_l_ *****************
  4917 ;; Defined at:
  4918 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fldivl.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;  f1              3    0[COMMON] unsigned long 
  4921 ;;  f2              3    3[COMMON] unsigned long 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  quot            4    0[BANK0 ] unsigned long 
  4924 ;;  exp1            1    5[BANK0 ] unsigned char 
  4925 ;;  cntr            1    4[BANK0 ] unsigned char 
  4926 ;; Return value:  Size  Location     Type
  4927 ;;                  4    0[COMMON] unsigned long 
  4928 ;; Registers used:
  4929 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4935 ;;      Params:         6       0       0       0       0
  4936 ;;      Locals:         0       6       0       0       0
  4937 ;;      Temps:          8       0       0       0       0
  4938 ;;      Totals:        14       6       0       0       0
  4939 ;;Total ram usage:       20 bytes
  4940 ;; Hardware stack levels used:    1
  4941 ;; This function calls:
  4942 ;;		Nothing
  4943 ;; This function is called by:
  4944 ;;		_printf
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           
  4949                           ;psect for function __div_to_l_
  4950  0AA8                     __div_to_l_:	
  4951                           
  4952                           ;incstack = 0
  4953                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  4954  0AA8  3070               	movlw	low (__div_to_l_@f1| 0)
  4955  0AA9  0084               	movwf	4
  4956  0AAA  0800               	movf	0,w
  4957  0AAB  00F6               	movwf	??__div_to_l_
  4958  0AAC  0A84               	incf	4,f
  4959  0AAD  0800               	movf	0,w
  4960  0AAE  00F7               	movwf	??__div_to_l_+1
  4961  0AAF  0A84               	incf	4,f
  4962  0AB0  0800               	movf	0,w
  4963  0AB1  00F8               	movwf	??__div_to_l_+2
  4964  0AB2  0A84               	incf	4,f
  4965  0AB3  0800               	movf	0,w
  4966  0AB4  00F9               	movwf	??__div_to_l_+3
  4967  0AB5  1003               	clrc
  4968  0AB6  0D78               	rlf	??__div_to_l_+2,w
  4969  0AB7  0D79               	rlf	??__div_to_l_+3,w
  4970  0AB8  00FA               	movwf	??__div_to_l_+4
  4971  0AB9  087A               	movf	??__div_to_l_+4,w
  4972  0ABA  1283               	bcf	3,5	;RP0=0, select bank0
  4973  0ABB  1303               	bcf	3,6	;RP1=0, select bank0
  4974  0ABC  00A5               	movwf	__div_to_l_@exp1
  4975  0ABD  0825               	movf	__div_to_l_@exp1,w
  4976  0ABE  1D03               	btfss	3,2
  4977  0ABF  2AC9               	goto	l1822
  4978  0AC0  3000               	movlw	0
  4979  0AC1  00F3               	movwf	?__div_to_l_+3
  4980  0AC2  3000               	movlw	0
  4981  0AC3  00F2               	movwf	?__div_to_l_+2
  4982  0AC4  3000               	movlw	0
  4983  0AC5  00F1               	movwf	?__div_to_l_+1
  4984  0AC6  3000               	movlw	0
  4985  0AC7  00F0               	movwf	?__div_to_l_
  4986  0AC8  0008               	return
  4987  0AC9                     l1822:	
  4988  0AC9  3073               	movlw	low (__div_to_l_@f2| 0)
  4989  0ACA  0084               	movwf	4
  4990  0ACB  0800               	movf	0,w
  4991  0ACC  00F6               	movwf	??__div_to_l_
  4992  0ACD  0A84               	incf	4,f
  4993  0ACE  0800               	movf	0,w
  4994  0ACF  00F7               	movwf	??__div_to_l_+1
  4995  0AD0  0A84               	incf	4,f
  4996  0AD1  0800               	movf	0,w
  4997  0AD2  00F8               	movwf	??__div_to_l_+2
  4998  0AD3  0A84               	incf	4,f
  4999  0AD4  0800               	movf	0,w
  5000  0AD5  00F9               	movwf	??__div_to_l_+3
  5001  0AD6  1003               	clrc
  5002  0AD7  0D78               	rlf	??__div_to_l_+2,w
  5003  0AD8  0D79               	rlf	??__div_to_l_+3,w
  5004  0AD9  00FA               	movwf	??__div_to_l_+4
  5005  0ADA  087A               	movf	??__div_to_l_+4,w
  5006  0ADB  00A4               	movwf	__div_to_l_@cntr
  5007  0ADC  0824               	movf	__div_to_l_@cntr,w
  5008  0ADD  1D03               	btfss	3,2
  5009  0ADE  2AE8               	goto	l1828
  5010  0ADF  3000               	movlw	0
  5011  0AE0  00F3               	movwf	?__div_to_l_+3
  5012  0AE1  3000               	movlw	0
  5013  0AE2  00F2               	movwf	?__div_to_l_+2
  5014  0AE3  3000               	movlw	0
  5015  0AE4  00F1               	movwf	?__div_to_l_+1
  5016  0AE5  3000               	movlw	0
  5017  0AE6  00F0               	movwf	?__div_to_l_
  5018  0AE7  0008               	return
  5019  0AE8                     l1828:	
  5020  0AE8  3070               	movlw	low (__div_to_l_@f1| 0)
  5021  0AE9  0084               	movwf	4
  5022  0AEA  3000               	movlw	0
  5023  0AEB  0480               	iorwf	0,f
  5024  0AEC  0A84               	incf	4,f
  5025  0AED  3000               	movlw	0
  5026  0AEE  0480               	iorwf	0,f
  5027  0AEF  0A84               	incf	4,f
  5028  0AF0  3080               	movlw	128
  5029  0AF1  0480               	iorwf	0,f
  5030  0AF2  0A84               	incf	4,f
  5031  0AF3  3000               	movlw	0
  5032  0AF4  0480               	iorwf	0,f
  5033  0AF5  3070               	movlw	low (__div_to_l_@f1| 0)
  5034  0AF6  0084               	movwf	4
  5035  0AF7  30FF               	movlw	255
  5036  0AF8  0580               	andwf	0,f
  5037  0AF9  0A84               	incf	4,f
  5038  0AFA  30FF               	movlw	255
  5039  0AFB  0580               	andwf	0,f
  5040  0AFC  0A84               	incf	4,f
  5041  0AFD  30FF               	movlw	255
  5042  0AFE  0580               	andwf	0,f
  5043  0AFF  0A84               	incf	4,f
  5044  0B00  3000               	movlw	0
  5045  0B01  0580               	andwf	0,f
  5046  0B02  3073               	movlw	low (__div_to_l_@f2| 0)
  5047  0B03  0084               	movwf	4
  5048  0B04  3000               	movlw	0
  5049  0B05  0480               	iorwf	0,f
  5050  0B06  0A84               	incf	4,f
  5051  0B07  3000               	movlw	0
  5052  0B08  0480               	iorwf	0,f
  5053  0B09  0A84               	incf	4,f
  5054  0B0A  3080               	movlw	128
  5055  0B0B  0480               	iorwf	0,f
  5056  0B0C  0A84               	incf	4,f
  5057  0B0D  3000               	movlw	0
  5058  0B0E  0480               	iorwf	0,f
  5059  0B0F  3073               	movlw	low (__div_to_l_@f2| 0)
  5060  0B10  0084               	movwf	4
  5061  0B11  30FF               	movlw	255
  5062  0B12  0580               	andwf	0,f
  5063  0B13  0A84               	incf	4,f
  5064  0B14  30FF               	movlw	255
  5065  0B15  0580               	andwf	0,f
  5066  0B16  0A84               	incf	4,f
  5067  0B17  30FF               	movlw	255
  5068  0B18  0580               	andwf	0,f
  5069  0B19  0A84               	incf	4,f
  5070  0B1A  3000               	movlw	0
  5071  0B1B  0580               	andwf	0,f
  5072  0B1C  3000               	movlw	0
  5073  0B1D  00A3               	movwf	__div_to_l_@quot+3
  5074  0B1E  3000               	movlw	0
  5075  0B1F  00A2               	movwf	__div_to_l_@quot+2
  5076  0B20  3000               	movlw	0
  5077  0B21  00A1               	movwf	__div_to_l_@quot+1
  5078  0B22  3000               	movlw	0
  5079  0B23  00A0               	movwf	__div_to_l_@quot
  5080  0B24  307F               	movlw	127
  5081  0B25  02A5               	subwf	__div_to_l_@exp1,f
  5082  0B26  30A0               	movlw	160
  5083  0B27  0724               	addwf	__div_to_l_@cntr,w
  5084  0B28  00F6               	movwf	??__div_to_l_
  5085  0B29  0876               	movf	??__div_to_l_,w
  5086  0B2A  02A5               	subwf	__div_to_l_@exp1,f
  5087  0B2B  3020               	movlw	32
  5088  0B2C  00F6               	movwf	??__div_to_l_
  5089  0B2D  0876               	movf	??__div_to_l_,w
  5090  0B2E  00A4               	movwf	__div_to_l_@cntr
  5091  0B2F                     l1838:	
  5092  0B2F  3001               	movlw	1
  5093  0B30  00F6               	movwf	??__div_to_l_
  5094  0B31                     u2785:	
  5095  0B31  1003               	clrc
  5096  0B32  0DA0               	rlf	__div_to_l_@quot,f
  5097  0B33  0DA1               	rlf	__div_to_l_@quot+1,f
  5098  0B34  0DA2               	rlf	__div_to_l_@quot+2,f
  5099  0B35  0DA3               	rlf	__div_to_l_@quot+3,f
  5100  0B36  0BF6               	decfsz	??__div_to_l_,f
  5101  0B37  2B31               	goto	u2785
  5102  0B38  3073               	movlw	low (__div_to_l_@f2| 0)
  5103  0B39  0084               	movwf	4
  5104  0B3A  0800               	movf	0,w
  5105  0B3B  00F6               	movwf	??__div_to_l_
  5106  0B3C  0A84               	incf	4,f
  5107  0B3D  0800               	movf	0,w
  5108  0B3E  00F7               	movwf	??__div_to_l_+1
  5109  0B3F  0A84               	incf	4,f
  5110  0B40  0800               	movf	0,w
  5111  0B41  00F8               	movwf	??__div_to_l_+2
  5112  0B42  0A84               	incf	4,f
  5113  0B43  0800               	movf	0,w
  5114  0B44  00F9               	movwf	??__div_to_l_+3
  5115  0B45  3070               	movlw	low (__div_to_l_@f1| 0)
  5116  0B46  0084               	movwf	4
  5117  0B47  0800               	movf	0,w
  5118  0B48  00FA               	movwf	??__div_to_l_+4
  5119  0B49  0A84               	incf	4,f
  5120  0B4A  0800               	movf	0,w
  5121  0B4B  00FB               	movwf	??__div_to_l_+5
  5122  0B4C  0A84               	incf	4,f
  5123  0B4D  0800               	movf	0,w
  5124  0B4E  00FC               	movwf	??__div_to_l_+6
  5125  0B4F  0A84               	incf	4,f
  5126  0B50  0800               	movf	0,w
  5127  0B51  00FD               	movwf	??__div_to_l_+7
  5128  0B52  0879               	movf	??__div_to_l_+3,w
  5129  0B53  027D               	subwf	??__div_to_l_+7,w
  5130  0B54  1D03               	skipz
  5131  0B55  2B60               	goto	u2795
  5132  0B56  0878               	movf	??__div_to_l_+2,w
  5133  0B57  027C               	subwf	??__div_to_l_+6,w
  5134  0B58  1D03               	skipz
  5135  0B59  2B60               	goto	u2795
  5136  0B5A  0877               	movf	??__div_to_l_+1,w
  5137  0B5B  027B               	subwf	??__div_to_l_+5,w
  5138  0B5C  1D03               	skipz
  5139  0B5D  2B60               	goto	u2795
  5140  0B5E  0876               	movf	??__div_to_l_,w
  5141  0B5F  027A               	subwf	??__div_to_l_+4,w
  5142  0B60                     u2795:	
  5143  0B60  1C03               	skipc
  5144  0B61  2B85               	goto	l376
  5145  0B62  3073               	movlw	low (__div_to_l_@f2| 0)
  5146  0B63  0084               	movwf	4
  5147  0B64  0800               	movf	0,w
  5148  0B65  00F6               	movwf	??__div_to_l_
  5149  0B66  0A84               	incf	4,f
  5150  0B67  0800               	movf	0,w
  5151  0B68  00F7               	movwf	??__div_to_l_+1
  5152  0B69  0A84               	incf	4,f
  5153  0B6A  0800               	movf	0,w
  5154  0B6B  00F8               	movwf	??__div_to_l_+2
  5155  0B6C  0A84               	incf	4,f
  5156  0B6D  0800               	movf	0,w
  5157  0B6E  00F9               	movwf	??__div_to_l_+3
  5158  0B6F  3070               	movlw	low (__div_to_l_@f1| 0)
  5159  0B70  0084               	movwf	4
  5160  0B71  0876               	movf	??__div_to_l_,w
  5161  0B72  0280               	subwf	0,f
  5162  0B73  0A84               	incf	4,f
  5163  0B74  0877               	movf	??__div_to_l_+1,w
  5164  0B75  1C03               	skipc
  5165  0B76  0F77               	incfsz	??__div_to_l_+1,w
  5166  0B77  0280               	subwf	0,f
  5167  0B78  0A84               	incf	4,f
  5168  0B79  0878               	movf	??__div_to_l_+2,w
  5169  0B7A  1C03               	skipc
  5170  0B7B  0F78               	incfsz	??__div_to_l_+2,w
  5171  0B7C  0280               	subwf	0,f
  5172  0B7D  0A84               	incf	4,f
  5173  0B7E  0879               	movf	??__div_to_l_+3,w
  5174  0B7F  1C03               	skipc
  5175  0B80  0A79               	incf	??__div_to_l_+3,w
  5176  0B81  0280               	subwf	0,f
  5177  0B82  3003               	movlw	3
  5178  0B83  0284               	subwf	4,f
  5179  0B84  1420               	bsf	__div_to_l_@quot,0
  5180  0B85                     l376:	
  5181  0B85  3070               	movlw	low (__div_to_l_@f1| 0)
  5182  0B86  0084               	movwf	4
  5183  0B87  1003               	clrc
  5184  0B88  0D80               	rlf	0,f
  5185  0B89  0A84               	incf	4,f
  5186  0B8A  0D80               	rlf	0,f
  5187  0B8B  0A84               	incf	4,f
  5188  0B8C  0D80               	rlf	0,f
  5189  0B8D  0A84               	incf	4,f
  5190  0B8E  0D80               	rlf	0,f
  5191  0B8F  0384               	decf	4,f
  5192  0B90  0384               	decf	4,f
  5193  0B91  0384               	decf	4,f
  5194  0B92  3001               	movlw	1
  5195  0B93  02A4               	subwf	__div_to_l_@cntr,f
  5196  0B94  1D03               	btfss	3,2
  5197  0B95  2B2F               	goto	l1838
  5198  0B96  1FA5               	btfss	__div_to_l_@exp1,7
  5199  0B97  2BB6               	goto	l1856
  5200  0B98  0825               	movf	__div_to_l_@exp1,w
  5201  0B99  3A80               	xorlw	128
  5202  0B9A  3E9F               	addlw	159
  5203  0B9B  1803               	skipnc
  5204  0B9C  2BA6               	goto	l1854
  5205  0B9D  3000               	movlw	0
  5206  0B9E  00F3               	movwf	?__div_to_l_+3
  5207  0B9F  3000               	movlw	0
  5208  0BA0  00F2               	movwf	?__div_to_l_+2
  5209  0BA1  3000               	movlw	0
  5210  0BA2  00F1               	movwf	?__div_to_l_+1
  5211  0BA3  3000               	movlw	0
  5212  0BA4  00F0               	movwf	?__div_to_l_
  5213  0BA5  0008               	return
  5214  0BA6                     l1854:	
  5215  0BA6  3001               	movlw	1
  5216  0BA7                     u2835:	
  5217  0BA7  1003               	clrc
  5218  0BA8  0CA3               	rrf	__div_to_l_@quot+3,f
  5219  0BA9  0CA2               	rrf	__div_to_l_@quot+2,f
  5220  0BAA  0CA1               	rrf	__div_to_l_@quot+1,f
  5221  0BAB  0CA0               	rrf	__div_to_l_@quot,f
  5222  0BAC  3EFF               	addlw	-1
  5223  0BAD  1D03               	skipz
  5224  0BAE  2BA7               	goto	u2835
  5225  0BAF  3001               	movlw	1
  5226  0BB0  00F6               	movwf	??__div_to_l_
  5227  0BB1  0876               	movf	??__div_to_l_,w
  5228  0BB2  07A5               	addwf	__div_to_l_@exp1,f
  5229  0BB3  1903               	btfsc	3,2
  5230  0BB4  2BD1               	goto	l1864
  5231  0BB5  2BA6               	goto	l1854
  5232  0BB6                     l1856:	
  5233  0BB6  3020               	movlw	32
  5234  0BB7  0225               	subwf	__div_to_l_@exp1,w
  5235  0BB8  1C03               	skipc
  5236  0BB9  2BCE               	goto	l384
  5237  0BBA  3000               	movlw	0
  5238  0BBB  00F3               	movwf	?__div_to_l_+3
  5239  0BBC  3000               	movlw	0
  5240  0BBD  00F2               	movwf	?__div_to_l_+2
  5241  0BBE  3000               	movlw	0
  5242  0BBF  00F1               	movwf	?__div_to_l_+1
  5243  0BC0  3000               	movlw	0
  5244  0BC1  00F0               	movwf	?__div_to_l_
  5245  0BC2  0008               	return
  5246  0BC3                     l1862:	
  5247  0BC3  3001               	movlw	1
  5248  0BC4  00F6               	movwf	??__div_to_l_
  5249  0BC5                     u2865:	
  5250  0BC5  1003               	clrc
  5251  0BC6  0DA0               	rlf	__div_to_l_@quot,f
  5252  0BC7  0DA1               	rlf	__div_to_l_@quot+1,f
  5253  0BC8  0DA2               	rlf	__div_to_l_@quot+2,f
  5254  0BC9  0DA3               	rlf	__div_to_l_@quot+3,f
  5255  0BCA  0BF6               	decfsz	??__div_to_l_,f
  5256  0BCB  2BC5               	goto	u2865
  5257  0BCC  3001               	movlw	1
  5258  0BCD  02A5               	subwf	__div_to_l_@exp1,f
  5259  0BCE                     l384:	
  5260  0BCE  0825               	movf	__div_to_l_@exp1,w
  5261  0BCF  1D03               	btfss	3,2
  5262  0BD0  2BC3               	goto	l1862
  5263  0BD1                     l1864:	
  5264  0BD1  0823               	movf	__div_to_l_@quot+3,w
  5265  0BD2  00F3               	movwf	?__div_to_l_+3
  5266  0BD3  0822               	movf	__div_to_l_@quot+2,w
  5267  0BD4  00F2               	movwf	?__div_to_l_+2
  5268  0BD5  0821               	movf	__div_to_l_@quot+1,w
  5269  0BD6  00F1               	movwf	?__div_to_l_+1
  5270  0BD7  0820               	movf	__div_to_l_@quot,w
  5271  0BD8  00F0               	movwf	?__div_to_l_
  5272  0BD9  0008               	return
  5273  0BDA                     __end_of__div_to_l_:	
  5274                           
  5275                           	psect	text11
  5276  150D                     __ptext11:	
  5277 ;; *************** function ___wmul *****************
  5278 ;; Defined at:
  5279 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;  multiplier      2    0[COMMON] unsigned int 
  5282 ;;  multiplicand    2    2[COMMON] unsigned int 
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;  product         2    4[COMMON] unsigned int 
  5285 ;; Return value:  Size  Location     Type
  5286 ;;                  2    0[COMMON] unsigned int 
  5287 ;; Registers used:
  5288 ;;		wreg, status,2, status,0
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5294 ;;      Params:         4       0       0       0       0
  5295 ;;      Locals:         2       0       0       0       0
  5296 ;;      Temps:          0       0       0       0       0
  5297 ;;      Totals:         6       0       0       0       0
  5298 ;;Total ram usage:        6 bytes
  5299 ;; Hardware stack levels used:    1
  5300 ;; This function calls:
  5301 ;;		Nothing
  5302 ;; This function is called by:
  5303 ;;		_printf
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307                           
  5308                           ;psect for function ___wmul
  5309  150D                     ___wmul:	
  5310                           
  5311                           ;incstack = 0
  5312                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5313  150D  01F4               	clrf	___wmul@product
  5314  150E  01F5               	clrf	___wmul@product+1
  5315  150F                     l1870:	
  5316  150F  1C70               	btfss	___wmul@multiplier,0
  5317  1510  2D17               	goto	l218
  5318  1511  0872               	movf	___wmul@multiplicand,w
  5319  1512  07F4               	addwf	___wmul@product,f
  5320  1513  1803               	skipnc
  5321  1514  0AF5               	incf	___wmul@product+1,f
  5322  1515  0873               	movf	___wmul@multiplicand+1,w
  5323  1516  07F5               	addwf	___wmul@product+1,f
  5324  1517                     l218:	
  5325  1517  3001               	movlw	1
  5326  1518                     u2895:	
  5327  1518  1003               	clrc
  5328  1519  0DF2               	rlf	___wmul@multiplicand,f
  5329  151A  0DF3               	rlf	___wmul@multiplicand+1,f
  5330  151B  3EFF               	addlw	-1
  5331  151C  1D03               	skipz
  5332  151D  2D18               	goto	u2895
  5333  151E  3001               	movlw	1
  5334  151F                     u2905:	
  5335  151F  1003               	clrc
  5336  1520  0CF1               	rrf	___wmul@multiplier+1,f
  5337  1521  0CF0               	rrf	___wmul@multiplier,f
  5338  1522  3EFF               	addlw	-1
  5339  1523  1D03               	skipz
  5340  1524  2D1F               	goto	u2905
  5341  1525  0870               	movf	___wmul@multiplier,w
  5342  1526  0471               	iorwf	___wmul@multiplier+1,w
  5343  1527  1D03               	btfss	3,2
  5344  1528  2D0F               	goto	l1870
  5345  1529  0875               	movf	___wmul@product+1,w
  5346  152A  00F1               	movwf	?___wmul+1
  5347  152B  0874               	movf	___wmul@product,w
  5348  152C  00F0               	movwf	?___wmul
  5349  152D  0008               	return
  5350  152E                     __end_of___wmul:	
  5351                           
  5352                           	psect	text12
  5353  152E                     __ptext12:	
  5354 ;; *************** function ___lltoft *****************
  5355 ;; Defined at:
  5356 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lltoft.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;  c               4    8[COMMON] unsigned long 
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;  exp             1   13[COMMON] unsigned char 
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  3    8[COMMON] float 
  5363 ;; Registers used:
  5364 ;;		wreg, status,2, status,0, pclath, cstack
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5370 ;;      Params:         4       0       0       0       0
  5371 ;;      Locals:         1       0       0       0       0
  5372 ;;      Temps:          1       0       0       0       0
  5373 ;;      Totals:         6       0       0       0       0
  5374 ;;Total ram usage:        6 bytes
  5375 ;; Hardware stack levels used:    1
  5376 ;; Hardware stack levels required when called:    1
  5377 ;; This function calls:
  5378 ;;		___ftpack
  5379 ;; This function is called by:
  5380 ;;		_printf
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           
  5385                           ;psect for function ___lltoft
  5386  152E                     ___lltoft:	
  5387                           
  5388                           ;incstack = 0
  5389                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5390  152E  308E               	movlw	142
  5391  152F  00FC               	movwf	??___lltoft
  5392  1530  087C               	movf	??___lltoft,w
  5393  1531  00FD               	movwf	___lltoft@exp
  5394  1532                     l2008:	
  5395  1532  30FF               	movlw	255
  5396  1533  057B               	andwf	___lltoft@c+3,w
  5397  1534  1903               	btfsc	3,2
  5398  1535  2D44               	goto	l2010
  5399  1536  3001               	movlw	1
  5400  1537                     u3225:	
  5401  1537  1003               	clrc
  5402  1538  0CFB               	rrf	___lltoft@c+3,f
  5403  1539  0CFA               	rrf	___lltoft@c+2,f
  5404  153A  0CF9               	rrf	___lltoft@c+1,f
  5405  153B  0CF8               	rrf	___lltoft@c,f
  5406  153C  3EFF               	addlw	-1
  5407  153D  1D03               	skipz
  5408  153E  2D37               	goto	u3225
  5409  153F  3001               	movlw	1
  5410  1540  00FC               	movwf	??___lltoft
  5411  1541  087C               	movf	??___lltoft,w
  5412  1542  07FD               	addwf	___lltoft@exp,f
  5413  1543  2D32               	goto	l2008
  5414  1544                     l2010:	
  5415  1544  0878               	movf	___lltoft@c,w
  5416  1545  00F0               	movwf	___ftpack@arg
  5417  1546  0879               	movf	___lltoft@c+1,w
  5418  1547  00F1               	movwf	___ftpack@arg+1
  5419  1548  087A               	movf	___lltoft@c+2,w
  5420  1549  00F2               	movwf	___ftpack@arg+2
  5421  154A  087D               	movf	___lltoft@exp,w
  5422  154B  00FC               	movwf	??___lltoft
  5423  154C  087C               	movf	??___lltoft,w
  5424  154D  00F3               	movwf	___ftpack@exp
  5425  154E  01F4               	clrf	___ftpack@sign
  5426  154F  160A  118A  2706   	fcall	___ftpack
  5427  1552  0870               	movf	?___ftpack,w
  5428  1553  00F8               	movwf	?___lltoft
  5429  1554  0871               	movf	?___ftpack+1,w
  5430  1555  00F9               	movwf	?___lltoft+1
  5431  1556  0872               	movf	?___ftpack+2,w
  5432  1557  00FA               	movwf	?___lltoft+2
  5433  1558  0008               	return
  5434  1559                     __end_of___lltoft:	
  5435                           
  5436                           	psect	text13
  5437  15A4                     __ptext13:	
  5438 ;; *************** function ___llmod *****************
  5439 ;; Defined at:
  5440 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\llmod.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  divisor         4    0[COMMON] unsigned long 
  5443 ;;  dividend        4    4[COMMON] unsigned long 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  counter         1    9[COMMON] unsigned char 
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  4    0[COMMON] unsigned long 
  5448 ;; Registers used:
  5449 ;;		wreg, status,2, status,0
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5455 ;;      Params:         8       0       0       0       0
  5456 ;;      Locals:         1       0       0       0       0
  5457 ;;      Temps:          1       0       0       0       0
  5458 ;;      Totals:        10       0       0       0       0
  5459 ;;Total ram usage:       10 bytes
  5460 ;; Hardware stack levels used:    1
  5461 ;; This function calls:
  5462 ;;		Nothing
  5463 ;; This function is called by:
  5464 ;;		_printf
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           
  5469                           ;psect for function ___llmod
  5470  15A4                     ___llmod:	
  5471                           
  5472                           ;incstack = 0
  5473                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5474  15A4  0873               	movf	___llmod@divisor+3,w
  5475  15A5  0472               	iorwf	___llmod@divisor+2,w
  5476  15A6  0471               	iorwf	___llmod@divisor+1,w
  5477  15A7  0470               	iorwf	___llmod@divisor,w
  5478  15A8  1903               	skipnz
  5479  15A9  2DE7               	goto	l2000
  5480  15AA  01F9               	clrf	___llmod@counter
  5481  15AB  0AF9               	incf	___llmod@counter,f
  5482  15AC                     l1990:	
  5483  15AC  1BF3               	btfsc	___llmod@divisor+3,7
  5484  15AD  2DBC               	goto	l1992
  5485  15AE  3001               	movlw	1
  5486  15AF  00F8               	movwf	??___llmod
  5487  15B0                     u3175:	
  5488  15B0  1003               	clrc
  5489  15B1  0DF0               	rlf	___llmod@divisor,f
  5490  15B2  0DF1               	rlf	___llmod@divisor+1,f
  5491  15B3  0DF2               	rlf	___llmod@divisor+2,f
  5492  15B4  0DF3               	rlf	___llmod@divisor+3,f
  5493  15B5  0BF8               	decfsz	??___llmod,f
  5494  15B6  2DB0               	goto	u3175
  5495  15B7  3001               	movlw	1
  5496  15B8  00F8               	movwf	??___llmod
  5497  15B9  0878               	movf	??___llmod,w
  5498  15BA  07F9               	addwf	___llmod@counter,f
  5499  15BB  2DAC               	goto	l1990
  5500  15BC                     l1992:	
  5501  15BC  0873               	movf	___llmod@divisor+3,w
  5502  15BD  0277               	subwf	___llmod@dividend+3,w
  5503  15BE  1D03               	skipz
  5504  15BF  2DCA               	goto	u3195
  5505  15C0  0872               	movf	___llmod@divisor+2,w
  5506  15C1  0276               	subwf	___llmod@dividend+2,w
  5507  15C2  1D03               	skipz
  5508  15C3  2DCA               	goto	u3195
  5509  15C4  0871               	movf	___llmod@divisor+1,w
  5510  15C5  0275               	subwf	___llmod@dividend+1,w
  5511  15C6  1D03               	skipz
  5512  15C7  2DCA               	goto	u3195
  5513  15C8  0870               	movf	___llmod@divisor,w
  5514  15C9  0274               	subwf	___llmod@dividend,w
  5515  15CA                     u3195:	
  5516  15CA  1C03               	skipc
  5517  15CB  2DDA               	goto	l1996
  5518  15CC  0870               	movf	___llmod@divisor,w
  5519  15CD  02F4               	subwf	___llmod@dividend,f
  5520  15CE  0871               	movf	___llmod@divisor+1,w
  5521  15CF  1C03               	skipc
  5522  15D0  0F71               	incfsz	___llmod@divisor+1,w
  5523  15D1  02F5               	subwf	___llmod@dividend+1,f
  5524  15D2  0872               	movf	___llmod@divisor+2,w
  5525  15D3  1C03               	skipc
  5526  15D4  0F72               	incfsz	___llmod@divisor+2,w
  5527  15D5  02F6               	subwf	___llmod@dividend+2,f
  5528  15D6  0873               	movf	___llmod@divisor+3,w
  5529  15D7  1C03               	skipc
  5530  15D8  0F73               	incfsz	___llmod@divisor+3,w
  5531  15D9  02F7               	subwf	___llmod@dividend+3,f
  5532  15DA                     l1996:	
  5533  15DA  3001               	movlw	1
  5534  15DB                     u3205:	
  5535  15DB  1003               	clrc
  5536  15DC  0CF3               	rrf	___llmod@divisor+3,f
  5537  15DD  0CF2               	rrf	___llmod@divisor+2,f
  5538  15DE  0CF1               	rrf	___llmod@divisor+1,f
  5539  15DF  0CF0               	rrf	___llmod@divisor,f
  5540  15E0  3EFF               	addlw	-1
  5541  15E1  1D03               	skipz
  5542  15E2  2DDB               	goto	u3205
  5543  15E3  3001               	movlw	1
  5544  15E4  02F9               	subwf	___llmod@counter,f
  5545  15E5  1D03               	btfss	3,2
  5546  15E6  2DBC               	goto	l1992
  5547  15E7                     l2000:	
  5548  15E7  0877               	movf	___llmod@dividend+3,w
  5549  15E8  00F3               	movwf	?___llmod+3
  5550  15E9  0876               	movf	___llmod@dividend+2,w
  5551  15EA  00F2               	movwf	?___llmod+2
  5552  15EB  0875               	movf	___llmod@dividend+1,w
  5553  15EC  00F1               	movwf	?___llmod+1
  5554  15ED  0874               	movf	___llmod@dividend,w
  5555  15EE  00F0               	movwf	?___llmod
  5556  15EF  0008               	return
  5557  15F0                     __end_of___llmod:	
  5558                           
  5559                           	psect	text14
  5560  16A8                     __ptext14:	
  5561 ;; *************** function ___lldiv *****************
  5562 ;; Defined at:
  5563 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lldiv.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;  divisor         4    0[COMMON] unsigned long 
  5566 ;;  dividend        4    4[COMMON] unsigned long 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  quotient        4    9[COMMON] unsigned long 
  5569 ;;  counter         1   13[COMMON] unsigned char 
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  4    0[COMMON] unsigned long 
  5572 ;; Registers used:
  5573 ;;		wreg, status,2, status,0
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5579 ;;      Params:         8       0       0       0       0
  5580 ;;      Locals:         5       0       0       0       0
  5581 ;;      Temps:          1       0       0       0       0
  5582 ;;      Totals:        14       0       0       0       0
  5583 ;;Total ram usage:       14 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; This function calls:
  5586 ;;		Nothing
  5587 ;; This function is called by:
  5588 ;;		_printf
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591                           
  5592                           
  5593                           ;psect for function ___lldiv
  5594  16A8                     ___lldiv:	
  5595                           
  5596                           ;incstack = 0
  5597                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5598  16A8  3000               	movlw	0
  5599  16A9  00FC               	movwf	___lldiv@quotient+3
  5600  16AA  3000               	movlw	0
  5601  16AB  00FB               	movwf	___lldiv@quotient+2
  5602  16AC  3000               	movlw	0
  5603  16AD  00FA               	movwf	___lldiv@quotient+1
  5604  16AE  3000               	movlw	0
  5605  16AF  00F9               	movwf	___lldiv@quotient
  5606  16B0  0873               	movf	___lldiv@divisor+3,w
  5607  16B1  0472               	iorwf	___lldiv@divisor+2,w
  5608  16B2  0471               	iorwf	___lldiv@divisor+1,w
  5609  16B3  0470               	iorwf	___lldiv@divisor,w
  5610  16B4  1903               	skipnz
  5611  16B5  2EFD               	goto	l1980
  5612  16B6  01FD               	clrf	___lldiv@counter
  5613  16B7  0AFD               	incf	___lldiv@counter,f
  5614  16B8                     l1966:	
  5615  16B8  1BF3               	btfsc	___lldiv@divisor+3,7
  5616  16B9  2EC8               	goto	l1968
  5617  16BA  3001               	movlw	1
  5618  16BB  00F8               	movwf	??___lldiv
  5619  16BC                     u3105:	
  5620  16BC  1003               	clrc
  5621  16BD  0DF0               	rlf	___lldiv@divisor,f
  5622  16BE  0DF1               	rlf	___lldiv@divisor+1,f
  5623  16BF  0DF2               	rlf	___lldiv@divisor+2,f
  5624  16C0  0DF3               	rlf	___lldiv@divisor+3,f
  5625  16C1  0BF8               	decfsz	??___lldiv,f
  5626  16C2  2EBC               	goto	u3105
  5627  16C3  3001               	movlw	1
  5628  16C4  00F8               	movwf	??___lldiv
  5629  16C5  0878               	movf	??___lldiv,w
  5630  16C6  07FD               	addwf	___lldiv@counter,f
  5631  16C7  2EB8               	goto	l1966
  5632  16C8                     l1968:	
  5633  16C8  3001               	movlw	1
  5634  16C9  00F8               	movwf	??___lldiv
  5635  16CA                     u3125:	
  5636  16CA  1003               	clrc
  5637  16CB  0DF9               	rlf	___lldiv@quotient,f
  5638  16CC  0DFA               	rlf	___lldiv@quotient+1,f
  5639  16CD  0DFB               	rlf	___lldiv@quotient+2,f
  5640  16CE  0DFC               	rlf	___lldiv@quotient+3,f
  5641  16CF  0BF8               	decfsz	??___lldiv,f
  5642  16D0  2ECA               	goto	u3125
  5643  16D1  0873               	movf	___lldiv@divisor+3,w
  5644  16D2  0277               	subwf	___lldiv@dividend+3,w
  5645  16D3  1D03               	skipz
  5646  16D4  2EDF               	goto	u3135
  5647  16D5  0872               	movf	___lldiv@divisor+2,w
  5648  16D6  0276               	subwf	___lldiv@dividend+2,w
  5649  16D7  1D03               	skipz
  5650  16D8  2EDF               	goto	u3135
  5651  16D9  0871               	movf	___lldiv@divisor+1,w
  5652  16DA  0275               	subwf	___lldiv@dividend+1,w
  5653  16DB  1D03               	skipz
  5654  16DC  2EDF               	goto	u3135
  5655  16DD  0870               	movf	___lldiv@divisor,w
  5656  16DE  0274               	subwf	___lldiv@dividend,w
  5657  16DF                     u3135:	
  5658  16DF  1C03               	skipc
  5659  16E0  2EF0               	goto	l1976
  5660  16E1  0870               	movf	___lldiv@divisor,w
  5661  16E2  02F4               	subwf	___lldiv@dividend,f
  5662  16E3  0871               	movf	___lldiv@divisor+1,w
  5663  16E4  1C03               	skipc
  5664  16E5  0F71               	incfsz	___lldiv@divisor+1,w
  5665  16E6  02F5               	subwf	___lldiv@dividend+1,f
  5666  16E7  0872               	movf	___lldiv@divisor+2,w
  5667  16E8  1C03               	skipc
  5668  16E9  0F72               	incfsz	___lldiv@divisor+2,w
  5669  16EA  02F6               	subwf	___lldiv@dividend+2,f
  5670  16EB  0873               	movf	___lldiv@divisor+3,w
  5671  16EC  1C03               	skipc
  5672  16ED  0F73               	incfsz	___lldiv@divisor+3,w
  5673  16EE  02F7               	subwf	___lldiv@dividend+3,f
  5674  16EF  1479               	bsf	___lldiv@quotient,0
  5675  16F0                     l1976:	
  5676  16F0  3001               	movlw	1
  5677  16F1                     u3145:	
  5678  16F1  1003               	clrc
  5679  16F2  0CF3               	rrf	___lldiv@divisor+3,f
  5680  16F3  0CF2               	rrf	___lldiv@divisor+2,f
  5681  16F4  0CF1               	rrf	___lldiv@divisor+1,f
  5682  16F5  0CF0               	rrf	___lldiv@divisor,f
  5683  16F6  3EFF               	addlw	-1
  5684  16F7  1D03               	skipz
  5685  16F8  2EF1               	goto	u3145
  5686  16F9  3001               	movlw	1
  5687  16FA  02FD               	subwf	___lldiv@counter,f
  5688  16FB  1D03               	btfss	3,2
  5689  16FC  2EC8               	goto	l1968
  5690  16FD                     l1980:	
  5691  16FD  087C               	movf	___lldiv@quotient+3,w
  5692  16FE  00F3               	movwf	?___lldiv+3
  5693  16FF  087B               	movf	___lldiv@quotient+2,w
  5694  1700  00F2               	movwf	?___lldiv+2
  5695  1701  087A               	movf	___lldiv@quotient+1,w
  5696  1702  00F1               	movwf	?___lldiv+1
  5697  1703  0879               	movf	___lldiv@quotient,w
  5698  1704  00F0               	movwf	?___lldiv
  5699  1705  0008               	return
  5700  1706                     __end_of___lldiv:	
  5701                           
  5702                           	psect	text15
  5703  1772                     __ptext15:	
  5704 ;; *************** function ___fttol *****************
  5705 ;; Defined at:
  5706 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;  f1              3   32[BANK0 ] float 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  lval            4   41[BANK0 ] unsigned long 
  5711 ;;  exp1            1   45[BANK0 ] unsigned char 
  5712 ;;  sign1           1   40[BANK0 ] unsigned char 
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  4   32[BANK0 ] long 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5722 ;;      Params:         0       4       0       0       0
  5723 ;;      Locals:         0       6       0       0       0
  5724 ;;      Temps:          0       4       0       0       0
  5725 ;;      Totals:         0      14       0       0       0
  5726 ;;Total ram usage:       14 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_printf
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           
  5736                           ;psect for function ___fttol
  5737  1772                     ___fttol:	
  5738                           
  5739                           ;incstack = 0
  5740                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5741  1772  1283               	bcf	3,5	;RP0=0, select bank0
  5742  1773  1303               	bcf	3,6	;RP1=0, select bank0
  5743  1774  0840               	movf	___fttol@f1,w
  5744  1775  00C4               	movwf	??___fttol
  5745  1776  0841               	movf	___fttol@f1+1,w
  5746  1777  00C5               	movwf	??___fttol+1
  5747  1778  0842               	movf	___fttol@f1+2,w
  5748  1779  00C6               	movwf	??___fttol+2
  5749  177A  1003               	clrc
  5750  177B  0D45               	rlf	??___fttol+1,w
  5751  177C  0D46               	rlf	??___fttol+2,w
  5752  177D  00C7               	movwf	??___fttol+3
  5753  177E  0847               	movf	??___fttol+3,w
  5754  177F  00CD               	movwf	___fttol@exp1
  5755  1780  084D               	movf	___fttol@exp1,w
  5756  1781  1D03               	btfss	3,2
  5757  1782  2F8C               	goto	l1924
  5758  1783  3000               	movlw	0
  5759  1784  00C3               	movwf	?___fttol+3
  5760  1785  3000               	movlw	0
  5761  1786  00C2               	movwf	?___fttol+2
  5762  1787  3000               	movlw	0
  5763  1788  00C1               	movwf	?___fttol+1
  5764  1789  3000               	movlw	0
  5765  178A  00C0               	movwf	?___fttol
  5766  178B  0008               	return
  5767  178C                     l1924:	
  5768  178C  0840               	movf	___fttol@f1,w
  5769  178D  00C4               	movwf	??___fttol
  5770  178E  0841               	movf	___fttol@f1+1,w
  5771  178F  00C5               	movwf	??___fttol+1
  5772  1790  0842               	movf	___fttol@f1+2,w
  5773  1791  00C6               	movwf	??___fttol+2
  5774  1792  3017               	movlw	23
  5775  1793                     u3005:	
  5776  1793  1003               	clrc
  5777  1794  0CC6               	rrf	??___fttol+2,f
  5778  1795  0CC5               	rrf	??___fttol+1,f
  5779  1796  0CC4               	rrf	??___fttol,f
  5780  1797  3EFF               	addlw	-1
  5781  1798  1D03               	skipz
  5782  1799  2F93               	goto	u3005
  5783  179A  0844               	movf	??___fttol,w
  5784  179B  00C7               	movwf	??___fttol+3
  5785  179C  0847               	movf	??___fttol+3,w
  5786  179D  00C8               	movwf	___fttol@sign1
  5787  179E  17C1               	bsf	___fttol@f1+1,7
  5788  179F  30FF               	movlw	255
  5789  17A0  05C0               	andwf	___fttol@f1,f
  5790  17A1  30FF               	movlw	255
  5791  17A2  05C1               	andwf	___fttol@f1+1,f
  5792  17A3  3000               	movlw	0
  5793  17A4  05C2               	andwf	___fttol@f1+2,f
  5794  17A5  0840               	movf	___fttol@f1,w
  5795  17A6  00C9               	movwf	___fttol@lval
  5796  17A7  0841               	movf	___fttol@f1+1,w
  5797  17A8  00CA               	movwf	___fttol@lval+1
  5798  17A9  0842               	movf	___fttol@f1+2,w
  5799  17AA  00CB               	movwf	___fttol@lval+2
  5800  17AB  01CC               	clrf	___fttol@lval+3
  5801  17AC  308E               	movlw	142
  5802  17AD  02CD               	subwf	___fttol@exp1,f
  5803  17AE  1FCD               	btfss	___fttol@exp1,7
  5804  17AF  2FCE               	goto	l1944
  5805  17B0  084D               	movf	___fttol@exp1,w
  5806  17B1  3A80               	xorlw	128
  5807  17B2  3E8F               	addlw	143
  5808  17B3  1803               	skipnc
  5809  17B4  2FBE               	goto	l1942
  5810  17B5  3000               	movlw	0
  5811  17B6  00C3               	movwf	?___fttol+3
  5812  17B7  3000               	movlw	0
  5813  17B8  00C2               	movwf	?___fttol+2
  5814  17B9  3000               	movlw	0
  5815  17BA  00C1               	movwf	?___fttol+1
  5816  17BB  3000               	movlw	0
  5817  17BC  00C0               	movwf	?___fttol
  5818  17BD  0008               	return
  5819  17BE                     l1942:	
  5820  17BE  3001               	movlw	1
  5821  17BF                     u3035:	
  5822  17BF  1003               	clrc
  5823  17C0  0CCC               	rrf	___fttol@lval+3,f
  5824  17C1  0CCB               	rrf	___fttol@lval+2,f
  5825  17C2  0CCA               	rrf	___fttol@lval+1,f
  5826  17C3  0CC9               	rrf	___fttol@lval,f
  5827  17C4  3EFF               	addlw	-1
  5828  17C5  1D03               	skipz
  5829  17C6  2FBF               	goto	u3035
  5830  17C7  3001               	movlw	1
  5831  17C8  00C4               	movwf	??___fttol
  5832  17C9  0844               	movf	??___fttol,w
  5833  17CA  07CD               	addwf	___fttol@exp1,f
  5834  17CB  1903               	btfsc	3,2
  5835  17CC  2FE9               	goto	l1952
  5836  17CD  2FBE               	goto	l1942
  5837  17CE                     l1944:	
  5838  17CE  3018               	movlw	24
  5839  17CF  024D               	subwf	___fttol@exp1,w
  5840  17D0  1C03               	skipc
  5841  17D1  2FE6               	goto	l504
  5842  17D2  3000               	movlw	0
  5843  17D3  00C3               	movwf	?___fttol+3
  5844  17D4  3000               	movlw	0
  5845  17D5  00C2               	movwf	?___fttol+2
  5846  17D6  3000               	movlw	0
  5847  17D7  00C1               	movwf	?___fttol+1
  5848  17D8  3000               	movlw	0
  5849  17D9  00C0               	movwf	?___fttol
  5850  17DA  0008               	return
  5851  17DB                     l1950:	
  5852  17DB  3001               	movlw	1
  5853  17DC  00C4               	movwf	??___fttol
  5854  17DD                     u3065:	
  5855  17DD  1003               	clrc
  5856  17DE  0DC9               	rlf	___fttol@lval,f
  5857  17DF  0DCA               	rlf	___fttol@lval+1,f
  5858  17E0  0DCB               	rlf	___fttol@lval+2,f
  5859  17E1  0DCC               	rlf	___fttol@lval+3,f
  5860  17E2  0BC4               	decfsz	??___fttol,f
  5861  17E3  2FDD               	goto	u3065
  5862  17E4  3001               	movlw	1
  5863  17E5  02CD               	subwf	___fttol@exp1,f
  5864  17E6                     l504:	
  5865  17E6  084D               	movf	___fttol@exp1,w
  5866  17E7  1D03               	btfss	3,2
  5867  17E8  2FDB               	goto	l1950
  5868  17E9                     l1952:	
  5869  17E9  0848               	movf	___fttol@sign1,w
  5870  17EA  1903               	btfsc	3,2
  5871  17EB  2FF7               	goto	l1956
  5872  17EC  09C9               	comf	___fttol@lval,f
  5873  17ED  09CA               	comf	___fttol@lval+1,f
  5874  17EE  09CB               	comf	___fttol@lval+2,f
  5875  17EF  09CC               	comf	___fttol@lval+3,f
  5876  17F0  0AC9               	incf	___fttol@lval,f
  5877  17F1  1903               	skipnz
  5878  17F2  0ACA               	incf	___fttol@lval+1,f
  5879  17F3  1903               	skipnz
  5880  17F4  0ACB               	incf	___fttol@lval+2,f
  5881  17F5  1903               	skipnz
  5882  17F6  0ACC               	incf	___fttol@lval+3,f
  5883  17F7                     l1956:	
  5884  17F7  084C               	movf	___fttol@lval+3,w
  5885  17F8  00C3               	movwf	?___fttol+3
  5886  17F9  084B               	movf	___fttol@lval+2,w
  5887  17FA  00C2               	movwf	?___fttol+2
  5888  17FB  084A               	movf	___fttol@lval+1,w
  5889  17FC  00C1               	movwf	?___fttol+1
  5890  17FD  0849               	movf	___fttol@lval,w
  5891  17FE  00C0               	movwf	?___fttol
  5892  17FF  0008               	return
  5893  1800                     __end_of___fttol:	
  5894                           
  5895                           	psect	text16
  5896  14EC                     __ptext16:	
  5897 ;; *************** function ___ftsub *****************
  5898 ;; Defined at:
  5899 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftsub.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;  f2              3   52[BANK0 ] float 
  5902 ;;  f1              3   55[BANK0 ] float 
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;		None
  5905 ;; Return value:  Size  Location     Type
  5906 ;;                  3   52[BANK0 ] float 
  5907 ;; Registers used:
  5908 ;;		wreg, status,2, status,0, pclath, cstack
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/0
  5911 ;;		On exit  : 0/0
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5914 ;;      Params:         0       6       0       0       0
  5915 ;;      Locals:         0       0       0       0       0
  5916 ;;      Temps:          0       0       0       0       0
  5917 ;;      Totals:         0       6       0       0       0
  5918 ;;Total ram usage:        6 bytes
  5919 ;; Hardware stack levels used:    1
  5920 ;; Hardware stack levels required when called:    2
  5921 ;; This function calls:
  5922 ;;		___ftadd
  5923 ;; This function is called by:
  5924 ;;		_printf
  5925 ;; This function uses a non-reentrant model
  5926 ;;
  5927                           
  5928                           
  5929                           ;psect for function ___ftsub
  5930  14EC                     ___ftsub:	
  5931                           
  5932                           ;incstack = 0
  5933                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5934  14EC  1283               	bcf	3,5	;RP0=0, select bank0
  5935  14ED  1303               	bcf	3,6	;RP1=0, select bank0
  5936  14EE  0856               	movf	___ftsub@f2+2,w
  5937  14EF  0455               	iorwf	___ftsub@f2+1,w
  5938  14F0  0454               	iorwf	___ftsub@f2,w
  5939  14F1  1903               	skipnz
  5940  14F2  2CF5               	goto	l1914
  5941  14F3  3080               	movlw	128
  5942  14F4  06D6               	xorwf	___ftsub@f2+2,f
  5943  14F5                     l1914:	
  5944  14F5  0857               	movf	___ftsub@f1,w
  5945  14F6  00C7               	movwf	___ftadd@f1
  5946  14F7  0858               	movf	___ftsub@f1+1,w
  5947  14F8  00C8               	movwf	___ftadd@f1+1
  5948  14F9  0859               	movf	___ftsub@f1+2,w
  5949  14FA  00C9               	movwf	___ftadd@f1+2
  5950  14FB  0854               	movf	___ftsub@f2,w
  5951  14FC  00CA               	movwf	___ftadd@f2
  5952  14FD  0855               	movf	___ftsub@f2+1,w
  5953  14FE  00CB               	movwf	___ftadd@f2+1
  5954  14FF  0856               	movf	___ftsub@f2+2,w
  5955  1500  00CC               	movwf	___ftadd@f2+2
  5956  1501  120A  158A  219F   	fcall	___ftadd
  5957  1504  1283               	bcf	3,5	;RP0=0, select bank0
  5958  1505  1303               	bcf	3,6	;RP1=0, select bank0
  5959  1506  0847               	movf	?___ftadd,w
  5960  1507  00D4               	movwf	?___ftsub
  5961  1508  0848               	movf	?___ftadd+1,w
  5962  1509  00D5               	movwf	?___ftsub+1
  5963  150A  0849               	movf	?___ftadd+2,w
  5964  150B  00D6               	movwf	?___ftsub+2
  5965  150C  0008               	return
  5966  150D                     __end_of___ftsub:	
  5967                           
  5968                           	psect	text17
  5969  099F                     __ptext17:	
  5970 ;; *************** function ___ftadd *****************
  5971 ;; Defined at:
  5972 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;  f1              3   39[BANK0 ] float 
  5975 ;;  f2              3   42[BANK0 ] float 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  exp1            1   51[BANK0 ] unsigned char 
  5978 ;;  exp2            1   50[BANK0 ] unsigned char 
  5979 ;;  sign            1   49[BANK0 ] unsigned char 
  5980 ;; Return value:  Size  Location     Type
  5981 ;;                  3   39[BANK0 ] float 
  5982 ;; Registers used:
  5983 ;;		wreg, status,2, status,0, pclath, cstack
  5984 ;; Tracked objects:
  5985 ;;		On entry : 0/0
  5986 ;;		On exit  : 0/0
  5987 ;;		Unchanged: 0/0
  5988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5989 ;;      Params:         0       6       0       0       0
  5990 ;;      Locals:         0       3       0       0       0
  5991 ;;      Temps:          0       4       0       0       0
  5992 ;;      Totals:         0      13       0       0       0
  5993 ;;Total ram usage:       13 bytes
  5994 ;; Hardware stack levels used:    1
  5995 ;; Hardware stack levels required when called:    1
  5996 ;; This function calls:
  5997 ;;		___ftpack
  5998 ;; This function is called by:
  5999 ;;		_main
  6000 ;;		_printf
  6001 ;;		___ftsub
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           
  6006                           ;psect for function ___ftadd
  6007  099F                     ___ftadd:	
  6008                           
  6009                           ;incstack = 0
  6010                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6011  099F  1283               	bcf	3,5	;RP0=0, select bank0
  6012  09A0  1303               	bcf	3,6	;RP1=0, select bank0
  6013  09A1  0847               	movf	___ftadd@f1,w
  6014  09A2  00CD               	movwf	??___ftadd
  6015  09A3  0848               	movf	___ftadd@f1+1,w
  6016  09A4  00CE               	movwf	??___ftadd+1
  6017  09A5  0849               	movf	___ftadd@f1+2,w
  6018  09A6  00CF               	movwf	??___ftadd+2
  6019  09A7  1003               	clrc
  6020  09A8  0D4E               	rlf	??___ftadd+1,w
  6021  09A9  0D4F               	rlf	??___ftadd+2,w
  6022  09AA  00D0               	movwf	??___ftadd+3
  6023  09AB  0850               	movf	??___ftadd+3,w
  6024  09AC  00D3               	movwf	___ftadd@exp1
  6025  09AD  084A               	movf	___ftadd@f2,w
  6026  09AE  00CD               	movwf	??___ftadd
  6027  09AF  084B               	movf	___ftadd@f2+1,w
  6028  09B0  00CE               	movwf	??___ftadd+1
  6029  09B1  084C               	movf	___ftadd@f2+2,w
  6030  09B2  00CF               	movwf	??___ftadd+2
  6031  09B3  1003               	clrc
  6032  09B4  0D4E               	rlf	??___ftadd+1,w
  6033  09B5  0D4F               	rlf	??___ftadd+2,w
  6034  09B6  00D0               	movwf	??___ftadd+3
  6035  09B7  0850               	movf	??___ftadd+3,w
  6036  09B8  00D2               	movwf	___ftadd@exp2
  6037  09B9  0853               	movf	___ftadd@exp1,w
  6038  09BA  1903               	btfsc	3,2
  6039  09BB  29C8               	goto	l1584
  6040  09BC  0852               	movf	___ftadd@exp2,w
  6041  09BD  0253               	subwf	___ftadd@exp1,w
  6042  09BE  1803               	skipnc
  6043  09BF  29CF               	goto	l1588
  6044  09C0  0353               	decf	___ftadd@exp1,w
  6045  09C1  3AFF               	xorlw	255
  6046  09C2  0752               	addwf	___ftadd@exp2,w
  6047  09C3  00CD               	movwf	??___ftadd
  6048  09C4  3019               	movlw	25
  6049  09C5  024D               	subwf	??___ftadd,w
  6050  09C6  1C03               	skipc
  6051  09C7  29CF               	goto	l1588
  6052  09C8                     l1584:	
  6053  09C8  084A               	movf	___ftadd@f2,w
  6054  09C9  00C7               	movwf	?___ftadd
  6055  09CA  084B               	movf	___ftadd@f2+1,w
  6056  09CB  00C8               	movwf	?___ftadd+1
  6057  09CC  084C               	movf	___ftadd@f2+2,w
  6058  09CD  00C9               	movwf	?___ftadd+2
  6059  09CE  0008               	return
  6060  09CF                     l1588:	
  6061  09CF  0852               	movf	___ftadd@exp2,w
  6062  09D0  1903               	btfsc	3,2
  6063  09D1  0008               	return
  6064  09D2  0853               	movf	___ftadd@exp1,w
  6065  09D3  0252               	subwf	___ftadd@exp2,w
  6066  09D4  1803               	skipnc
  6067  09D5  29DE               	goto	l1594
  6068  09D6  0352               	decf	___ftadd@exp2,w
  6069  09D7  3AFF               	xorlw	255
  6070  09D8  0753               	addwf	___ftadd@exp1,w
  6071  09D9  00CD               	movwf	??___ftadd
  6072  09DA  3019               	movlw	25
  6073  09DB  024D               	subwf	??___ftadd,w
  6074  09DC  1803               	btfsc	3,0
  6075  09DD  0008               	return
  6076  09DE                     l1594:	
  6077  09DE  3006               	movlw	6
  6078  09DF  00CD               	movwf	??___ftadd
  6079  09E0  084D               	movf	??___ftadd,w
  6080  09E1  00D1               	movwf	___ftadd@sign
  6081  09E2  1BC9               	btfsc	___ftadd@f1+2,7
  6082  09E3  17D1               	bsf	___ftadd@sign,7
  6083  09E4  1BCC               	btfsc	___ftadd@f2+2,7
  6084  09E5  1751               	bsf	___ftadd@sign,6
  6085  09E6  17C8               	bsf	___ftadd@f1+1,7
  6086  09E7  30FF               	movlw	255
  6087  09E8  05C7               	andwf	___ftadd@f1,f
  6088  09E9  30FF               	movlw	255
  6089  09EA  05C8               	andwf	___ftadd@f1+1,f
  6090  09EB  3000               	movlw	0
  6091  09EC  05C9               	andwf	___ftadd@f1+2,f
  6092  09ED  17CB               	bsf	___ftadd@f2+1,7
  6093  09EE  30FF               	movlw	255
  6094  09EF  05CA               	andwf	___ftadd@f2,f
  6095  09F0  30FF               	movlw	255
  6096  09F1  05CB               	andwf	___ftadd@f2+1,f
  6097  09F2  3000               	movlw	0
  6098  09F3  05CC               	andwf	___ftadd@f2+2,f
  6099  09F4  0852               	movf	___ftadd@exp2,w
  6100  09F5  0253               	subwf	___ftadd@exp1,w
  6101  09F6  1803               	skipnc
  6102  09F7  2A1E               	goto	l1616
  6103  09F8                     l1606:	
  6104  09F8  3001               	movlw	1
  6105  09F9                     u2265:	
  6106  09F9  1003               	clrc
  6107  09FA  0DCA               	rlf	___ftadd@f2,f
  6108  09FB  0DCB               	rlf	___ftadd@f2+1,f
  6109  09FC  0DCC               	rlf	___ftadd@f2+2,f
  6110  09FD  3EFF               	addlw	-1
  6111  09FE  1D03               	skipz
  6112  09FF  29F9               	goto	u2265
  6113  0A00  3001               	movlw	1
  6114  0A01  02D2               	subwf	___ftadd@exp2,f
  6115  0A02  0852               	movf	___ftadd@exp2,w
  6116  0A03  0653               	xorwf	___ftadd@exp1,w
  6117  0A04  1903               	skipnz
  6118  0A05  2A19               	goto	l1614
  6119  0A06  3001               	movlw	1
  6120  0A07  02D1               	subwf	___ftadd@sign,f
  6121  0A08  0851               	movf	___ftadd@sign,w
  6122  0A09  3907               	andlw	7
  6123  0A0A  1903               	btfsc	3,2
  6124  0A0B  2A19               	goto	l1614
  6125  0A0C  29F8               	goto	l1606
  6126  0A0D                     l1612:	
  6127  0A0D  3001               	movlw	1
  6128  0A0E                     u2295:	
  6129  0A0E  1003               	clrc
  6130  0A0F  0CC9               	rrf	___ftadd@f1+2,f
  6131  0A10  0CC8               	rrf	___ftadd@f1+1,f
  6132  0A11  0CC7               	rrf	___ftadd@f1,f
  6133  0A12  3EFF               	addlw	-1
  6134  0A13  1D03               	skipz
  6135  0A14  2A0E               	goto	u2295
  6136  0A15  3001               	movlw	1
  6137  0A16  00CD               	movwf	??___ftadd
  6138  0A17  084D               	movf	??___ftadd,w
  6139  0A18  07D3               	addwf	___ftadd@exp1,f
  6140  0A19                     l1614:	
  6141  0A19  0853               	movf	___ftadd@exp1,w
  6142  0A1A  0652               	xorwf	___ftadd@exp2,w
  6143  0A1B  1903               	btfsc	3,2
  6144  0A1C  2A47               	goto	l427
  6145  0A1D  2A0D               	goto	l1612
  6146  0A1E                     l1616:	
  6147  0A1E  0853               	movf	___ftadd@exp1,w
  6148  0A1F  0252               	subwf	___ftadd@exp2,w
  6149  0A20  1803               	skipnc
  6150  0A21  2A47               	goto	l427
  6151  0A22                     l1618:	
  6152  0A22  3001               	movlw	1
  6153  0A23                     u2325:	
  6154  0A23  1003               	clrc
  6155  0A24  0DC7               	rlf	___ftadd@f1,f
  6156  0A25  0DC8               	rlf	___ftadd@f1+1,f
  6157  0A26  0DC9               	rlf	___ftadd@f1+2,f
  6158  0A27  3EFF               	addlw	-1
  6159  0A28  1D03               	skipz
  6160  0A29  2A23               	goto	u2325
  6161  0A2A  3001               	movlw	1
  6162  0A2B  02D3               	subwf	___ftadd@exp1,f
  6163  0A2C  0852               	movf	___ftadd@exp2,w
  6164  0A2D  0653               	xorwf	___ftadd@exp1,w
  6165  0A2E  1903               	skipnz
  6166  0A2F  2A43               	goto	l1626
  6167  0A30  3001               	movlw	1
  6168  0A31  02D1               	subwf	___ftadd@sign,f
  6169  0A32  0851               	movf	___ftadd@sign,w
  6170  0A33  3907               	andlw	7
  6171  0A34  1903               	btfsc	3,2
  6172  0A35  2A43               	goto	l1626
  6173  0A36  2A22               	goto	l1618
  6174  0A37                     l1624:	
  6175  0A37  3001               	movlw	1
  6176  0A38                     u2355:	
  6177  0A38  1003               	clrc
  6178  0A39  0CCC               	rrf	___ftadd@f2+2,f
  6179  0A3A  0CCB               	rrf	___ftadd@f2+1,f
  6180  0A3B  0CCA               	rrf	___ftadd@f2,f
  6181  0A3C  3EFF               	addlw	-1
  6182  0A3D  1D03               	skipz
  6183  0A3E  2A38               	goto	u2355
  6184  0A3F  3001               	movlw	1
  6185  0A40  00CD               	movwf	??___ftadd
  6186  0A41  084D               	movf	??___ftadd,w
  6187  0A42  07D2               	addwf	___ftadd@exp2,f
  6188  0A43                     l1626:	
  6189  0A43  0853               	movf	___ftadd@exp1,w
  6190  0A44  0652               	xorwf	___ftadd@exp2,w
  6191  0A45  1D03               	skipz
  6192  0A46  2A37               	goto	l1624
  6193  0A47                     l427:	
  6194  0A47  1FD1               	btfss	___ftadd@sign,7
  6195  0A48  2A59               	goto	l1630
  6196  0A49  30FF               	movlw	255
  6197  0A4A  06C7               	xorwf	___ftadd@f1,f
  6198  0A4B  30FF               	movlw	255
  6199  0A4C  06C8               	xorwf	___ftadd@f1+1,f
  6200  0A4D  30FF               	movlw	255
  6201  0A4E  06C9               	xorwf	___ftadd@f1+2,f
  6202  0A4F  3001               	movlw	1
  6203  0A50  07C7               	addwf	___ftadd@f1,f
  6204  0A51  3000               	movlw	0
  6205  0A52  1803               	skipnc
  6206  0A53  3001               	movlw	1
  6207  0A54  07C8               	addwf	___ftadd@f1+1,f
  6208  0A55  3000               	movlw	0
  6209  0A56  1803               	skipnc
  6210  0A57  3001               	movlw	1
  6211  0A58  07C9               	addwf	___ftadd@f1+2,f
  6212  0A59                     l1630:	
  6213  0A59  1F51               	btfss	___ftadd@sign,6
  6214  0A5A  2A6B               	goto	l1634
  6215  0A5B  30FF               	movlw	255
  6216  0A5C  06CA               	xorwf	___ftadd@f2,f
  6217  0A5D  30FF               	movlw	255
  6218  0A5E  06CB               	xorwf	___ftadd@f2+1,f
  6219  0A5F  30FF               	movlw	255
  6220  0A60  06CC               	xorwf	___ftadd@f2+2,f
  6221  0A61  3001               	movlw	1
  6222  0A62  07CA               	addwf	___ftadd@f2,f
  6223  0A63  3000               	movlw	0
  6224  0A64  1803               	skipnc
  6225  0A65  3001               	movlw	1
  6226  0A66  07CB               	addwf	___ftadd@f2+1,f
  6227  0A67  3000               	movlw	0
  6228  0A68  1803               	skipnc
  6229  0A69  3001               	movlw	1
  6230  0A6A  07CC               	addwf	___ftadd@f2+2,f
  6231  0A6B                     l1634:	
  6232  0A6B  01D1               	clrf	___ftadd@sign
  6233  0A6C  0847               	movf	___ftadd@f1,w
  6234  0A6D  07CA               	addwf	___ftadd@f2,f
  6235  0A6E  0848               	movf	___ftadd@f1+1,w
  6236  0A6F  1103               	clrz
  6237  0A70  1803               	skipnc
  6238  0A71  0A48               	incf	___ftadd@f1+1,w
  6239  0A72  1D03               	btfss	3,2
  6240  0A73  07CB               	addwf	___ftadd@f2+1,f
  6241  0A74  0849               	movf	___ftadd@f1+2,w
  6242  0A75  1103               	clrz
  6243  0A76  1803               	skipnc
  6244  0A77  0A49               	incf	___ftadd@f1+2,w
  6245  0A78  1D03               	btfss	3,2
  6246  0A79  07CC               	addwf	___ftadd@f2+2,f
  6247  0A7A  1FCC               	btfss	___ftadd@f2+2,7
  6248  0A7B  2A8E               	goto	l1644
  6249  0A7C  30FF               	movlw	255
  6250  0A7D  06CA               	xorwf	___ftadd@f2,f
  6251  0A7E  30FF               	movlw	255
  6252  0A7F  06CB               	xorwf	___ftadd@f2+1,f
  6253  0A80  30FF               	movlw	255
  6254  0A81  06CC               	xorwf	___ftadd@f2+2,f
  6255  0A82  3001               	movlw	1
  6256  0A83  07CA               	addwf	___ftadd@f2,f
  6257  0A84  3000               	movlw	0
  6258  0A85  1803               	skipnc
  6259  0A86  3001               	movlw	1
  6260  0A87  07CB               	addwf	___ftadd@f2+1,f
  6261  0A88  3000               	movlw	0
  6262  0A89  1803               	skipnc
  6263  0A8A  3001               	movlw	1
  6264  0A8B  07CC               	addwf	___ftadd@f2+2,f
  6265  0A8C  01D1               	clrf	___ftadd@sign
  6266  0A8D  0AD1               	incf	___ftadd@sign,f
  6267  0A8E                     l1644:	
  6268  0A8E  084A               	movf	___ftadd@f2,w
  6269  0A8F  00F0               	movwf	___ftpack@arg
  6270  0A90  084B               	movf	___ftadd@f2+1,w
  6271  0A91  00F1               	movwf	___ftpack@arg+1
  6272  0A92  084C               	movf	___ftadd@f2+2,w
  6273  0A93  00F2               	movwf	___ftpack@arg+2
  6274  0A94  0853               	movf	___ftadd@exp1,w
  6275  0A95  00CD               	movwf	??___ftadd
  6276  0A96  084D               	movf	??___ftadd,w
  6277  0A97  00F3               	movwf	___ftpack@exp
  6278  0A98  0851               	movf	___ftadd@sign,w
  6279  0A99  00CE               	movwf	??___ftadd+1
  6280  0A9A  084E               	movf	??___ftadd+1,w
  6281  0A9B  00F4               	movwf	___ftpack@sign
  6282  0A9C  160A  118A  2706   	fcall	___ftpack
  6283  0A9F  0870               	movf	?___ftpack,w
  6284  0AA0  1283               	bcf	3,5	;RP0=0, select bank0
  6285  0AA1  1303               	bcf	3,6	;RP1=0, select bank0
  6286  0AA2  00C7               	movwf	?___ftadd
  6287  0AA3  0871               	movf	?___ftpack+1,w
  6288  0AA4  00C8               	movwf	?___ftadd+1
  6289  0AA5  0872               	movf	?___ftpack+2,w
  6290  0AA6  00C9               	movwf	?___ftadd+2
  6291  0AA7  0008               	return
  6292  0AA8                     __end_of___ftadd:	
  6293                           
  6294                           	psect	text18
  6295  14DC                     __ptext18:	
  6296 ;; *************** function ___ftneg *****************
  6297 ;; Defined at:
  6298 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftneg.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  f1              3    0[COMMON] float 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;		None
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  3    0[COMMON] float 
  6305 ;; Registers used:
  6306 ;;		wreg
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6312 ;;      Params:         3       0       0       0       0
  6313 ;;      Locals:         0       0       0       0       0
  6314 ;;      Temps:          0       0       0       0       0
  6315 ;;      Totals:         3       0       0       0       0
  6316 ;;Total ram usage:        3 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; This function calls:
  6319 ;;		Nothing
  6320 ;; This function is called by:
  6321 ;;		_main
  6322 ;;		_printf
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           
  6327                           ;psect for function ___ftneg
  6328  14DC                     ___ftneg:	
  6329                           
  6330                           ;incstack = 0
  6331                           ; Regs used in ___ftneg: [wreg]
  6332  14DC  0872               	movf	___ftneg@f1+2,w
  6333  14DD  0471               	iorwf	___ftneg@f1+1,w
  6334  14DE  0470               	iorwf	___ftneg@f1,w
  6335  14DF  1903               	skipnz
  6336  14E0  0008               	return
  6337  14E1  3080               	movlw	128
  6338  14E2  06F2               	xorwf	___ftneg@f1+2,f
  6339  14E3  0008               	return
  6340  14E4                     __end_of___ftneg:	
  6341                           
  6342                           	psect	text19
  6343  164B                     __ptext19:	
  6344 ;; *************** function ___ftge *****************
  6345 ;; Defined at:
  6346 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;  ff1             3    0[COMMON] float 
  6349 ;;  ff2             3    3[COMMON] float 
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;		None
  6352 ;; Return value:  Size  Location     Type
  6353 ;;		None               void
  6354 ;; Registers used:
  6355 ;;		wreg, status,2, status,0
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6361 ;;      Params:         6       0       0       0       0
  6362 ;;      Locals:         0       0       0       0       0
  6363 ;;      Temps:          6       0       0       0       0
  6364 ;;      Totals:        12       0       0       0       0
  6365 ;;Total ram usage:       12 bytes
  6366 ;; Hardware stack levels used:    1
  6367 ;; This function calls:
  6368 ;;		Nothing
  6369 ;; This function is called by:
  6370 ;;		_printf
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           
  6375                           ;psect for function ___ftge
  6376  164B                     ___ftge:	
  6377                           
  6378                           ;incstack = 0
  6379                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6380  164B  1FF2               	btfss	___ftge@ff1+2,7
  6381  164C  2E72               	goto	l1886
  6382  164D  3000               	movlw	0
  6383  164E  00F6               	movwf	??___ftge
  6384  164F  3000               	movlw	0
  6385  1650  00F7               	movwf	??___ftge+1
  6386  1651  3080               	movlw	128
  6387  1652  00F8               	movwf	??___ftge+2
  6388  1653  0970               	comf	___ftge@ff1,w
  6389  1654  00F9               	movwf	??___ftge+3
  6390  1655  0971               	comf	___ftge@ff1+1,w
  6391  1656  00FA               	movwf	??___ftge+4
  6392  1657  0972               	comf	___ftge@ff1+2,w
  6393  1658  00FB               	movwf	??___ftge+5
  6394  1659  0AF9               	incf	??___ftge+3,f
  6395  165A  1903               	skipnz
  6396  165B  0AFA               	incf	??___ftge+4,f
  6397  165C  1903               	skipnz
  6398  165D  0AFB               	incf	??___ftge+5,f
  6399  165E  0879               	movf	??___ftge+3,w
  6400  165F  07F6               	addwf	??___ftge,f
  6401  1660  087A               	movf	??___ftge+4,w
  6402  1661  1803               	skipnc
  6403  1662  0F7A               	incfsz	??___ftge+4,w
  6404  1663  2E65               	goto	u2931
  6405  1664  2E66               	goto	u2932
  6406  1665                     u2931:	
  6407  1665  07F7               	addwf	??___ftge+1,f
  6408  1666                     u2932:	
  6409  1666  087B               	movf	??___ftge+5,w
  6410  1667  1803               	skipnc
  6411  1668  0F7B               	incfsz	??___ftge+5,w
  6412  1669  2E6B               	goto	u2933
  6413  166A  2E6C               	goto	u2934
  6414  166B                     u2933:	
  6415  166B  07F8               	addwf	??___ftge+2,f
  6416  166C                     u2934:	
  6417  166C  0876               	movf	??___ftge,w
  6418  166D  00F0               	movwf	___ftge@ff1
  6419  166E  0877               	movf	??___ftge+1,w
  6420  166F  00F1               	movwf	___ftge@ff1+1
  6421  1670  0878               	movf	??___ftge+2,w
  6422  1671  00F2               	movwf	___ftge@ff1+2
  6423  1672                     l1886:	
  6424  1672  1FF5               	btfss	___ftge@ff2+2,7
  6425  1673  2E99               	goto	l1890
  6426  1674  3000               	movlw	0
  6427  1675  00F6               	movwf	??___ftge
  6428  1676  3000               	movlw	0
  6429  1677  00F7               	movwf	??___ftge+1
  6430  1678  3080               	movlw	128
  6431  1679  00F8               	movwf	??___ftge+2
  6432  167A  0973               	comf	___ftge@ff2,w
  6433  167B  00F9               	movwf	??___ftge+3
  6434  167C  0974               	comf	___ftge@ff2+1,w
  6435  167D  00FA               	movwf	??___ftge+4
  6436  167E  0975               	comf	___ftge@ff2+2,w
  6437  167F  00FB               	movwf	??___ftge+5
  6438  1680  0AF9               	incf	??___ftge+3,f
  6439  1681  1903               	skipnz
  6440  1682  0AFA               	incf	??___ftge+4,f
  6441  1683  1903               	skipnz
  6442  1684  0AFB               	incf	??___ftge+5,f
  6443  1685  0879               	movf	??___ftge+3,w
  6444  1686  07F6               	addwf	??___ftge,f
  6445  1687  087A               	movf	??___ftge+4,w
  6446  1688  1803               	skipnc
  6447  1689  0F7A               	incfsz	??___ftge+4,w
  6448  168A  2E8C               	goto	u2951
  6449  168B  2E8D               	goto	u2952
  6450  168C                     u2951:	
  6451  168C  07F7               	addwf	??___ftge+1,f
  6452  168D                     u2952:	
  6453  168D  087B               	movf	??___ftge+5,w
  6454  168E  1803               	skipnc
  6455  168F  0F7B               	incfsz	??___ftge+5,w
  6456  1690  2E92               	goto	u2953
  6457  1691  2E93               	goto	u2954
  6458  1692                     u2953:	
  6459  1692  07F8               	addwf	??___ftge+2,f
  6460  1693                     u2954:	
  6461  1693  0876               	movf	??___ftge,w
  6462  1694  00F3               	movwf	___ftge@ff2
  6463  1695  0877               	movf	??___ftge+1,w
  6464  1696  00F4               	movwf	___ftge@ff2+1
  6465  1697  0878               	movf	??___ftge+2,w
  6466  1698  00F5               	movwf	___ftge@ff2+2
  6467  1699                     l1890:	
  6468  1699  3080               	movlw	128
  6469  169A  06F2               	xorwf	___ftge@ff1+2,f
  6470  169B  3080               	movlw	128
  6471  169C  06F5               	xorwf	___ftge@ff2+2,f
  6472  169D  0875               	movf	___ftge@ff2+2,w
  6473  169E  0272               	subwf	___ftge@ff1+2,w
  6474  169F  1D03               	skipz
  6475  16A0  0008               	return
  6476  16A1  0874               	movf	___ftge@ff2+1,w
  6477  16A2  0271               	subwf	___ftge@ff1+1,w
  6478  16A3  1D03               	skipz
  6479  16A4  0008               	return
  6480  16A5  0873               	movf	___ftge@ff2,w
  6481  16A6  0270               	subwf	___ftge@ff1,w
  6482  16A7  0008               	return
  6483  16A8                     __end_of___ftge:	
  6484                           
  6485                           	psect	text20
  6486  14D5                     __ptext20:	
  6487 ;; *************** function _iniciar_uart *****************
  6488 ;; Defined at:
  6489 ;;		line 9 in file "config.h"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;		None
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;		None
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  1    wreg      void 
  6496 ;; Registers used:
  6497 ;;		None
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6503 ;;      Params:         0       0       0       0       0
  6504 ;;      Locals:         0       0       0       0       0
  6505 ;;      Temps:          0       0       0       0       0
  6506 ;;      Totals:         0       0       0       0       0
  6507 ;;Total ram usage:        0 bytes
  6508 ;; Hardware stack levels used:    1
  6509 ;; This function calls:
  6510 ;;		Nothing
  6511 ;; This function is called by:
  6512 ;;		_main
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           
  6517                           ;psect for function _iniciar_uart
  6518  14D5                     _iniciar_uart:	
  6519                           
  6520                           ;config.h: 10: TXSTAbits.TXEN = 1;
  6521                           
  6522                           ;incstack = 0
  6523                           ; Regs used in _iniciar_uart: []
  6524  14D5  1683               	bsf	3,5	;RP0=1, select bank1
  6525  14D6  1303               	bcf	3,6	;RP1=0, select bank1
  6526  14D7  1698               	bsf	24,5	;volatile
  6527                           
  6528                           ;config.h: 11: RCSTAbits.SPEN = 1;
  6529  14D8  1283               	bcf	3,5	;RP0=0, select bank0
  6530  14D9  1303               	bcf	3,6	;RP1=0, select bank0
  6531  14DA  1798               	bsf	24,7	;volatile
  6532  14DB  0008               	return
  6533  14DC                     __end_of_iniciar_uart:	
  6534                           
  6535                           	psect	text21
  6536  0816                     __ptext21:	
  6537 ;; *************** function ___ftdiv *****************
  6538 ;; Defined at:
  6539 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  f2              3    8[COMMON] float 
  6542 ;;  f1              3   11[COMMON] float 
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;  f3              3    5[BANK0 ] float 
  6545 ;;  sign            1    9[BANK0 ] unsigned char 
  6546 ;;  exp             1    8[BANK0 ] unsigned char 
  6547 ;;  cntr            1    4[BANK0 ] unsigned char 
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  3    8[COMMON] float 
  6550 ;; Registers used:
  6551 ;;		wreg, status,2, status,0, pclath, cstack
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6557 ;;      Params:         6       0       0       0       0
  6558 ;;      Locals:         0       6       0       0       0
  6559 ;;      Temps:          0       4       0       0       0
  6560 ;;      Totals:         6      10       0       0       0
  6561 ;;Total ram usage:       16 bytes
  6562 ;; Hardware stack levels used:    1
  6563 ;; Hardware stack levels required when called:    1
  6564 ;; This function calls:
  6565 ;;		___ftpack
  6566 ;; This function is called by:
  6567 ;;		_main
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           
  6572                           ;psect for function ___ftdiv
  6573  0816                     ___ftdiv:	
  6574                           
  6575                           ;incstack = 0
  6576                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6577  0816  087B               	movf	___ftdiv@f1,w
  6578  0817  1283               	bcf	3,5	;RP0=0, select bank0
  6579  0818  1303               	bcf	3,6	;RP1=0, select bank0
  6580  0819  00A0               	movwf	??___ftdiv
  6581  081A  087C               	movf	___ftdiv@f1+1,w
  6582  081B  00A1               	movwf	??___ftdiv+1
  6583  081C  087D               	movf	___ftdiv@f1+2,w
  6584  081D  00A2               	movwf	??___ftdiv+2
  6585  081E  1003               	clrc
  6586  081F  0D21               	rlf	??___ftdiv+1,w
  6587  0820  0D22               	rlf	??___ftdiv+2,w
  6588  0821  00A3               	movwf	??___ftdiv+3
  6589  0822  0823               	movf	??___ftdiv+3,w
  6590  0823  00A8               	movwf	___ftdiv@exp
  6591  0824  0828               	movf	___ftdiv@exp,w
  6592  0825  1D03               	btfss	3,2
  6593  0826  282E               	goto	l2170
  6594  0827  3000               	movlw	0
  6595  0828  00F8               	movwf	?___ftdiv
  6596  0829  3000               	movlw	0
  6597  082A  00F9               	movwf	?___ftdiv+1
  6598  082B  3000               	movlw	0
  6599  082C  00FA               	movwf	?___ftdiv+2
  6600  082D  0008               	return
  6601  082E                     l2170:	
  6602  082E  0878               	movf	___ftdiv@f2,w
  6603  082F  00A0               	movwf	??___ftdiv
  6604  0830  0879               	movf	___ftdiv@f2+1,w
  6605  0831  00A1               	movwf	??___ftdiv+1
  6606  0832  087A               	movf	___ftdiv@f2+2,w
  6607  0833  00A2               	movwf	??___ftdiv+2
  6608  0834  1003               	clrc
  6609  0835  0D21               	rlf	??___ftdiv+1,w
  6610  0836  0D22               	rlf	??___ftdiv+2,w
  6611  0837  00A3               	movwf	??___ftdiv+3
  6612  0838  0823               	movf	??___ftdiv+3,w
  6613  0839  00A9               	movwf	___ftdiv@sign
  6614  083A  0829               	movf	___ftdiv@sign,w
  6615  083B  1D03               	btfss	3,2
  6616  083C  2844               	goto	l2176
  6617  083D  3000               	movlw	0
  6618  083E  00F8               	movwf	?___ftdiv
  6619  083F  3000               	movlw	0
  6620  0840  00F9               	movwf	?___ftdiv+1
  6621  0841  3000               	movlw	0
  6622  0842  00FA               	movwf	?___ftdiv+2
  6623  0843  0008               	return
  6624  0844                     l2176:	
  6625  0844  3000               	movlw	0
  6626  0845  00A5               	movwf	___ftdiv@f3
  6627  0846  3000               	movlw	0
  6628  0847  00A6               	movwf	___ftdiv@f3+1
  6629  0848  3000               	movlw	0
  6630  0849  00A7               	movwf	___ftdiv@f3+2
  6631  084A  3089               	movlw	137
  6632  084B  0729               	addwf	___ftdiv@sign,w
  6633  084C  00A0               	movwf	??___ftdiv
  6634  084D  0820               	movf	??___ftdiv,w
  6635  084E  02A8               	subwf	___ftdiv@exp,f
  6636  084F  087B               	movf	___ftdiv@f1,w
  6637  0850  00A0               	movwf	??___ftdiv
  6638  0851  087C               	movf	___ftdiv@f1+1,w
  6639  0852  00A1               	movwf	??___ftdiv+1
  6640  0853  087D               	movf	___ftdiv@f1+2,w
  6641  0854  00A2               	movwf	??___ftdiv+2
  6642  0855  3010               	movlw	16
  6643  0856                     u3565:	
  6644  0856  1003               	clrc
  6645  0857  0CA2               	rrf	??___ftdiv+2,f
  6646  0858  0CA1               	rrf	??___ftdiv+1,f
  6647  0859  0CA0               	rrf	??___ftdiv,f
  6648  085A  3EFF               	addlw	-1
  6649  085B  1D03               	skipz
  6650  085C  2856               	goto	u3565
  6651  085D  0820               	movf	??___ftdiv,w
  6652  085E  00A3               	movwf	??___ftdiv+3
  6653  085F  0823               	movf	??___ftdiv+3,w
  6654  0860  00A9               	movwf	___ftdiv@sign
  6655  0861  0878               	movf	___ftdiv@f2,w
  6656  0862  00A0               	movwf	??___ftdiv
  6657  0863  0879               	movf	___ftdiv@f2+1,w
  6658  0864  00A1               	movwf	??___ftdiv+1
  6659  0865  087A               	movf	___ftdiv@f2+2,w
  6660  0866  00A2               	movwf	??___ftdiv+2
  6661  0867  3010               	movlw	16
  6662  0868                     u3575:	
  6663  0868  1003               	clrc
  6664  0869  0CA2               	rrf	??___ftdiv+2,f
  6665  086A  0CA1               	rrf	??___ftdiv+1,f
  6666  086B  0CA0               	rrf	??___ftdiv,f
  6667  086C  3EFF               	addlw	-1
  6668  086D  1D03               	skipz
  6669  086E  2868               	goto	u3575
  6670  086F  0820               	movf	??___ftdiv,w
  6671  0870  00A3               	movwf	??___ftdiv+3
  6672  0871  0823               	movf	??___ftdiv+3,w
  6673  0872  06A9               	xorwf	___ftdiv@sign,f
  6674  0873  3080               	movlw	128
  6675  0874  00A0               	movwf	??___ftdiv
  6676  0875  0820               	movf	??___ftdiv,w
  6677  0876  05A9               	andwf	___ftdiv@sign,f
  6678  0877  17FC               	bsf	___ftdiv@f1+1,7
  6679  0878  30FF               	movlw	255
  6680  0879  05FB               	andwf	___ftdiv@f1,f
  6681  087A  30FF               	movlw	255
  6682  087B  05FC               	andwf	___ftdiv@f1+1,f
  6683  087C  3000               	movlw	0
  6684  087D  05FD               	andwf	___ftdiv@f1+2,f
  6685  087E  17F9               	bsf	___ftdiv@f2+1,7
  6686  087F  30FF               	movlw	255
  6687  0880  05F8               	andwf	___ftdiv@f2,f
  6688  0881  30FF               	movlw	255
  6689  0882  05F9               	andwf	___ftdiv@f2+1,f
  6690  0883  3000               	movlw	0
  6691  0884  05FA               	andwf	___ftdiv@f2+2,f
  6692  0885  3018               	movlw	24
  6693  0886  00A0               	movwf	??___ftdiv
  6694  0887  0820               	movf	??___ftdiv,w
  6695  0888  00A4               	movwf	___ftdiv@cntr
  6696  0889                     l2190:	
  6697  0889  3001               	movlw	1
  6698  088A                     u3585:	
  6699  088A  1003               	clrc
  6700  088B  0DA5               	rlf	___ftdiv@f3,f
  6701  088C  0DA6               	rlf	___ftdiv@f3+1,f
  6702  088D  0DA7               	rlf	___ftdiv@f3+2,f
  6703  088E  3EFF               	addlw	-1
  6704  088F  1D03               	skipz
  6705  0890  288A               	goto	u3585
  6706  0891  087A               	movf	___ftdiv@f2+2,w
  6707  0892  027D               	subwf	___ftdiv@f1+2,w
  6708  0893  1D03               	skipz
  6709  0894  289B               	goto	u3595
  6710  0895  0879               	movf	___ftdiv@f2+1,w
  6711  0896  027C               	subwf	___ftdiv@f1+1,w
  6712  0897  1D03               	skipz
  6713  0898  289B               	goto	u3595
  6714  0899  0878               	movf	___ftdiv@f2,w
  6715  089A  027B               	subwf	___ftdiv@f1,w
  6716  089B                     u3595:	
  6717  089B  1C03               	skipc
  6718  089C  28A8               	goto	l2198
  6719  089D  0878               	movf	___ftdiv@f2,w
  6720  089E  02FB               	subwf	___ftdiv@f1,f
  6721  089F  0879               	movf	___ftdiv@f2+1,w
  6722  08A0  1C03               	skipc
  6723  08A1  0F79               	incfsz	___ftdiv@f2+1,w
  6724  08A2  02FC               	subwf	___ftdiv@f1+1,f
  6725  08A3  087A               	movf	___ftdiv@f2+2,w
  6726  08A4  1C03               	skipc
  6727  08A5  0A7A               	incf	___ftdiv@f2+2,w
  6728  08A6  02FD               	subwf	___ftdiv@f1+2,f
  6729  08A7  1425               	bsf	___ftdiv@f3,0
  6730  08A8                     l2198:	
  6731  08A8  3001               	movlw	1
  6732  08A9                     u3605:	
  6733  08A9  1003               	clrc
  6734  08AA  0DFB               	rlf	___ftdiv@f1,f
  6735  08AB  0DFC               	rlf	___ftdiv@f1+1,f
  6736  08AC  0DFD               	rlf	___ftdiv@f1+2,f
  6737  08AD  3EFF               	addlw	-1
  6738  08AE  1D03               	skipz
  6739  08AF  28A9               	goto	u3605
  6740  08B0  3001               	movlw	1
  6741  08B1  02A4               	subwf	___ftdiv@cntr,f
  6742  08B2  1D03               	btfss	3,2
  6743  08B3  2889               	goto	l2190
  6744  08B4  0825               	movf	___ftdiv@f3,w
  6745  08B5  00F0               	movwf	___ftpack@arg
  6746  08B6  0826               	movf	___ftdiv@f3+1,w
  6747  08B7  00F1               	movwf	___ftpack@arg+1
  6748  08B8  0827               	movf	___ftdiv@f3+2,w
  6749  08B9  00F2               	movwf	___ftpack@arg+2
  6750  08BA  0828               	movf	___ftdiv@exp,w
  6751  08BB  00A0               	movwf	??___ftdiv
  6752  08BC  0820               	movf	??___ftdiv,w
  6753  08BD  00F3               	movwf	___ftpack@exp
  6754  08BE  0829               	movf	___ftdiv@sign,w
  6755  08BF  00A1               	movwf	??___ftdiv+1
  6756  08C0  0821               	movf	??___ftdiv+1,w
  6757  08C1  00F4               	movwf	___ftpack@sign
  6758  08C2  160A  118A  2706   	fcall	___ftpack
  6759  08C5  0870               	movf	?___ftpack,w
  6760  08C6  00F8               	movwf	?___ftdiv
  6761  08C7  0871               	movf	?___ftpack+1,w
  6762  08C8  00F9               	movwf	?___ftdiv+1
  6763  08C9  0872               	movf	?___ftpack+2,w
  6764  08CA  00FA               	movwf	?___ftdiv+2
  6765  08CB  0008               	return
  6766  08CC                     __end_of___ftdiv:	
  6767                           
  6768                           	psect	text22
  6769  1706                     __ptext22:	
  6770 ;; *************** function ___ftpack *****************
  6771 ;; Defined at:
  6772 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;  arg             3    0[COMMON] unsigned um
  6775 ;;  exp             1    3[COMMON] unsigned char 
  6776 ;;  sign            1    4[COMMON] unsigned char 
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;		None
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  3    0[COMMON] float 
  6781 ;; Registers used:
  6782 ;;		wreg, status,2, status,0
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6788 ;;      Params:         5       0       0       0       0
  6789 ;;      Locals:         0       0       0       0       0
  6790 ;;      Temps:          3       0       0       0       0
  6791 ;;      Totals:         8       0       0       0       0
  6792 ;;Total ram usage:        8 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; This function calls:
  6795 ;;		Nothing
  6796 ;; This function is called by:
  6797 ;;		___ftadd
  6798 ;;		___ftdiv
  6799 ;;		___ftmul
  6800 ;;		___lltoft
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804                           
  6805                           ;psect for function ___ftpack
  6806  1706                     ___ftpack:	
  6807                           
  6808                           ;incstack = 0
  6809                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6810  1706  0873               	movf	___ftpack@exp,w
  6811  1707  1903               	btfsc	3,2
  6812  1708  2F0E               	goto	l1454
  6813  1709  0872               	movf	___ftpack@arg+2,w
  6814  170A  0471               	iorwf	___ftpack@arg+1,w
  6815  170B  0470               	iorwf	___ftpack@arg,w
  6816  170C  1D03               	skipz
  6817  170D  2F21               	goto	l1460
  6818  170E                     l1454:	
  6819  170E  3000               	movlw	0
  6820  170F  00F0               	movwf	?___ftpack
  6821  1710  3000               	movlw	0
  6822  1711  00F1               	movwf	?___ftpack+1
  6823  1712  3000               	movlw	0
  6824  1713  00F2               	movwf	?___ftpack+2
  6825  1714  0008               	return
  6826  1715                     l1458:	
  6827  1715  3001               	movlw	1
  6828  1716  00F5               	movwf	??___ftpack
  6829  1717  0875               	movf	??___ftpack,w
  6830  1718  07F3               	addwf	___ftpack@exp,f
  6831  1719  3001               	movlw	1
  6832  171A                     u1865:	
  6833  171A  1003               	clrc
  6834  171B  0CF2               	rrf	___ftpack@arg+2,f
  6835  171C  0CF1               	rrf	___ftpack@arg+1,f
  6836  171D  0CF0               	rrf	___ftpack@arg,f
  6837  171E  3EFF               	addlw	-1
  6838  171F  1D03               	skipz
  6839  1720  2F1A               	goto	u1865
  6840  1721                     l1460:	
  6841  1721  30FE               	movlw	254
  6842  1722  0572               	andwf	___ftpack@arg+2,w
  6843  1723  1903               	btfsc	3,2
  6844  1724  2F3C               	goto	l396
  6845  1725  2F15               	goto	l1458
  6846  1726                     l1462:	
  6847  1726  3001               	movlw	1
  6848  1727  00F5               	movwf	??___ftpack
  6849  1728  0875               	movf	??___ftpack,w
  6850  1729  07F3               	addwf	___ftpack@exp,f
  6851  172A  3001               	movlw	1
  6852  172B  07F0               	addwf	___ftpack@arg,f
  6853  172C  3000               	movlw	0
  6854  172D  1803               	skipnc
  6855  172E  3001               	movlw	1
  6856  172F  07F1               	addwf	___ftpack@arg+1,f
  6857  1730  3000               	movlw	0
  6858  1731  1803               	skipnc
  6859  1732  3001               	movlw	1
  6860  1733  07F2               	addwf	___ftpack@arg+2,f
  6861  1734  3001               	movlw	1
  6862  1735                     u1885:	
  6863  1735  1003               	clrc
  6864  1736  0CF2               	rrf	___ftpack@arg+2,f
  6865  1737  0CF1               	rrf	___ftpack@arg+1,f
  6866  1738  0CF0               	rrf	___ftpack@arg,f
  6867  1739  3EFF               	addlw	-1
  6868  173A  1D03               	skipz
  6869  173B  2F35               	goto	u1885
  6870  173C                     l396:	
  6871  173C  30FF               	movlw	255
  6872  173D  0572               	andwf	___ftpack@arg+2,w
  6873  173E  1903               	btfsc	3,2
  6874  173F  2F4B               	goto	l1470
  6875  1740  2F26               	goto	l1462
  6876  1741                     l1468:	
  6877  1741  3001               	movlw	1
  6878  1742  02F3               	subwf	___ftpack@exp,f
  6879  1743  3001               	movlw	1
  6880  1744                     u1905:	
  6881  1744  1003               	clrc
  6882  1745  0DF0               	rlf	___ftpack@arg,f
  6883  1746  0DF1               	rlf	___ftpack@arg+1,f
  6884  1747  0DF2               	rlf	___ftpack@arg+2,f
  6885  1748  3EFF               	addlw	-1
  6886  1749  1D03               	skipz
  6887  174A  2F44               	goto	u1905
  6888  174B                     l1470:	
  6889  174B  1BF1               	btfsc	___ftpack@arg+1,7
  6890  174C  2F51               	goto	l403
  6891  174D  3002               	movlw	2
  6892  174E  0273               	subwf	___ftpack@exp,w
  6893  174F  1803               	skipnc
  6894  1750  2F41               	goto	l1468
  6895  1751                     l403:	
  6896  1751  1873               	btfsc	___ftpack@exp,0
  6897  1752  2F59               	goto	l404
  6898  1753  30FF               	movlw	255
  6899  1754  05F0               	andwf	___ftpack@arg,f
  6900  1755  307F               	movlw	127
  6901  1756  05F1               	andwf	___ftpack@arg+1,f
  6902  1757  30FF               	movlw	255
  6903  1758  05F2               	andwf	___ftpack@arg+2,f
  6904  1759                     l404:	
  6905  1759  1003               	clrc
  6906  175A  0CF3               	rrf	___ftpack@exp,f
  6907  175B  0873               	movf	___ftpack@exp,w
  6908  175C  00F5               	movwf	??___ftpack
  6909  175D  01F6               	clrf	??___ftpack+1
  6910  175E  01F7               	clrf	??___ftpack+2
  6911  175F  3010               	movlw	16
  6912  1760                     u1945:	
  6913  1760  1003               	clrc
  6914  1761  0DF5               	rlf	??___ftpack,f
  6915  1762  0DF6               	rlf	??___ftpack+1,f
  6916  1763  0DF7               	rlf	??___ftpack+2,f
  6917  1764  3EFF               	addlw	-1
  6918  1765  1D03               	skipz
  6919  1766  2F60               	goto	u1945
  6920  1767  0875               	movf	??___ftpack,w
  6921  1768  04F0               	iorwf	___ftpack@arg,f
  6922  1769  0876               	movf	??___ftpack+1,w
  6923  176A  04F1               	iorwf	___ftpack@arg+1,f
  6924  176B  0877               	movf	??___ftpack+2,w
  6925  176C  04F2               	iorwf	___ftpack@arg+2,f
  6926  176D  0874               	movf	___ftpack@sign,w
  6927  176E  1903               	btfsc	3,2
  6928  176F  0008               	return
  6929  1770  17F2               	bsf	___ftpack@arg+2,7
  6930  1771  0008               	return
  6931  1772                     __end_of___ftpack:	
  6932  007E                     btemp	set	126	;btemp
  6933  007E                     wtemp0	set	126


Data Sizes:
    Strings     392
    Constant    118
    Data        3
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     69      78
    BANK1            80     22      31
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_11(CODE[36]), STR_10(CODE[39]), STR_9(CODE[42]), STR_8(CODE[33]), 
		 -> STR_7(CODE[32]), STR_6(CODE[42]), STR_5(CODE[42]), STR_4(CODE[42]), 
		 -> STR_3(CODE[42]), STR_2(CODE[42]), STR_1(CODE[42]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->___ftdiv
    _printf->___lldiv
    _printf->___lltoft
    _printf->__div_to_l_
    _scale->___bmul
    _fround->___bmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___ftsub->___lltoft
    ___ftdiv->___ftpack

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   42227
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                       _iniciar_uart
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              40    35      5   33389
                                             58 BANK0     11     6      5
                                              0 BANK1     22    22      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               12     9      3    7282
                                             23 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              19    16      3    7084
                                             23 BANK0     16    13      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3623
                                              7 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                             12 COMMON     1     1      0
                                              4 BANK0      3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1250
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1360
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1170
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1829
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     477
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             32 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3144
                                             52 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2971
                                             39 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     151
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     560
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (1) _iniciar_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2093
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftadd
     ___ftneg (ARG)
     ___ftpack (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
   ___ftdiv
     ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___ftpack (ARG)
   ___ftneg
   _iniciar_uart
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftneg (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftneg (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     16      1F       7       38.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     45      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7B      12        0.0%
ABS                  0      0      7B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sun Sep 03 09:40:10 2017

                      _a 006B                        _b 0068                        pc 0002  
         ___bmul@product 0025                       l19 14E5                       l92 02AA  
           ___awdiv@sign 0021                       fsr 0004      ___wmul@multiplicand 0072  
           ___ftadd@exp1 0053             ___ftadd@exp2 0052             ___ftadd@sign 0051  
                    l134 07D8                      l218 1517                      l403 1751  
                    l404 1759                      l504 17E6                      l427 0A47  
                    l453 0035                      l463 00BA                      l384 0BCE  
                    l376 0B85                      l396 173C                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076             ___ftdiv@cntr 0024  
           ___ftdiv@sign 0029                     l2000 15E7                     l2010 1544  
                   l2100 055D                     l2022 02A5                     l2008 1532  
                   l2112 05B7                     l2122 05CD                     l2106 0563  
                   l2042 031D                     l2026 02AC                     l2210 0BE1  
                   l2140 068D                     l2124 063F                     l2028 02C8  
                   l1510 1607                     l2134 0667                     l2070 0411  
                   l1520 160F                     l1504 15FC                     l2152 07AC  
                   l2128 064D                     l2240 0CE5                     l2170 082E  
                   l1522 161D                     l2082 0495                     l2074 0457  
                   l2066 03F4                     l2058 0387                     l2162 0280  
                   l2250 0D17                     l1460 1721                     l1612 0A0D  
                   l1532 163E                     l2156 07BA                     l2244 0D04  
                   l2236 0CC6                     l1470 174B                     l1462 1726  
                   l1454 170E                     l2190 0889                     l1630 0A59  
                   l1614 0A19                     l1606 09F8                     l2086 04AC  
                   l2158 07BF                     l2176 0844                     l1624 0A37  
                   l1616 0A1E                     l1536 1646                     l1528 1633  
                   l1560 1570                     l1552 156A                     l1720 0242  
                   l1712 01B0                     l2096 04EE                     l1458 1715  
                   l1634 0A6B                     l1626 0A43                     l1618 0A22  
                   l1810 00AF                     l1802 0092                     l1562 157E  
                   l1570 1597                     l1468 1741                     l1644 0A8E  
                   l1812 00BD                     l1804 00A2                     l1548 1563  
                   l1484 0807                     l1660 08FA                     l2198 08A8  
                   l1822 0AC9                     l1574 159F                     l1566 158C  
                   l1654 08E4                     l1742 0E7B                     l1584 09C8  
                   l1488 080D                     l1672 0939                     l1760 0FDD  
                   l1736 0E05                     l1594 09DE                     l1914 14F5  
                   l1770 001D                     l1754 0F67                     l1746 0E9E  
                   l1588 09CF                     l1924 178C                     l1828 0AE8  
                   l1684 0961                     l1676 0949                     l1950 17DB  
                   l1942 17BE                     l1870 150F                     l1862 0BC3  
                   l1854 0BA6                     l1838 0B2F                     l1952 17E9  
                   l1944 17CE                     l1864 0BD1                     l1856 0BB6  
                   l1792 0076                     l1784 0056                     l1688 0971  
                   l1890 1699                     l1956 17F7                     l1980 16FD  
                   l1886 1672                     l1966 16B8                     l1990 15AC  
                   l1976 16F0                     l1968 16C8                     l1992 15BC  
                   l1996 15DA                     STR_1 1130                     STR_2 10B2  
                   STR_3 10DC                     STR_4 1088                     STR_5 1106  
                   STR_6 1130                     STR_7 11F0                     STR_8 11CF  
                   STR_9 115A                     u2015 1612                     u2035 161E  
                   u2115 1573                     u3005 1793                     u2045 162A  
                   u2055 1634                     u2135 1584                     u3105 16BC  
                   u2145 158D                     u3035 17BF                     u2325 0A23  
                   u3125 16CA                     u3205 15DB                     u3135 16DF  
                   u2265 09F9                     u3065 17DD                     u3145 16F1  
                   u3225 1537                     u2355 0A38                     u2435 0906  
                   u2525 0972                     u2445 0918                     u3405 05A9  
                   u3325 041C                     u2295 0A0E                     u3175 15B0  
                   u2535 097A                     u3335 0462                     u1905 1744  
                   u3195 15CA                     u2715 0093                     u2475 094A  
                   u3435 05DF             printf@tmpval 00AE                     u3605 08A9  
                   u2485 0952                     u3365 0493                     u3285 0337  
                   u2655 0058                     u3455 0656                     u1945 1760  
                   u1865 171A                     u2905 151F                     u2745 00B1  
                   u2665 0069                     u3465 0663                     u2931 1665  
                   u2835 0BA7                     u2675 0077                     u3395 0568  
                   u2932 1666                     u1885 1735                     u3565 0856  
                   u2933 166B                     u3485 0703                     u2934 166C  
                   u3575 0868                     u2951 168C                     u3495 076E  
                   u2952 168D                     u3585 088A                     u2953 1692  
                   u2865 0BC5                     u2785 0B31                     u2954 1693  
                   u3595 089B                     u2795 0B60                     u2895 1518  
                   _main 0BDA             ___ftpack@arg 0070             ___ftpack@exp 0073  
                   _suma 0065                     btemp 007E                     start 0000  
      ___bmul@multiplier 0026             ___ftmul@cntr 0035             ___ftmul@sign 0036  
           ___fttol@exp1 004D             ___fttol@lval 0049                    ?_main 0070  
        __end_of___awdiv 164B          __end_of___ftadd 0AA8                    STR_10 1184  
                  STR_11 11AB          __end_of___awmod 15A4          __end_of___ftdiv 08CC  
        __end_of___ftneg 14E4          __end_of___lldiv 1706          __end_of___ftmul 099F  
        ___awdiv@divisor 0077          __end_of___llmod 15F0          __end_of___ftsub 150D  
        __end_of___fttol 1800          ___awdiv@counter 0020                    _PORTB 0006  
                  _TRISB 0086                    _TXREG 0019             ___lltoft@exp 007D  
        __end_of_dpowers 103A                    _scale 0D35                    _resta 00BC  
          ___ftpack@sign 0074                    _putch 14E4                    pclath 000A  
                  status 0003                    wtemp0 007E            ?_iniciar_uart 0070  
        __initialization 07D9             __end_of_main 0D35                   ??_main 007E  
          ___fttol@sign1 0048     __size_of__tdiv_to_l_ 00C3         ___llmod@dividend 0074  
                 ?_scale 0037         ___awdiv@dividend 0079                   ?_putch 0070  
       __end_of___ftpack 1772         __end_of___lltoft 1559           ??_iniciar_uart 0070  
       __end_of__powers_ 1061                   ___bmul 0803                   ___ftge 164B  
                 ___wmul 150D                ??___awdiv 007B                ??___ftadd 004D  
              ??___awmod 0074                ??___ftdiv 0020                ??___ftneg 0073  
              ??___lldiv 0078                ??___ftmul 002D                ??___llmod 0078  
              ??___ftsub 007E                ??___fttol 0044                   _fround 00C6  
       ___awdiv@quotient 0022          ___awmod@divisor 0070          ___awmod@counter 0075  
                 _printf 0278    ___ftmul@f3_as_product 0032  __end_of__initialization 07FC  
             ___ftadd@f1 0047               ___ftadd@f2 004A               ___ftge@ff1 0070  
             ___ftge@ff2 0073               ___ftdiv@f1 007B               ___ftdiv@f2 0078  
             ___ftdiv@f3 0025               ___ftneg@f1 0070      ___bmul@multiplicand 0024  
             ___ftmul@f1 0027               ___ftmul@f2 002A               ___ftsub@f1 0057  
             ___ftsub@f2 0054               ___fttol@f1 0040           __pcstackCOMMON 0070  
           __pidataBANK0 0800               ___lltoft@c 0078            __end_of_scale 1000  
          __end_of_putch 14EC               __div_to_l_ 0AA8          __div_to_l_@exp1 0025  
        __div_to_l_@cntr 0024                  ??_scale 003A          __div_to_l_@quot 0020  
                ??_putch 0070               __pbssBANK0 0065               __pbssBANK1 00B6  
          __div_to_l_@f1 0070            __div_to_l_@f2 0073               __pmaintext 0BDA  
                ?___bmul 0024                  ?___ftge 0070                  ?___wmul 0070  
                ?_fround 0037                ?___ftpack 0070                  ?_printf 005A  
              ?___lltoft 0078     __end_of_iniciar_uart 14DC               __stringtab 1000  
      __end_of__npowers_ 1088          __size_of___bmul 0013          __size_of___ftge 005D  
                ___awdiv 15F0                  ___ftadd 099F                  ___awmod 1559  
                ___ftdiv 0816                  ___ftneg 14DC                  ___lldiv 16A8  
        __size_of___wmul 0021                  ___ftmul 08CC                  ___llmod 15A4  
                ___ftsub 14EC                  ___fttol 1772               _fround$658 0043  
             _fround$659 0040               ??___ftpack 0075          __size_of_fround 01B2  
             ??___lltoft 007C                  __ptext1 0278                  __ptext2 0D35  
                __ptext3 14E4                  __ptext4 00C6                  __ptext5 08CC  
                __ptext6 0803                  __ptext7 1559                  __ptext8 15F0  
                __ptext9 0003          __size_of_printf 0561              ?__div_to_l_ 0070  
                _dpowers 1012         ___awmod@dividend 0072     end_of_initialization 07FC  
        ___lldiv@divisor 0070          ___lldiv@counter 007D                _RCSTAbits 0018  
                printf@c 00B5                  printf@f 005A             __pstringtext 1000  
         __tdiv_to_l_@f1 0070           __tdiv_to_l_@f2 0073               _printf$661 00A0  
          ??__tdiv_to_l_ 0076                _PORTBbits 0006              ___ftdiv@exp 0028  
              _TXSTAbits 0098      __size_of__div_to_l_ 0132              ___ftmul@exp 0031  
         __end_of___bmul 0816           __end_of___ftge 16A8           __end_of___wmul 152E  
  __size_of_iniciar_uart 0007           __end_of_fround 0278           __end_of_printf 07D9  
    start_initialization 07D9      __end_of__tdiv_to_l_ 00C6          ___llmod@divisor 0070  
        ___llmod@counter 0079             _iniciar_uart 14D5                 ??___bmul 007C  
               ??___ftge 0076                 ??___wmul 0074              __pdataBANK0 006B  
               ??_fround 003A                 ??_printf 005F               fround@prec 0046  
      __size_of___ftpack 006C        __size_of___lltoft 002B                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0                 ?___awdiv 0077  
               ?___ftadd 0047                 ?___awmod 0070                 ?___ftdiv 0078  
               ?___ftneg 0070                 ?___lldiv 0070                 ?___ftmul 0027  
               ?___llmod 0070                 ?___ftsub 0054                __npowers_ 1061  
               ?___fttol 0040              __tdiv_to_l_ 0003             ??__div_to_l_ 0076  
              _scale$660 003C           __size_of_scale 02CB           __size_of_putch 0008  
         ___wmul@product 0074                 _PIR1bits 000C       __end_of__div_to_l_ 0BDA  
            __stringbase 1012        ___wmul@multiplier 0070               printf@flag 00A4  
             printf@fval 00B2               printf@prec 00A6         __size_of___awdiv 005B  
       __size_of___ftadd 0109         __size_of___awmod 004B         __size_of___ftdiv 00B6  
       __size_of___ftneg 0008         __size_of___lldiv 005E         __size_of___ftmul 00D3  
       __size_of___llmod 004C         __size_of___ftsub 0021         __size_of___fttol 008E  
               ___ftpack 1706       __end_of__stringtab 1012                 ___lltoft 152E  
               __ptext10 0AA8                 __ptext11 150D                 __ptext20 14D5  
               __ptext12 152E                 __ptext21 0816                 __ptext13 15A4  
               __ptext22 1706                 __ptext14 16A8                 __ptext15 1772  
               __ptext16 14EC                 __ptext17 099F                 __ptext18 14DC  
               __ptext19 164B                 __powers_ 103A           _multiplicacion 00B9  
               _division 00B6            __size_of_main 015B                printf@exp 00AC  
              printf@val 00A8                putch@dato 0070                 scale@scl 003F  
       __tdiv_to_l_@exp1 0025         __tdiv_to_l_@cntr 0024         __tdiv_to_l_@quot 0020  
       ___lldiv@dividend 0074                stringcode 100A                 printf@ap 00A3  
           ?__tdiv_to_l_ 0070         ___lldiv@quotient 0079                 stringtab 1000  
