

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sun Sep 03 10:23:11 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 1.43
    39                           ; Generated 25/07/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150                           
   151                           	psect	idataBANK0
   152  14BD                     __pidataBANK0:	
   153                           
   154                           ;initializer for _b
   155  14BD  3400               	retlw	0
   156  14BE  34A0               	retlw	160
   157  14BF  3440               	retlw	64
   158                           
   159                           ;initializer for _a
   160  14C0  3400               	retlw	0
   161  14C1  3420               	retlw	32
   162  14C2  3441               	retlw	65
   163                           
   164                           	psect	stringtext
   165  1000                     __pstringtext:	
   166  1000                     stringtab:	
   167  1000                     __stringtab:	
   168                           
   169                           ;	String table - string pointers are 2 bytes each
   170  1000  1BFF               	btfsc	btemp+1,7
   171  1001  280A               	ljmp	stringcode
   172  1002  1383               	bcf	3,7
   173  1003  187F               	btfsc	btemp+1,0
   174  1004  1783               	bsf	3,7
   175  1005  0800               	movf	0,w
   176  1006  0A84               	incf	4,f
   177  1007  1903               	skipnz
   178  1008  0AFF               	incf	btemp+1,f
   179  1009  0008               	return
   180  100A                     stringcode:	
   181  100A  087F               	movf	btemp+1,w
   182  100B  397F               	andlw	127
   183  100C  008A               	movwf	10
   184  100D  0804               	movf	4,w
   185  100E  0A84               	incf	4,f
   186  100F  1903               	skipnz
   187  1010  0AFF               	incf	btemp+1,f
   188  1011  0082               	movwf	2
   189  1012                     __stringbase:	
   190  1012                     __end_of__stringtab:	
   191  1012                     _dpowers:	
   192  1012  3401               	retlw	1
   193  1013  3400               	retlw	0
   194  1014  3400               	retlw	0
   195  1015  3400               	retlw	0
   196  1016  340A               	retlw	10
   197  1017  3400               	retlw	0
   198  1018  3400               	retlw	0
   199  1019  3400               	retlw	0
   200  101A  3464               	retlw	100
   201  101B  3400               	retlw	0
   202  101C  3400               	retlw	0
   203  101D  3400               	retlw	0
   204  101E  34E8               	retlw	232
   205  101F  3403               	retlw	3
   206  1020  3400               	retlw	0
   207  1021  3400               	retlw	0
   208  1022  3410               	retlw	16
   209  1023  3427               	retlw	39
   210  1024  3400               	retlw	0
   211  1025  3400               	retlw	0
   212  1026  34A0               	retlw	160
   213  1027  3486               	retlw	134
   214  1028  3401               	retlw	1
   215  1029  3400               	retlw	0
   216  102A  3440               	retlw	64
   217  102B  3442               	retlw	66
   218  102C  340F               	retlw	15
   219  102D  3400               	retlw	0
   220  102E  3480               	retlw	128
   221  102F  3496               	retlw	150
   222  1030  3498               	retlw	152
   223  1031  3400               	retlw	0
   224  1032  3400               	retlw	0
   225  1033  34E1               	retlw	225
   226  1034  34F5               	retlw	245
   227  1035  3405               	retlw	5
   228  1036  3400               	retlw	0
   229  1037  34CA               	retlw	202
   230  1038  349A               	retlw	154
   231  1039  343B               	retlw	59
   232  103A                     __end_of_dpowers:	
   233  103A                     __powers_:	
   234  103A  3400               	retlw	0
   235  103B  3480               	retlw	128
   236  103C  343F               	retlw	63
   237  103D  3400               	retlw	0
   238  103E  3420               	retlw	32
   239  103F  3441               	retlw	65
   240  1040  3400               	retlw	0
   241  1041  34C8               	retlw	200
   242  1042  3442               	retlw	66
   243  1043  3400               	retlw	0
   244  1044  347A               	retlw	122
   245  1045  3444               	retlw	68
   246  1046  3440               	retlw	64
   247  1047  341C               	retlw	28
   248  1048  3446               	retlw	70
   249  1049  3450               	retlw	80
   250  104A  34C3               	retlw	195
   251  104B  3447               	retlw	71
   252  104C  3424               	retlw	36
   253  104D  3474               	retlw	116
   254  104E  3449               	retlw	73
   255  104F  3497               	retlw	151
   256  1050  3418               	retlw	24
   257  1051  344B               	retlw	75
   258  1052  34BC               	retlw	188
   259  1053  34BE               	retlw	190
   260  1054  344C               	retlw	76
   261  1055  346B               	retlw	107
   262  1056  346E               	retlw	110
   263  1057  344E               	retlw	78
   264  1058  3403               	retlw	3
   265  1059  3415               	retlw	21
   266  105A  3450               	retlw	80
   267  105B  3479               	retlw	121
   268  105C  34AD               	retlw	173
   269  105D  3460               	retlw	96
   270  105E  34F3               	retlw	243
   271  105F  3449               	retlw	73
   272  1060  3471               	retlw	113
   273  1061                     __end_of__powers_:	
   274  1061                     __npowers_:	
   275  1061  3400               	retlw	0
   276  1062  3480               	retlw	128
   277  1063  343F               	retlw	63
   278  1064  34CD               	retlw	205
   279  1065  34CC               	retlw	204
   280  1066  343D               	retlw	61
   281  1067  34D7               	retlw	215
   282  1068  3423               	retlw	35
   283  1069  343C               	retlw	60
   284  106A  3412               	retlw	18
   285  106B  3483               	retlw	131
   286  106C  343A               	retlw	58
   287  106D  34B7               	retlw	183
   288  106E  34D1               	retlw	209
   289  106F  3438               	retlw	56
   290  1070  34C6               	retlw	198
   291  1071  3427               	retlw	39
   292  1072  3437               	retlw	55
   293  1073  3438               	retlw	56
   294  1074  3486               	retlw	134
   295  1075  3435               	retlw	53
   296  1076  34C0               	retlw	192
   297  1077  34D6               	retlw	214
   298  1078  3433               	retlw	51
   299  1079  34CC               	retlw	204
   300  107A  342B               	retlw	43
   301  107B  3432               	retlw	50
   302  107C  3470               	retlw	112
   303  107D  3489               	retlw	137
   304  107E  3430               	retlw	48
   305  107F  34E7               	retlw	231
   306  1080  34DB               	retlw	219
   307  1081  342E               	retlw	46
   308  1082  34E5               	retlw	229
   309  1083  343C               	retlw	60
   310  1084  341E               	retlw	30
   311  1085  3442               	retlw	66
   312  1086  34A2               	retlw	162
   313  1087  340D               	retlw	13
   314  1088                     __end_of__npowers_:	
   315  0006                     _PORTBbits	set	6
   316  0006                     _PORTB	set	6
   317  0018                     _RCSTAbits	set	24
   318  0019                     _TXREG	set	25
   319  000C                     _PIR1bits	set	12
   320  0086                     _TRISB	set	134
   321  0098                     _TXSTAbits	set	152
   322  1088                     STR_4:	
   323  1088  342A               	retlw	42	;'*'
   324  1089  342A               	retlw	42	;'*'
   325  108A  342A               	retlw	42	;'*'
   326  108B  342A               	retlw	42	;'*'
   327  108C  342A               	retlw	42	;'*'
   328  108D  3420               	retlw	32	;' '
   329  108E  3420               	retlw	32	;' '
   330  108F  3433               	retlw	51	;'3'
   331  1090  342E               	retlw	46	;'.'
   332  1091  3428               	retlw	40	;'('
   333  1092  3452               	retlw	82	;'R'
   334  1093  3442               	retlw	66	;'B'
   335  1094  3432               	retlw	50	;'2'
   336  1095  3429               	retlw	41	;')'
   337  1096  342E               	retlw	46	;'.'
   338  1097  3420               	retlw	32	;' '
   339  1098  344D               	retlw	77	;'M'
   340  1099  3475               	retlw	117	;'u'
   341  109A  346C               	retlw	108	;'l'
   342  109B  3474               	retlw	116	;'t'
   343  109C  3469               	retlw	105	;'i'
   344  109D  3470               	retlw	112	;'p'
   345  109E  346C               	retlw	108	;'l'
   346  109F  3469               	retlw	105	;'i'
   347  10A0  3463               	retlw	99	;'c'
   348  10A1  3461               	retlw	97	;'a'
   349  10A2  3463               	retlw	99	;'c'
   350  10A3  3469               	retlw	105	;'i'
   351  10A4  346F               	retlw	111	;'o'
   352  10A5  346E               	retlw	110	;'n'
   353  10A6  3420               	retlw	32	;' '
   354  10A7  3420               	retlw	32	;' '
   355  10A8  342A               	retlw	42	;'*'
   356  10A9  342A               	retlw	42	;'*'
   357  10AA  342A               	retlw	42	;'*'
   358  10AB  342A               	retlw	42	;'*'
   359  10AC  342A               	retlw	42	;'*'
   360  10AD  342A               	retlw	42	;'*'
   361  10AE  342A               	retlw	42	;'*'
   362  10AF  342A               	retlw	42	;'*'
   363  10B0  340A               	retlw	10
   364  10B1  3400               	retlw	0
   365  10B2                     STR_2:	
   366  10B2  342A               	retlw	42	;'*'
   367  10B3  342A               	retlw	42	;'*'
   368  10B4  342A               	retlw	42	;'*'
   369  10B5  342A               	retlw	42	;'*'
   370  10B6  342A               	retlw	42	;'*'
   371  10B7  342A               	retlw	42	;'*'
   372  10B8  3420               	retlw	32	;' '
   373  10B9  3420               	retlw	32	;' '
   374  10BA  3420               	retlw	32	;' '
   375  10BB  3420               	retlw	32	;' '
   376  10BC  3420               	retlw	32	;' '
   377  10BD  3420               	retlw	32	;' '
   378  10BE  3431               	retlw	49	;'1'
   379  10BF  342E               	retlw	46	;'.'
   380  10C0  3428               	retlw	40	;'('
   381  10C1  3452               	retlw	82	;'R'
   382  10C2  3442               	retlw	66	;'B'
   383  10C3  3430               	retlw	48	;'0'
   384  10C4  3429               	retlw	41	;')'
   385  10C5  342E               	retlw	46	;'.'
   386  10C6  3420               	retlw	32	;' '
   387  10C7  3453               	retlw	83	;'S'
   388  10C8  3475               	retlw	117	;'u'
   389  10C9  346D               	retlw	109	;'m'
   390  10CA  3461               	retlw	97	;'a'
   391  10CB  3420               	retlw	32	;' '
   392  10CC  3420               	retlw	32	;' '
   393  10CD  3420               	retlw	32	;' '
   394  10CE  3420               	retlw	32	;' '
   395  10CF  3420               	retlw	32	;' '
   396  10D0  3420               	retlw	32	;' '
   397  10D1  342A               	retlw	42	;'*'
   398  10D2  342A               	retlw	42	;'*'
   399  10D3  342A               	retlw	42	;'*'
   400  10D4  342A               	retlw	42	;'*'
   401  10D5  342A               	retlw	42	;'*'
   402  10D6  342A               	retlw	42	;'*'
   403  10D7  342A               	retlw	42	;'*'
   404  10D8  342A               	retlw	42	;'*'
   405  10D9  342A               	retlw	42	;'*'
   406  10DA  340A               	retlw	10
   407  10DB  3400               	retlw	0
   408  10DC                     STR_3:	
   409  10DC  342A               	retlw	42	;'*'
   410  10DD  342A               	retlw	42	;'*'
   411  10DE  342A               	retlw	42	;'*'
   412  10DF  342A               	retlw	42	;'*'
   413  10E0  342A               	retlw	42	;'*'
   414  10E1  342A               	retlw	42	;'*'
   415  10E2  3420               	retlw	32	;' '
   416  10E3  3420               	retlw	32	;' '
   417  10E4  3420               	retlw	32	;' '
   418  10E5  3420               	retlw	32	;' '
   419  10E6  3420               	retlw	32	;' '
   420  10E7  3420               	retlw	32	;' '
   421  10E8  3432               	retlw	50	;'2'
   422  10E9  342E               	retlw	46	;'.'
   423  10EA  3428               	retlw	40	;'('
   424  10EB  3452               	retlw	82	;'R'
   425  10EC  3442               	retlw	66	;'B'
   426  10ED  3431               	retlw	49	;'1'
   427  10EE  3429               	retlw	41	;')'
   428  10EF  342E               	retlw	46	;'.'
   429  10F0  3420               	retlw	32	;' '
   430  10F1  3452               	retlw	82	;'R'
   431  10F2  3465               	retlw	101	;'e'
   432  10F3  3473               	retlw	115	;'s'
   433  10F4  3474               	retlw	116	;'t'
   434  10F5  3461               	retlw	97	;'a'
   435  10F6  3420               	retlw	32	;' '
   436  10F7  3420               	retlw	32	;' '
   437  10F8  3420               	retlw	32	;' '
   438  10F9  3420               	retlw	32	;' '
   439  10FA  3420               	retlw	32	;' '
   440  10FB  342A               	retlw	42	;'*'
   441  10FC  342A               	retlw	42	;'*'
   442  10FD  342A               	retlw	42	;'*'
   443  10FE  342A               	retlw	42	;'*'
   444  10FF  342A               	retlw	42	;'*'
   445  1100  342A               	retlw	42	;'*'
   446  1101  342A               	retlw	42	;'*'
   447  1102  342A               	retlw	42	;'*'
   448  1103  342A               	retlw	42	;'*'
   449  1104  340A               	retlw	10
   450  1105  3400               	retlw	0
   451  1106                     STR_5:	
   452  1106  342A               	retlw	42	;'*'
   453  1107  342A               	retlw	42	;'*'
   454  1108  342A               	retlw	42	;'*'
   455  1109  342A               	retlw	42	;'*'
   456  110A  342A               	retlw	42	;'*'
   457  110B  342A               	retlw	42	;'*'
   458  110C  3420               	retlw	32	;' '
   459  110D  3420               	retlw	32	;' '
   460  110E  3420               	retlw	32	;' '
   461  110F  3420               	retlw	32	;' '
   462  1110  3420               	retlw	32	;' '
   463  1111  3434               	retlw	52	;'4'
   464  1112  342E               	retlw	46	;'.'
   465  1113  3428               	retlw	40	;'('
   466  1114  3452               	retlw	82	;'R'
   467  1115  3442               	retlw	66	;'B'
   468  1116  3433               	retlw	51	;'3'
   469  1117  3429               	retlw	41	;')'
   470  1118  342E               	retlw	46	;'.'
   471  1119  3420               	retlw	32	;' '
   472  111A  3444               	retlw	68	;'D'
   473  111B  3469               	retlw	105	;'i'
   474  111C  3476               	retlw	118	;'v'
   475  111D  3469               	retlw	105	;'i'
   476  111E  3473               	retlw	115	;'s'
   477  111F  3469               	retlw	105	;'i'
   478  1120  346F               	retlw	111	;'o'
   479  1121  346E               	retlw	110	;'n'
   480  1122  3420               	retlw	32	;' '
   481  1123  3420               	retlw	32	;' '
   482  1124  3420               	retlw	32	;' '
   483  1125  342A               	retlw	42	;'*'
   484  1126  342A               	retlw	42	;'*'
   485  1127  342A               	retlw	42	;'*'
   486  1128  342A               	retlw	42	;'*'
   487  1129  342A               	retlw	42	;'*'
   488  112A  342A               	retlw	42	;'*'
   489  112B  342A               	retlw	42	;'*'
   490  112C  342A               	retlw	42	;'*'
   491  112D  342A               	retlw	42	;'*'
   492  112E  340A               	retlw	10
   493  112F  3400               	retlw	0
   494  1130                     STR_1:	
   495  1130  342A               	retlw	42	;'*'
   496  1131  342A               	retlw	42	;'*'
   497  1132  342A               	retlw	42	;'*'
   498  1133  342A               	retlw	42	;'*'
   499  1134  342A               	retlw	42	;'*'
   500  1135  342A               	retlw	42	;'*'
   501  1136  342A               	retlw	42	;'*'
   502  1137  342A               	retlw	42	;'*'
   503  1138  342A               	retlw	42	;'*'
   504  1139  342A               	retlw	42	;'*'
   505  113A  342A               	retlw	42	;'*'
   506  113B  342A               	retlw	42	;'*'
   507  113C  342A               	retlw	42	;'*'
   508  113D  342A               	retlw	42	;'*'
   509  113E  342A               	retlw	42	;'*'
   510  113F  342A               	retlw	42	;'*'
   511  1140  342A               	retlw	42	;'*'
   512  1141  342A               	retlw	42	;'*'
   513  1142  342A               	retlw	42	;'*'
   514  1143  342A               	retlw	42	;'*'
   515  1144  342A               	retlw	42	;'*'
   516  1145  342A               	retlw	42	;'*'
   517  1146  342A               	retlw	42	;'*'
   518  1147  342A               	retlw	42	;'*'
   519  1148  342A               	retlw	42	;'*'
   520  1149  342A               	retlw	42	;'*'
   521  114A  342A               	retlw	42	;'*'
   522  114B  342A               	retlw	42	;'*'
   523  114C  342A               	retlw	42	;'*'
   524  114D  342A               	retlw	42	;'*'
   525  114E  342A               	retlw	42	;'*'
   526  114F  342A               	retlw	42	;'*'
   527  1150  342A               	retlw	42	;'*'
   528  1151  342A               	retlw	42	;'*'
   529  1152  342A               	retlw	42	;'*'
   530  1153  342A               	retlw	42	;'*'
   531  1154  342A               	retlw	42	;'*'
   532  1155  342A               	retlw	42	;'*'
   533  1156  342A               	retlw	42	;'*'
   534  1157  342A               	retlw	42	;'*'
   535  1158  340A               	retlw	10
   536  1159  3400               	retlw	0
   537  115A                     STR_9:	
   538  115A  3445               	retlw	69	;'E'
   539  115B  346C               	retlw	108	;'l'
   540  115C  3420               	retlw	32	;' '
   541  115D  3472               	retlw	114	;'r'
   542  115E  3465               	retlw	101	;'e'
   543  115F  3473               	retlw	115	;'s'
   544  1160  3475               	retlw	117	;'u'
   545  1161  346C               	retlw	108	;'l'
   546  1162  3474               	retlw	116	;'t'
   547  1163  3461               	retlw	97	;'a'
   548  1164  3464               	retlw	100	;'d'
   549  1165  346F               	retlw	111	;'o'
   550  1166  3420               	retlw	32	;' '
   551  1167  3464               	retlw	100	;'d'
   552  1168  3465               	retlw	101	;'e'
   553  1169  3420               	retlw	32	;' '
   554  116A  346C               	retlw	108	;'l'
   555  116B  3461               	retlw	97	;'a'
   556  116C  3420               	retlw	32	;' '
   557  116D  344D               	retlw	77	;'M'
   558  116E  3475               	retlw	117	;'u'
   559  116F  346C               	retlw	108	;'l'
   560  1170  3474               	retlw	116	;'t'
   561  1171  3469               	retlw	105	;'i'
   562  1172  3470               	retlw	112	;'p'
   563  1173  346C               	retlw	108	;'l'
   564  1174  3469               	retlw	105	;'i'
   565  1175  3463               	retlw	99	;'c'
   566  1176  3461               	retlw	97	;'a'
   567  1177  3463               	retlw	99	;'c'
   568  1178  3469               	retlw	105	;'i'
   569  1179  346F               	retlw	111	;'o'
   570  117A  346E               	retlw	110	;'n'
   571  117B  3420               	retlw	32	;' '
   572  117C  3465               	retlw	101	;'e'
   573  117D  3473               	retlw	115	;'s'
   574  117E  343A               	retlw	58	;':'
   575  117F  3420               	retlw	32	;' '
   576  1180  3425               	retlw	37	;'%'
   577  1181  3466               	retlw	102	;'f'
   578  1182  340A               	retlw	10
   579  1183  3400               	retlw	0
   580  1184                     STR_10:	
   581  1184  3445               	retlw	69	;'E'
   582  1185  3472               	retlw	114	;'r'
   583  1186  3472               	retlw	114	;'r'
   584  1187  346F               	retlw	111	;'o'
   585  1188  3472               	retlw	114	;'r'
   586  1189  342C               	retlw	44	;','
   587  118A  3420               	retlw	32	;' '
   588  118B  346E               	retlw	110	;'n'
   589  118C  346F               	retlw	111	;'o'
   590  118D  3420               	retlw	32	;' '
   591  118E  3465               	retlw	101	;'e'
   592  118F  3473               	retlw	115	;'s'
   593  1190  3420               	retlw	32	;' '
   594  1191  3470               	retlw	112	;'p'
   595  1192  346F               	retlw	111	;'o'
   596  1193  3473               	retlw	115	;'s'
   597  1194  3469               	retlw	105	;'i'
   598  1195  3462               	retlw	98	;'b'
   599  1196  346C               	retlw	108	;'l'
   600  1197  3465               	retlw	101	;'e'
   601  1198  3420               	retlw	32	;' '
   602  1199  3464               	retlw	100	;'d'
   603  119A  3469               	retlw	105	;'i'
   604  119B  3476               	retlw	118	;'v'
   605  119C  3469               	retlw	105	;'i'
   606  119D  3464               	retlw	100	;'d'
   607  119E  3469               	retlw	105	;'i'
   608  119F  3472               	retlw	114	;'r'
   609  11A0  3420               	retlw	32	;' '
   610  11A1  3465               	retlw	101	;'e'
   611  11A2  346E               	retlw	110	;'n'
   612  11A3  3474               	retlw	116	;'t'
   613  11A4  3472               	retlw	114	;'r'
   614  11A5  3465               	retlw	101	;'e'
   615  11A6  3420               	retlw	32	;' '
   616  11A7  3430               	retlw	48	;'0'
   617  11A8  342E               	retlw	46	;'.'
   618  11A9  340A               	retlw	10
   619  11AA  3400               	retlw	0
   620  11AB                     STR_11:	
   621  11AB  3445               	retlw	69	;'E'
   622  11AC  346C               	retlw	108	;'l'
   623  11AD  3420               	retlw	32	;' '
   624  11AE  3472               	retlw	114	;'r'
   625  11AF  3465               	retlw	101	;'e'
   626  11B0  3473               	retlw	115	;'s'
   627  11B1  3475               	retlw	117	;'u'
   628  11B2  346C               	retlw	108	;'l'
   629  11B3  3474               	retlw	116	;'t'
   630  11B4  3461               	retlw	97	;'a'
   631  11B5  3464               	retlw	100	;'d'
   632  11B6  346F               	retlw	111	;'o'
   633  11B7  3420               	retlw	32	;' '
   634  11B8  3464               	retlw	100	;'d'
   635  11B9  3465               	retlw	101	;'e'
   636  11BA  3420               	retlw	32	;' '
   637  11BB  346C               	retlw	108	;'l'
   638  11BC  3461               	retlw	97	;'a'
   639  11BD  3420               	retlw	32	;' '
   640  11BE  3444               	retlw	68	;'D'
   641  11BF  3469               	retlw	105	;'i'
   642  11C0  3476               	retlw	118	;'v'
   643  11C1  3469               	retlw	105	;'i'
   644  11C2  3473               	retlw	115	;'s'
   645  11C3  3469               	retlw	105	;'i'
   646  11C4  346F               	retlw	111	;'o'
   647  11C5  346E               	retlw	110	;'n'
   648  11C6  3420               	retlw	32	;' '
   649  11C7  3465               	retlw	101	;'e'
   650  11C8  3473               	retlw	115	;'s'
   651  11C9  343A               	retlw	58	;':'
   652  11CA  3420               	retlw	32	;' '
   653  11CB  3425               	retlw	37	;'%'
   654  11CC  3466               	retlw	102	;'f'
   655  11CD  340A               	retlw	10
   656  11CE  3400               	retlw	0
   657  11CF                     STR_8:	
   658  11CF  3445               	retlw	69	;'E'
   659  11D0  346C               	retlw	108	;'l'
   660  11D1  3420               	retlw	32	;' '
   661  11D2  3472               	retlw	114	;'r'
   662  11D3  3465               	retlw	101	;'e'
   663  11D4  3473               	retlw	115	;'s'
   664  11D5  3475               	retlw	117	;'u'
   665  11D6  346C               	retlw	108	;'l'
   666  11D7  3474               	retlw	116	;'t'
   667  11D8  3461               	retlw	97	;'a'
   668  11D9  3464               	retlw	100	;'d'
   669  11DA  346F               	retlw	111	;'o'
   670  11DB  3420               	retlw	32	;' '
   671  11DC  3464               	retlw	100	;'d'
   672  11DD  3465               	retlw	101	;'e'
   673  11DE  3420               	retlw	32	;' '
   674  11DF  346C               	retlw	108	;'l'
   675  11E0  3461               	retlw	97	;'a'
   676  11E1  3420               	retlw	32	;' '
   677  11E2  3452               	retlw	82	;'R'
   678  11E3  3465               	retlw	101	;'e'
   679  11E4  3473               	retlw	115	;'s'
   680  11E5  3474               	retlw	116	;'t'
   681  11E6  3461               	retlw	97	;'a'
   682  11E7  3420               	retlw	32	;' '
   683  11E8  3465               	retlw	101	;'e'
   684  11E9  3473               	retlw	115	;'s'
   685  11EA  343A               	retlw	58	;':'
   686  11EB  3420               	retlw	32	;' '
   687  11EC  3425               	retlw	37	;'%'
   688  11ED  3466               	retlw	102	;'f'
   689  11EE  340A               	retlw	10
   690  11EF  3400               	retlw	0
   691  11F0                     STR_7:	
   692  11F0  3445               	retlw	69	;'E'
   693  11F1  346C               	retlw	108	;'l'
   694  11F2  3420               	retlw	32	;' '
   695  11F3  3472               	retlw	114	;'r'
   696  11F4  3465               	retlw	101	;'e'
   697  11F5  3473               	retlw	115	;'s'
   698  11F6  3475               	retlw	117	;'u'
   699  11F7  346C               	retlw	108	;'l'
   700  11F8  3474               	retlw	116	;'t'
   701  11F9  3461               	retlw	97	;'a'
   702  11FA  3464               	retlw	100	;'d'
   703  11FB  346F               	retlw	111	;'o'
   704  11FC  3420               	retlw	32	;' '
   705  11FD  3464               	retlw	100	;'d'
   706  11FE  3465               	retlw	101	;'e'
   707  11FF  3420               	retlw	32	;' '
   708  1200  346C               	retlw	108	;'l'
   709  1201  3461               	retlw	97	;'a'
   710  1202  3420               	retlw	32	;' '
   711  1203  3453               	retlw	83	;'S'
   712  1204  3475               	retlw	117	;'u'
   713  1205  346D               	retlw	109	;'m'
   714  1206  3461               	retlw	97	;'a'
   715  1207  3420               	retlw	32	;' '
   716  1208  3465               	retlw	101	;'e'
   717  1209  3473               	retlw	115	;'s'
   718  120A  343A               	retlw	58	;':'
   719  120B  3420               	retlw	32	;' '
   720  120C  3425               	retlw	37	;'%'
   721  120D  3466               	retlw	102	;'f'
   722  120E  340A               	retlw	10
   723  120F  3400               	retlw	0
   724  1130                     
   725                           	psect	cinit
   726  07CA                     start_initialization:	
   727                           ; #config settings
   728                           
   729  07CA                     __initialization:	
   730                           
   731                           ; Initialize objects allocated to BANK0
   732  07CA  160A  118A  24BD  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   733  07CF  00E5               	movwf	__pdataBANK0& (0+127)
   734  07D0  160A  118A  24BE  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   735  07D5  00E6               	movwf	(__pdataBANK0+1)& (0+127)
   736  07D6  160A  118A  24BF  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   737  07DB  00E7               	movwf	(__pdataBANK0+2)& (0+127)
   738  07DC  160A  118A  24C0  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   739  07E1  00E8               	movwf	(__pdataBANK0+3)& (0+127)
   740  07E2  160A  118A  24C1  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   741  07E7  00E9               	movwf	(__pdataBANK0+4)& (0+127)
   742  07E8  160A  118A  24C2   	fcall	__pidataBANK0+5	;fetch initializer
   743  07EB  00EA               	movwf	(__pdataBANK0+5)& (0+127)
   744                           
   745                           ; Clear objects allocated to BANK1
   746  07EC  1683               	bsf	3,5	;RP0=1, select bank1
   747  07ED  1303               	bcf	3,6	;RP1=0, select bank1
   748  07EE  01B6               	clrf	__pbssBANK1& (0+127)
   749  07EF  01B7               	clrf	(__pbssBANK1+1)& (0+127)
   750  07F0  01B8               	clrf	(__pbssBANK1+2)& (0+127)
   751  07F1  01B9               	clrf	(__pbssBANK1+3)& (0+127)
   752  07F2  01BA               	clrf	(__pbssBANK1+4)& (0+127)
   753  07F3  01BB               	clrf	(__pbssBANK1+5)& (0+127)
   754  07F4  01BC               	clrf	(__pbssBANK1+6)& (0+127)
   755  07F5  01BD               	clrf	(__pbssBANK1+7)& (0+127)
   756  07F6  01BE               	clrf	(__pbssBANK1+8)& (0+127)
   757                           
   758                           ; Clear objects allocated to BANK0
   759  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   760  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   761  07F9  01EB               	clrf	__pbssBANK0& (0+127)
   762  07FA  01EC               	clrf	(__pbssBANK0+1)& (0+127)
   763  07FB  01ED               	clrf	(__pbssBANK0+2)& (0+127)
   764  07FC                     end_of_initialization:	
   765                           ;End of C runtime variable initialization code
   766                           
   767  07FC                     __end_of__initialization:	
   768  07FC  0183               	clrf	3
   769  07FD  120A  158A  2BDA   	ljmp	_main	;jump to C main() function
   770                           
   771                           	psect	bssBANK0
   772  006B                     __pbssBANK0:	
   773  006B                     _suma:	
   774  006B                     	ds	3
   775                           
   776                           	psect	dataBANK0
   777  0065                     __pdataBANK0:	
   778  0065                     _b:	
   779  0065                     	ds	3
   780  0068                     _a:	
   781  0068                     	ds	3
   782                           
   783                           	psect	bssBANK1
   784  00B6                     __pbssBANK1:	
   785  00B6                     _division:	
   786  00B6                     	ds	3
   787  00B9                     _multiplicacion:	
   788  00B9                     	ds	3
   789  00BC                     _resta:	
   790  00BC                     	ds	3
   791                           
   792                           	psect	cstackBANK1
   793  00A0                     __pcstackBANK1:	
   794  00A0                     _printf$661:	
   795                           
   796                           ; 3 bytes @ 0x0
   797  00A0                     	ds	3
   798  00A3                     printf@ap:	
   799                           
   800                           ; 1 bytes @ 0x3
   801  00A3                     	ds	1
   802  00A4                     printf@flag:	
   803                           
   804                           ; 2 bytes @ 0x4
   805  00A4                     	ds	2
   806  00A6                     printf@prec:	
   807                           
   808                           ; 2 bytes @ 0x6
   809  00A6                     	ds	2
   810  00A8                     printf@val:	
   811                           
   812                           ; 4 bytes @ 0x8
   813  00A8                     	ds	4
   814  00AC                     printf@exp:	
   815                           
   816                           ; 2 bytes @ 0xC
   817  00AC                     	ds	2
   818  00AE                     printf@tmpval:	
   819                           
   820                           ; 4 bytes @ 0xE
   821  00AE                     	ds	4
   822  00B2                     printf@fval:	
   823                           
   824                           ; 3 bytes @ 0x12
   825  00B2                     	ds	3
   826  00B5                     printf@c:	
   827                           
   828                           ; 1 bytes @ 0x15
   829  00B5                     	ds	1
   830                           
   831                           	psect	cstackCOMMON
   832  0070                     __pcstackCOMMON:	
   833  0070                     ?___ftge:	
   834  0070                     ?_putch:	
   835                           ; 1 bit 
   836                           
   837  0070                     ??_putch:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_iniciar_uart:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ??_iniciar_uart:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ?_main:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     ?___wmul:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ?___awmod:	
   853                           ; 2 bytes @ 0x0
   854                           
   855  0070                     ?___ftpack:	
   856                           ; 2 bytes @ 0x0
   857                           
   858  0070                     ?___ftneg:	
   859                           ; 3 bytes @ 0x0
   860                           
   861  0070                     ?__tdiv_to_l_:	
   862                           ; 3 bytes @ 0x0
   863                           
   864  0070                     ?__div_to_l_:	
   865                           ; 4 bytes @ 0x0
   866                           
   867  0070                     ?___lldiv:	
   868                           ; 4 bytes @ 0x0
   869                           
   870  0070                     ?___llmod:	
   871                           ; 4 bytes @ 0x0
   872                           
   873  0070                     putch@dato:	
   874                           ; 4 bytes @ 0x0
   875                           
   876  0070                     ___wmul@multiplier:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0070                     ___awmod@divisor:	
   880                           ; 2 bytes @ 0x0
   881                           
   882  0070                     __div_to_l_@f1:	
   883                           ; 2 bytes @ 0x0
   884                           
   885  0070                     ___ftpack@arg:	
   886                           ; 3 bytes @ 0x0
   887                           
   888  0070                     __tdiv_to_l_@f1:	
   889                           ; 3 bytes @ 0x0
   890                           
   891  0070                     ___ftge@ff1:	
   892                           ; 3 bytes @ 0x0
   893                           
   894  0070                     ___ftneg@f1:	
   895                           ; 3 bytes @ 0x0
   896                           
   897  0070                     ___lldiv@divisor:	
   898                           ; 3 bytes @ 0x0
   899                           
   900  0070                     ___llmod@divisor:	
   901                           ; 4 bytes @ 0x0
   902                           
   903                           
   904                           ; 4 bytes @ 0x0
   905  0070                     	ds	2
   906  0072                     ___wmul@multiplicand:	
   907  0072                     ___awmod@dividend:	
   908                           ; 2 bytes @ 0x2
   909                           
   910                           
   911                           ; 2 bytes @ 0x2
   912  0072                     	ds	1
   913  0073                     ??___ftneg:	
   914  0073                     ___ftpack@exp:	
   915                           ; 1 bytes @ 0x3
   916                           
   917  0073                     __div_to_l_@f2:	
   918                           ; 1 bytes @ 0x3
   919                           
   920  0073                     __tdiv_to_l_@f2:	
   921                           ; 3 bytes @ 0x3
   922                           
   923  0073                     ___ftge@ff2:	
   924                           ; 3 bytes @ 0x3
   925                           
   926                           
   927                           ; 3 bytes @ 0x3
   928  0073                     	ds	1
   929  0074                     ??___wmul:	
   930  0074                     ??___awmod:	
   931                           ; 1 bytes @ 0x4
   932                           
   933  0074                     ___ftpack@sign:	
   934                           ; 1 bytes @ 0x4
   935                           
   936  0074                     ___wmul@product:	
   937                           ; 1 bytes @ 0x4
   938                           
   939  0074                     ___lldiv@dividend:	
   940                           ; 2 bytes @ 0x4
   941                           
   942  0074                     ___llmod@dividend:	
   943                           ; 4 bytes @ 0x4
   944                           
   945                           
   946                           ; 4 bytes @ 0x4
   947  0074                     	ds	1
   948  0075                     ??___ftpack:	
   949  0075                     ___awmod@counter:	
   950                           ; 1 bytes @ 0x5
   951                           
   952                           
   953                           ; 1 bytes @ 0x5
   954  0075                     	ds	1
   955  0076                     ??__tdiv_to_l_:	
   956  0076                     ??__div_to_l_:	
   957                           ; 1 bytes @ 0x6
   958                           
   959  0076                     ??___ftge:	
   960                           ; 1 bytes @ 0x6
   961                           
   962  0076                     ___awmod@sign:	
   963                           ; 1 bytes @ 0x6
   964                           
   965                           
   966                           ; 1 bytes @ 0x6
   967  0076                     	ds	1
   968  0077                     ?___awdiv:	
   969  0077                     ___awdiv@divisor:	
   970                           ; 2 bytes @ 0x7
   971                           
   972                           
   973                           ; 2 bytes @ 0x7
   974  0077                     	ds	1
   975  0078                     ??___lldiv:	
   976  0078                     ??___llmod:	
   977                           ; 1 bytes @ 0x8
   978                           
   979  0078                     ?___ftdiv:	
   980                           ; 1 bytes @ 0x8
   981                           
   982  0078                     ?___lltoft:	
   983                           ; 3 bytes @ 0x8
   984                           
   985  0078                     ___ftdiv@f2:	
   986                           ; 3 bytes @ 0x8
   987                           
   988  0078                     ___lltoft@c:	
   989                           ; 3 bytes @ 0x8
   990                           
   991                           
   992                           ; 4 bytes @ 0x8
   993  0078                     	ds	1
   994  0079                     ___llmod@counter:	
   995  0079                     ___awdiv@dividend:	
   996                           ; 1 bytes @ 0x9
   997                           
   998  0079                     ___lldiv@quotient:	
   999                           ; 2 bytes @ 0x9
  1000                           
  1001                           
  1002                           ; 4 bytes @ 0x9
  1003  0079                     	ds	2
  1004  007B                     ??___awdiv:	
  1005  007B                     ___ftdiv@f1:	
  1006                           ; 1 bytes @ 0xB
  1007                           
  1008                           
  1009                           ; 3 bytes @ 0xB
  1010  007B                     	ds	1
  1011  007C                     ??___bmul:	
  1012  007C                     ??___lltoft:	
  1013                           ; 1 bytes @ 0xC
  1014                           
  1015                           
  1016                           ; 1 bytes @ 0xC
  1017  007C                     	ds	1
  1018  007D                     ___lldiv@counter:	
  1019  007D                     ___lltoft@exp:	
  1020                           ; 1 bytes @ 0xD
  1021                           
  1022                           
  1023                           ; 1 bytes @ 0xD
  1024  007D                     	ds	1
  1025  007E                     ??_main:	
  1026  007E                     ??___ftsub:	
  1027                           ; 1 bytes @ 0xE
  1028                           
  1029                           
  1030                           	psect	cstackBANK0
  1031  0020                     __pcstackBANK0:	
  1032                           ; 1 bytes @ 0xE
  1033                           
  1034  0020                     ??___ftdiv:	
  1035  0020                     ___awdiv@counter:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038  0020                     __div_to_l_@quot:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041  0020                     __tdiv_to_l_@quot:	
  1042                           ; 4 bytes @ 0x0
  1043                           
  1044                           
  1045                           ; 4 bytes @ 0x0
  1046  0020                     	ds	1
  1047  0021                     ___awdiv@sign:	
  1048                           
  1049                           ; 1 bytes @ 0x1
  1050  0021                     	ds	1
  1051  0022                     ___awdiv@quotient:	
  1052                           
  1053                           ; 2 bytes @ 0x2
  1054  0022                     	ds	2
  1055  0024                     ?___bmul:	
  1056  0024                     ___bmul@multiplicand:	
  1057                           ; 1 bytes @ 0x4
  1058                           
  1059  0024                     __div_to_l_@cntr:	
  1060                           ; 1 bytes @ 0x4
  1061                           
  1062  0024                     ___ftdiv@cntr:	
  1063                           ; 1 bytes @ 0x4
  1064                           
  1065  0024                     __tdiv_to_l_@cntr:	
  1066                           ; 1 bytes @ 0x4
  1067                           
  1068                           
  1069                           ; 1 bytes @ 0x4
  1070  0024                     	ds	1
  1071  0025                     ___bmul@product:	
  1072  0025                     __div_to_l_@exp1:	
  1073                           ; 1 bytes @ 0x5
  1074                           
  1075  0025                     __tdiv_to_l_@exp1:	
  1076                           ; 1 bytes @ 0x5
  1077                           
  1078  0025                     ___ftdiv@f3:	
  1079                           ; 1 bytes @ 0x5
  1080                           
  1081                           
  1082                           ; 3 bytes @ 0x5
  1083  0025                     	ds	1
  1084  0026                     ___bmul@multiplier:	
  1085                           
  1086                           ; 1 bytes @ 0x6
  1087  0026                     	ds	1
  1088  0027                     ?___ftmul:	
  1089  0027                     ___ftmul@f1:	
  1090                           ; 3 bytes @ 0x7
  1091                           
  1092                           
  1093                           ; 3 bytes @ 0x7
  1094  0027                     	ds	1
  1095  0028                     ___ftdiv@exp:	
  1096                           
  1097                           ; 1 bytes @ 0x8
  1098  0028                     	ds	1
  1099  0029                     ___ftdiv@sign:	
  1100                           
  1101                           ; 1 bytes @ 0x9
  1102  0029                     	ds	1
  1103  002A                     ___ftmul@f2:	
  1104                           
  1105                           ; 3 bytes @ 0xA
  1106  002A                     	ds	3
  1107  002D                     ??___ftmul:	
  1108                           
  1109                           ; 1 bytes @ 0xD
  1110  002D                     	ds	4
  1111  0031                     ___ftmul@exp:	
  1112                           
  1113                           ; 1 bytes @ 0x11
  1114  0031                     	ds	1
  1115  0032                     ___ftmul@f3_as_product:	
  1116                           
  1117                           ; 3 bytes @ 0x12
  1118  0032                     	ds	3
  1119  0035                     ___ftmul@cntr:	
  1120                           
  1121                           ; 1 bytes @ 0x15
  1122  0035                     	ds	1
  1123  0036                     ___ftmul@sign:	
  1124                           
  1125                           ; 1 bytes @ 0x16
  1126  0036                     	ds	1
  1127  0037                     ?_fround:	
  1128  0037                     ?_scale:	
  1129                           ; 3 bytes @ 0x17
  1130                           
  1131                           
  1132                           ; 3 bytes @ 0x17
  1133  0037                     	ds	3
  1134  003A                     ??_fround:	
  1135  003A                     ??_scale:	
  1136                           ; 1 bytes @ 0x1A
  1137                           
  1138                           
  1139                           ; 1 bytes @ 0x1A
  1140  003A                     	ds	2
  1141  003C                     _scale$660:	
  1142                           
  1143                           ; 3 bytes @ 0x1C
  1144  003C                     	ds	3
  1145  003F                     scale@scl:	
  1146                           
  1147                           ; 1 bytes @ 0x1F
  1148  003F                     	ds	1
  1149  0040                     ?___fttol:	
  1150  0040                     ___fttol@f1:	
  1151                           ; 4 bytes @ 0x20
  1152                           
  1153  0040                     _fround$659:	
  1154                           ; 3 bytes @ 0x20
  1155                           
  1156                           
  1157                           ; 3 bytes @ 0x20
  1158  0040                     	ds	3
  1159  0043                     _fround$658:	
  1160                           
  1161                           ; 3 bytes @ 0x23
  1162  0043                     	ds	1
  1163  0044                     ??___fttol:	
  1164                           
  1165                           ; 1 bytes @ 0x24
  1166  0044                     	ds	2
  1167  0046                     fround@prec:	
  1168                           
  1169                           ; 1 bytes @ 0x26
  1170  0046                     	ds	1
  1171  0047                     ?___ftadd:	
  1172  0047                     ___ftadd@f1:	
  1173                           ; 3 bytes @ 0x27
  1174                           
  1175                           
  1176                           ; 3 bytes @ 0x27
  1177  0047                     	ds	1
  1178  0048                     ___fttol@sign1:	
  1179                           
  1180                           ; 1 bytes @ 0x28
  1181  0048                     	ds	1
  1182  0049                     ___fttol@lval:	
  1183                           
  1184                           ; 4 bytes @ 0x29
  1185  0049                     	ds	1
  1186  004A                     ___ftadd@f2:	
  1187                           
  1188                           ; 3 bytes @ 0x2A
  1189  004A                     	ds	3
  1190  004D                     ??___ftadd:	
  1191  004D                     ___fttol@exp1:	
  1192                           ; 1 bytes @ 0x2D
  1193                           
  1194                           
  1195                           ; 1 bytes @ 0x2D
  1196  004D                     	ds	4
  1197  0051                     ___ftadd@sign:	
  1198                           
  1199                           ; 1 bytes @ 0x31
  1200  0051                     	ds	1
  1201  0052                     ___ftadd@exp2:	
  1202                           
  1203                           ; 1 bytes @ 0x32
  1204  0052                     	ds	1
  1205  0053                     ___ftadd@exp1:	
  1206                           
  1207                           ; 1 bytes @ 0x33
  1208  0053                     	ds	1
  1209  0054                     ?___ftsub:	
  1210  0054                     ___ftsub@f2:	
  1211                           ; 3 bytes @ 0x34
  1212                           
  1213                           
  1214                           ; 3 bytes @ 0x34
  1215  0054                     	ds	3
  1216  0057                     ___ftsub@f1:	
  1217                           
  1218                           ; 3 bytes @ 0x37
  1219  0057                     	ds	3
  1220  005A                     ?_printf:	
  1221  005A                     printf@f:	
  1222                           ; 2 bytes @ 0x3A
  1223                           
  1224                           
  1225                           ; 2 bytes @ 0x3A
  1226  005A                     	ds	5
  1227  005F                     ??_printf:	
  1228                           
  1229                           ; 1 bytes @ 0x3F
  1230  005F                     	ds	6
  1231                           
  1232                           	psect	maintext
  1233  0BDA                     __pmaintext:	
  1234 ;;
  1235 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1236 ;;
  1237 ;; *************** function _main *****************
  1238 ;; Defined at:
  1239 ;;		line 20 in file "Calculadora.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : B00/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1253 ;;      Params:         0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0
  1256 ;;      Totals:         0       0       0       0       0
  1257 ;;Total ram usage:        0 bytes
  1258 ;; Hardware stack levels required when called:    4
  1259 ;; This function calls:
  1260 ;;		___ftadd
  1261 ;;		___ftdiv
  1262 ;;		___ftmul
  1263 ;;		___ftneg
  1264 ;;		_iniciar_uart
  1265 ;;		_printf
  1266 ;; This function is called by:
  1267 ;;		Startup code after reset
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           
  1272                           ;psect for function _main
  1273  0BDA                     _main:	
  1274                           
  1275                           ;Calculadora.c: 22: TRISB = 0b11111111;
  1276                           
  1277                           ;incstack = 0
  1278                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1279  0BDA  30FF               	movlw	255
  1280  0BDB  1683               	bsf	3,5	;RP0=1, select bank1
  1281  0BDC  1303               	bcf	3,6	;RP1=0, select bank1
  1282  0BDD  0086               	movwf	6	;volatile
  1283                           
  1284                           ;Calculadora.c: 23: PORTB = 0;
  1285  0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  1286  0BDF  1303               	bcf	3,6	;RP1=0, select bank0
  1287  0BE0  0186               	clrf	6	;volatile
  1288  0BE1                     l2210:	
  1289                           ;Calculadora.c: 24: while (1) {
  1290                           
  1291                           
  1292                           ;Calculadora.c: 26: iniciar_uart();
  1293  0BE1  160A  118A  24C3  120A  158A  	fcall	_iniciar_uart
  1294                           
  1295                           ;Calculadora.c: 28: printf("****************************************\n");
  1296  0BE6  3030               	movlw	low (STR_1| (0+32768))
  1297  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  1298  0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  1299  0BE9  00DA               	movwf	printf@f
  1300  0BEA  3091               	movlw	high (STR_1| (0+32768))
  1301  0BEB  00DB               	movwf	printf@f+1
  1302  0BEC  120A  118A  2269  120A  158A  	fcall	_printf
  1303                           
  1304                           ;Calculadora.c: 29: printf("******      1.(RB0). Suma      *********\n");
  1305  0BF1  30B2               	movlw	low (STR_2| (0+32768))
  1306  0BF2  1283               	bcf	3,5	;RP0=0, select bank0
  1307  0BF3  1303               	bcf	3,6	;RP1=0, select bank0
  1308  0BF4  00DA               	movwf	printf@f
  1309  0BF5  3090               	movlw	high (STR_2| (0+32768))
  1310  0BF6  00DB               	movwf	printf@f+1
  1311  0BF7  120A  118A  2269  120A  158A  	fcall	_printf
  1312                           
  1313                           ;Calculadora.c: 30: printf("******      2.(RB1). Resta     *********\n");
  1314  0BFC  30DC               	movlw	low (STR_3| (0+32768))
  1315  0BFD  1283               	bcf	3,5	;RP0=0, select bank0
  1316  0BFE  1303               	bcf	3,6	;RP1=0, select bank0
  1317  0BFF  00DA               	movwf	printf@f
  1318  0C00  3090               	movlw	high (STR_3| (0+32768))
  1319  0C01  00DB               	movwf	printf@f+1
  1320  0C02  120A  118A  2269  120A  158A  	fcall	_printf
  1321                           
  1322                           ;Calculadora.c: 31: printf("*****  3.(RB2). Multiplicacion  ********\n");
  1323  0C07  3088               	movlw	low (STR_4| (0+32768))
  1324  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  1325  0C09  1303               	bcf	3,6	;RP1=0, select bank0
  1326  0C0A  00DA               	movwf	printf@f
  1327  0C0B  3090               	movlw	high (STR_4| (0+32768))
  1328  0C0C  00DB               	movwf	printf@f+1
  1329  0C0D  120A  118A  2269  120A  158A  	fcall	_printf
  1330                           
  1331                           ;Calculadora.c: 32: printf("******     4.(RB3). Division   *********\n");
  1332  0C12  3006               	movlw	low (STR_5| (0+32768))
  1333  0C13  1283               	bcf	3,5	;RP0=0, select bank0
  1334  0C14  1303               	bcf	3,6	;RP1=0, select bank0
  1335  0C15  00DA               	movwf	printf@f
  1336  0C16  3091               	movlw	high (STR_5| (0+32768))
  1337  0C17  00DB               	movwf	printf@f+1
  1338  0C18  120A  118A  2269  120A  158A  	fcall	_printf
  1339                           
  1340                           ;Calculadora.c: 33: printf("****************************************\n");
  1341  0C1D  3030               	movlw	low (STR_1| (0+32768))
  1342  0C1E  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0C1F  1303               	bcf	3,6	;RP1=0, select bank0
  1344  0C20  00DA               	movwf	printf@f
  1345  0C21  3091               	movlw	high (STR_1| (0+32768))
  1346  0C22  00DB               	movwf	printf@f+1
  1347  0C23  120A  118A  2269  120A  158A  	fcall	_printf
  1348                           
  1349                           ;Calculadora.c: 36: suma = a+b;
  1350  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  1351  0C29  1303               	bcf	3,6	;RP1=0, select bank0
  1352  0C2A  0865               	movf	_b,w
  1353  0C2B  00C7               	movwf	___ftadd@f1
  1354  0C2C  0866               	movf	_b+1,w
  1355  0C2D  00C8               	movwf	___ftadd@f1+1
  1356  0C2E  0867               	movf	_b+2,w
  1357  0C2F  00C9               	movwf	___ftadd@f1+2
  1358  0C30  0868               	movf	_a,w
  1359  0C31  00CA               	movwf	___ftadd@f2
  1360  0C32  0869               	movf	_a+1,w
  1361  0C33  00CB               	movwf	___ftadd@f2+1
  1362  0C34  086A               	movf	_a+2,w
  1363  0C35  00CC               	movwf	___ftadd@f2+2
  1364  0C36  120A  158A  219F  120A  158A  	fcall	___ftadd
  1365  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  1366  0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  1367  0C3D  0847               	movf	?___ftadd,w
  1368  0C3E  00EB               	movwf	_suma
  1369  0C3F  0848               	movf	?___ftadd+1,w
  1370  0C40  00EC               	movwf	_suma+1
  1371  0C41  0849               	movf	?___ftadd+2,w
  1372  0C42  00ED               	movwf	_suma+2
  1373                           
  1374                           ;Calculadora.c: 37: resta = a-b;
  1375  0C43  0868               	movf	_a,w
  1376  0C44  00C7               	movwf	___ftadd@f1
  1377  0C45  0869               	movf	_a+1,w
  1378  0C46  00C8               	movwf	___ftadd@f1+1
  1379  0C47  086A               	movf	_a+2,w
  1380  0C48  00C9               	movwf	___ftadd@f1+2
  1381  0C49  0865               	movf	_b,w
  1382  0C4A  00F0               	movwf	___ftneg@f1
  1383  0C4B  0866               	movf	_b+1,w
  1384  0C4C  00F1               	movwf	___ftneg@f1+1
  1385  0C4D  0867               	movf	_b+2,w
  1386  0C4E  00F2               	movwf	___ftneg@f1+2
  1387  0C4F  160A  118A  24CA  120A  158A  	fcall	___ftneg
  1388  0C54  0870               	movf	?___ftneg,w
  1389  0C55  1283               	bcf	3,5	;RP0=0, select bank0
  1390  0C56  1303               	bcf	3,6	;RP1=0, select bank0
  1391  0C57  00CA               	movwf	___ftadd@f2
  1392  0C58  0871               	movf	?___ftneg+1,w
  1393  0C59  00CB               	movwf	___ftadd@f2+1
  1394  0C5A  0872               	movf	?___ftneg+2,w
  1395  0C5B  00CC               	movwf	___ftadd@f2+2
  1396  0C5C  120A  158A  219F  120A  158A  	fcall	___ftadd
  1397  0C61  1283               	bcf	3,5	;RP0=0, select bank0
  1398  0C62  1303               	bcf	3,6	;RP1=0, select bank0
  1399  0C63  0847               	movf	?___ftadd,w
  1400  0C64  1683               	bsf	3,5	;RP0=1, select bank1
  1401  0C65  1303               	bcf	3,6	;RP1=0, select bank1
  1402  0C66  00BC               	movwf	_resta^(0+128)
  1403  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  1404  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  1405  0C69  0848               	movf	?___ftadd+1,w
  1406  0C6A  1683               	bsf	3,5	;RP0=1, select bank1
  1407  0C6B  1303               	bcf	3,6	;RP1=0, select bank1
  1408  0C6C  00BD               	movwf	(_resta+1)^(0+128)
  1409  0C6D  1283               	bcf	3,5	;RP0=0, select bank0
  1410  0C6E  1303               	bcf	3,6	;RP1=0, select bank0
  1411  0C6F  0849               	movf	?___ftadd+2,w
  1412  0C70  1683               	bsf	3,5	;RP0=1, select bank1
  1413  0C71  1303               	bcf	3,6	;RP1=0, select bank1
  1414  0C72  00BE               	movwf	(_resta+2)^(0+128)
  1415                           
  1416                           ;Calculadora.c: 38: multiplicacion = a*b;
  1417  0C73  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0C74  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0C75  0865               	movf	_b,w
  1420  0C76  00A7               	movwf	___ftmul@f1
  1421  0C77  0866               	movf	_b+1,w
  1422  0C78  00A8               	movwf	___ftmul@f1+1
  1423  0C79  0867               	movf	_b+2,w
  1424  0C7A  00A9               	movwf	___ftmul@f1+2
  1425  0C7B  0868               	movf	_a,w
  1426  0C7C  00AA               	movwf	___ftmul@f2
  1427  0C7D  0869               	movf	_a+1,w
  1428  0C7E  00AB               	movwf	___ftmul@f2+1
  1429  0C7F  086A               	movf	_a+2,w
  1430  0C80  00AC               	movwf	___ftmul@f2+2
  1431  0C81  120A  158A  20CC  120A  158A  	fcall	___ftmul
  1432  0C86  1283               	bcf	3,5	;RP0=0, select bank0
  1433  0C87  1303               	bcf	3,6	;RP1=0, select bank0
  1434  0C88  0827               	movf	?___ftmul,w
  1435  0C89  1683               	bsf	3,5	;RP0=1, select bank1
  1436  0C8A  1303               	bcf	3,6	;RP1=0, select bank1
  1437  0C8B  00B9               	movwf	_multiplicacion^(0+128)
  1438  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  1439  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  1440  0C8E  0828               	movf	?___ftmul+1,w
  1441  0C8F  1683               	bsf	3,5	;RP0=1, select bank1
  1442  0C90  1303               	bcf	3,6	;RP1=0, select bank1
  1443  0C91  00BA               	movwf	(_multiplicacion+1)^(0+128)
  1444  0C92  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0C93  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0C94  0829               	movf	?___ftmul+2,w
  1447  0C95  1683               	bsf	3,5	;RP0=1, select bank1
  1448  0C96  1303               	bcf	3,6	;RP1=0, select bank1
  1449  0C97  00BB               	movwf	(_multiplicacion+2)^(0+128)
  1450                           
  1451                           ;Calculadora.c: 39: division = a/b;
  1452  0C98  1283               	bcf	3,5	;RP0=0, select bank0
  1453  0C99  1303               	bcf	3,6	;RP1=0, select bank0
  1454  0C9A  0865               	movf	_b,w
  1455  0C9B  00F8               	movwf	___ftdiv@f2
  1456  0C9C  0866               	movf	_b+1,w
  1457  0C9D  00F9               	movwf	___ftdiv@f2+1
  1458  0C9E  0867               	movf	_b+2,w
  1459  0C9F  00FA               	movwf	___ftdiv@f2+2
  1460  0CA0  0868               	movf	_a,w
  1461  0CA1  00FB               	movwf	___ftdiv@f1
  1462  0CA2  0869               	movf	_a+1,w
  1463  0CA3  00FC               	movwf	___ftdiv@f1+1
  1464  0CA4  086A               	movf	_a+2,w
  1465  0CA5  00FD               	movwf	___ftdiv@f1+2
  1466  0CA6  160A  118A  274A  120A  158A  	fcall	___ftdiv
  1467  0CAB  0878               	movf	?___ftdiv,w
  1468  0CAC  1683               	bsf	3,5	;RP0=1, select bank1
  1469  0CAD  1303               	bcf	3,6	;RP1=0, select bank1
  1470  0CAE  00B6               	movwf	_division^(0+128)
  1471  0CAF  0879               	movf	?___ftdiv+1,w
  1472  0CB0  00B7               	movwf	(_division+1)^(0+128)
  1473  0CB1  087A               	movf	?___ftdiv+2,w
  1474  0CB2  00B8               	movwf	(_division+2)^(0+128)
  1475                           
  1476                           ;Calculadora.c: 41: if (PORTBbits.RB0 == 1){
  1477  0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  1478  0CB4  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0CB5  1C06               	btfss	6,0	;volatile
  1480  0CB6  2CC6               	goto	l2236
  1481                           
  1482                           ;Calculadora.c: 42: printf("El resultado de la Suma es: %f\n", suma);
  1483  0CB7  30F0               	movlw	low (STR_7| (0+32768))
  1484  0CB8  00DA               	movwf	printf@f
  1485  0CB9  3091               	movlw	high (STR_7| (0+32768))
  1486  0CBA  00DB               	movwf	printf@f+1
  1487  0CBB  086B               	movf	_suma,w
  1488  0CBC  00DC               	movwf	?_printf+2
  1489  0CBD  086C               	movf	_suma+1,w
  1490  0CBE  00DD               	movwf	?_printf+3
  1491  0CBF  086D               	movf	_suma+2,w
  1492  0CC0  00DE               	movwf	?_printf+4
  1493  0CC1  120A  118A  2269  120A  158A  	fcall	_printf
  1494  0CC6                     l2236:	
  1495                           
  1496                           ;Calculadora.c: 43: }
  1497                           ;Calculadora.c: 44: if (PORTBbits.RB1 == 1){
  1498  0CC6  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0CC7  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0CC8  1C86               	btfss	6,1	;volatile
  1501  0CC9  2CE5               	goto	l2240
  1502                           
  1503                           ;Calculadora.c: 45: printf("El resultado de la Resta es: %f\n", resta);
  1504  0CCA  30CF               	movlw	low (STR_8| (0+32768))
  1505  0CCB  00DA               	movwf	printf@f
  1506  0CCC  3091               	movlw	high (STR_8| (0+32768))
  1507  0CCD  00DB               	movwf	printf@f+1
  1508  0CCE  1683               	bsf	3,5	;RP0=1, select bank1
  1509  0CCF  1303               	bcf	3,6	;RP1=0, select bank1
  1510  0CD0  083C               	movf	_resta^(0+128),w
  1511  0CD1  1283               	bcf	3,5	;RP0=0, select bank0
  1512  0CD2  1303               	bcf	3,6	;RP1=0, select bank0
  1513  0CD3  00DC               	movwf	?_printf+2
  1514  0CD4  1683               	bsf	3,5	;RP0=1, select bank1
  1515  0CD5  1303               	bcf	3,6	;RP1=0, select bank1
  1516  0CD6  083D               	movf	(_resta+1)^(0+128),w
  1517  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0CD8  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0CD9  00DD               	movwf	?_printf+3
  1520  0CDA  1683               	bsf	3,5	;RP0=1, select bank1
  1521  0CDB  1303               	bcf	3,6	;RP1=0, select bank1
  1522  0CDC  083E               	movf	(_resta+2)^(0+128),w
  1523  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  1524  0CDE  1303               	bcf	3,6	;RP1=0, select bank0
  1525  0CDF  00DE               	movwf	?_printf+4
  1526  0CE0  120A  118A  2269  120A  158A  	fcall	_printf
  1527  0CE5                     l2240:	
  1528                           
  1529                           ;Calculadora.c: 47: }
  1530                           ;Calculadora.c: 48: if (PORTBbits.RB2 == 1){
  1531  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  1532  0CE6  1303               	bcf	3,6	;RP1=0, select bank0
  1533  0CE7  1D06               	btfss	6,2	;volatile
  1534  0CE8  2D04               	goto	l2244
  1535                           
  1536                           ;Calculadora.c: 49: printf("El resultado de la Multiplicacion es: %f\n", multiplicacion)
      +                          ;
  1537  0CE9  305A               	movlw	low (STR_9| (0+32768))
  1538  0CEA  00DA               	movwf	printf@f
  1539  0CEB  3091               	movlw	high (STR_9| (0+32768))
  1540  0CEC  00DB               	movwf	printf@f+1
  1541  0CED  1683               	bsf	3,5	;RP0=1, select bank1
  1542  0CEE  1303               	bcf	3,6	;RP1=0, select bank1
  1543  0CEF  0839               	movf	_multiplicacion^(0+128),w
  1544  0CF0  1283               	bcf	3,5	;RP0=0, select bank0
  1545  0CF1  1303               	bcf	3,6	;RP1=0, select bank0
  1546  0CF2  00DC               	movwf	?_printf+2
  1547  0CF3  1683               	bsf	3,5	;RP0=1, select bank1
  1548  0CF4  1303               	bcf	3,6	;RP1=0, select bank1
  1549  0CF5  083A               	movf	(_multiplicacion+1)^(0+128),w
  1550  0CF6  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0CF7  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0CF8  00DD               	movwf	?_printf+3
  1553  0CF9  1683               	bsf	3,5	;RP0=1, select bank1
  1554  0CFA  1303               	bcf	3,6	;RP1=0, select bank1
  1555  0CFB  083B               	movf	(_multiplicacion+2)^(0+128),w
  1556  0CFC  1283               	bcf	3,5	;RP0=0, select bank0
  1557  0CFD  1303               	bcf	3,6	;RP1=0, select bank0
  1558  0CFE  00DE               	movwf	?_printf+4
  1559  0CFF  120A  118A  2269  120A  158A  	fcall	_printf
  1560  0D04                     l2244:	
  1561                           
  1562                           ;Calculadora.c: 50: }
  1563                           ;Calculadora.c: 51: if (PORTBbits.RB3 == 1){
  1564  0D04  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0D05  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0D06  1D86               	btfss	6,3	;volatile
  1567  0D07  2BE1               	goto	l2210
  1568                           
  1569                           ;Calculadora.c: 52: if (b==0){
  1570  0D08  0867               	movf	_b+2,w
  1571  0D09  0466               	iorwf	_b+1,w
  1572  0D0A  0465               	iorwf	_b,w
  1573  0D0B  1D03               	skipz
  1574  0D0C  2D17               	goto	l2250
  1575                           
  1576                           ;Calculadora.c: 53: printf("Error, no es posible dividir entre 0.\n");
  1577  0D0D  3084               	movlw	low (STR_10| (0+32768))
  1578  0D0E  00DA               	movwf	printf@f
  1579  0D0F  3091               	movlw	high (STR_10| (0+32768))
  1580  0D10  00DB               	movwf	printf@f+1
  1581  0D11  120A  118A  2269  120A  158A  	fcall	_printf
  1582                           
  1583                           ;Calculadora.c: 54: }
  1584  0D16  2BE1               	goto	l2210
  1585  0D17                     l2250:	
  1586                           
  1587                           ;Calculadora.c: 55: else {
  1588                           ;Calculadora.c: 56: printf("El resultado de la Division es: %f\n", division);
  1589  0D17  30AB               	movlw	low (STR_11| (0+32768))
  1590  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  1591  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  1592  0D1A  00DA               	movwf	printf@f
  1593  0D1B  3091               	movlw	high (STR_11| (0+32768))
  1594  0D1C  00DB               	movwf	printf@f+1
  1595  0D1D  1683               	bsf	3,5	;RP0=1, select bank1
  1596  0D1E  1303               	bcf	3,6	;RP1=0, select bank1
  1597  0D1F  0836               	movf	_division^(0+128),w
  1598  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0D22  00DC               	movwf	?_printf+2
  1601  0D23  1683               	bsf	3,5	;RP0=1, select bank1
  1602  0D24  1303               	bcf	3,6	;RP1=0, select bank1
  1603  0D25  0837               	movf	(_division+1)^(0+128),w
  1604  0D26  1283               	bcf	3,5	;RP0=0, select bank0
  1605  0D27  1303               	bcf	3,6	;RP1=0, select bank0
  1606  0D28  00DD               	movwf	?_printf+3
  1607  0D29  1683               	bsf	3,5	;RP0=1, select bank1
  1608  0D2A  1303               	bcf	3,6	;RP1=0, select bank1
  1609  0D2B  0838               	movf	(_division+2)^(0+128),w
  1610  0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  1611  0D2D  1303               	bcf	3,6	;RP1=0, select bank0
  1612  0D2E  00DE               	movwf	?_printf+4
  1613  0D2F  120A  118A  2269  120A  158A  	fcall	_printf
  1614  0D34  2BE1               	goto	l2210
  1615  0D35                     __end_of_main:	
  1616                           
  1617                           	psect	text1
  1618  0269                     __ptext1:	
  1619 ;; *************** function _printf *****************
  1620 ;; Defined at:
  1621 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  f               2   58[BANK0 ] PTR const unsigned char 
  1624 ;;		 -> STR_11(36), STR_10(39), STR_9(42), STR_8(33), 
  1625 ;;		 -> STR_7(32), STR_6(42), STR_5(42), STR_4(42), 
  1626 ;;		 -> STR_3(42), STR_2(42), STR_1(42), 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  tmpval          4   14[BANK1 ] struct .
  1629 ;;  val             4    8[BANK1 ] unsigned long 
  1630 ;;  fval            3   18[BANK1 ] unsigned long 
  1631 ;;  exp             2   12[BANK1 ] int 
  1632 ;;  prec            2    6[BANK1 ] int 
  1633 ;;  flag            2    4[BANK1 ] unsigned short 
  1634 ;;  cp              2    0        PTR const unsigned char 
  1635 ;;  len             2    0        unsigned int 
  1636 ;;  width           2    0        int 
  1637 ;;  c               1   21[BANK1 ] char 
  1638 ;;  ap              1    3[BANK1 ] PTR void [1]
  1639 ;;		 -> ?_printf(2), 
  1640 ;;  d               1    0        unsigned char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  2   58[BANK0 ] int 
  1643 ;; Registers used:
  1644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1650 ;;      Params:         0       5       0       0       0
  1651 ;;      Locals:         0       0      22       0       0
  1652 ;;      Temps:          0       6       0       0       0
  1653 ;;      Totals:         0      11      22       0       0
  1654 ;;Total ram usage:       33 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    3
  1657 ;; This function calls:
  1658 ;;		___awdiv
  1659 ;;		___ftadd
  1660 ;;		___ftge
  1661 ;;		___ftmul
  1662 ;;		___ftneg
  1663 ;;		___ftsub
  1664 ;;		___fttol
  1665 ;;		___lldiv
  1666 ;;		___llmod
  1667 ;;		___lltoft
  1668 ;;		___wmul
  1669 ;;		__div_to_l_
  1670 ;;		__tdiv_to_l_
  1671 ;;		_fround
  1672 ;;		_putch
  1673 ;;		_scale
  1674 ;; This function is called by:
  1675 ;;		_main
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           
  1680                           ;psect for function _printf
  1681  0269                     _printf:	
  1682                           
  1683                           ;doprnt.c: 466: va_list ap;
  1684                           ;doprnt.c: 499: signed char c;
  1685                           ;doprnt.c: 501: int width;
  1686                           ;doprnt.c: 504: int prec;
  1687                           ;doprnt.c: 508: unsigned short flag;
  1688                           ;doprnt.c: 515: char d;
  1689                           ;doprnt.c: 516: double fval;
  1690                           ;doprnt.c: 517: int exp;
  1691                           ;doprnt.c: 523: union {
  1692                           ;doprnt.c: 524: unsigned long vd;
  1693                           ;doprnt.c: 525: double integ;
  1694                           ;doprnt.c: 526: } tmpval;
  1695                           ;doprnt.c: 528: unsigned long val;
  1696                           ;doprnt.c: 529: unsigned len;
  1697                           ;doprnt.c: 530: const char * cp;
  1698                           ;doprnt.c: 533: *ap = __va_start();
  1699                           
  1700                           ;incstack = 0
  1701                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1702  0269  305C               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1703  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1704  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1705  026C  00DF               	movwf	??_printf
  1706  026D  085F               	movf	??_printf,w
  1707  026E  1683               	bsf	3,5	;RP0=1, select bank1
  1708  026F  1303               	bcf	3,6	;RP1=0, select bank1
  1709  0270  00A3               	movwf	printf@ap^(0+128)
  1710  0271                     l2162:	
  1711                           ;doprnt.c: 536: while(c = *f++) {
  1712                           
  1713  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1714  0272  1303               	bcf	3,6	;RP1=0, select bank0
  1715  0273  085B               	movf	printf@f+1,w
  1716  0274  00E0               	movwf	??_printf+1
  1717  0275  085A               	movf	printf@f,w
  1718  0276  00DF               	movwf	??_printf
  1719  0277  0ADA               	incf	printf@f,f
  1720  0278  1903               	skipnz
  1721  0279  0ADB               	incf	printf@f+1,f
  1722  027A  0860               	movf	??_printf+1,w
  1723  027B  00FF               	movwf	127
  1724  027C  085F               	movf	??_printf,w
  1725  027D  0084               	movwf	4
  1726  027E  160A  118A  2000  120A  118A  	fcall	stringtab
  1727  0283  00E1               	movwf	??_printf+2
  1728  0284  0861               	movf	??_printf+2,w
  1729  0285  1683               	bsf	3,5	;RP0=1, select bank1
  1730  0286  1303               	bcf	3,6	;RP1=0, select bank1
  1731  0287  00B5               	movwf	printf@c^(0+128)
  1732  0288  0835               	movf	printf@c^(0+128),w
  1733  0289  1903               	btfsc	3,2
  1734  028A  0008               	return
  1735                           
  1736                           ;doprnt.c: 538: if(c != '%')
  1737  028B  3025               	movlw	37
  1738  028C  0635               	xorwf	printf@c^(0+128),w
  1739  028D  1903               	btfsc	3,2
  1740  028E  2A96               	goto	l2022
  1741                           
  1742                           ;doprnt.c: 540: {
  1743                           ;doprnt.c: 541: (putch(c) );
  1744  028F  0835               	movf	printf@c^(0+128),w
  1745  0290  120A  158A  2001  120A  118A  	fcall	_putch
  1746                           
  1747                           ;doprnt.c: 542: continue;
  1748  0295  2A71               	goto	l2162
  1749  0296                     l2022:	
  1750                           
  1751                           ;doprnt.c: 543: }
  1752                           ;doprnt.c: 548: flag = 0;
  1753  0296  1683               	bsf	3,5	;RP0=1, select bank1
  1754  0297  1303               	bcf	3,6	;RP1=0, select bank1
  1755  0298  01A4               	clrf	printf@flag^(0+128)
  1756  0299  01A5               	clrf	(printf@flag+1)^(0+128)
  1757                           
  1758                           ;doprnt.c: 635: switch(c = *f++) {
  1759  029A  2A9D               	goto	l2026
  1760  029B                     l92:	
  1761                           ;doprnt.c: 662: case 'f':
  1762                           
  1763                           ;doprnt.c: 638: goto alldone;
  1764                           
  1765                           ;doprnt.c: 637: case 0:
  1766                           
  1767                           
  1768                           ;doprnt.c: 663: flag |= 0x400;
  1769  029B  1525               	bsf	(printf@flag^(0+128)+1),2
  1770                           
  1771                           ;doprnt.c: 664: break;
  1772  029C  2AB9               	goto	l2028
  1773  029D                     l2026:	
  1774                           ;doprnt.c: 822: }
  1775                           
  1776                           ;doprnt.c: 813: continue;
  1777                           
  1778                           ;doprnt.c: 802: default:
  1779                           
  1780  029D  1283               	bcf	3,5	;RP0=0, select bank0
  1781  029E  1303               	bcf	3,6	;RP1=0, select bank0
  1782  029F  085B               	movf	printf@f+1,w
  1783  02A0  00E0               	movwf	??_printf+1
  1784  02A1  085A               	movf	printf@f,w
  1785  02A2  00DF               	movwf	??_printf
  1786  02A3  0ADA               	incf	printf@f,f
  1787  02A4  1903               	skipnz
  1788  02A5  0ADB               	incf	printf@f+1,f
  1789  02A6  0860               	movf	??_printf+1,w
  1790  02A7  00FF               	movwf	127
  1791  02A8  085F               	movf	??_printf,w
  1792  02A9  0084               	movwf	4
  1793  02AA  160A  118A  2000  120A  118A  	fcall	stringtab
  1794  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  1795  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  1796  02B1  00B5               	movwf	printf@c^(0+128)
  1797                           
  1798                           ; Switch size 1, requested type "space"
  1799                           ; Number of cases is 2, Range of values is 0 to 102
  1800                           ; switch strategies available:
  1801                           ; Name         Instructions Cycles
  1802                           ; simple_byte            7     4 (average)
  1803                           ; jumptable            260     6 (fixed)
  1804                           ;	Chosen strategy is simple_byte
  1805  02B2  3A00               	xorlw	0	; case 0
  1806  02B3  1903               	skipnz
  1807  02B4  2FC9               	goto	l134
  1808  02B5  3A66               	xorlw	102	; case 102
  1809  02B6  1903               	skipnz
  1810  02B7  2A9B               	goto	l92
  1811  02B8  2A71               	goto	l2162
  1812  02B9                     l2028:	
  1813                           
  1814                           ;doprnt.c: 825: if(flag & (0x700)) {
  1815  02B9  3000               	movlw	0
  1816  02BA  0524               	andwf	printf@flag^(0+128),w
  1817  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1818  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1819  02BD  00DF               	movwf	??_printf
  1820  02BE  3007               	movlw	7
  1821  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  1822  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  1823  02C1  0525               	andwf	(printf@flag+1)^(0+128),w
  1824  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1825  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  1826  02C4  00E0               	movwf	??_printf+1
  1827  02C5  085F               	movf	??_printf,w
  1828  02C6  0460               	iorwf	??_printf+1,w
  1829  02C7  1903               	btfsc	3,2
  1830  02C8  2FB0               	goto	l2158
  1831                           
  1832                           ;doprnt.c: 829: prec = 6;
  1833  02C9  3006               	movlw	6
  1834  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  1835  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  1836  02CC  00A6               	movwf	printf@prec^(0+128)
  1837  02CD  3000               	movlw	0
  1838  02CE  00A7               	movwf	(printf@prec^(0+128)+1)
  1839                           
  1840                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1841  02CF  0823               	movf	printf@ap^(0+128),w
  1842  02D0  0084               	movwf	4
  1843  02D1  1383               	bcf	3,7	;select IRP bank0
  1844  02D2  0800               	movf	0,w
  1845  02D3  00B2               	movwf	printf@fval^(0+128)
  1846  02D4  0A84               	incf	4,f
  1847  02D5  0800               	movf	0,w
  1848  02D6  00B3               	movwf	(printf@fval+1)^(0+128)
  1849  02D7  0A84               	incf	4,f
  1850  02D8  0800               	movf	0,w
  1851  02D9  00B4               	movwf	(printf@fval+2)^(0+128)
  1852  02DA  3003               	movlw	3
  1853  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1854  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1855  02DD  00DF               	movwf	??_printf
  1856  02DE  085F               	movf	??_printf,w
  1857  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  1858  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  1859  02E1  07A3               	addwf	printf@ap^(0+128),f
  1860                           
  1861                           ;doprnt.c: 831: if(fval < 0.0) {
  1862  02E2  0832               	movf	printf@fval^(0+128),w
  1863  02E3  00F0               	movwf	___ftge@ff1
  1864  02E4  0833               	movf	(printf@fval+1)^(0+128),w
  1865  02E5  00F1               	movwf	___ftge@ff1+1
  1866  02E6  0834               	movf	(printf@fval+2)^(0+128),w
  1867  02E7  00F2               	movwf	___ftge@ff1+2
  1868  02E8  3000               	movlw	0
  1869  02E9  00F3               	movwf	___ftge@ff2
  1870  02EA  3000               	movlw	0
  1871  02EB  00F4               	movwf	___ftge@ff2+1
  1872  02EC  3000               	movlw	0
  1873  02ED  00F5               	movwf	___ftge@ff2+2
  1874  02EE  160A  118A  2623  120A  118A  	fcall	___ftge
  1875  02F3  1803               	btfsc	3,0
  1876  02F4  2B0E               	goto	l2042
  1877                           
  1878                           ;doprnt.c: 832: fval = -fval;
  1879  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  1880  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  1881  02F7  0832               	movf	printf@fval^(0+128),w
  1882  02F8  00F0               	movwf	___ftneg@f1
  1883  02F9  0833               	movf	(printf@fval+1)^(0+128),w
  1884  02FA  00F1               	movwf	___ftneg@f1+1
  1885  02FB  0834               	movf	(printf@fval+2)^(0+128),w
  1886  02FC  00F2               	movwf	___ftneg@f1+2
  1887  02FD  160A  118A  24CA  120A  118A  	fcall	___ftneg
  1888  0302  0870               	movf	?___ftneg,w
  1889  0303  1683               	bsf	3,5	;RP0=1, select bank1
  1890  0304  1303               	bcf	3,6	;RP1=0, select bank1
  1891  0305  00B2               	movwf	printf@fval^(0+128)
  1892  0306  0871               	movf	?___ftneg+1,w
  1893  0307  00B3               	movwf	(printf@fval+1)^(0+128)
  1894  0308  0872               	movf	?___ftneg+2,w
  1895  0309  00B4               	movwf	(printf@fval+2)^(0+128)
  1896                           
  1897                           ;doprnt.c: 833: flag |= 0x03;
  1898  030A  3003               	movlw	3
  1899  030B  04A4               	iorwf	printf@flag^(0+128),f
  1900  030C  3000               	movlw	0
  1901  030D  04A5               	iorwf	(printf@flag+1)^(0+128),f
  1902  030E                     l2042:	
  1903                           
  1904                           ;doprnt.c: 834: }
  1905                           ;doprnt.c: 835: exp = 0;
  1906  030E  1683               	bsf	3,5	;RP0=1, select bank1
  1907  030F  1303               	bcf	3,6	;RP1=0, select bank1
  1908  0310  01AC               	clrf	printf@exp^(0+128)
  1909  0311  01AD               	clrf	(printf@exp+1)^(0+128)
  1910                           
  1911                           ;doprnt.c: 836: if( fval!=0) {
  1912  0312  0834               	movf	(printf@fval+2)^(0+128),w
  1913  0313  0433               	iorwf	(printf@fval+1)^(0+128),w
  1914  0314  0432               	iorwf	printf@fval^(0+128),w
  1915  0315  1903               	skipnz
  1916  0316  2C02               	goto	l2070
  1917                           
  1918                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1919  0317  30B2               	movlw	low (printf@fval| 0)
  1920  0318  0084               	movwf	4
  1921  0319  1383               	bcf	3,7	;select IRP bank1
  1922  031A  0800               	movf	0,w
  1923  031B  1283               	bcf	3,5	;RP0=0, select bank0
  1924  031C  1303               	bcf	3,6	;RP1=0, select bank0
  1925  031D  00DF               	movwf	??_printf
  1926  031E  0A84               	incf	4,f
  1927  031F  0800               	movf	0,w
  1928  0320  00E0               	movwf	??_printf+1
  1929  0321  0A84               	incf	4,f
  1930  0322  0800               	movf	0,w
  1931  0323  00E1               	movwf	??_printf+2
  1932  0324  0A84               	incf	4,f
  1933  0325  0800               	movf	0,w
  1934  0326  00E2               	movwf	??_printf+3
  1935  0327  300F               	movlw	15
  1936  0328                     u3285:	
  1937  0328  1003               	clrc
  1938  0329  0CE2               	rrf	??_printf+3,f
  1939  032A  0CE1               	rrf	??_printf+2,f
  1940  032B  0CE0               	rrf	??_printf+1,f
  1941  032C  0CDF               	rrf	??_printf,f
  1942  032D  3EFF               	addlw	-1
  1943  032E  1D03               	skipz
  1944  032F  2B28               	goto	u3285
  1945  0330  30FF               	movlw	255
  1946  0331  055F               	andwf	??_printf,w
  1947  0332  00E3               	movwf	??_printf+4
  1948  0333  3000               	movlw	0
  1949  0334  0560               	andwf	??_printf+1,w
  1950  0335  00E4               	movwf	??_printf+5
  1951  0336  0863               	movf	??_printf+4,w
  1952  0337  3E82               	addlw	130
  1953  0338  1683               	bsf	3,5	;RP0=1, select bank1
  1954  0339  1303               	bcf	3,6	;RP1=0, select bank1
  1955  033A  00AC               	movwf	printf@exp^(0+128)
  1956  033B  1283               	bcf	3,5	;RP0=0, select bank0
  1957  033C  1303               	bcf	3,6	;RP1=0, select bank0
  1958  033D  0864               	movf	??_printf+5,w
  1959  033E  1803               	skipnc
  1960  033F  3E01               	addlw	1
  1961  0340  3EFF               	addlw	255
  1962  0341  1683               	bsf	3,5	;RP0=1, select bank1
  1963  0342  1303               	bcf	3,6	;RP1=0, select bank1
  1964  0343  00AD               	movwf	(printf@exp+1)^(0+128)
  1965                           
  1966                           ;doprnt.c: 838: exp--;
  1967  0344  30FF               	movlw	255
  1968  0345  07AC               	addwf	printf@exp^(0+128),f
  1969  0346  1803               	skipnc
  1970  0347  0AAD               	incf	(printf@exp+1)^(0+128),f
  1971  0348  30FF               	movlw	255
  1972  0349  07AD               	addwf	(printf@exp+1)^(0+128),f
  1973                           
  1974                           ;doprnt.c: 839: exp *= 3;
  1975  034A  3003               	movlw	3
  1976  034B  00F0               	movwf	___wmul@multiplier
  1977  034C  3000               	movlw	0
  1978  034D  00F1               	movwf	___wmul@multiplier+1
  1979  034E  082D               	movf	(printf@exp+1)^(0+128),w
  1980  034F  00F3               	movwf	___wmul@multiplicand+1
  1981  0350  082C               	movf	printf@exp^(0+128),w
  1982  0351  00F2               	movwf	___wmul@multiplicand
  1983  0352  120A  118A  2008  120A  118A  	fcall	___wmul
  1984  0357  0871               	movf	?___wmul+1,w
  1985  0358  1683               	bsf	3,5	;RP0=1, select bank1
  1986  0359  1303               	bcf	3,6	;RP1=0, select bank1
  1987  035A  00AD               	movwf	(printf@exp+1)^(0+128)
  1988  035B  0870               	movf	?___wmul,w
  1989  035C  00AC               	movwf	printf@exp^(0+128)
  1990                           
  1991                           ;doprnt.c: 840: exp /= 10;
  1992  035D  300A               	movlw	10
  1993  035E  00F7               	movwf	___awdiv@divisor
  1994  035F  3000               	movlw	0
  1995  0360  00F8               	movwf	___awdiv@divisor+1
  1996  0361  082D               	movf	(printf@exp+1)^(0+128),w
  1997  0362  00FA               	movwf	___awdiv@dividend+1
  1998  0363  082C               	movf	printf@exp^(0+128),w
  1999  0364  00F9               	movwf	___awdiv@dividend
  2000  0365  160A  118A  25C8  120A  118A  	fcall	___awdiv
  2001  036A  0878               	movf	?___awdiv+1,w
  2002  036B  1683               	bsf	3,5	;RP0=1, select bank1
  2003  036C  1303               	bcf	3,6	;RP1=0, select bank1
  2004  036D  00AD               	movwf	(printf@exp+1)^(0+128)
  2005  036E  0877               	movf	?___awdiv,w
  2006  036F  00AC               	movwf	printf@exp^(0+128)
  2007                           
  2008                           ;doprnt.c: 841: if(exp < 0)
  2009  0370  1FAD               	btfss	(printf@exp+1)^(0+128),7
  2010  0371  2B78               	goto	l2058
  2011                           
  2012                           ;doprnt.c: 842: exp--;
  2013  0372  30FF               	movlw	255
  2014  0373  07AC               	addwf	printf@exp^(0+128),f
  2015  0374  1803               	skipnc
  2016  0375  0AAD               	incf	(printf@exp+1)^(0+128),f
  2017  0376  30FF               	movlw	255
  2018  0377  07AD               	addwf	(printf@exp+1)^(0+128),f
  2019  0378                     l2058:	
  2020                           
  2021                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2022  0378  032C               	decf	printf@exp^(0+128),w
  2023  0379  3AFF               	xorlw	255
  2024  037A  120A  158A  2535  120A  118A  	fcall	_scale
  2025  037F  1283               	bcf	3,5	;RP0=0, select bank0
  2026  0380  1303               	bcf	3,6	;RP1=0, select bank0
  2027  0381  0837               	movf	?_scale,w
  2028  0382  1683               	bsf	3,5	;RP0=1, select bank1
  2029  0383  1303               	bcf	3,6	;RP1=0, select bank1
  2030  0384  00AE               	movwf	printf@tmpval^(0+128)
  2031  0385  1283               	bcf	3,5	;RP0=0, select bank0
  2032  0386  1303               	bcf	3,6	;RP1=0, select bank0
  2033  0387  0838               	movf	?_scale+1,w
  2034  0388  1683               	bsf	3,5	;RP0=1, select bank1
  2035  0389  1303               	bcf	3,6	;RP1=0, select bank1
  2036  038A  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2037  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2038  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2039  038D  0839               	movf	?_scale+2,w
  2040  038E  1683               	bsf	3,5	;RP0=1, select bank1
  2041  038F  1303               	bcf	3,6	;RP1=0, select bank1
  2042  0390  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2043                           
  2044                           ;doprnt.c: 847: tmpval.integ *= fval;
  2045  0391  0832               	movf	printf@fval^(0+128),w
  2046  0392  1283               	bcf	3,5	;RP0=0, select bank0
  2047  0393  1303               	bcf	3,6	;RP1=0, select bank0
  2048  0394  00A7               	movwf	___ftmul@f1
  2049  0395  1683               	bsf	3,5	;RP0=1, select bank1
  2050  0396  1303               	bcf	3,6	;RP1=0, select bank1
  2051  0397  0833               	movf	(printf@fval+1)^(0+128),w
  2052  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2053  0399  1303               	bcf	3,6	;RP1=0, select bank0
  2054  039A  00A8               	movwf	___ftmul@f1+1
  2055  039B  1683               	bsf	3,5	;RP0=1, select bank1
  2056  039C  1303               	bcf	3,6	;RP1=0, select bank1
  2057  039D  0834               	movf	(printf@fval+2)^(0+128),w
  2058  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2059  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2060  03A0  00A9               	movwf	___ftmul@f1+2
  2061  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  2062  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  2063  03A3  082E               	movf	printf@tmpval^(0+128),w
  2064  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2065  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2066  03A6  00AA               	movwf	___ftmul@f2
  2067  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2068  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  2069  03A9  082F               	movf	(printf@tmpval+1)^(0+128),w
  2070  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  2071  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  2072  03AC  00AB               	movwf	___ftmul@f2+1
  2073  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  2074  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  2075  03AF  0830               	movf	(printf@tmpval+2)^(0+128),w
  2076  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2077  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2078  03B2  00AC               	movwf	___ftmul@f2+2
  2079  03B3  120A  158A  20CC  120A  118A  	fcall	___ftmul
  2080  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2081  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2082  03BA  0827               	movf	?___ftmul,w
  2083  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  2084  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  2085  03BD  00AE               	movwf	printf@tmpval^(0+128)
  2086  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2087  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2088  03C0  0828               	movf	?___ftmul+1,w
  2089  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  2090  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  2091  03C3  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2092  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2093  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2094  03C6  0829               	movf	?___ftmul+2,w
  2095  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  2096  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  2097  03C9  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2098                           
  2099                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2100  03CA  082E               	movf	printf@tmpval^(0+128),w
  2101  03CB  00F0               	movwf	___ftge@ff1
  2102  03CC  082F               	movf	(printf@tmpval+1)^(0+128),w
  2103  03CD  00F1               	movwf	___ftge@ff1+1
  2104  03CE  0830               	movf	(printf@tmpval+2)^(0+128),w
  2105  03CF  00F2               	movwf	___ftge@ff1+2
  2106  03D0  3000               	movlw	0
  2107  03D1  00F3               	movwf	___ftge@ff2
  2108  03D2  3080               	movlw	128
  2109  03D3  00F4               	movwf	___ftge@ff2+1
  2110  03D4  303F               	movlw	63
  2111  03D5  00F5               	movwf	___ftge@ff2+2
  2112  03D6  160A  118A  2623  120A  118A  	fcall	___ftge
  2113  03DB  1803               	btfsc	3,0
  2114  03DC  2BE5               	goto	l2066
  2115                           
  2116                           ;doprnt.c: 849: exp--;
  2117  03DD  30FF               	movlw	255
  2118  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  2119  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  2120  03E0  07AC               	addwf	printf@exp^(0+128),f
  2121  03E1  1803               	skipnc
  2122  03E2  0AAD               	incf	(printf@exp+1)^(0+128),f
  2123  03E3  30FF               	movlw	255
  2124  03E4  2C01               	goto	L1
  2125  03E5                     l2066:	
  2126                           
  2127                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2128  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  2129  03E6  1303               	bcf	3,6	;RP1=0, select bank1
  2130  03E7  082E               	movf	printf@tmpval^(0+128),w
  2131  03E8  00F0               	movwf	___ftge@ff1
  2132  03E9  082F               	movf	(printf@tmpval+1)^(0+128),w
  2133  03EA  00F1               	movwf	___ftge@ff1+1
  2134  03EB  0830               	movf	(printf@tmpval+2)^(0+128),w
  2135  03EC  00F2               	movwf	___ftge@ff1+2
  2136  03ED  3000               	movlw	0
  2137  03EE  00F3               	movwf	___ftge@ff2
  2138  03EF  3020               	movlw	32
  2139  03F0  00F4               	movwf	___ftge@ff2+1
  2140  03F1  3041               	movlw	65
  2141  03F2  00F5               	movwf	___ftge@ff2+2
  2142  03F3  160A  118A  2623  120A  118A  	fcall	___ftge
  2143  03F8  1C03               	btfss	3,0
  2144  03F9  2C02               	goto	l2070
  2145                           
  2146                           ;doprnt.c: 851: exp++;
  2147  03FA  3001               	movlw	1
  2148  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  2149  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  2150  03FD  07AC               	addwf	printf@exp^(0+128),f
  2151  03FE  1803               	skipnc
  2152  03FF  0AAD               	incf	(printf@exp+1)^(0+128),f
  2153  0400  3000               	movlw	0
  2154  0401                     L1:	
  2155  0401  07AD               	addwf	(printf@exp+1)^(0+128),f
  2156  0402                     l2070:	
  2157                           
  2158                           ;doprnt.c: 852: }
  2159                           ;doprnt.c: 1112: if(prec <= 12)
  2160  0402  1683               	bsf	3,5	;RP0=1, select bank1
  2161  0403  1303               	bcf	3,6	;RP1=0, select bank1
  2162  0404  0827               	movf	(printf@prec+1)^(0+128),w
  2163  0405  3A80               	xorlw	128
  2164  0406  00FF               	movwf	127
  2165  0407  3080               	movlw	128
  2166  0408  027F               	subwf	127,w
  2167  0409  1D03               	skipz
  2168  040A  2C0D               	goto	u3325
  2169  040B  300D               	movlw	13
  2170  040C  0226               	subwf	printf@prec^(0+128),w
  2171  040D                     u3325:	
  2172  040D  1803               	skipnc
  2173  040E  2C48               	goto	l2074
  2174                           
  2175                           ;doprnt.c: 1113: fval += fround(prec);
  2176  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2177  0410  1303               	bcf	3,6	;RP1=0, select bank1
  2178  0411  0826               	movf	printf@prec^(0+128),w
  2179  0412  120A  118A  20B7  120A  118A  	fcall	_fround
  2180  0417  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0418  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0419  0837               	movf	?_fround,w
  2183  041A  00C7               	movwf	___ftadd@f1
  2184  041B  0838               	movf	?_fround+1,w
  2185  041C  00C8               	movwf	___ftadd@f1+1
  2186  041D  0839               	movf	?_fround+2,w
  2187  041E  00C9               	movwf	___ftadd@f1+2
  2188  041F  1683               	bsf	3,5	;RP0=1, select bank1
  2189  0420  1303               	bcf	3,6	;RP1=0, select bank1
  2190  0421  0832               	movf	printf@fval^(0+128),w
  2191  0422  1283               	bcf	3,5	;RP0=0, select bank0
  2192  0423  1303               	bcf	3,6	;RP1=0, select bank0
  2193  0424  00CA               	movwf	___ftadd@f2
  2194  0425  1683               	bsf	3,5	;RP0=1, select bank1
  2195  0426  1303               	bcf	3,6	;RP1=0, select bank1
  2196  0427  0833               	movf	(printf@fval+1)^(0+128),w
  2197  0428  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0429  1303               	bcf	3,6	;RP1=0, select bank0
  2199  042A  00CB               	movwf	___ftadd@f2+1
  2200  042B  1683               	bsf	3,5	;RP0=1, select bank1
  2201  042C  1303               	bcf	3,6	;RP1=0, select bank1
  2202  042D  0834               	movf	(printf@fval+2)^(0+128),w
  2203  042E  1283               	bcf	3,5	;RP0=0, select bank0
  2204  042F  1303               	bcf	3,6	;RP1=0, select bank0
  2205  0430  00CC               	movwf	___ftadd@f2+2
  2206  0431  120A  158A  219F  120A  118A  	fcall	___ftadd
  2207  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2208  0437  1303               	bcf	3,6	;RP1=0, select bank0
  2209  0438  0847               	movf	?___ftadd,w
  2210  0439  1683               	bsf	3,5	;RP0=1, select bank1
  2211  043A  1303               	bcf	3,6	;RP1=0, select bank1
  2212  043B  00B2               	movwf	printf@fval^(0+128)
  2213  043C  1283               	bcf	3,5	;RP0=0, select bank0
  2214  043D  1303               	bcf	3,6	;RP1=0, select bank0
  2215  043E  0848               	movf	?___ftadd+1,w
  2216  043F  1683               	bsf	3,5	;RP0=1, select bank1
  2217  0440  1303               	bcf	3,6	;RP1=0, select bank1
  2218  0441  00B3               	movwf	(printf@fval+1)^(0+128)
  2219  0442  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0443  1303               	bcf	3,6	;RP1=0, select bank0
  2221  0444  0849               	movf	?___ftadd+2,w
  2222  0445  1683               	bsf	3,5	;RP0=1, select bank1
  2223  0446  1303               	bcf	3,6	;RP1=0, select bank1
  2224  0447  00B4               	movwf	(printf@fval+2)^(0+128)
  2225  0448                     l2074:	
  2226                           
  2227                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2228  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2229  0449  1303               	bcf	3,6	;RP1=0, select bank1
  2230  044A  082D               	movf	(printf@exp+1)^(0+128),w
  2231  044B  3A80               	xorlw	128
  2232  044C  00FF               	movwf	127
  2233  044D  3080               	movlw	128
  2234  044E  027F               	subwf	127,w
  2235  044F  1D03               	skipz
  2236  0450  2C53               	goto	u3335
  2237  0451  300A               	movlw	10
  2238  0452  022C               	subwf	printf@exp^(0+128),w
  2239  0453                     u3335:	
  2240  0453  1803               	skipnc
  2241  0454  2C86               	goto	l2082
  2242  0455  1683               	bsf	3,5	;RP0=1, select bank1
  2243  0456  1303               	bcf	3,6	;RP1=0, select bank1
  2244  0457  0834               	movf	(printf@fval+2)^(0+128),w
  2245  0458  0433               	iorwf	(printf@fval+1)^(0+128),w
  2246  0459  0432               	iorwf	printf@fval^(0+128),w
  2247  045A  1903               	skipnz
  2248  045B  2CDF               	goto	l2096
  2249  045C  0832               	movf	printf@fval^(0+128),w
  2250  045D  1283               	bcf	3,5	;RP0=0, select bank0
  2251  045E  1303               	bcf	3,6	;RP1=0, select bank0
  2252  045F  00C0               	movwf	___fttol@f1
  2253  0460  1683               	bsf	3,5	;RP0=1, select bank1
  2254  0461  1303               	bcf	3,6	;RP1=0, select bank1
  2255  0462  0833               	movf	(printf@fval+1)^(0+128),w
  2256  0463  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0464  1303               	bcf	3,6	;RP1=0, select bank0
  2258  0465  00C1               	movwf	___fttol@f1+1
  2259  0466  1683               	bsf	3,5	;RP0=1, select bank1
  2260  0467  1303               	bcf	3,6	;RP1=0, select bank1
  2261  0468  0834               	movf	(printf@fval+2)^(0+128),w
  2262  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2263  046A  1303               	bcf	3,6	;RP1=0, select bank0
  2264  046B  00C2               	movwf	___fttol@f1+2
  2265  046C  120A  118A  2029  120A  118A  	fcall	___fttol
  2266  0471  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0472  1303               	bcf	3,6	;RP1=0, select bank0
  2268  0473  0843               	movf	?___fttol+3,w
  2269  0474  0442               	iorwf	?___fttol+2,w
  2270  0475  0441               	iorwf	?___fttol+1,w
  2271  0476  0440               	iorwf	?___fttol,w
  2272  0477  1D03               	skipz
  2273  0478  2CDF               	goto	l2096
  2274  0479  1683               	bsf	3,5	;RP0=1, select bank1
  2275  047A  1303               	bcf	3,6	;RP1=0, select bank1
  2276  047B  082D               	movf	(printf@exp+1)^(0+128),w
  2277  047C  3A80               	xorlw	128
  2278  047D  00FF               	movwf	127
  2279  047E  3080               	movlw	128
  2280  047F  027F               	subwf	127,w
  2281  0480  1D03               	skipz
  2282  0481  2C84               	goto	u3365
  2283  0482  3002               	movlw	2
  2284  0483  022C               	subwf	printf@exp^(0+128),w
  2285  0484                     u3365:	
  2286  0484  1C03               	skipc
  2287  0485  2CDF               	goto	l2096
  2288  0486                     l2082:	
  2289                           
  2290                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2291  0486  1683               	bsf	3,5	;RP0=1, select bank1
  2292  0487  1303               	bcf	3,6	;RP1=0, select bank1
  2293  0488  082E               	movf	printf@tmpval^(0+128),w
  2294  0489  00F0               	movwf	___ftge@ff1
  2295  048A  082F               	movf	(printf@tmpval+1)^(0+128),w
  2296  048B  00F1               	movwf	___ftge@ff1+1
  2297  048C  0830               	movf	(printf@tmpval+2)^(0+128),w
  2298  048D  00F2               	movwf	___ftge@ff1+2
  2299  048E  3070               	movlw	112
  2300  048F  00F3               	movwf	___ftge@ff2
  2301  0490  3089               	movlw	137
  2302  0491  00F4               	movwf	___ftge@ff2+1
  2303  0492  3040               	movlw	64
  2304  0493  00F5               	movwf	___ftge@ff2+2
  2305  0494  160A  118A  2623  120A  118A  	fcall	___ftge
  2306  0499  1803               	btfsc	3,0
  2307  049A  2C9D               	goto	l2086
  2308                           
  2309                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2310  049B  30F7               	movlw	247
  2311  049C  2C9E               	goto	L2
  2312  049D                     l2086:	
  2313                           ;doprnt.c: 1122: }else{
  2314                           
  2315                           
  2316                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2317  049D  30F8               	movlw	248
  2318  049E                     L2:	
  2319  049E  1683               	bsf	3,5	;RP0=1, select bank1
  2320  049F  1303               	bcf	3,6	;RP1=0, select bank1
  2321  04A0  07AC               	addwf	printf@exp^(0+128),f
  2322  04A1  1803               	skipnc
  2323  04A2  0AAD               	incf	(printf@exp+1)^(0+128),f
  2324  04A3  30FF               	movlw	255
  2325  04A4  07AD               	addwf	(printf@exp+1)^(0+128),f
  2326                           
  2327                           ;doprnt.c: 1124: }
  2328                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2329  04A5  082C               	movf	printf@exp^(0+128),w
  2330  04A6  120A  158A  2535  120A  118A  	fcall	_scale
  2331  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  2332  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  2333  04AD  0837               	movf	?_scale,w
  2334  04AE  1683               	bsf	3,5	;RP0=1, select bank1
  2335  04AF  1303               	bcf	3,6	;RP1=0, select bank1
  2336  04B0  00AE               	movwf	printf@tmpval^(0+128)
  2337  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  2338  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  2339  04B3  0838               	movf	?_scale+1,w
  2340  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  2341  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  2342  04B6  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2343  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2344  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2345  04B9  0839               	movf	?_scale+2,w
  2346  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  2347  04BB  1303               	bcf	3,6	;RP1=0, select bank1
  2348  04BC  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2349                           
  2350                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2351  04BD  0832               	movf	printf@fval^(0+128),w
  2352  04BE  00F0               	movwf	__tdiv_to_l_@f1
  2353  04BF  0833               	movf	(printf@fval+1)^(0+128),w
  2354  04C0  00F1               	movwf	__tdiv_to_l_@f1+1
  2355  04C1  0834               	movf	(printf@fval+2)^(0+128),w
  2356  04C2  00F2               	movwf	__tdiv_to_l_@f1+2
  2357  04C3  082E               	movf	printf@tmpval^(0+128),w
  2358  04C4  00F3               	movwf	__tdiv_to_l_@f2
  2359  04C5  082F               	movf	(printf@tmpval+1)^(0+128),w
  2360  04C6  00F4               	movwf	__tdiv_to_l_@f2+1
  2361  04C7  0830               	movf	(printf@tmpval+2)^(0+128),w
  2362  04C8  00F5               	movwf	__tdiv_to_l_@f2+2
  2363  04C9  120A  158A  2009  120A  118A  	fcall	__tdiv_to_l_
  2364  04CE  0873               	movf	?__tdiv_to_l_+3,w
  2365  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  2366  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  2367  04D1  00AB               	movwf	(printf@val+3)^(0+128)
  2368  04D2  0872               	movf	?__tdiv_to_l_+2,w
  2369  04D3  00AA               	movwf	(printf@val+2)^(0+128)
  2370  04D4  0871               	movf	?__tdiv_to_l_+1,w
  2371  04D5  00A9               	movwf	(printf@val+1)^(0+128)
  2372  04D6  0870               	movf	?__tdiv_to_l_,w
  2373  04D7  00A8               	movwf	printf@val^(0+128)
  2374                           
  2375                           ;doprnt.c: 1129: fval = 0.0;
  2376  04D8  3000               	movlw	0
  2377  04D9  00B2               	movwf	printf@fval^(0+128)
  2378  04DA  3000               	movlw	0
  2379  04DB  00B3               	movwf	(printf@fval+1)^(0+128)
  2380  04DC  3000               	movlw	0
  2381  04DD  00B4               	movwf	(printf@fval+2)^(0+128)
  2382                           
  2383                           ;doprnt.c: 1130: } else {
  2384  04DE  2D4E               	goto	l2100
  2385  04DF                     l2096:	
  2386                           
  2387                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2388  04DF  1683               	bsf	3,5	;RP0=1, select bank1
  2389  04E0  1303               	bcf	3,6	;RP1=0, select bank1
  2390  04E1  0832               	movf	printf@fval^(0+128),w
  2391  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  2392  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  2393  04E4  00C0               	movwf	___fttol@f1
  2394  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  2395  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  2396  04E7  0833               	movf	(printf@fval+1)^(0+128),w
  2397  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2398  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2399  04EA  00C1               	movwf	___fttol@f1+1
  2400  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  2401  04EC  1303               	bcf	3,6	;RP1=0, select bank1
  2402  04ED  0834               	movf	(printf@fval+2)^(0+128),w
  2403  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  2404  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  2405  04F0  00C2               	movwf	___fttol@f1+2
  2406  04F1  120A  118A  2029  120A  118A  	fcall	___fttol
  2407  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  2408  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  2409  04F8  0843               	movf	?___fttol+3,w
  2410  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  2411  04FA  1303               	bcf	3,6	;RP1=0, select bank1
  2412  04FB  00AB               	movwf	(printf@val+3)^(0+128)
  2413  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  2414  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  2415  04FE  0842               	movf	?___fttol+2,w
  2416  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  2417  0500  1303               	bcf	3,6	;RP1=0, select bank1
  2418  0501  00AA               	movwf	(printf@val+2)^(0+128)
  2419  0502  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0503  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0504  0841               	movf	?___fttol+1,w
  2422  0505  1683               	bsf	3,5	;RP0=1, select bank1
  2423  0506  1303               	bcf	3,6	;RP1=0, select bank1
  2424  0507  00A9               	movwf	(printf@val+1)^(0+128)
  2425  0508  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0509  1303               	bcf	3,6	;RP1=0, select bank0
  2427  050A  0840               	movf	?___fttol,w
  2428  050B  1683               	bsf	3,5	;RP0=1, select bank1
  2429  050C  1303               	bcf	3,6	;RP1=0, select bank1
  2430  050D  00A8               	movwf	printf@val^(0+128)
  2431                           
  2432                           ;doprnt.c: 1132: fval -= (double)val;
  2433  050E  082B               	movf	(printf@val+3)^(0+128),w
  2434  050F  00FB               	movwf	___lltoft@c+3
  2435  0510  082A               	movf	(printf@val+2)^(0+128),w
  2436  0511  00FA               	movwf	___lltoft@c+2
  2437  0512  0829               	movf	(printf@val+1)^(0+128),w
  2438  0513  00F9               	movwf	___lltoft@c+1
  2439  0514  0828               	movf	printf@val^(0+128),w
  2440  0515  00F8               	movwf	___lltoft@c
  2441  0516  160A  118A  2506  120A  118A  	fcall	___lltoft
  2442  051B  0878               	movf	?___lltoft,w
  2443  051C  1283               	bcf	3,5	;RP0=0, select bank0
  2444  051D  1303               	bcf	3,6	;RP1=0, select bank0
  2445  051E  00D4               	movwf	___ftsub@f2
  2446  051F  0879               	movf	?___lltoft+1,w
  2447  0520  00D5               	movwf	___ftsub@f2+1
  2448  0521  087A               	movf	?___lltoft+2,w
  2449  0522  00D6               	movwf	___ftsub@f2+2
  2450  0523  1683               	bsf	3,5	;RP0=1, select bank1
  2451  0524  1303               	bcf	3,6	;RP1=0, select bank1
  2452  0525  0832               	movf	printf@fval^(0+128),w
  2453  0526  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0527  1303               	bcf	3,6	;RP1=0, select bank0
  2455  0528  00D7               	movwf	___ftsub@f1
  2456  0529  1683               	bsf	3,5	;RP0=1, select bank1
  2457  052A  1303               	bcf	3,6	;RP1=0, select bank1
  2458  052B  0833               	movf	(printf@fval+1)^(0+128),w
  2459  052C  1283               	bcf	3,5	;RP0=0, select bank0
  2460  052D  1303               	bcf	3,6	;RP1=0, select bank0
  2461  052E  00D8               	movwf	___ftsub@f1+1
  2462  052F  1683               	bsf	3,5	;RP0=1, select bank1
  2463  0530  1303               	bcf	3,6	;RP1=0, select bank1
  2464  0531  0834               	movf	(printf@fval+2)^(0+128),w
  2465  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2466  0533  1303               	bcf	3,6	;RP1=0, select bank0
  2467  0534  00D9               	movwf	___ftsub@f1+2
  2468  0535  160A  118A  24E5  120A  118A  	fcall	___ftsub
  2469  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2470  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2471  053C  0854               	movf	?___ftsub,w
  2472  053D  1683               	bsf	3,5	;RP0=1, select bank1
  2473  053E  1303               	bcf	3,6	;RP1=0, select bank1
  2474  053F  00B2               	movwf	printf@fval^(0+128)
  2475  0540  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0541  1303               	bcf	3,6	;RP1=0, select bank0
  2477  0542  0855               	movf	?___ftsub+1,w
  2478  0543  1683               	bsf	3,5	;RP0=1, select bank1
  2479  0544  1303               	bcf	3,6	;RP1=0, select bank1
  2480  0545  00B3               	movwf	(printf@fval+1)^(0+128)
  2481  0546  1283               	bcf	3,5	;RP0=0, select bank0
  2482  0547  1303               	bcf	3,6	;RP1=0, select bank0
  2483  0548  0856               	movf	?___ftsub+2,w
  2484  0549  1683               	bsf	3,5	;RP0=1, select bank1
  2485  054A  1303               	bcf	3,6	;RP1=0, select bank1
  2486  054B  00B4               	movwf	(printf@fval+2)^(0+128)
  2487                           
  2488                           ;doprnt.c: 1133: exp = 0;
  2489  054C  01AC               	clrf	printf@exp^(0+128)
  2490  054D  01AD               	clrf	(printf@exp+1)^(0+128)
  2491  054E                     l2100:	
  2492                           
  2493                           ;doprnt.c: 1134: }
  2494                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2495  054E  01B5               	clrf	printf@c^(0+128)
  2496  054F  0AB5               	incf	printf@c^(0+128),f
  2497  0550  300A               	movlw	10
  2498  0551  0635               	xorwf	printf@c^(0+128),w
  2499  0552  1903               	btfsc	3,2
  2500  0553  2DA8               	goto	l2112
  2501  0554                     l2106:	
  2502                           
  2503                           ;doprnt.c: 1137: if(val < dpowers[c])
  2504  0554  0835               	movf	printf@c^(0+128),w
  2505  0555  1283               	bcf	3,5	;RP0=0, select bank0
  2506  0556  1303               	bcf	3,6	;RP1=0, select bank0
  2507  0557  00DF               	movwf	??_printf
  2508  0558  3001               	movlw	1
  2509  0559                     u3395:	
  2510  0559  1003               	clrc
  2511  055A  0DDF               	rlf	??_printf,f
  2512  055B  3EFF               	addlw	-1
  2513  055C  1D03               	skipz
  2514  055D  2D59               	goto	u3395
  2515  055E  1003               	clrc
  2516  055F  0D5F               	rlf	??_printf,w
  2517  0560  3E12               	addlw	low (_dpowers| (0+32768))
  2518  0561  0084               	movwf	4
  2519  0562  3090               	movlw	high (_dpowers| (0+32768))
  2520  0563  1803               	skipnc
  2521  0564  3E01               	addlw	1
  2522  0565  00FF               	movwf	127
  2523  0566  160A  118A  2000  120A  118A  	fcall	stringtab
  2524  056B  00E0               	movwf	??_printf+1
  2525  056C  160A  118A  2000  120A  118A  	fcall	stringtab
  2526  0571  00E1               	movwf	??_printf+2
  2527  0572  160A  118A  2000  120A  118A  	fcall	stringtab
  2528  0577  00E2               	movwf	??_printf+3
  2529  0578  160A  118A  2000  120A  118A  	fcall	stringtab
  2530  057D  00E3               	movwf	??_printf+4
  2531  057E  0863               	movf	??_printf+4,w
  2532  057F  1683               	bsf	3,5	;RP0=1, select bank1
  2533  0580  1303               	bcf	3,6	;RP1=0, select bank1
  2534  0581  022B               	subwf	(printf@val+3)^(0+128),w
  2535  0582  1D03               	skipz
  2536  0583  2D9A               	goto	u3405
  2537  0584  1283               	bcf	3,5	;RP0=0, select bank0
  2538  0585  1303               	bcf	3,6	;RP1=0, select bank0
  2539  0586  0862               	movf	??_printf+3,w
  2540  0587  1683               	bsf	3,5	;RP0=1, select bank1
  2541  0588  1303               	bcf	3,6	;RP1=0, select bank1
  2542  0589  022A               	subwf	(printf@val+2)^(0+128),w
  2543  058A  1D03               	skipz
  2544  058B  2D9A               	goto	u3405
  2545  058C  1283               	bcf	3,5	;RP0=0, select bank0
  2546  058D  1303               	bcf	3,6	;RP1=0, select bank0
  2547  058E  0861               	movf	??_printf+2,w
  2548  058F  1683               	bsf	3,5	;RP0=1, select bank1
  2549  0590  1303               	bcf	3,6	;RP1=0, select bank1
  2550  0591  0229               	subwf	(printf@val+1)^(0+128),w
  2551  0592  1D03               	skipz
  2552  0593  2D9A               	goto	u3405
  2553  0594  1283               	bcf	3,5	;RP0=0, select bank0
  2554  0595  1303               	bcf	3,6	;RP1=0, select bank0
  2555  0596  0860               	movf	??_printf+1,w
  2556  0597  1683               	bsf	3,5	;RP0=1, select bank1
  2557  0598  1303               	bcf	3,6	;RP1=0, select bank1
  2558  0599  0228               	subwf	printf@val^(0+128),w
  2559  059A                     u3405:	
  2560  059A  1C03               	btfss	3,0
  2561  059B  2DA8               	goto	l2112
  2562                           
  2563                           ;doprnt.c: 1138: break;
  2564  059C  3001               	movlw	1
  2565  059D  1283               	bcf	3,5	;RP0=0, select bank0
  2566  059E  1303               	bcf	3,6	;RP1=0, select bank0
  2567  059F  00DF               	movwf	??_printf
  2568  05A0  085F               	movf	??_printf,w
  2569  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  2570  05A2  1303               	bcf	3,6	;RP1=0, select bank1
  2571  05A3  07B5               	addwf	printf@c^(0+128),f
  2572  05A4  300A               	movlw	10
  2573  05A5  0635               	xorwf	printf@c^(0+128),w
  2574  05A6  1D03               	btfss	3,2
  2575  05A7  2D54               	goto	l2106
  2576  05A8                     l2112:	
  2577                           
  2578                           ;doprnt.c: 1175: {
  2579                           ;doprnt.c: 1188: if(flag & 0x03)
  2580  05A8  3003               	movlw	3
  2581  05A9  0524               	andwf	printf@flag^(0+128),w
  2582  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  2583  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  2584  05AC  00DF               	movwf	??_printf
  2585  05AD  3000               	movlw	0
  2586  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  2587  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  2588  05B0  0525               	andwf	(printf@flag+1)^(0+128),w
  2589  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2590  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2591  05B3  00E0               	movwf	??_printf+1
  2592  05B4  085F               	movf	??_printf,w
  2593  05B5  0460               	iorwf	??_printf+1,w
  2594  05B6  1903               	btfsc	3,2
  2595  05B7  2DBE               	goto	l2122
  2596                           
  2597                           ;doprnt.c: 1190: (putch('-') );
  2598  05B8  302D               	movlw	45
  2599  05B9                     L5:	
  2600  05B9  120A  158A  2001  120A  118A  	fcall	_putch
  2601  05BE                     l2122:	
  2602                           ;doprnt.c: 1195: }
  2603                           ;doprnt.c: 1196: while(c--) {
  2604                           
  2605  05BE  30FF               	movlw	255
  2606  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  2607  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  2608  05C1  00DF               	movwf	??_printf
  2609  05C2  085F               	movf	??_printf,w
  2610  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  2611  05C4  1303               	bcf	3,6	;RP1=0, select bank1
  2612  05C5  07B5               	addwf	printf@c^(0+128),f
  2613  05C6  0A35               	incf	printf@c^(0+128),w
  2614  05C7  1903               	btfsc	3,2
  2615  05C8  2E3E               	goto	l2128
  2616                           
  2617                           ;doprnt.c: 1200: {
  2618                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  2619  05C9  1683               	bsf	3,5	;RP0=1, select bank1
  2620  05CA  1303               	bcf	3,6	;RP1=0, select bank1
  2621  05CB  0835               	movf	printf@c^(0+128),w
  2622  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  2623  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  2624  05CE  00DF               	movwf	??_printf
  2625  05CF  3001               	movlw	1
  2626  05D0                     u3435:	
  2627  05D0  1003               	clrc
  2628  05D1  0DDF               	rlf	??_printf,f
  2629  05D2  3EFF               	addlw	-1
  2630  05D3  1D03               	skipz
  2631  05D4  2DD0               	goto	u3435
  2632  05D5  1003               	clrc
  2633  05D6  0D5F               	rlf	??_printf,w
  2634  05D7  3E12               	addlw	low (_dpowers| (0+32768))
  2635  05D8  0084               	movwf	4
  2636  05D9  3090               	movlw	high (_dpowers| (0+32768))
  2637  05DA  1803               	skipnc
  2638  05DB  3E01               	addlw	1
  2639  05DC  00FF               	movwf	127
  2640  05DD  160A  118A  2000  120A  118A  	fcall	stringtab
  2641  05E2  00F0               	movwf	___lldiv@divisor
  2642  05E3  160A  118A  2000  120A  118A  	fcall	stringtab
  2643  05E8  00F1               	movwf	___lldiv@divisor+1
  2644  05E9  160A  118A  2000  120A  118A  	fcall	stringtab
  2645  05EE  00F2               	movwf	___lldiv@divisor+2
  2646  05EF  160A  118A  2000  120A  118A  	fcall	stringtab
  2647  05F4  00F3               	movwf	___lldiv@divisor+3
  2648  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  2649  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  2650  05F7  082B               	movf	(printf@val+3)^(0+128),w
  2651  05F8  00F7               	movwf	___lldiv@dividend+3
  2652  05F9  082A               	movf	(printf@val+2)^(0+128),w
  2653  05FA  00F6               	movwf	___lldiv@dividend+2
  2654  05FB  0829               	movf	(printf@val+1)^(0+128),w
  2655  05FC  00F5               	movwf	___lldiv@dividend+1
  2656  05FD  0828               	movf	printf@val^(0+128),w
  2657  05FE  00F4               	movwf	___lldiv@dividend
  2658  05FF  160A  118A  2680  120A  118A  	fcall	___lldiv
  2659  0604  0873               	movf	?___lldiv+3,w
  2660  0605  1683               	bsf	3,5	;RP0=1, select bank1
  2661  0606  1303               	bcf	3,6	;RP1=0, select bank1
  2662  0607  00B1               	movwf	(printf@tmpval+3)^(0+128)
  2663  0608  0872               	movf	?___lldiv+2,w
  2664  0609  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2665  060A  0871               	movf	?___lldiv+1,w
  2666  060B  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2667  060C  0870               	movf	?___lldiv,w
  2668  060D  00AE               	movwf	printf@tmpval^(0+128)
  2669                           
  2670                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2671  060E  3000               	movlw	0
  2672  060F  00F3               	movwf	___llmod@divisor+3
  2673  0610  3000               	movlw	0
  2674  0611  00F2               	movwf	___llmod@divisor+2
  2675  0612  3000               	movlw	0
  2676  0613  00F1               	movwf	___llmod@divisor+1
  2677  0614  300A               	movlw	10
  2678  0615  00F0               	movwf	___llmod@divisor
  2679  0616  0831               	movf	(printf@tmpval+3)^(0+128),w
  2680  0617  00F7               	movwf	___llmod@dividend+3
  2681  0618  0830               	movf	(printf@tmpval+2)^(0+128),w
  2682  0619  00F6               	movwf	___llmod@dividend+2
  2683  061A  082F               	movf	(printf@tmpval+1)^(0+128),w
  2684  061B  00F5               	movwf	___llmod@dividend+1
  2685  061C  082E               	movf	printf@tmpval^(0+128),w
  2686  061D  00F4               	movwf	___llmod@dividend
  2687  061E  160A  118A  257C  120A  118A  	fcall	___llmod
  2688  0623  0873               	movf	?___llmod+3,w
  2689  0624  1683               	bsf	3,5	;RP0=1, select bank1
  2690  0625  1303               	bcf	3,6	;RP1=0, select bank1
  2691  0626  00B1               	movwf	(printf@tmpval+3)^(0+128)
  2692  0627  0872               	movf	?___llmod+2,w
  2693  0628  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2694  0629  0871               	movf	?___llmod+1,w
  2695  062A  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2696  062B  0870               	movf	?___llmod,w
  2697  062C  00AE               	movwf	printf@tmpval^(0+128)
  2698                           
  2699                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  2700  062D  082E               	movf	printf@tmpval^(0+128),w
  2701  062E  3E30               	addlw	48
  2702  062F  2DB9               	goto	L5
  2703  0630                     l2124:	
  2704                           ;doprnt.c: 1204: }
  2705                           ;doprnt.c: 1206: }
  2706                           ;doprnt.c: 1207: while(exp > 0) {
  2707                           
  2708                           
  2709                           ;doprnt.c: 1208: (putch('0') );
  2710  0630  3030               	movlw	48
  2711  0631  120A  158A  2001  120A  118A  	fcall	_putch
  2712                           
  2713                           ;doprnt.c: 1209: exp--;
  2714  0636  30FF               	movlw	255
  2715  0637  1683               	bsf	3,5	;RP0=1, select bank1
  2716  0638  1303               	bcf	3,6	;RP1=0, select bank1
  2717  0639  07AC               	addwf	printf@exp^(0+128),f
  2718  063A  1803               	skipnc
  2719  063B  0AAD               	incf	(printf@exp+1)^(0+128),f
  2720  063C  30FF               	movlw	255
  2721  063D  07AD               	addwf	(printf@exp+1)^(0+128),f
  2722  063E                     l2128:	
  2723  063E  082D               	movf	(printf@exp+1)^(0+128),w
  2724  063F  3A80               	xorlw	128
  2725  0640  00FF               	movwf	127
  2726  0641  3080               	movlw	128
  2727  0642  027F               	subwf	127,w
  2728  0643  1D03               	skipz
  2729  0644  2E47               	goto	u3455
  2730  0645  3001               	movlw	1
  2731  0646  022C               	subwf	printf@exp^(0+128),w
  2732  0647                     u3455:	
  2733  0647  1803               	skipnc
  2734  0648  2E30               	goto	l2124
  2735                           
  2736                           ;doprnt.c: 1210: }
  2737                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2738  0649  1683               	bsf	3,5	;RP0=1, select bank1
  2739  064A  1303               	bcf	3,6	;RP1=0, select bank1
  2740  064B  0827               	movf	(printf@prec+1)^(0+128),w
  2741  064C  3A80               	xorlw	128
  2742  064D  00FF               	movwf	127
  2743  064E  3080               	movlw	128
  2744  064F  027F               	subwf	127,w
  2745  0650  1D03               	skipz
  2746  0651  2E54               	goto	u3465
  2747  0652  3009               	movlw	9
  2748  0653  0226               	subwf	printf@prec^(0+128),w
  2749  0654                     u3465:	
  2750  0654  1C03               	skipc
  2751  0655  2E58               	goto	l2134
  2752                           
  2753                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2754  0656  3008               	movlw	8
  2755  0657  2E5B               	goto	L3
  2756  0658                     l2134:	
  2757                           
  2758                           ;doprnt.c: 1213: else
  2759                           ;doprnt.c: 1214: c = prec;
  2760  0658  1683               	bsf	3,5	;RP0=1, select bank1
  2761  0659  1303               	bcf	3,6	;RP1=0, select bank1
  2762  065A  0826               	movf	printf@prec^(0+128),w
  2763  065B                     L3:	
  2764  065B  1283               	bcf	3,5	;RP0=0, select bank0
  2765  065C  1303               	bcf	3,6	;RP1=0, select bank0
  2766  065D  00DF               	movwf	??_printf
  2767  065E  085F               	movf	??_printf,w
  2768  065F  1683               	bsf	3,5	;RP0=1, select bank1
  2769  0660  1303               	bcf	3,6	;RP1=0, select bank1
  2770  0661  00B5               	movwf	printf@c^(0+128)
  2771                           
  2772                           ;doprnt.c: 1215: prec -= c;
  2773  0662  0835               	movf	printf@c^(0+128),w
  2774  0663  1283               	bcf	3,5	;RP0=0, select bank0
  2775  0664  1303               	bcf	3,6	;RP1=0, select bank0
  2776  0665  00DF               	movwf	??_printf
  2777  0666  01E0               	clrf	??_printf+1
  2778  0667  1BDF               	btfsc	??_printf,7
  2779  0668  03E0               	decf	??_printf+1,f
  2780  0669  085F               	movf	??_printf,w
  2781  066A  1683               	bsf	3,5	;RP0=1, select bank1
  2782  066B  1303               	bcf	3,6	;RP1=0, select bank1
  2783  066C  02A6               	subwf	printf@prec^(0+128),f
  2784  066D  1283               	bcf	3,5	;RP0=0, select bank0
  2785  066E  1303               	bcf	3,6	;RP1=0, select bank0
  2786  066F  0860               	movf	??_printf+1,w
  2787  0670  1683               	bsf	3,5	;RP0=1, select bank1
  2788  0671  1303               	bcf	3,6	;RP1=0, select bank1
  2789  0672  1C03               	skipc
  2790  0673  03A7               	decf	(printf@prec+1)^(0+128),f
  2791  0674  02A7               	subwf	(printf@prec+1)^(0+128),f
  2792                           
  2793                           ;doprnt.c: 1219: if(c)
  2794  0675  0835               	movf	printf@c^(0+128),w
  2795  0676  1903               	btfsc	3,2
  2796  0677  2E7E               	goto	l2140
  2797                           
  2798                           ;doprnt.c: 1221: (putch('.') );
  2799  0678  302E               	movlw	46
  2800  0679  120A  158A  2001  120A  118A  	fcall	_putch
  2801  067E                     l2140:	
  2802                           
  2803                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2804  067E  1683               	bsf	3,5	;RP0=1, select bank1
  2805  067F  1303               	bcf	3,6	;RP1=0, select bank1
  2806  0680  0835               	movf	printf@c^(0+128),w
  2807  0681  120A  158A  2535  120A  118A  	fcall	_scale
  2808  0686  1283               	bcf	3,5	;RP0=0, select bank0
  2809  0687  1303               	bcf	3,6	;RP1=0, select bank0
  2810  0688  0837               	movf	?_scale,w
  2811  0689  1683               	bsf	3,5	;RP0=1, select bank1
  2812  068A  1303               	bcf	3,6	;RP1=0, select bank1
  2813  068B  00A0               	movwf	_printf$661^(0+128)
  2814  068C  1283               	bcf	3,5	;RP0=0, select bank0
  2815  068D  1303               	bcf	3,6	;RP1=0, select bank0
  2816  068E  0838               	movf	?_scale+1,w
  2817  068F  1683               	bsf	3,5	;RP0=1, select bank1
  2818  0690  1303               	bcf	3,6	;RP1=0, select bank1
  2819  0691  00A1               	movwf	(_printf$661+1)^(0+128)
  2820  0692  1283               	bcf	3,5	;RP0=0, select bank0
  2821  0693  1303               	bcf	3,6	;RP1=0, select bank0
  2822  0694  0839               	movf	?_scale+2,w
  2823  0695  1683               	bsf	3,5	;RP0=1, select bank1
  2824  0696  1303               	bcf	3,6	;RP1=0, select bank1
  2825  0697  00A2               	movwf	(_printf$661+2)^(0+128)
  2826                           
  2827                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2828  0698  0820               	movf	_printf$661^(0+128),w
  2829  0699  1283               	bcf	3,5	;RP0=0, select bank0
  2830  069A  1303               	bcf	3,6	;RP1=0, select bank0
  2831  069B  00AA               	movwf	___ftmul@f2
  2832  069C  1683               	bsf	3,5	;RP0=1, select bank1
  2833  069D  1303               	bcf	3,6	;RP1=0, select bank1
  2834  069E  0821               	movf	(_printf$661+1)^(0+128),w
  2835  069F  1283               	bcf	3,5	;RP0=0, select bank0
  2836  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  2837  06A1  00AB               	movwf	___ftmul@f2+1
  2838  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  2839  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  2840  06A4  0822               	movf	(_printf$661+2)^(0+128),w
  2841  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  2842  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  2843  06A7  00AC               	movwf	___ftmul@f2+2
  2844  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  2845  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  2846  06AA  0832               	movf	printf@fval^(0+128),w
  2847  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  2848  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  2849  06AD  00A7               	movwf	___ftmul@f1
  2850  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  2851  06AF  1303               	bcf	3,6	;RP1=0, select bank1
  2852  06B0  0833               	movf	(printf@fval+1)^(0+128),w
  2853  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  2854  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  2855  06B3  00A8               	movwf	___ftmul@f1+1
  2856  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  2857  06B5  1303               	bcf	3,6	;RP1=0, select bank1
  2858  06B6  0834               	movf	(printf@fval+2)^(0+128),w
  2859  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  2860  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  2861  06B9  00A9               	movwf	___ftmul@f1+2
  2862  06BA  120A  158A  20CC  120A  118A  	fcall	___ftmul
  2863  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  2864  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  2865  06C1  0827               	movf	?___ftmul,w
  2866  06C2  00C0               	movwf	___fttol@f1
  2867  06C3  0828               	movf	?___ftmul+1,w
  2868  06C4  00C1               	movwf	___fttol@f1+1
  2869  06C5  0829               	movf	?___ftmul+2,w
  2870  06C6  00C2               	movwf	___fttol@f1+2
  2871  06C7  120A  118A  2029  120A  118A  	fcall	___fttol
  2872  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  2873  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  2874  06CE  0843               	movf	?___fttol+3,w
  2875  06CF  1683               	bsf	3,5	;RP0=1, select bank1
  2876  06D0  1303               	bcf	3,6	;RP1=0, select bank1
  2877  06D1  00AB               	movwf	(printf@val+3)^(0+128)
  2878  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  2879  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  2880  06D4  0842               	movf	?___fttol+2,w
  2881  06D5  1683               	bsf	3,5	;RP0=1, select bank1
  2882  06D6  1303               	bcf	3,6	;RP1=0, select bank1
  2883  06D7  00AA               	movwf	(printf@val+2)^(0+128)
  2884  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  2885  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  2886  06DA  0841               	movf	?___fttol+1,w
  2887  06DB  1683               	bsf	3,5	;RP0=1, select bank1
  2888  06DC  1303               	bcf	3,6	;RP1=0, select bank1
  2889  06DD  00A9               	movwf	(printf@val+1)^(0+128)
  2890  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  2891  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  2892  06E0  0840               	movf	?___fttol,w
  2893  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  2894  06E2  1303               	bcf	3,6	;RP1=0, select bank1
  2895  06E3                     L4:	
  2896  06E3  00A8               	movwf	printf@val^(0+128)
  2897  06E4  30FF               	movlw	255
  2898  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  2899  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  2900  06E7  00DF               	movwf	??_printf
  2901  06E8  085F               	movf	??_printf,w
  2902  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  2903  06EA  1303               	bcf	3,6	;RP1=0, select bank1
  2904  06EB  07B5               	addwf	printf@c^(0+128),f
  2905  06EC  0A35               	incf	printf@c^(0+128),w
  2906  06ED  1903               	btfsc	3,2
  2907  06EE  2FAB               	goto	l2156
  2908                           
  2909                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2910                           
  2911                           ;doprnt.c: 1228: while(c--) {
  2912  06EF  0835               	movf	printf@c^(0+128),w
  2913  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  2914  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  2915  06F2  00DF               	movwf	??_printf
  2916  06F3  3001               	movlw	1
  2917  06F4                     u3485:	
  2918  06F4  1003               	clrc
  2919  06F5  0DDF               	rlf	??_printf,f
  2920  06F6  3EFF               	addlw	-1
  2921  06F7  1D03               	skipz
  2922  06F8  2EF4               	goto	u3485
  2923  06F9  1003               	clrc
  2924  06FA  0D5F               	rlf	??_printf,w
  2925  06FB  3E12               	addlw	low (_dpowers| (0+32768))
  2926  06FC  0084               	movwf	4
  2927  06FD  3090               	movlw	high (_dpowers| (0+32768))
  2928  06FE  1803               	skipnc
  2929  06FF  3E01               	addlw	1
  2930  0700  00FF               	movwf	127
  2931  0701  160A  118A  2000  120A  118A  	fcall	stringtab
  2932  0706  00F0               	movwf	___lldiv@divisor
  2933  0707  160A  118A  2000  120A  118A  	fcall	stringtab
  2934  070C  00F1               	movwf	___lldiv@divisor+1
  2935  070D  160A  118A  2000  120A  118A  	fcall	stringtab
  2936  0712  00F2               	movwf	___lldiv@divisor+2
  2937  0713  160A  118A  2000  120A  118A  	fcall	stringtab
  2938  0718  00F3               	movwf	___lldiv@divisor+3
  2939  0719  1683               	bsf	3,5	;RP0=1, select bank1
  2940  071A  1303               	bcf	3,6	;RP1=0, select bank1
  2941  071B  082B               	movf	(printf@val+3)^(0+128),w
  2942  071C  00F7               	movwf	___lldiv@dividend+3
  2943  071D  082A               	movf	(printf@val+2)^(0+128),w
  2944  071E  00F6               	movwf	___lldiv@dividend+2
  2945  071F  0829               	movf	(printf@val+1)^(0+128),w
  2946  0720  00F5               	movwf	___lldiv@dividend+1
  2947  0721  0828               	movf	printf@val^(0+128),w
  2948  0722  00F4               	movwf	___lldiv@dividend
  2949  0723  160A  118A  2680  120A  118A  	fcall	___lldiv
  2950  0728  0873               	movf	?___lldiv+3,w
  2951  0729  1683               	bsf	3,5	;RP0=1, select bank1
  2952  072A  1303               	bcf	3,6	;RP1=0, select bank1
  2953  072B  00B1               	movwf	(printf@tmpval+3)^(0+128)
  2954  072C  0872               	movf	?___lldiv+2,w
  2955  072D  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2956  072E  0871               	movf	?___lldiv+1,w
  2957  072F  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2958  0730  0870               	movf	?___lldiv,w
  2959  0731  00AE               	movwf	printf@tmpval^(0+128)
  2960                           
  2961                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2962  0732  3000               	movlw	0
  2963  0733  00F3               	movwf	___llmod@divisor+3
  2964  0734  3000               	movlw	0
  2965  0735  00F2               	movwf	___llmod@divisor+2
  2966  0736  3000               	movlw	0
  2967  0737  00F1               	movwf	___llmod@divisor+1
  2968  0738  300A               	movlw	10
  2969  0739  00F0               	movwf	___llmod@divisor
  2970  073A  0831               	movf	(printf@tmpval+3)^(0+128),w
  2971  073B  00F7               	movwf	___llmod@dividend+3
  2972  073C  0830               	movf	(printf@tmpval+2)^(0+128),w
  2973  073D  00F6               	movwf	___llmod@dividend+2
  2974  073E  082F               	movf	(printf@tmpval+1)^(0+128),w
  2975  073F  00F5               	movwf	___llmod@dividend+1
  2976  0740  082E               	movf	printf@tmpval^(0+128),w
  2977  0741  00F4               	movwf	___llmod@dividend
  2978  0742  160A  118A  257C  120A  118A  	fcall	___llmod
  2979  0747  0873               	movf	?___llmod+3,w
  2980  0748  1683               	bsf	3,5	;RP0=1, select bank1
  2981  0749  1303               	bcf	3,6	;RP1=0, select bank1
  2982  074A  00B1               	movwf	(printf@tmpval+3)^(0+128)
  2983  074B  0872               	movf	?___llmod+2,w
  2984  074C  00B0               	movwf	(printf@tmpval+2)^(0+128)
  2985  074D  0871               	movf	?___llmod+1,w
  2986  074E  00AF               	movwf	(printf@tmpval+1)^(0+128)
  2987  074F  0870               	movf	?___llmod,w
  2988  0750  00AE               	movwf	printf@tmpval^(0+128)
  2989                           
  2990                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  2991  0751  082E               	movf	printf@tmpval^(0+128),w
  2992  0752  3E30               	addlw	48
  2993  0753  120A  158A  2001  120A  118A  	fcall	_putch
  2994                           
  2995                           ;doprnt.c: 1232: val %= dpowers[c];
  2996  0758  1683               	bsf	3,5	;RP0=1, select bank1
  2997  0759  1303               	bcf	3,6	;RP1=0, select bank1
  2998  075A  0835               	movf	printf@c^(0+128),w
  2999  075B  1283               	bcf	3,5	;RP0=0, select bank0
  3000  075C  1303               	bcf	3,6	;RP1=0, select bank0
  3001  075D  00DF               	movwf	??_printf
  3002  075E  3001               	movlw	1
  3003  075F                     u3495:	
  3004  075F  1003               	clrc
  3005  0760  0DDF               	rlf	??_printf,f
  3006  0761  3EFF               	addlw	-1
  3007  0762  1D03               	skipz
  3008  0763  2F5F               	goto	u3495
  3009  0764  1003               	clrc
  3010  0765  0D5F               	rlf	??_printf,w
  3011  0766  3E12               	addlw	low (_dpowers| (0+32768))
  3012  0767  0084               	movwf	4
  3013  0768  3090               	movlw	high (_dpowers| (0+32768))
  3014  0769  1803               	skipnc
  3015  076A  3E01               	addlw	1
  3016  076B  00FF               	movwf	127
  3017  076C  160A  118A  2000  120A  118A  	fcall	stringtab
  3018  0771  00F0               	movwf	___llmod@divisor
  3019  0772  160A  118A  2000  120A  118A  	fcall	stringtab
  3020  0777  00F1               	movwf	___llmod@divisor+1
  3021  0778  160A  118A  2000  120A  118A  	fcall	stringtab
  3022  077D  00F2               	movwf	___llmod@divisor+2
  3023  077E  160A  118A  2000  120A  118A  	fcall	stringtab
  3024  0783  00F3               	movwf	___llmod@divisor+3
  3025  0784  1683               	bsf	3,5	;RP0=1, select bank1
  3026  0785  1303               	bcf	3,6	;RP1=0, select bank1
  3027  0786  082B               	movf	(printf@val+3)^(0+128),w
  3028  0787  00F7               	movwf	___llmod@dividend+3
  3029  0788  082A               	movf	(printf@val+2)^(0+128),w
  3030  0789  00F6               	movwf	___llmod@dividend+2
  3031  078A  0829               	movf	(printf@val+1)^(0+128),w
  3032  078B  00F5               	movwf	___llmod@dividend+1
  3033  078C  0828               	movf	printf@val^(0+128),w
  3034  078D  00F4               	movwf	___llmod@dividend
  3035  078E  160A  118A  257C  120A  118A  	fcall	___llmod
  3036  0793  0873               	movf	?___llmod+3,w
  3037  0794  1683               	bsf	3,5	;RP0=1, select bank1
  3038  0795  1303               	bcf	3,6	;RP1=0, select bank1
  3039  0796  00AB               	movwf	(printf@val+3)^(0+128)
  3040  0797  0872               	movf	?___llmod+2,w
  3041  0798  00AA               	movwf	(printf@val+2)^(0+128)
  3042  0799  0871               	movf	?___llmod+1,w
  3043  079A  00A9               	movwf	(printf@val+1)^(0+128)
  3044  079B  0870               	movf	?___llmod,w
  3045  079C  2EE3               	goto	L4
  3046  079D                     l2152:	
  3047                           ;doprnt.c: 1233: }
  3048                           ;doprnt.c: 1235: while(prec) {
  3049                           
  3050                           
  3051                           ;doprnt.c: 1236: (putch('0') );
  3052  079D  3030               	movlw	48
  3053  079E  120A  158A  2001  120A  118A  	fcall	_putch
  3054                           
  3055                           ;doprnt.c: 1237: prec--;
  3056  07A3  30FF               	movlw	255
  3057  07A4  1683               	bsf	3,5	;RP0=1, select bank1
  3058  07A5  1303               	bcf	3,6	;RP1=0, select bank1
  3059  07A6  07A6               	addwf	printf@prec^(0+128),f
  3060  07A7  1803               	skipnc
  3061  07A8  0AA7               	incf	(printf@prec+1)^(0+128),f
  3062  07A9  30FF               	movlw	255
  3063  07AA  07A7               	addwf	(printf@prec+1)^(0+128),f
  3064  07AB                     l2156:	
  3065  07AB  0826               	movf	printf@prec^(0+128),w
  3066  07AC  0427               	iorwf	(printf@prec+1)^(0+128),w
  3067  07AD  1903               	btfsc	3,2
  3068  07AE  2A71               	goto	l2162
  3069  07AF  2F9D               	goto	l2152
  3070  07B0                     l2158:	
  3071                           ;doprnt.c: 1238: }
  3072                           ;doprnt.c: 1245: continue;
  3073                           
  3074                           
  3075                           ;doprnt.c: 1246: }
  3076                           ;doprnt.c: 1422: {
  3077                           ;doprnt.c: 1438: if(flag & 0x03)
  3078  07B0  3003               	movlw	3
  3079  07B1  1683               	bsf	3,5	;RP0=1, select bank1
  3080  07B2  1303               	bcf	3,6	;RP1=0, select bank1
  3081  07B3  0524               	andwf	printf@flag^(0+128),w
  3082  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  3083  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  3084  07B6  00DF               	movwf	??_printf
  3085  07B7  3000               	movlw	0
  3086  07B8  1683               	bsf	3,5	;RP0=1, select bank1
  3087  07B9  1303               	bcf	3,6	;RP1=0, select bank1
  3088  07BA  0525               	andwf	(printf@flag+1)^(0+128),w
  3089  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  3090  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  3091  07BD  00E0               	movwf	??_printf+1
  3092  07BE  085F               	movf	??_printf,w
  3093  07BF  0460               	iorwf	??_printf+1,w
  3094  07C0  1903               	btfsc	3,2
  3095  07C1  2A71               	goto	l2162
  3096                           
  3097                           ;doprnt.c: 1439: (putch('-') );
  3098  07C2  302D               	movlw	45
  3099  07C3  120A  158A  2001  120A  118A  	fcall	_putch
  3100  07C8  2A71               	goto	l2162
  3101  07C9                     l134:	
  3102                           ;doprnt.c: 1540: return 0;
  3103                           ;	Return value of _printf is never used
  3104                           
  3105                           ;doprnt.c: 1469: }
  3106                           ;doprnt.c: 1533: }
  3107                           ;doprnt.c: 1535: alldone:
  3108                           
  3109  07C9  0008               	return
  3110  07CA                     __end_of_printf:	
  3111                           
  3112                           	psect	text2
  3113  0D35                     __ptext2:	
  3114 ;; *************** function _scale *****************
  3115 ;; Defined at:
  3116 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  scl             1    wreg     char 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  scl             1   31[BANK0 ] char 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  3   23[BANK0 ] char 
  3123 ;; Registers used:
  3124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3130 ;;      Params:         0       3       0       0       0
  3131 ;;      Locals:         0       4       0       0       0
  3132 ;;      Temps:          0       2       0       0       0
  3133 ;;      Totals:         0       9       0       0       0
  3134 ;;Total ram usage:        9 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    2
  3137 ;; This function calls:
  3138 ;;		___awdiv
  3139 ;;		___awmod
  3140 ;;		___bmul
  3141 ;;		___ftmul
  3142 ;; This function is called by:
  3143 ;;		_printf
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           
  3148                           ;psect for function _scale
  3149  0D35                     _scale:	
  3150                           
  3151                           ;incstack = 0
  3152                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3153                           ;scale@scl stored from wreg
  3154  0D35  1283               	bcf	3,5	;RP0=0, select bank0
  3155  0D36  1303               	bcf	3,6	;RP1=0, select bank0
  3156  0D37  00BF               	movwf	scale@scl
  3157                           
  3158                           ;doprnt.c: 428: if(scl < 0) {
  3159  0D38  1FBF               	btfss	scale@scl,7
  3160  0D39  2E9E               	goto	l1746
  3161                           
  3162                           ;doprnt.c: 429: scl = -scl;
  3163  0D3A  09BF               	comf	scale@scl,f
  3164  0D3B  0ABF               	incf	scale@scl,f
  3165                           
  3166                           ;doprnt.c: 430: if(scl>=110)
  3167  0D3C  083F               	movf	scale@scl,w
  3168  0D3D  3A80               	xorlw	128
  3169  0D3E  3E12               	addlw	-238
  3170  0D3F  1C03               	skipc
  3171  0D40  2E05               	goto	l1736
  3172                           
  3173                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3174  0D41  3003               	movlw	3
  3175  0D42  00BA               	movwf	??_scale
  3176  0D43  083A               	movf	??_scale,w
  3177  0D44  00A4               	movwf	___bmul@multiplicand
  3178  0D45  300A               	movlw	10
  3179  0D46  00F7               	movwf	___awdiv@divisor
  3180  0D47  3000               	movlw	0
  3181  0D48  00F8               	movwf	___awdiv@divisor+1
  3182  0D49  083F               	movf	scale@scl,w
  3183  0D4A  00F2               	movwf	___awmod@dividend
  3184  0D4B  01F3               	clrf	___awmod@dividend+1
  3185  0D4C  1BF2               	btfsc	___awmod@dividend,7
  3186  0D4D  03F3               	decf	___awmod@dividend+1,f
  3187  0D4E  3064               	movlw	100
  3188  0D4F  00F0               	movwf	___awmod@divisor
  3189  0D50  3000               	movlw	0
  3190  0D51  00F1               	movwf	___awmod@divisor+1
  3191  0D52  160A  118A  2531  120A  158A  	fcall	___awmod
  3192  0D57  0871               	movf	?___awmod+1,w
  3193  0D58  00FA               	movwf	___awdiv@dividend+1
  3194  0D59  0870               	movf	?___awmod,w
  3195  0D5A  00F9               	movwf	___awdiv@dividend
  3196  0D5B  160A  118A  25C8  120A  158A  	fcall	___awdiv
  3197  0D60  0877               	movf	?___awdiv,w
  3198  0D61  3E09               	addlw	9
  3199  0D62  160A  118A  24D2  120A  158A  	fcall	___bmul
  3200  0D67  3E61               	addlw	low (__npowers_| (0+32768))
  3201  0D68  0084               	movwf	4
  3202  0D69  3090               	movlw	high (__npowers_| (0+32768))
  3203  0D6A  1803               	skipnc
  3204  0D6B  3E01               	addlw	1
  3205  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  3206  0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  3207  0D6E  00FF               	movwf	127
  3208  0D6F  160A  118A  2000  120A  158A  	fcall	stringtab
  3209  0D74  00A7               	movwf	___ftmul@f1
  3210  0D75  160A  118A  2000  120A  158A  	fcall	stringtab
  3211  0D7A  00A8               	movwf	___ftmul@f1+1
  3212  0D7B  160A  118A  2000  120A  158A  	fcall	stringtab
  3213  0D80  00A9               	movwf	___ftmul@f1+2
  3214  0D81  3003               	movlw	3
  3215  0D82  00BB               	movwf	??_scale+1
  3216  0D83  083B               	movf	??_scale+1,w
  3217  0D84  00A4               	movwf	___bmul@multiplicand
  3218  0D85  3064               	movlw	100
  3219  0D86  00F7               	movwf	___awdiv@divisor
  3220  0D87  3000               	movlw	0
  3221  0D88  00F8               	movwf	___awdiv@divisor+1
  3222  0D89  083F               	movf	scale@scl,w
  3223  0D8A  00F9               	movwf	___awdiv@dividend
  3224  0D8B  01FA               	clrf	___awdiv@dividend+1
  3225  0D8C  1BF9               	btfsc	___awdiv@dividend,7
  3226  0D8D  03FA               	decf	___awdiv@dividend+1,f
  3227  0D8E  160A  118A  25C8  120A  158A  	fcall	___awdiv
  3228  0D93  0877               	movf	?___awdiv,w
  3229  0D94  3E12               	addlw	18
  3230  0D95  160A  118A  24D2  120A  158A  	fcall	___bmul
  3231  0D9A  3E61               	addlw	low (__npowers_| (0+32768))
  3232  0D9B  0084               	movwf	4
  3233  0D9C  3090               	movlw	high (__npowers_| (0+32768))
  3234  0D9D  1803               	skipnc
  3235  0D9E  3E01               	addlw	1
  3236  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  3237  0DA0  1303               	bcf	3,6	;RP1=0, select bank0
  3238  0DA1  00FF               	movwf	127
  3239  0DA2  160A  118A  2000  120A  158A  	fcall	stringtab
  3240  0DA7  00AA               	movwf	___ftmul@f2
  3241  0DA8  160A  118A  2000  120A  158A  	fcall	stringtab
  3242  0DAD  00AB               	movwf	___ftmul@f2+1
  3243  0DAE  160A  118A  2000  120A  158A  	fcall	stringtab
  3244  0DB3  00AC               	movwf	___ftmul@f2+2
  3245  0DB4  120A  158A  20CC  120A  158A  	fcall	___ftmul
  3246  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  3247  0DBA  1303               	bcf	3,6	;RP1=0, select bank0
  3248  0DBB  0827               	movf	?___ftmul,w
  3249  0DBC  00BC               	movwf	_scale$660
  3250  0DBD  0828               	movf	?___ftmul+1,w
  3251  0DBE  00BD               	movwf	_scale$660+1
  3252  0DBF  0829               	movf	?___ftmul+2,w
  3253  0DC0  00BE               	movwf	_scale$660+2
  3254                           
  3255                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3256  0DC1  3003               	movlw	3
  3257  0DC2  00BA               	movwf	??_scale
  3258  0DC3  083A               	movf	??_scale,w
  3259  0DC4  00A4               	movwf	___bmul@multiplicand
  3260  0DC5  083F               	movf	scale@scl,w
  3261  0DC6  00F2               	movwf	___awmod@dividend
  3262  0DC7  01F3               	clrf	___awmod@dividend+1
  3263  0DC8  1BF2               	btfsc	___awmod@dividend,7
  3264  0DC9  03F3               	decf	___awmod@dividend+1,f
  3265  0DCA  300A               	movlw	10
  3266  0DCB  00F0               	movwf	___awmod@divisor
  3267  0DCC  3000               	movlw	0
  3268  0DCD  00F1               	movwf	___awmod@divisor+1
  3269  0DCE  160A  118A  2531  120A  158A  	fcall	___awmod
  3270  0DD3  0870               	movf	?___awmod,w
  3271  0DD4  160A  118A  24D2  120A  158A  	fcall	___bmul
  3272  0DD9  3E61               	addlw	low (__npowers_| (0+32768))
  3273  0DDA  0084               	movwf	4
  3274  0DDB  3090               	movlw	high (__npowers_| (0+32768))
  3275  0DDC  1803               	skipnc
  3276  0DDD  3E01               	addlw	1
  3277  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  3279  0DE0  00FF               	movwf	127
  3280  0DE1  160A  118A  2000  120A  158A  	fcall	stringtab
  3281  0DE6  00A7               	movwf	___ftmul@f1
  3282  0DE7  160A  118A  2000  120A  158A  	fcall	stringtab
  3283  0DEC  00A8               	movwf	___ftmul@f1+1
  3284  0DED  160A  118A  2000  120A  158A  	fcall	stringtab
  3285  0DF2  00A9               	movwf	___ftmul@f1+2
  3286  0DF3  083C               	movf	_scale$660,w
  3287  0DF4  00AA               	movwf	___ftmul@f2
  3288  0DF5  083D               	movf	_scale$660+1,w
  3289  0DF6  00AB               	movwf	___ftmul@f2+1
  3290  0DF7  083E               	movf	_scale$660+2,w
  3291  0DF8  00AC               	movwf	___ftmul@f2+2
  3292  0DF9  120A  158A  20CC   	fcall	___ftmul
  3293  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  3294  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  3295  0DFE  0827               	movf	?___ftmul,w
  3296  0DFF  00B7               	movwf	?_scale
  3297  0E00  0828               	movf	?___ftmul+1,w
  3298  0E01  00B8               	movwf	?_scale+1
  3299  0E02  0829               	movf	?___ftmul+2,w
  3300  0E03  00B9               	movwf	?_scale+2
  3301  0E04  0008               	return
  3302  0E05                     l1736:	
  3303                           
  3304                           ;doprnt.c: 432: else if(scl > 10)
  3305  0E05  083F               	movf	scale@scl,w
  3306  0E06  3A80               	xorlw	128
  3307  0E07  3E75               	addlw	-139
  3308  0E08  1C03               	skipc
  3309  0E09  2E7B               	goto	l1742
  3310                           
  3311                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3312  0E0A  3003               	movlw	3
  3313  0E0B  00BA               	movwf	??_scale
  3314  0E0C  083A               	movf	??_scale,w
  3315  0E0D  00A4               	movwf	___bmul@multiplicand
  3316  0E0E  083F               	movf	scale@scl,w
  3317  0E0F  00F2               	movwf	___awmod@dividend
  3318  0E10  01F3               	clrf	___awmod@dividend+1
  3319  0E11  1BF2               	btfsc	___awmod@dividend,7
  3320  0E12  03F3               	decf	___awmod@dividend+1,f
  3321  0E13  300A               	movlw	10
  3322  0E14  00F0               	movwf	___awmod@divisor
  3323  0E15  3000               	movlw	0
  3324  0E16  00F1               	movwf	___awmod@divisor+1
  3325  0E17  160A  118A  2531  120A  158A  	fcall	___awmod
  3326  0E1C  0870               	movf	?___awmod,w
  3327  0E1D  160A  118A  24D2  120A  158A  	fcall	___bmul
  3328  0E22  3E61               	addlw	low (__npowers_| (0+32768))
  3329  0E23  0084               	movwf	4
  3330  0E24  3090               	movlw	high (__npowers_| (0+32768))
  3331  0E25  1803               	skipnc
  3332  0E26  3E01               	addlw	1
  3333  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  3334  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  3335  0E29  00FF               	movwf	127
  3336  0E2A  160A  118A  2000  120A  158A  	fcall	stringtab
  3337  0E2F  00A7               	movwf	___ftmul@f1
  3338  0E30  160A  118A  2000  120A  158A  	fcall	stringtab
  3339  0E35  00A8               	movwf	___ftmul@f1+1
  3340  0E36  160A  118A  2000  120A  158A  	fcall	stringtab
  3341  0E3B  00A9               	movwf	___ftmul@f1+2
  3342  0E3C  3003               	movlw	3
  3343  0E3D  00BB               	movwf	??_scale+1
  3344  0E3E  083B               	movf	??_scale+1,w
  3345  0E3F  00A4               	movwf	___bmul@multiplicand
  3346  0E40  300A               	movlw	10
  3347  0E41  00F7               	movwf	___awdiv@divisor
  3348  0E42  3000               	movlw	0
  3349  0E43  00F8               	movwf	___awdiv@divisor+1
  3350  0E44  083F               	movf	scale@scl,w
  3351  0E45  00F9               	movwf	___awdiv@dividend
  3352  0E46  01FA               	clrf	___awdiv@dividend+1
  3353  0E47  1BF9               	btfsc	___awdiv@dividend,7
  3354  0E48  03FA               	decf	___awdiv@dividend+1,f
  3355  0E49  160A  118A  25C8  120A  158A  	fcall	___awdiv
  3356  0E4E  0877               	movf	?___awdiv,w
  3357  0E4F  3E09               	addlw	9
  3358  0E50  160A  118A  24D2  120A  158A  	fcall	___bmul
  3359  0E55  3E61               	addlw	low (__npowers_| (0+32768))
  3360  0E56  0084               	movwf	4
  3361  0E57  3090               	movlw	high (__npowers_| (0+32768))
  3362  0E58  1803               	skipnc
  3363  0E59  3E01               	addlw	1
  3364  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  3365  0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  3366  0E5C  00FF               	movwf	127
  3367  0E5D  160A  118A  2000  120A  158A  	fcall	stringtab
  3368  0E62  00AA               	movwf	___ftmul@f2
  3369  0E63  160A  118A  2000  120A  158A  	fcall	stringtab
  3370  0E68  00AB               	movwf	___ftmul@f2+1
  3371  0E69  160A  118A  2000  120A  158A  	fcall	stringtab
  3372  0E6E  00AC               	movwf	___ftmul@f2+2
  3373  0E6F  120A  158A  20CC   	fcall	___ftmul
  3374  0E72  1283               	bcf	3,5	;RP0=0, select bank0
  3375  0E73  1303               	bcf	3,6	;RP1=0, select bank0
  3376  0E74  0827               	movf	?___ftmul,w
  3377  0E75  00B7               	movwf	?_scale
  3378  0E76  0828               	movf	?___ftmul+1,w
  3379  0E77  00B8               	movwf	?_scale+1
  3380  0E78  0829               	movf	?___ftmul+2,w
  3381  0E79  00B9               	movwf	?_scale+2
  3382  0E7A  0008               	return
  3383  0E7B                     l1742:	
  3384                           
  3385                           ;doprnt.c: 434: return _npowers_[scl];
  3386  0E7B  3003               	movlw	3
  3387  0E7C  00BA               	movwf	??_scale
  3388  0E7D  083A               	movf	??_scale,w
  3389  0E7E  00A4               	movwf	___bmul@multiplicand
  3390  0E7F  083F               	movf	scale@scl,w
  3391  0E80  160A  118A  24D2  120A  158A  	fcall	___bmul
  3392  0E85  3E61               	addlw	low (__npowers_| (0+32768))
  3393  0E86  0084               	movwf	4
  3394  0E87  3090               	movlw	high (__npowers_| (0+32768))
  3395  0E88  1803               	skipnc
  3396  0E89  3E01               	addlw	1
  3397  0E8A  1283               	bcf	3,5	;RP0=0, select bank0
  3398  0E8B  1303               	bcf	3,6	;RP1=0, select bank0
  3399  0E8C  00FF               	movwf	127
  3400  0E8D  160A  118A  2000  120A  158A  	fcall	stringtab
  3401  0E92  00B7               	movwf	?_scale
  3402  0E93  160A  118A  2000  120A  158A  	fcall	stringtab
  3403  0E98  00B8               	movwf	?_scale+1
  3404  0E99  160A  118A  2000   	fcall	stringtab
  3405  0E9C  00B9               	movwf	?_scale+2
  3406  0E9D  0008               	return
  3407  0E9E                     l1746:	
  3408                           
  3409                           ;doprnt.c: 435: }
  3410                           ;doprnt.c: 436: if(scl>=110)
  3411  0E9E  083F               	movf	scale@scl,w
  3412  0E9F  3A80               	xorlw	128
  3413  0EA0  3E12               	addlw	-238
  3414  0EA1  1C03               	skipc
  3415  0EA2  2F67               	goto	l1754
  3416                           
  3417                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3418  0EA3  3003               	movlw	3
  3419  0EA4  00BA               	movwf	??_scale
  3420  0EA5  083A               	movf	??_scale,w
  3421  0EA6  00A4               	movwf	___bmul@multiplicand
  3422  0EA7  300A               	movlw	10
  3423  0EA8  00F7               	movwf	___awdiv@divisor
  3424  0EA9  3000               	movlw	0
  3425  0EAA  00F8               	movwf	___awdiv@divisor+1
  3426  0EAB  083F               	movf	scale@scl,w
  3427  0EAC  00F2               	movwf	___awmod@dividend
  3428  0EAD  01F3               	clrf	___awmod@dividend+1
  3429  0EAE  1BF2               	btfsc	___awmod@dividend,7
  3430  0EAF  03F3               	decf	___awmod@dividend+1,f
  3431  0EB0  3064               	movlw	100
  3432  0EB1  00F0               	movwf	___awmod@divisor
  3433  0EB2  3000               	movlw	0
  3434  0EB3  00F1               	movwf	___awmod@divisor+1
  3435  0EB4  160A  118A  2531  120A  158A  	fcall	___awmod
  3436  0EB9  0871               	movf	?___awmod+1,w
  3437  0EBA  00FA               	movwf	___awdiv@dividend+1
  3438  0EBB  0870               	movf	?___awmod,w
  3439  0EBC  00F9               	movwf	___awdiv@dividend
  3440  0EBD  160A  118A  25C8  120A  158A  	fcall	___awdiv
  3441  0EC2  0877               	movf	?___awdiv,w
  3442  0EC3  3E09               	addlw	9
  3443  0EC4  160A  118A  24D2  120A  158A  	fcall	___bmul
  3444  0EC9  3E3A               	addlw	low (__powers_| (0+32768))
  3445  0ECA  0084               	movwf	4
  3446  0ECB  3090               	movlw	high (__powers_| (0+32768))
  3447  0ECC  1803               	skipnc
  3448  0ECD  3E01               	addlw	1
  3449  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  3450  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  3451  0ED0  00FF               	movwf	127
  3452  0ED1  160A  118A  2000  120A  158A  	fcall	stringtab
  3453  0ED6  00A7               	movwf	___ftmul@f1
  3454  0ED7  160A  118A  2000  120A  158A  	fcall	stringtab
  3455  0EDC  00A8               	movwf	___ftmul@f1+1
  3456  0EDD  160A  118A  2000  120A  158A  	fcall	stringtab
  3457  0EE2  00A9               	movwf	___ftmul@f1+2
  3458  0EE3  3003               	movlw	3
  3459  0EE4  00BB               	movwf	??_scale+1
  3460  0EE5  083B               	movf	??_scale+1,w
  3461  0EE6  00A4               	movwf	___bmul@multiplicand
  3462  0EE7  3064               	movlw	100
  3463  0EE8  00F7               	movwf	___awdiv@divisor
  3464  0EE9  3000               	movlw	0
  3465  0EEA  00F8               	movwf	___awdiv@divisor+1
  3466  0EEB  083F               	movf	scale@scl,w
  3467  0EEC  00F9               	movwf	___awdiv@dividend
  3468  0EED  01FA               	clrf	___awdiv@dividend+1
  3469  0EEE  1BF9               	btfsc	___awdiv@dividend,7
  3470  0EEF  03FA               	decf	___awdiv@dividend+1,f
  3471  0EF0  160A  118A  25C8  120A  158A  	fcall	___awdiv
  3472  0EF5  0877               	movf	?___awdiv,w
  3473  0EF6  3E12               	addlw	18
  3474  0EF7  160A  118A  24D2  120A  158A  	fcall	___bmul
  3475  0EFC  3E3A               	addlw	low (__powers_| (0+32768))
  3476  0EFD  0084               	movwf	4
  3477  0EFE  3090               	movlw	high (__powers_| (0+32768))
  3478  0EFF  1803               	skipnc
  3479  0F00  3E01               	addlw	1
  3480  0F01  1283               	bcf	3,5	;RP0=0, select bank0
  3481  0F02  1303               	bcf	3,6	;RP1=0, select bank0
  3482  0F03  00FF               	movwf	127
  3483  0F04  160A  118A  2000  120A  158A  	fcall	stringtab
  3484  0F09  00AA               	movwf	___ftmul@f2
  3485  0F0A  160A  118A  2000  120A  158A  	fcall	stringtab
  3486  0F0F  00AB               	movwf	___ftmul@f2+1
  3487  0F10  160A  118A  2000  120A  158A  	fcall	stringtab
  3488  0F15  00AC               	movwf	___ftmul@f2+2
  3489  0F16  120A  158A  20CC  120A  158A  	fcall	___ftmul
  3490  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  3491  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  3492  0F1D  0827               	movf	?___ftmul,w
  3493  0F1E  00BC               	movwf	_scale$660
  3494  0F1F  0828               	movf	?___ftmul+1,w
  3495  0F20  00BD               	movwf	_scale$660+1
  3496  0F21  0829               	movf	?___ftmul+2,w
  3497  0F22  00BE               	movwf	_scale$660+2
  3498                           
  3499                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3500  0F23  3003               	movlw	3
  3501  0F24  00BA               	movwf	??_scale
  3502  0F25  083A               	movf	??_scale,w
  3503  0F26  00A4               	movwf	___bmul@multiplicand
  3504  0F27  083F               	movf	scale@scl,w
  3505  0F28  00F2               	movwf	___awmod@dividend
  3506  0F29  01F3               	clrf	___awmod@dividend+1
  3507  0F2A  1BF2               	btfsc	___awmod@dividend,7
  3508  0F2B  03F3               	decf	___awmod@dividend+1,f
  3509  0F2C  300A               	movlw	10
  3510  0F2D  00F0               	movwf	___awmod@divisor
  3511  0F2E  3000               	movlw	0
  3512  0F2F  00F1               	movwf	___awmod@divisor+1
  3513  0F30  160A  118A  2531  120A  158A  	fcall	___awmod
  3514  0F35  0870               	movf	?___awmod,w
  3515  0F36  160A  118A  24D2  120A  158A  	fcall	___bmul
  3516  0F3B  3E3A               	addlw	low (__powers_| (0+32768))
  3517  0F3C  0084               	movwf	4
  3518  0F3D  3090               	movlw	high (__powers_| (0+32768))
  3519  0F3E  1803               	skipnc
  3520  0F3F  3E01               	addlw	1
  3521  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  3523  0F42  00FF               	movwf	127
  3524  0F43  160A  118A  2000  120A  158A  	fcall	stringtab
  3525  0F48  00A7               	movwf	___ftmul@f1
  3526  0F49  160A  118A  2000  120A  158A  	fcall	stringtab
  3527  0F4E  00A8               	movwf	___ftmul@f1+1
  3528  0F4F  160A  118A  2000  120A  158A  	fcall	stringtab
  3529  0F54  00A9               	movwf	___ftmul@f1+2
  3530  0F55  083C               	movf	_scale$660,w
  3531  0F56  00AA               	movwf	___ftmul@f2
  3532  0F57  083D               	movf	_scale$660+1,w
  3533  0F58  00AB               	movwf	___ftmul@f2+1
  3534  0F59  083E               	movf	_scale$660+2,w
  3535  0F5A  00AC               	movwf	___ftmul@f2+2
  3536  0F5B  120A  158A  20CC   	fcall	___ftmul
  3537  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3538  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3539  0F60  0827               	movf	?___ftmul,w
  3540  0F61  00B7               	movwf	?_scale
  3541  0F62  0828               	movf	?___ftmul+1,w
  3542  0F63  00B8               	movwf	?_scale+1
  3543  0F64  0829               	movf	?___ftmul+2,w
  3544  0F65  00B9               	movwf	?_scale+2
  3545  0F66  0008               	return
  3546  0F67                     l1754:	
  3547                           
  3548                           ;doprnt.c: 438: else if(scl > 10)
  3549  0F67  083F               	movf	scale@scl,w
  3550  0F68  3A80               	xorlw	128
  3551  0F69  3E75               	addlw	-139
  3552  0F6A  1C03               	skipc
  3553  0F6B  2FDD               	goto	l1760
  3554                           
  3555                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3556  0F6C  3003               	movlw	3
  3557  0F6D  00BA               	movwf	??_scale
  3558  0F6E  083A               	movf	??_scale,w
  3559  0F6F  00A4               	movwf	___bmul@multiplicand
  3560  0F70  083F               	movf	scale@scl,w
  3561  0F71  00F2               	movwf	___awmod@dividend
  3562  0F72  01F3               	clrf	___awmod@dividend+1
  3563  0F73  1BF2               	btfsc	___awmod@dividend,7
  3564  0F74  03F3               	decf	___awmod@dividend+1,f
  3565  0F75  300A               	movlw	10
  3566  0F76  00F0               	movwf	___awmod@divisor
  3567  0F77  3000               	movlw	0
  3568  0F78  00F1               	movwf	___awmod@divisor+1
  3569  0F79  160A  118A  2531  120A  158A  	fcall	___awmod
  3570  0F7E  0870               	movf	?___awmod,w
  3571  0F7F  160A  118A  24D2  120A  158A  	fcall	___bmul
  3572  0F84  3E3A               	addlw	low (__powers_| (0+32768))
  3573  0F85  0084               	movwf	4
  3574  0F86  3090               	movlw	high (__powers_| (0+32768))
  3575  0F87  1803               	skipnc
  3576  0F88  3E01               	addlw	1
  3577  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  3578  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  3579  0F8B  00FF               	movwf	127
  3580  0F8C  160A  118A  2000  120A  158A  	fcall	stringtab
  3581  0F91  00A7               	movwf	___ftmul@f1
  3582  0F92  160A  118A  2000  120A  158A  	fcall	stringtab
  3583  0F97  00A8               	movwf	___ftmul@f1+1
  3584  0F98  160A  118A  2000  120A  158A  	fcall	stringtab
  3585  0F9D  00A9               	movwf	___ftmul@f1+2
  3586  0F9E  3003               	movlw	3
  3587  0F9F  00BB               	movwf	??_scale+1
  3588  0FA0  083B               	movf	??_scale+1,w
  3589  0FA1  00A4               	movwf	___bmul@multiplicand
  3590  0FA2  300A               	movlw	10
  3591  0FA3  00F7               	movwf	___awdiv@divisor
  3592  0FA4  3000               	movlw	0
  3593  0FA5  00F8               	movwf	___awdiv@divisor+1
  3594  0FA6  083F               	movf	scale@scl,w
  3595  0FA7  00F9               	movwf	___awdiv@dividend
  3596  0FA8  01FA               	clrf	___awdiv@dividend+1
  3597  0FA9  1BF9               	btfsc	___awdiv@dividend,7
  3598  0FAA  03FA               	decf	___awdiv@dividend+1,f
  3599  0FAB  160A  118A  25C8  120A  158A  	fcall	___awdiv
  3600  0FB0  0877               	movf	?___awdiv,w
  3601  0FB1  3E09               	addlw	9
  3602  0FB2  160A  118A  24D2  120A  158A  	fcall	___bmul
  3603  0FB7  3E3A               	addlw	low (__powers_| (0+32768))
  3604  0FB8  0084               	movwf	4
  3605  0FB9  3090               	movlw	high (__powers_| (0+32768))
  3606  0FBA  1803               	skipnc
  3607  0FBB  3E01               	addlw	1
  3608  0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  3609  0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  3610  0FBE  00FF               	movwf	127
  3611  0FBF  160A  118A  2000  120A  158A  	fcall	stringtab
  3612  0FC4  00AA               	movwf	___ftmul@f2
  3613  0FC5  160A  118A  2000  120A  158A  	fcall	stringtab
  3614  0FCA  00AB               	movwf	___ftmul@f2+1
  3615  0FCB  160A  118A  2000  120A  158A  	fcall	stringtab
  3616  0FD0  00AC               	movwf	___ftmul@f2+2
  3617  0FD1  120A  158A  20CC   	fcall	___ftmul
  3618  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3619  0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  3620  0FD6  0827               	movf	?___ftmul,w
  3621  0FD7  00B7               	movwf	?_scale
  3622  0FD8  0828               	movf	?___ftmul+1,w
  3623  0FD9  00B8               	movwf	?_scale+1
  3624  0FDA  0829               	movf	?___ftmul+2,w
  3625  0FDB  00B9               	movwf	?_scale+2
  3626  0FDC  0008               	return
  3627  0FDD                     l1760:	
  3628                           
  3629                           ;doprnt.c: 440: return _powers_[scl];
  3630  0FDD  3003               	movlw	3
  3631  0FDE  00BA               	movwf	??_scale
  3632  0FDF  083A               	movf	??_scale,w
  3633  0FE0  00A4               	movwf	___bmul@multiplicand
  3634  0FE1  083F               	movf	scale@scl,w
  3635  0FE2  160A  118A  24D2  120A  158A  	fcall	___bmul
  3636  0FE7  3E3A               	addlw	low (__powers_| (0+32768))
  3637  0FE8  0084               	movwf	4
  3638  0FE9  3090               	movlw	high (__powers_| (0+32768))
  3639  0FEA  1803               	skipnc
  3640  0FEB  3E01               	addlw	1
  3641  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  3642  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  3643  0FEE  00FF               	movwf	127
  3644  0FEF  160A  118A  2000  120A  158A  	fcall	stringtab
  3645  0FF4  00B7               	movwf	?_scale
  3646  0FF5  160A  118A  2000  120A  158A  	fcall	stringtab
  3647  0FFA  00B8               	movwf	?_scale+1
  3648  0FFB  160A  118A  2000   	fcall	stringtab
  3649  0FFE  00B9               	movwf	?_scale+2
  3650  0FFF  0008               	return
  3651  1000                     __end_of_scale:	
  3652                           
  3653                           	psect	text3
  3654  0801                     __ptext3:	
  3655 ;; *************** function _putch *****************
  3656 ;; Defined at:
  3657 ;;		line 3 in file "config.h"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  dato            1    wreg     unsigned char 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  dato            1    0[COMMON] unsigned char 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  1    wreg      void 
  3664 ;; Registers used:
  3665 ;;		wreg
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3671 ;;      Params:         0       0       0       0       0
  3672 ;;      Locals:         1       0       0       0       0
  3673 ;;      Temps:          0       0       0       0       0
  3674 ;;      Totals:         1       0       0       0       0
  3675 ;;Total ram usage:        1 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_printf
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           
  3685                           ;psect for function _putch
  3686  0801                     _putch:	
  3687                           
  3688                           ;incstack = 0
  3689                           ; Regs used in _putch: [wreg]
  3690                           ;putch@dato stored from wreg
  3691  0801  00F0               	movwf	putch@dato
  3692  0802                     l19:	
  3693                           ;config.h: 5: continue;
  3694                           
  3695                           ;config.h: 4: while (! PIR1bits.TXIF)
  3696                           
  3697  0802  1283               	bcf	3,5	;RP0=0, select bank0
  3698  0803  1303               	bcf	3,6	;RP1=0, select bank0
  3699  0804  1E0C               	btfss	12,4	;volatile
  3700  0805  2802               	goto	l19
  3701                           
  3702                           ;config.h: 6: TXREG = dato;
  3703  0806  0870               	movf	putch@dato,w
  3704  0807  0099               	movwf	25	;volatile
  3705  0808  0008               	return
  3706  0809                     __end_of_putch:	
  3707                           
  3708                           	psect	text4
  3709  00B7                     __ptext4:	
  3710 ;; *************** function _fround *****************
  3711 ;; Defined at:
  3712 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  prec            1    wreg     unsigned char 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  prec            1   38[BANK0 ] unsigned char 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  3   23[BANK0 ] unsigned char 
  3719 ;; Registers used:
  3720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3726 ;;      Params:         0       3       0       0       0
  3727 ;;      Locals:         0       7       0       0       0
  3728 ;;      Temps:          0       6       0       0       0
  3729 ;;      Totals:         0      16       0       0       0
  3730 ;;Total ram usage:       16 bytes
  3731 ;; Hardware stack levels used:    1
  3732 ;; Hardware stack levels required when called:    2
  3733 ;; This function calls:
  3734 ;;		___awdiv
  3735 ;;		___awmod
  3736 ;;		___bmul
  3737 ;;		___ftmul
  3738 ;; This function is called by:
  3739 ;;		_printf
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           
  3744                           ;psect for function _fround
  3745  00B7                     _fround:	
  3746                           
  3747                           ;incstack = 0
  3748                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3749                           ;fround@prec stored from wreg
  3750  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  3751  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  3752  00B9  00C6               	movwf	fround@prec
  3753                           
  3754                           ;doprnt.c: 413: if(prec>=110)
  3755  00BA  306E               	movlw	110
  3756  00BB  0246               	subwf	fround@prec,w
  3757  00BC  1C03               	skipc
  3758  00BD  29A1               	goto	l1712
  3759                           
  3760                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3761  00BE  3003               	movlw	3
  3762  00BF  00BA               	movwf	??_fround
  3763  00C0  083A               	movf	??_fround,w
  3764  00C1  00A4               	movwf	___bmul@multiplicand
  3765  00C2  300A               	movlw	10
  3766  00C3  00F7               	movwf	___awdiv@divisor
  3767  00C4  3000               	movlw	0
  3768  00C5  00F8               	movwf	___awdiv@divisor+1
  3769  00C6  0846               	movf	fround@prec,w
  3770  00C7  00BB               	movwf	??_fround+1
  3771  00C8  01BC               	clrf	??_fround+2
  3772  00C9  083B               	movf	??_fround+1,w
  3773  00CA  00F2               	movwf	___awmod@dividend
  3774  00CB  083C               	movf	??_fround+2,w
  3775  00CC  00F3               	movwf	___awmod@dividend+1
  3776  00CD  3064               	movlw	100
  3777  00CE  00F0               	movwf	___awmod@divisor
  3778  00CF  3000               	movlw	0
  3779  00D0  00F1               	movwf	___awmod@divisor+1
  3780  00D1  160A  118A  2531  120A  118A  	fcall	___awmod
  3781  00D6  0871               	movf	?___awmod+1,w
  3782  00D7  00FA               	movwf	___awdiv@dividend+1
  3783  00D8  0870               	movf	?___awmod,w
  3784  00D9  00F9               	movwf	___awdiv@dividend
  3785  00DA  160A  118A  25C8  120A  118A  	fcall	___awdiv
  3786  00DF  0877               	movf	?___awdiv,w
  3787  00E0  3E09               	addlw	9
  3788  00E1  160A  118A  24D2  120A  118A  	fcall	___bmul
  3789  00E6  3E61               	addlw	low (__npowers_| (0+32768))
  3790  00E7  0084               	movwf	4
  3791  00E8  3090               	movlw	high (__npowers_| (0+32768))
  3792  00E9  1803               	skipnc
  3793  00EA  3E01               	addlw	1
  3794  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  3795  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  3796  00ED  00FF               	movwf	127
  3797  00EE  160A  118A  2000  120A  118A  	fcall	stringtab
  3798  00F3  00A7               	movwf	___ftmul@f1
  3799  00F4  160A  118A  2000  120A  118A  	fcall	stringtab
  3800  00F9  00A8               	movwf	___ftmul@f1+1
  3801  00FA  160A  118A  2000  120A  118A  	fcall	stringtab
  3802  00FF  00A9               	movwf	___ftmul@f1+2
  3803  0100  3003               	movlw	3
  3804  0101  00BD               	movwf	??_fround+3
  3805  0102  083D               	movf	??_fround+3,w
  3806  0103  00A4               	movwf	___bmul@multiplicand
  3807  0104  3064               	movlw	100
  3808  0105  00F7               	movwf	___awdiv@divisor
  3809  0106  3000               	movlw	0
  3810  0107  00F8               	movwf	___awdiv@divisor+1
  3811  0108  0846               	movf	fround@prec,w
  3812  0109  00BE               	movwf	??_fround+4
  3813  010A  01BF               	clrf	??_fround+5
  3814  010B  083E               	movf	??_fround+4,w
  3815  010C  00F9               	movwf	___awdiv@dividend
  3816  010D  083F               	movf	??_fround+5,w
  3817  010E  00FA               	movwf	___awdiv@dividend+1
  3818  010F  160A  118A  25C8  120A  118A  	fcall	___awdiv
  3819  0114  0877               	movf	?___awdiv,w
  3820  0115  3E12               	addlw	18
  3821  0116  160A  118A  24D2  120A  118A  	fcall	___bmul
  3822  011B  3E61               	addlw	low (__npowers_| (0+32768))
  3823  011C  0084               	movwf	4
  3824  011D  3090               	movlw	high (__npowers_| (0+32768))
  3825  011E  1803               	skipnc
  3826  011F  3E01               	addlw	1
  3827  0120  1283               	bcf	3,5	;RP0=0, select bank0
  3828  0121  1303               	bcf	3,6	;RP1=0, select bank0
  3829  0122  00FF               	movwf	127
  3830  0123  160A  118A  2000  120A  118A  	fcall	stringtab
  3831  0128  00AA               	movwf	___ftmul@f2
  3832  0129  160A  118A  2000  120A  118A  	fcall	stringtab
  3833  012E  00AB               	movwf	___ftmul@f2+1
  3834  012F  160A  118A  2000  120A  118A  	fcall	stringtab
  3835  0134  00AC               	movwf	___ftmul@f2+2
  3836  0135  120A  158A  20CC  120A  118A  	fcall	___ftmul
  3837  013A  1283               	bcf	3,5	;RP0=0, select bank0
  3838  013B  1303               	bcf	3,6	;RP1=0, select bank0
  3839  013C  0827               	movf	?___ftmul,w
  3840  013D  00C3               	movwf	_fround$658
  3841  013E  0828               	movf	?___ftmul+1,w
  3842  013F  00C4               	movwf	_fround$658+1
  3843  0140  0829               	movf	?___ftmul+2,w
  3844  0141  00C5               	movwf	_fround$658+2
  3845                           
  3846                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3847  0142  3003               	movlw	3
  3848  0143  00BA               	movwf	??_fround
  3849  0144  083A               	movf	??_fround,w
  3850  0145  00A4               	movwf	___bmul@multiplicand
  3851  0146  0846               	movf	fround@prec,w
  3852  0147  00BB               	movwf	??_fround+1
  3853  0148  01BC               	clrf	??_fround+2
  3854  0149  083B               	movf	??_fround+1,w
  3855  014A  00F2               	movwf	___awmod@dividend
  3856  014B  083C               	movf	??_fround+2,w
  3857  014C  00F3               	movwf	___awmod@dividend+1
  3858  014D  300A               	movlw	10
  3859  014E  00F0               	movwf	___awmod@divisor
  3860  014F  3000               	movlw	0
  3861  0150  00F1               	movwf	___awmod@divisor+1
  3862  0151  160A  118A  2531  120A  118A  	fcall	___awmod
  3863  0156  0870               	movf	?___awmod,w
  3864  0157  160A  118A  24D2  120A  118A  	fcall	___bmul
  3865  015C  3E61               	addlw	low (__npowers_| (0+32768))
  3866  015D  0084               	movwf	4
  3867  015E  3090               	movlw	high (__npowers_| (0+32768))
  3868  015F  1803               	skipnc
  3869  0160  3E01               	addlw	1
  3870  0161  1283               	bcf	3,5	;RP0=0, select bank0
  3871  0162  1303               	bcf	3,6	;RP1=0, select bank0
  3872  0163  00FF               	movwf	127
  3873  0164  160A  118A  2000  120A  118A  	fcall	stringtab
  3874  0169  00A7               	movwf	___ftmul@f1
  3875  016A  160A  118A  2000  120A  118A  	fcall	stringtab
  3876  016F  00A8               	movwf	___ftmul@f1+1
  3877  0170  160A  118A  2000  120A  118A  	fcall	stringtab
  3878  0175  00A9               	movwf	___ftmul@f1+2
  3879  0176  0843               	movf	_fround$658,w
  3880  0177  00AA               	movwf	___ftmul@f2
  3881  0178  0844               	movf	_fround$658+1,w
  3882  0179  00AB               	movwf	___ftmul@f2+1
  3883  017A  0845               	movf	_fround$658+2,w
  3884  017B  00AC               	movwf	___ftmul@f2+2
  3885  017C  120A  158A  20CC  120A  118A  	fcall	___ftmul
  3886  0181  1283               	bcf	3,5	;RP0=0, select bank0
  3887  0182  1303               	bcf	3,6	;RP1=0, select bank0
  3888  0183  0827               	movf	?___ftmul,w
  3889  0184  00C0               	movwf	_fround$659
  3890  0185  0828               	movf	?___ftmul+1,w
  3891  0186  00C1               	movwf	_fround$659+1
  3892  0187  0829               	movf	?___ftmul+2,w
  3893  0188  00C2               	movwf	_fround$659+2
  3894                           
  3895                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3896  0189  3000               	movlw	0
  3897  018A  00A7               	movwf	___ftmul@f1
  3898  018B  3000               	movlw	0
  3899  018C  00A8               	movwf	___ftmul@f1+1
  3900  018D  303F               	movlw	63
  3901  018E  00A9               	movwf	___ftmul@f1+2
  3902  018F  0840               	movf	_fround$659,w
  3903  0190  00AA               	movwf	___ftmul@f2
  3904  0191  0841               	movf	_fround$659+1,w
  3905  0192  00AB               	movwf	___ftmul@f2+1
  3906  0193  0842               	movf	_fround$659+2,w
  3907  0194  00AC               	movwf	___ftmul@f2+2
  3908  0195  120A  158A  20CC   	fcall	___ftmul
  3909  0198  1283               	bcf	3,5	;RP0=0, select bank0
  3910  0199  1303               	bcf	3,6	;RP1=0, select bank0
  3911  019A  0827               	movf	?___ftmul,w
  3912  019B  00B7               	movwf	?_fround
  3913  019C  0828               	movf	?___ftmul+1,w
  3914  019D  00B8               	movwf	?_fround+1
  3915  019E  0829               	movf	?___ftmul+2,w
  3916  019F  00B9               	movwf	?_fround+2
  3917  01A0  0008               	return
  3918  01A1                     l1712:	
  3919                           
  3920                           ;doprnt.c: 415: else if(prec > 10)
  3921  01A1  300B               	movlw	11
  3922  01A2  0246               	subwf	fround@prec,w
  3923  01A3  1C03               	skipc
  3924  01A4  2A33               	goto	l1720
  3925                           
  3926                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3927  01A5  3003               	movlw	3
  3928  01A6  00BA               	movwf	??_fround
  3929  01A7  083A               	movf	??_fround,w
  3930  01A8  00A4               	movwf	___bmul@multiplicand
  3931  01A9  0846               	movf	fround@prec,w
  3932  01AA  00BB               	movwf	??_fround+1
  3933  01AB  01BC               	clrf	??_fround+2
  3934  01AC  083B               	movf	??_fround+1,w
  3935  01AD  00F2               	movwf	___awmod@dividend
  3936  01AE  083C               	movf	??_fround+2,w
  3937  01AF  00F3               	movwf	___awmod@dividend+1
  3938  01B0  300A               	movlw	10
  3939  01B1  00F0               	movwf	___awmod@divisor
  3940  01B2  3000               	movlw	0
  3941  01B3  00F1               	movwf	___awmod@divisor+1
  3942  01B4  160A  118A  2531  120A  118A  	fcall	___awmod
  3943  01B9  0870               	movf	?___awmod,w
  3944  01BA  160A  118A  24D2  120A  118A  	fcall	___bmul
  3945  01BF  3E61               	addlw	low (__npowers_| (0+32768))
  3946  01C0  0084               	movwf	4
  3947  01C1  3090               	movlw	high (__npowers_| (0+32768))
  3948  01C2  1803               	skipnc
  3949  01C3  3E01               	addlw	1
  3950  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  3951  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  3952  01C6  00FF               	movwf	127
  3953  01C7  160A  118A  2000  120A  118A  	fcall	stringtab
  3954  01CC  00A7               	movwf	___ftmul@f1
  3955  01CD  160A  118A  2000  120A  118A  	fcall	stringtab
  3956  01D2  00A8               	movwf	___ftmul@f1+1
  3957  01D3  160A  118A  2000  120A  118A  	fcall	stringtab
  3958  01D8  00A9               	movwf	___ftmul@f1+2
  3959  01D9  3003               	movlw	3
  3960  01DA  00BD               	movwf	??_fround+3
  3961  01DB  083D               	movf	??_fround+3,w
  3962  01DC  00A4               	movwf	___bmul@multiplicand
  3963  01DD  300A               	movlw	10
  3964  01DE  00F7               	movwf	___awdiv@divisor
  3965  01DF  3000               	movlw	0
  3966  01E0  00F8               	movwf	___awdiv@divisor+1
  3967  01E1  0846               	movf	fround@prec,w
  3968  01E2  00BE               	movwf	??_fround+4
  3969  01E3  01BF               	clrf	??_fround+5
  3970  01E4  083E               	movf	??_fround+4,w
  3971  01E5  00F9               	movwf	___awdiv@dividend
  3972  01E6  083F               	movf	??_fround+5,w
  3973  01E7  00FA               	movwf	___awdiv@dividend+1
  3974  01E8  160A  118A  25C8  120A  118A  	fcall	___awdiv
  3975  01ED  0877               	movf	?___awdiv,w
  3976  01EE  3E09               	addlw	9
  3977  01EF  160A  118A  24D2  120A  118A  	fcall	___bmul
  3978  01F4  3E61               	addlw	low (__npowers_| (0+32768))
  3979  01F5  0084               	movwf	4
  3980  01F6  3090               	movlw	high (__npowers_| (0+32768))
  3981  01F7  1803               	skipnc
  3982  01F8  3E01               	addlw	1
  3983  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  3984  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  3985  01FB  00FF               	movwf	127
  3986  01FC  160A  118A  2000  120A  118A  	fcall	stringtab
  3987  0201  00AA               	movwf	___ftmul@f2
  3988  0202  160A  118A  2000  120A  118A  	fcall	stringtab
  3989  0207  00AB               	movwf	___ftmul@f2+1
  3990  0208  160A  118A  2000  120A  118A  	fcall	stringtab
  3991  020D  00AC               	movwf	___ftmul@f2+2
  3992  020E  120A  158A  20CC  120A  118A  	fcall	___ftmul
  3993  0213  1283               	bcf	3,5	;RP0=0, select bank0
  3994  0214  1303               	bcf	3,6	;RP1=0, select bank0
  3995  0215  0827               	movf	?___ftmul,w
  3996  0216  00C3               	movwf	_fround$658
  3997  0217  0828               	movf	?___ftmul+1,w
  3998  0218  00C4               	movwf	_fround$658+1
  3999  0219  0829               	movf	?___ftmul+2,w
  4000  021A  00C5               	movwf	_fround$658+2
  4001                           
  4002                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4003  021B  3000               	movlw	0
  4004  021C  00A7               	movwf	___ftmul@f1
  4005  021D  3000               	movlw	0
  4006  021E  00A8               	movwf	___ftmul@f1+1
  4007  021F  303F               	movlw	63
  4008  0220  00A9               	movwf	___ftmul@f1+2
  4009  0221  0843               	movf	_fround$658,w
  4010  0222  00AA               	movwf	___ftmul@f2
  4011  0223  0844               	movf	_fround$658+1,w
  4012  0224  00AB               	movwf	___ftmul@f2+1
  4013  0225  0845               	movf	_fround$658+2,w
  4014  0226  00AC               	movwf	___ftmul@f2+2
  4015  0227  120A  158A  20CC   	fcall	___ftmul
  4016  022A  1283               	bcf	3,5	;RP0=0, select bank0
  4017  022B  1303               	bcf	3,6	;RP1=0, select bank0
  4018  022C  0827               	movf	?___ftmul,w
  4019  022D  00B7               	movwf	?_fround
  4020  022E  0828               	movf	?___ftmul+1,w
  4021  022F  00B8               	movwf	?_fround+1
  4022  0230  0829               	movf	?___ftmul+2,w
  4023  0231  00B9               	movwf	?_fround+2
  4024  0232  0008               	return
  4025  0233                     l1720:	
  4026                           
  4027                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4028  0233  3000               	movlw	0
  4029  0234  00A7               	movwf	___ftmul@f1
  4030  0235  3000               	movlw	0
  4031  0236  00A8               	movwf	___ftmul@f1+1
  4032  0237  303F               	movlw	63
  4033  0238  00A9               	movwf	___ftmul@f1+2
  4034  0239  3003               	movlw	3
  4035  023A  00BA               	movwf	??_fround
  4036  023B  083A               	movf	??_fround,w
  4037  023C  00A4               	movwf	___bmul@multiplicand
  4038  023D  0846               	movf	fround@prec,w
  4039  023E  160A  118A  24D2  120A  118A  	fcall	___bmul
  4040  0243  3E61               	addlw	low (__npowers_| (0+32768))
  4041  0244  0084               	movwf	4
  4042  0245  3090               	movlw	high (__npowers_| (0+32768))
  4043  0246  1803               	skipnc
  4044  0247  3E01               	addlw	1
  4045  0248  1283               	bcf	3,5	;RP0=0, select bank0
  4046  0249  1303               	bcf	3,6	;RP1=0, select bank0
  4047  024A  00FF               	movwf	127
  4048  024B  160A  118A  2000  120A  118A  	fcall	stringtab
  4049  0250  00AA               	movwf	___ftmul@f2
  4050  0251  160A  118A  2000  120A  118A  	fcall	stringtab
  4051  0256  00AB               	movwf	___ftmul@f2+1
  4052  0257  160A  118A  2000  120A  118A  	fcall	stringtab
  4053  025C  00AC               	movwf	___ftmul@f2+2
  4054  025D  120A  158A  20CC   	fcall	___ftmul
  4055  0260  1283               	bcf	3,5	;RP0=0, select bank0
  4056  0261  1303               	bcf	3,6	;RP1=0, select bank0
  4057  0262  0827               	movf	?___ftmul,w
  4058  0263  00B7               	movwf	?_fround
  4059  0264  0828               	movf	?___ftmul+1,w
  4060  0265  00B8               	movwf	?_fround+1
  4061  0266  0829               	movf	?___ftmul+2,w
  4062  0267  00B9               	movwf	?_fround+2
  4063  0268  0008               	return
  4064  0269                     __end_of_fround:	
  4065                           
  4066                           	psect	text5
  4067  08CC                     __ptext5:	
  4068 ;; *************** function ___ftmul *****************
  4069 ;; Defined at:
  4070 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;  f1              3    7[BANK0 ] float 
  4073 ;;  f2              3   10[BANK0 ] float 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  4076 ;;  sign            1   22[BANK0 ] unsigned char 
  4077 ;;  cntr            1   21[BANK0 ] unsigned char 
  4078 ;;  exp             1   17[BANK0 ] unsigned char 
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  3    7[BANK0 ] float 
  4081 ;; Registers used:
  4082 ;;		wreg, status,2, status,0, pclath, cstack
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4088 ;;      Params:         0       6       0       0       0
  4089 ;;      Locals:         0       6       0       0       0
  4090 ;;      Temps:          0       4       0       0       0
  4091 ;;      Totals:         0      16       0       0       0
  4092 ;;Total ram usage:       16 bytes
  4093 ;; Hardware stack levels used:    1
  4094 ;; Hardware stack levels required when called:    1
  4095 ;; This function calls:
  4096 ;;		___ftpack
  4097 ;; This function is called by:
  4098 ;;		_main
  4099 ;;		_fround
  4100 ;;		_scale
  4101 ;;		_printf
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           
  4106                           ;psect for function ___ftmul
  4107  08CC                     ___ftmul:	
  4108                           
  4109                           ;incstack = 0
  4110                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4111  08CC  1283               	bcf	3,5	;RP0=0, select bank0
  4112  08CD  1303               	bcf	3,6	;RP1=0, select bank0
  4113  08CE  0827               	movf	___ftmul@f1,w
  4114  08CF  00AD               	movwf	??___ftmul
  4115  08D0  0828               	movf	___ftmul@f1+1,w
  4116  08D1  00AE               	movwf	??___ftmul+1
  4117  08D2  0829               	movf	___ftmul@f1+2,w
  4118  08D3  00AF               	movwf	??___ftmul+2
  4119  08D4  1003               	clrc
  4120  08D5  0D2E               	rlf	??___ftmul+1,w
  4121  08D6  0D2F               	rlf	??___ftmul+2,w
  4122  08D7  00B0               	movwf	??___ftmul+3
  4123  08D8  0830               	movf	??___ftmul+3,w
  4124  08D9  00B1               	movwf	___ftmul@exp
  4125  08DA  0831               	movf	___ftmul@exp,w
  4126  08DB  1D03               	btfss	3,2
  4127  08DC  28E4               	goto	l1654
  4128  08DD  3000               	movlw	0
  4129  08DE  00A7               	movwf	?___ftmul
  4130  08DF  3000               	movlw	0
  4131  08E0  00A8               	movwf	?___ftmul+1
  4132  08E1  3000               	movlw	0
  4133  08E2  00A9               	movwf	?___ftmul+2
  4134  08E3  0008               	return
  4135  08E4                     l1654:	
  4136  08E4  082A               	movf	___ftmul@f2,w
  4137  08E5  00AD               	movwf	??___ftmul
  4138  08E6  082B               	movf	___ftmul@f2+1,w
  4139  08E7  00AE               	movwf	??___ftmul+1
  4140  08E8  082C               	movf	___ftmul@f2+2,w
  4141  08E9  00AF               	movwf	??___ftmul+2
  4142  08EA  1003               	clrc
  4143  08EB  0D2E               	rlf	??___ftmul+1,w
  4144  08EC  0D2F               	rlf	??___ftmul+2,w
  4145  08ED  00B0               	movwf	??___ftmul+3
  4146  08EE  0830               	movf	??___ftmul+3,w
  4147  08EF  00B6               	movwf	___ftmul@sign
  4148  08F0  0836               	movf	___ftmul@sign,w
  4149  08F1  1D03               	btfss	3,2
  4150  08F2  28FA               	goto	l1660
  4151  08F3  3000               	movlw	0
  4152  08F4  00A7               	movwf	?___ftmul
  4153  08F5  3000               	movlw	0
  4154  08F6  00A8               	movwf	?___ftmul+1
  4155  08F7  3000               	movlw	0
  4156  08F8  00A9               	movwf	?___ftmul+2
  4157  08F9  0008               	return
  4158  08FA                     l1660:	
  4159  08FA  0836               	movf	___ftmul@sign,w
  4160  08FB  3E7B               	addlw	123
  4161  08FC  00AD               	movwf	??___ftmul
  4162  08FD  082D               	movf	??___ftmul,w
  4163  08FE  07B1               	addwf	___ftmul@exp,f
  4164  08FF  0827               	movf	___ftmul@f1,w
  4165  0900  00AD               	movwf	??___ftmul
  4166  0901  0828               	movf	___ftmul@f1+1,w
  4167  0902  00AE               	movwf	??___ftmul+1
  4168  0903  0829               	movf	___ftmul@f1+2,w
  4169  0904  00AF               	movwf	??___ftmul+2
  4170  0905  3010               	movlw	16
  4171  0906                     u2435:	
  4172  0906  1003               	clrc
  4173  0907  0CAF               	rrf	??___ftmul+2,f
  4174  0908  0CAE               	rrf	??___ftmul+1,f
  4175  0909  0CAD               	rrf	??___ftmul,f
  4176  090A  3EFF               	addlw	-1
  4177  090B  1D03               	skipz
  4178  090C  2906               	goto	u2435
  4179  090D  082D               	movf	??___ftmul,w
  4180  090E  00B0               	movwf	??___ftmul+3
  4181  090F  0830               	movf	??___ftmul+3,w
  4182  0910  00B6               	movwf	___ftmul@sign
  4183  0911  082A               	movf	___ftmul@f2,w
  4184  0912  00AD               	movwf	??___ftmul
  4185  0913  082B               	movf	___ftmul@f2+1,w
  4186  0914  00AE               	movwf	??___ftmul+1
  4187  0915  082C               	movf	___ftmul@f2+2,w
  4188  0916  00AF               	movwf	??___ftmul+2
  4189  0917  3010               	movlw	16
  4190  0918                     u2445:	
  4191  0918  1003               	clrc
  4192  0919  0CAF               	rrf	??___ftmul+2,f
  4193  091A  0CAE               	rrf	??___ftmul+1,f
  4194  091B  0CAD               	rrf	??___ftmul,f
  4195  091C  3EFF               	addlw	-1
  4196  091D  1D03               	skipz
  4197  091E  2918               	goto	u2445
  4198  091F  082D               	movf	??___ftmul,w
  4199  0920  00B0               	movwf	??___ftmul+3
  4200  0921  0830               	movf	??___ftmul+3,w
  4201  0922  06B6               	xorwf	___ftmul@sign,f
  4202  0923  3080               	movlw	128
  4203  0924  00AD               	movwf	??___ftmul
  4204  0925  082D               	movf	??___ftmul,w
  4205  0926  05B6               	andwf	___ftmul@sign,f
  4206  0927  17A8               	bsf	___ftmul@f1+1,7
  4207  0928  17AB               	bsf	___ftmul@f2+1,7
  4208  0929  30FF               	movlw	255
  4209  092A  05AA               	andwf	___ftmul@f2,f
  4210  092B  30FF               	movlw	255
  4211  092C  05AB               	andwf	___ftmul@f2+1,f
  4212  092D  3000               	movlw	0
  4213  092E  05AC               	andwf	___ftmul@f2+2,f
  4214  092F  3000               	movlw	0
  4215  0930  00B2               	movwf	___ftmul@f3_as_product
  4216  0931  3000               	movlw	0
  4217  0932  00B3               	movwf	___ftmul@f3_as_product+1
  4218  0933  3000               	movlw	0
  4219  0934  00B4               	movwf	___ftmul@f3_as_product+2
  4220  0935  3007               	movlw	7
  4221  0936  00AD               	movwf	??___ftmul
  4222  0937  082D               	movf	??___ftmul,w
  4223  0938  00B5               	movwf	___ftmul@cntr
  4224  0939                     l1672:	
  4225  0939  1C27               	btfss	___ftmul@f1,0
  4226  093A  2949               	goto	l1676
  4227  093B  082A               	movf	___ftmul@f2,w
  4228  093C  07B2               	addwf	___ftmul@f3_as_product,f
  4229  093D  082B               	movf	___ftmul@f2+1,w
  4230  093E  1103               	clrz
  4231  093F  1803               	skipnc
  4232  0940  0A2B               	incf	___ftmul@f2+1,w
  4233  0941  1D03               	btfss	3,2
  4234  0942  07B3               	addwf	___ftmul@f3_as_product+1,f
  4235  0943  082C               	movf	___ftmul@f2+2,w
  4236  0944  1103               	clrz
  4237  0945  1803               	skipnc
  4238  0946  0A2C               	incf	___ftmul@f2+2,w
  4239  0947  1D03               	btfss	3,2
  4240  0948  07B4               	addwf	___ftmul@f3_as_product+2,f
  4241  0949                     l1676:	
  4242  0949  3001               	movlw	1
  4243  094A                     u2475:	
  4244  094A  1003               	clrc
  4245  094B  0CA9               	rrf	___ftmul@f1+2,f
  4246  094C  0CA8               	rrf	___ftmul@f1+1,f
  4247  094D  0CA7               	rrf	___ftmul@f1,f
  4248  094E  3EFF               	addlw	-1
  4249  094F  1D03               	skipz
  4250  0950  294A               	goto	u2475
  4251  0951  3001               	movlw	1
  4252  0952                     u2485:	
  4253  0952  1003               	clrc
  4254  0953  0DAA               	rlf	___ftmul@f2,f
  4255  0954  0DAB               	rlf	___ftmul@f2+1,f
  4256  0955  0DAC               	rlf	___ftmul@f2+2,f
  4257  0956  3EFF               	addlw	-1
  4258  0957  1D03               	skipz
  4259  0958  2952               	goto	u2485
  4260  0959  3001               	movlw	1
  4261  095A  02B5               	subwf	___ftmul@cntr,f
  4262  095B  1D03               	btfss	3,2
  4263  095C  2939               	goto	l1672
  4264  095D  3009               	movlw	9
  4265  095E  00AD               	movwf	??___ftmul
  4266  095F  082D               	movf	??___ftmul,w
  4267  0960  00B5               	movwf	___ftmul@cntr
  4268  0961                     l1684:	
  4269  0961  1C27               	btfss	___ftmul@f1,0
  4270  0962  2971               	goto	l1688
  4271  0963  082A               	movf	___ftmul@f2,w
  4272  0964  07B2               	addwf	___ftmul@f3_as_product,f
  4273  0965  082B               	movf	___ftmul@f2+1,w
  4274  0966  1103               	clrz
  4275  0967  1803               	skipnc
  4276  0968  0A2B               	incf	___ftmul@f2+1,w
  4277  0969  1D03               	btfss	3,2
  4278  096A  07B3               	addwf	___ftmul@f3_as_product+1,f
  4279  096B  082C               	movf	___ftmul@f2+2,w
  4280  096C  1103               	clrz
  4281  096D  1803               	skipnc
  4282  096E  0A2C               	incf	___ftmul@f2+2,w
  4283  096F  1D03               	btfss	3,2
  4284  0970  07B4               	addwf	___ftmul@f3_as_product+2,f
  4285  0971                     l1688:	
  4286  0971  3001               	movlw	1
  4287  0972                     u2525:	
  4288  0972  1003               	clrc
  4289  0973  0CA9               	rrf	___ftmul@f1+2,f
  4290  0974  0CA8               	rrf	___ftmul@f1+1,f
  4291  0975  0CA7               	rrf	___ftmul@f1,f
  4292  0976  3EFF               	addlw	-1
  4293  0977  1D03               	skipz
  4294  0978  2972               	goto	u2525
  4295  0979  3001               	movlw	1
  4296  097A                     u2535:	
  4297  097A  1003               	clrc
  4298  097B  0CB4               	rrf	___ftmul@f3_as_product+2,f
  4299  097C  0CB3               	rrf	___ftmul@f3_as_product+1,f
  4300  097D  0CB2               	rrf	___ftmul@f3_as_product,f
  4301  097E  3EFF               	addlw	-1
  4302  097F  1D03               	skipz
  4303  0980  297A               	goto	u2535
  4304  0981  3001               	movlw	1
  4305  0982  02B5               	subwf	___ftmul@cntr,f
  4306  0983  1D03               	btfss	3,2
  4307  0984  2961               	goto	l1684
  4308  0985  0832               	movf	___ftmul@f3_as_product,w
  4309  0986  00F0               	movwf	___ftpack@arg
  4310  0987  0833               	movf	___ftmul@f3_as_product+1,w
  4311  0988  00F1               	movwf	___ftpack@arg+1
  4312  0989  0834               	movf	___ftmul@f3_as_product+2,w
  4313  098A  00F2               	movwf	___ftpack@arg+2
  4314  098B  0831               	movf	___ftmul@exp,w
  4315  098C  00AD               	movwf	??___ftmul
  4316  098D  082D               	movf	??___ftmul,w
  4317  098E  00F3               	movwf	___ftpack@exp
  4318  098F  0836               	movf	___ftmul@sign,w
  4319  0990  00AE               	movwf	??___ftmul+1
  4320  0991  082E               	movf	??___ftmul+1,w
  4321  0992  00F4               	movwf	___ftpack@sign
  4322  0993  160A  118A  26DE   	fcall	___ftpack
  4323  0996  0870               	movf	?___ftpack,w
  4324  0997  1283               	bcf	3,5	;RP0=0, select bank0
  4325  0998  1303               	bcf	3,6	;RP1=0, select bank0
  4326  0999  00A7               	movwf	?___ftmul
  4327  099A  0871               	movf	?___ftpack+1,w
  4328  099B  00A8               	movwf	?___ftmul+1
  4329  099C  0872               	movf	?___ftpack+2,w
  4330  099D  00A9               	movwf	?___ftmul+2
  4331  099E  0008               	return
  4332  099F                     __end_of___ftmul:	
  4333                           
  4334                           	psect	text6
  4335  14D2                     __ptext6:	
  4336 ;; *************** function ___bmul *****************
  4337 ;; Defined at:
  4338 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul8.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  multiplier      1    wreg     unsigned char 
  4341 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  multiplier      1    6[BANK0 ] unsigned char 
  4344 ;;  product         1    5[BANK0 ] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  1    wreg      unsigned char 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4354 ;;      Params:         0       1       0       0       0
  4355 ;;      Locals:         0       2       0       0       0
  4356 ;;      Temps:          1       0       0       0       0
  4357 ;;      Totals:         1       3       0       0       0
  4358 ;;Total ram usage:        4 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; This function calls:
  4361 ;;		Nothing
  4362 ;; This function is called by:
  4363 ;;		_fround
  4364 ;;		_scale
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           
  4369                           ;psect for function ___bmul
  4370  14D2                     ___bmul:	
  4371                           
  4372                           ;incstack = 0
  4373                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4374                           ;___bmul@multiplier stored from wreg
  4375  14D2  1283               	bcf	3,5	;RP0=0, select bank0
  4376  14D3  1303               	bcf	3,6	;RP1=0, select bank0
  4377  14D4  00A6               	movwf	___bmul@multiplier
  4378  14D5  01A5               	clrf	___bmul@product
  4379  14D6                     l1484:	
  4380  14D6  1C26               	btfss	___bmul@multiplier,0
  4381  14D7  2CDC               	goto	l1488
  4382  14D8  0824               	movf	___bmul@multiplicand,w
  4383  14D9  00FC               	movwf	??___bmul
  4384  14DA  087C               	movf	??___bmul,w
  4385  14DB  07A5               	addwf	___bmul@product,f
  4386  14DC                     l1488:	
  4387  14DC  1003               	clrc
  4388  14DD  0DA4               	rlf	___bmul@multiplicand,f
  4389  14DE  1003               	clrc
  4390  14DF  0CA6               	rrf	___bmul@multiplier,f
  4391  14E0  0826               	movf	___bmul@multiplier,w
  4392  14E1  1D03               	btfss	3,2
  4393  14E2  2CD6               	goto	l1484
  4394  14E3  0825               	movf	___bmul@product,w
  4395  14E4  0008               	return
  4396  14E5                     __end_of___bmul:	
  4397                           
  4398                           	psect	text7
  4399  1531                     __ptext7:	
  4400 ;; *************** function ___awmod *****************
  4401 ;; Defined at:
  4402 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awmod.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  divisor         2    0[COMMON] int 
  4405 ;;  dividend        2    2[COMMON] int 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  sign            1    6[COMMON] unsigned char 
  4408 ;;  counter         1    5[COMMON] unsigned char 
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  2    0[COMMON] int 
  4411 ;; Registers used:
  4412 ;;		wreg, status,2, status,0
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4418 ;;      Params:         4       0       0       0       0
  4419 ;;      Locals:         2       0       0       0       0
  4420 ;;      Temps:          1       0       0       0       0
  4421 ;;      Totals:         7       0       0       0       0
  4422 ;;Total ram usage:        7 bytes
  4423 ;; Hardware stack levels used:    1
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		_fround
  4428 ;;		_scale
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           
  4433                           ;psect for function ___awmod
  4434  1531                     ___awmod:	
  4435                           
  4436                           ;incstack = 0
  4437                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4438  1531  01F6               	clrf	___awmod@sign
  4439  1532  1FF3               	btfss	___awmod@dividend+1,7
  4440  1533  2D3B               	goto	l1548
  4441  1534  09F2               	comf	___awmod@dividend,f
  4442  1535  09F3               	comf	___awmod@dividend+1,f
  4443  1536  0AF2               	incf	___awmod@dividend,f
  4444  1537  1903               	skipnz
  4445  1538  0AF3               	incf	___awmod@dividend+1,f
  4446  1539  01F6               	clrf	___awmod@sign
  4447  153A  0AF6               	incf	___awmod@sign,f
  4448  153B                     l1548:	
  4449  153B  1FF1               	btfss	___awmod@divisor+1,7
  4450  153C  2D42               	goto	l1552
  4451  153D  09F0               	comf	___awmod@divisor,f
  4452  153E  09F1               	comf	___awmod@divisor+1,f
  4453  153F  0AF0               	incf	___awmod@divisor,f
  4454  1540  1903               	skipnz
  4455  1541  0AF1               	incf	___awmod@divisor+1,f
  4456  1542                     l1552:	
  4457  1542  0870               	movf	___awmod@divisor,w
  4458  1543  0471               	iorwf	___awmod@divisor+1,w
  4459  1544  1903               	btfsc	3,2
  4460  1545  2D6F               	goto	l1570
  4461  1546  01F5               	clrf	___awmod@counter
  4462  1547  0AF5               	incf	___awmod@counter,f
  4463  1548                     l1560:	
  4464  1548  1BF1               	btfsc	___awmod@divisor+1,7
  4465  1549  2D56               	goto	l1562
  4466  154A  3001               	movlw	1
  4467  154B                     u2115:	
  4468  154B  1003               	clrc
  4469  154C  0DF0               	rlf	___awmod@divisor,f
  4470  154D  0DF1               	rlf	___awmod@divisor+1,f
  4471  154E  3EFF               	addlw	-1
  4472  154F  1D03               	skipz
  4473  1550  2D4B               	goto	u2115
  4474  1551  3001               	movlw	1
  4475  1552  00F4               	movwf	??___awmod
  4476  1553  0874               	movf	??___awmod,w
  4477  1554  07F5               	addwf	___awmod@counter,f
  4478  1555  2D48               	goto	l1560
  4479  1556                     l1562:	
  4480  1556  0871               	movf	___awmod@divisor+1,w
  4481  1557  0273               	subwf	___awmod@dividend+1,w
  4482  1558  1D03               	skipz
  4483  1559  2D5C               	goto	u2135
  4484  155A  0870               	movf	___awmod@divisor,w
  4485  155B  0272               	subwf	___awmod@dividend,w
  4486  155C                     u2135:	
  4487  155C  1C03               	skipc
  4488  155D  2D64               	goto	l1566
  4489  155E  0870               	movf	___awmod@divisor,w
  4490  155F  02F2               	subwf	___awmod@dividend,f
  4491  1560  0871               	movf	___awmod@divisor+1,w
  4492  1561  1C03               	skipc
  4493  1562  03F3               	decf	___awmod@dividend+1,f
  4494  1563  02F3               	subwf	___awmod@dividend+1,f
  4495  1564                     l1566:	
  4496  1564  3001               	movlw	1
  4497  1565                     u2145:	
  4498  1565  1003               	clrc
  4499  1566  0CF1               	rrf	___awmod@divisor+1,f
  4500  1567  0CF0               	rrf	___awmod@divisor,f
  4501  1568  3EFF               	addlw	-1
  4502  1569  1D03               	skipz
  4503  156A  2D65               	goto	u2145
  4504  156B  3001               	movlw	1
  4505  156C  02F5               	subwf	___awmod@counter,f
  4506  156D  1D03               	btfss	3,2
  4507  156E  2D56               	goto	l1562
  4508  156F                     l1570:	
  4509  156F  0876               	movf	___awmod@sign,w
  4510  1570  1903               	btfsc	3,2
  4511  1571  2D77               	goto	l1574
  4512  1572  09F2               	comf	___awmod@dividend,f
  4513  1573  09F3               	comf	___awmod@dividend+1,f
  4514  1574  0AF2               	incf	___awmod@dividend,f
  4515  1575  1903               	skipnz
  4516  1576  0AF3               	incf	___awmod@dividend+1,f
  4517  1577                     l1574:	
  4518  1577  0873               	movf	___awmod@dividend+1,w
  4519  1578  00F1               	movwf	?___awmod+1
  4520  1579  0872               	movf	___awmod@dividend,w
  4521  157A  00F0               	movwf	?___awmod
  4522  157B  0008               	return
  4523  157C                     __end_of___awmod:	
  4524                           
  4525                           	psect	text8
  4526  15C8                     __ptext8:	
  4527 ;; *************** function ___awdiv *****************
  4528 ;; Defined at:
  4529 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  divisor         2    7[COMMON] int 
  4532 ;;  dividend        2    9[COMMON] int 
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;  quotient        2    2[BANK0 ] int 
  4535 ;;  sign            1    1[BANK0 ] unsigned char 
  4536 ;;  counter         1    0[BANK0 ] unsigned char 
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  2    7[COMMON] int 
  4539 ;; Registers used:
  4540 ;;		wreg, status,2, status,0
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4546 ;;      Params:         4       0       0       0       0
  4547 ;;      Locals:         0       4       0       0       0
  4548 ;;      Temps:          1       0       0       0       0
  4549 ;;      Totals:         5       4       0       0       0
  4550 ;;Total ram usage:        9 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; This function calls:
  4553 ;;		Nothing
  4554 ;; This function is called by:
  4555 ;;		_fround
  4556 ;;		_scale
  4557 ;;		_printf
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           
  4562                           ;psect for function ___awdiv
  4563  15C8                     ___awdiv:	
  4564                           
  4565                           ;incstack = 0
  4566                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4567  15C8  1283               	bcf	3,5	;RP0=0, select bank0
  4568  15C9  1303               	bcf	3,6	;RP1=0, select bank0
  4569  15CA  01A1               	clrf	___awdiv@sign
  4570  15CB  1FF8               	btfss	___awdiv@divisor+1,7
  4571  15CC  2DD4               	goto	l1504
  4572  15CD  09F7               	comf	___awdiv@divisor,f
  4573  15CE  09F8               	comf	___awdiv@divisor+1,f
  4574  15CF  0AF7               	incf	___awdiv@divisor,f
  4575  15D0  1903               	skipnz
  4576  15D1  0AF8               	incf	___awdiv@divisor+1,f
  4577  15D2  01A1               	clrf	___awdiv@sign
  4578  15D3  0AA1               	incf	___awdiv@sign,f
  4579  15D4                     l1504:	
  4580  15D4  1FFA               	btfss	___awdiv@dividend+1,7
  4581  15D5  2DDF               	goto	l1510
  4582  15D6  09F9               	comf	___awdiv@dividend,f
  4583  15D7  09FA               	comf	___awdiv@dividend+1,f
  4584  15D8  0AF9               	incf	___awdiv@dividend,f
  4585  15D9  1903               	skipnz
  4586  15DA  0AFA               	incf	___awdiv@dividend+1,f
  4587  15DB  3001               	movlw	1
  4588  15DC  00FB               	movwf	??___awdiv
  4589  15DD  087B               	movf	??___awdiv,w
  4590  15DE  06A1               	xorwf	___awdiv@sign,f
  4591  15DF                     l1510:	
  4592  15DF  01A2               	clrf	___awdiv@quotient
  4593  15E0  01A3               	clrf	___awdiv@quotient+1
  4594  15E1  0877               	movf	___awdiv@divisor,w
  4595  15E2  0478               	iorwf	___awdiv@divisor+1,w
  4596  15E3  1903               	btfsc	3,2
  4597  15E4  2E16               	goto	l1532
  4598  15E5  01A0               	clrf	___awdiv@counter
  4599  15E6  0AA0               	incf	___awdiv@counter,f
  4600  15E7                     l1520:	
  4601  15E7  1BF8               	btfsc	___awdiv@divisor+1,7
  4602  15E8  2DF5               	goto	l1522
  4603  15E9  3001               	movlw	1
  4604  15EA                     u2015:	
  4605  15EA  1003               	clrc
  4606  15EB  0DF7               	rlf	___awdiv@divisor,f
  4607  15EC  0DF8               	rlf	___awdiv@divisor+1,f
  4608  15ED  3EFF               	addlw	-1
  4609  15EE  1D03               	skipz
  4610  15EF  2DEA               	goto	u2015
  4611  15F0  3001               	movlw	1
  4612  15F1  00FB               	movwf	??___awdiv
  4613  15F2  087B               	movf	??___awdiv,w
  4614  15F3  07A0               	addwf	___awdiv@counter,f
  4615  15F4  2DE7               	goto	l1520
  4616  15F5                     l1522:	
  4617  15F5  3001               	movlw	1
  4618  15F6                     u2035:	
  4619  15F6  1003               	clrc
  4620  15F7  0DA2               	rlf	___awdiv@quotient,f
  4621  15F8  0DA3               	rlf	___awdiv@quotient+1,f
  4622  15F9  3EFF               	addlw	-1
  4623  15FA  1D03               	skipz
  4624  15FB  2DF6               	goto	u2035
  4625  15FC  0878               	movf	___awdiv@divisor+1,w
  4626  15FD  027A               	subwf	___awdiv@dividend+1,w
  4627  15FE  1D03               	skipz
  4628  15FF  2E02               	goto	u2045
  4629  1600  0877               	movf	___awdiv@divisor,w
  4630  1601  0279               	subwf	___awdiv@dividend,w
  4631  1602                     u2045:	
  4632  1602  1C03               	skipc
  4633  1603  2E0B               	goto	l1528
  4634  1604  0877               	movf	___awdiv@divisor,w
  4635  1605  02F9               	subwf	___awdiv@dividend,f
  4636  1606  0878               	movf	___awdiv@divisor+1,w
  4637  1607  1C03               	skipc
  4638  1608  03FA               	decf	___awdiv@dividend+1,f
  4639  1609  02FA               	subwf	___awdiv@dividend+1,f
  4640  160A  1422               	bsf	___awdiv@quotient,0
  4641  160B                     l1528:	
  4642  160B  3001               	movlw	1
  4643  160C                     u2055:	
  4644  160C  1003               	clrc
  4645  160D  0CF8               	rrf	___awdiv@divisor+1,f
  4646  160E  0CF7               	rrf	___awdiv@divisor,f
  4647  160F  3EFF               	addlw	-1
  4648  1610  1D03               	skipz
  4649  1611  2E0C               	goto	u2055
  4650  1612  3001               	movlw	1
  4651  1613  02A0               	subwf	___awdiv@counter,f
  4652  1614  1D03               	btfss	3,2
  4653  1615  2DF5               	goto	l1522
  4654  1616                     l1532:	
  4655  1616  0821               	movf	___awdiv@sign,w
  4656  1617  1903               	btfsc	3,2
  4657  1618  2E1E               	goto	l1536
  4658  1619  09A2               	comf	___awdiv@quotient,f
  4659  161A  09A3               	comf	___awdiv@quotient+1,f
  4660  161B  0AA2               	incf	___awdiv@quotient,f
  4661  161C  1903               	skipnz
  4662  161D  0AA3               	incf	___awdiv@quotient+1,f
  4663  161E                     l1536:	
  4664  161E  0823               	movf	___awdiv@quotient+1,w
  4665  161F  00F8               	movwf	?___awdiv+1
  4666  1620  0822               	movf	___awdiv@quotient,w
  4667  1621  00F7               	movwf	?___awdiv
  4668  1622  0008               	return
  4669  1623                     __end_of___awdiv:	
  4670                           
  4671                           	psect	text9
  4672  0809                     __ptext9:	
  4673 ;; *************** function __tdiv_to_l_ *****************
  4674 ;; Defined at:
  4675 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdivl.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  f1              3    0[COMMON] float 
  4678 ;;  f2              3    3[COMMON] float 
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;  quot            4    0[BANK0 ] unsigned long 
  4681 ;;  exp1            1    5[BANK0 ] unsigned char 
  4682 ;;  cntr            1    4[BANK0 ] unsigned char 
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  4    0[COMMON] unsigned long 
  4685 ;; Registers used:
  4686 ;;		wreg, status,2, status,0
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4692 ;;      Params:         6       0       0       0       0
  4693 ;;      Locals:         0       6       0       0       0
  4694 ;;      Temps:          4       0       0       0       0
  4695 ;;      Totals:        10       6       0       0       0
  4696 ;;Total ram usage:       16 bytes
  4697 ;; Hardware stack levels used:    1
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_printf
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           
  4706                           ;psect for function __tdiv_to_l_
  4707  0809                     __tdiv_to_l_:	
  4708                           
  4709                           ;incstack = 0
  4710                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4711  0809  0870               	movf	__tdiv_to_l_@f1,w
  4712  080A  00F6               	movwf	??__tdiv_to_l_
  4713  080B  0871               	movf	__tdiv_to_l_@f1+1,w
  4714  080C  00F7               	movwf	??__tdiv_to_l_+1
  4715  080D  0872               	movf	__tdiv_to_l_@f1+2,w
  4716  080E  00F8               	movwf	??__tdiv_to_l_+2
  4717  080F  1003               	clrc
  4718  0810  0D77               	rlf	??__tdiv_to_l_+1,w
  4719  0811  0D78               	rlf	??__tdiv_to_l_+2,w
  4720  0812  00F9               	movwf	??__tdiv_to_l_+3
  4721  0813  0879               	movf	??__tdiv_to_l_+3,w
  4722  0814  1283               	bcf	3,5	;RP0=0, select bank0
  4723  0815  1303               	bcf	3,6	;RP1=0, select bank0
  4724  0816  00A5               	movwf	__tdiv_to_l_@exp1
  4725  0817  0825               	movf	__tdiv_to_l_@exp1,w
  4726  0818  1D03               	btfss	3,2
  4727  0819  2823               	goto	l1770
  4728  081A  3000               	movlw	0
  4729  081B  00F3               	movwf	?__tdiv_to_l_+3
  4730  081C  3000               	movlw	0
  4731  081D  00F2               	movwf	?__tdiv_to_l_+2
  4732  081E  3000               	movlw	0
  4733  081F  00F1               	movwf	?__tdiv_to_l_+1
  4734  0820  3000               	movlw	0
  4735  0821  00F0               	movwf	?__tdiv_to_l_
  4736  0822  0008               	return
  4737  0823                     l1770:	
  4738  0823  0873               	movf	__tdiv_to_l_@f2,w
  4739  0824  00F6               	movwf	??__tdiv_to_l_
  4740  0825  0874               	movf	__tdiv_to_l_@f2+1,w
  4741  0826  00F7               	movwf	??__tdiv_to_l_+1
  4742  0827  0875               	movf	__tdiv_to_l_@f2+2,w
  4743  0828  00F8               	movwf	??__tdiv_to_l_+2
  4744  0829  1003               	clrc
  4745  082A  0D77               	rlf	??__tdiv_to_l_+1,w
  4746  082B  0D78               	rlf	??__tdiv_to_l_+2,w
  4747  082C  00F9               	movwf	??__tdiv_to_l_+3
  4748  082D  0879               	movf	??__tdiv_to_l_+3,w
  4749  082E  00A4               	movwf	__tdiv_to_l_@cntr
  4750  082F  0824               	movf	__tdiv_to_l_@cntr,w
  4751  0830  1D03               	btfss	3,2
  4752  0831  283B               	goto	l453
  4753  0832  3000               	movlw	0
  4754  0833  00F3               	movwf	?__tdiv_to_l_+3
  4755  0834  3000               	movlw	0
  4756  0835  00F2               	movwf	?__tdiv_to_l_+2
  4757  0836  3000               	movlw	0
  4758  0837  00F1               	movwf	?__tdiv_to_l_+1
  4759  0838  3000               	movlw	0
  4760  0839  00F0               	movwf	?__tdiv_to_l_
  4761  083A  0008               	return
  4762  083B                     l453:	
  4763  083B  17F1               	bsf	__tdiv_to_l_@f1+1,7
  4764  083C  30FF               	movlw	255
  4765  083D  05F0               	andwf	__tdiv_to_l_@f1,f
  4766  083E  30FF               	movlw	255
  4767  083F  05F1               	andwf	__tdiv_to_l_@f1+1,f
  4768  0840  3000               	movlw	0
  4769  0841  05F2               	andwf	__tdiv_to_l_@f1+2,f
  4770  0842  17F4               	bsf	__tdiv_to_l_@f2+1,7
  4771  0843  30FF               	movlw	255
  4772  0844  05F3               	andwf	__tdiv_to_l_@f2,f
  4773  0845  30FF               	movlw	255
  4774  0846  05F4               	andwf	__tdiv_to_l_@f2+1,f
  4775  0847  3000               	movlw	0
  4776  0848  05F5               	andwf	__tdiv_to_l_@f2+2,f
  4777  0849  3000               	movlw	0
  4778  084A  00A3               	movwf	__tdiv_to_l_@quot+3
  4779  084B  3000               	movlw	0
  4780  084C  00A2               	movwf	__tdiv_to_l_@quot+2
  4781  084D  3000               	movlw	0
  4782  084E  00A1               	movwf	__tdiv_to_l_@quot+1
  4783  084F  3000               	movlw	0
  4784  0850  00A0               	movwf	__tdiv_to_l_@quot
  4785  0851  307F               	movlw	127
  4786  0852  02A5               	subwf	__tdiv_to_l_@exp1,f
  4787  0853  3098               	movlw	152
  4788  0854  0724               	addwf	__tdiv_to_l_@cntr,w
  4789  0855  00F6               	movwf	??__tdiv_to_l_
  4790  0856  0876               	movf	??__tdiv_to_l_,w
  4791  0857  02A5               	subwf	__tdiv_to_l_@exp1,f
  4792  0858  3018               	movlw	24
  4793  0859  00F6               	movwf	??__tdiv_to_l_
  4794  085A  0876               	movf	??__tdiv_to_l_,w
  4795  085B  00A4               	movwf	__tdiv_to_l_@cntr
  4796  085C                     l1784:	
  4797  085C  3001               	movlw	1
  4798  085D  00F6               	movwf	??__tdiv_to_l_
  4799  085E                     u2655:	
  4800  085E  1003               	clrc
  4801  085F  0DA0               	rlf	__tdiv_to_l_@quot,f
  4802  0860  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4803  0861  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4804  0862  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4805  0863  0BF6               	decfsz	??__tdiv_to_l_,f
  4806  0864  285E               	goto	u2655
  4807  0865  0875               	movf	__tdiv_to_l_@f2+2,w
  4808  0866  0272               	subwf	__tdiv_to_l_@f1+2,w
  4809  0867  1D03               	skipz
  4810  0868  286F               	goto	u2665
  4811  0869  0874               	movf	__tdiv_to_l_@f2+1,w
  4812  086A  0271               	subwf	__tdiv_to_l_@f1+1,w
  4813  086B  1D03               	skipz
  4814  086C  286F               	goto	u2665
  4815  086D  0873               	movf	__tdiv_to_l_@f2,w
  4816  086E  0270               	subwf	__tdiv_to_l_@f1,w
  4817  086F                     u2665:	
  4818  086F  1C03               	skipc
  4819  0870  287C               	goto	l1792
  4820  0871  0873               	movf	__tdiv_to_l_@f2,w
  4821  0872  02F0               	subwf	__tdiv_to_l_@f1,f
  4822  0873  0874               	movf	__tdiv_to_l_@f2+1,w
  4823  0874  1C03               	skipc
  4824  0875  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  4825  0876  02F1               	subwf	__tdiv_to_l_@f1+1,f
  4826  0877  0875               	movf	__tdiv_to_l_@f2+2,w
  4827  0878  1C03               	skipc
  4828  0879  0A75               	incf	__tdiv_to_l_@f2+2,w
  4829  087A  02F2               	subwf	__tdiv_to_l_@f1+2,f
  4830  087B  1420               	bsf	__tdiv_to_l_@quot,0
  4831  087C                     l1792:	
  4832  087C  3001               	movlw	1
  4833  087D                     u2675:	
  4834  087D  1003               	clrc
  4835  087E  0DF0               	rlf	__tdiv_to_l_@f1,f
  4836  087F  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  4837  0880  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  4838  0881  3EFF               	addlw	-1
  4839  0882  1D03               	skipz
  4840  0883  287D               	goto	u2675
  4841  0884  3001               	movlw	1
  4842  0885  02A4               	subwf	__tdiv_to_l_@cntr,f
  4843  0886  1D03               	btfss	3,2
  4844  0887  285C               	goto	l1784
  4845  0888  1FA5               	btfss	__tdiv_to_l_@exp1,7
  4846  0889  28A8               	goto	l1804
  4847  088A  0825               	movf	__tdiv_to_l_@exp1,w
  4848  088B  3A80               	xorlw	128
  4849  088C  3E97               	addlw	151
  4850  088D  1803               	skipnc
  4851  088E  2898               	goto	l1802
  4852  088F  3000               	movlw	0
  4853  0890  00F3               	movwf	?__tdiv_to_l_+3
  4854  0891  3000               	movlw	0
  4855  0892  00F2               	movwf	?__tdiv_to_l_+2
  4856  0893  3000               	movlw	0
  4857  0894  00F1               	movwf	?__tdiv_to_l_+1
  4858  0895  3000               	movlw	0
  4859  0896  00F0               	movwf	?__tdiv_to_l_
  4860  0897  0008               	return
  4861  0898                     l1802:	
  4862  0898  3001               	movlw	1
  4863  0899                     u2715:	
  4864  0899  1003               	clrc
  4865  089A  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  4866  089B  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  4867  089C  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  4868  089D  0CA0               	rrf	__tdiv_to_l_@quot,f
  4869  089E  3EFF               	addlw	-1
  4870  089F  1D03               	skipz
  4871  08A0  2899               	goto	u2715
  4872  08A1  3001               	movlw	1
  4873  08A2  00F6               	movwf	??__tdiv_to_l_
  4874  08A3  0876               	movf	??__tdiv_to_l_,w
  4875  08A4  07A5               	addwf	__tdiv_to_l_@exp1,f
  4876  08A5  1903               	btfsc	3,2
  4877  08A6  28C3               	goto	l1812
  4878  08A7  2898               	goto	l1802
  4879  08A8                     l1804:	
  4880  08A8  3018               	movlw	24
  4881  08A9  0225               	subwf	__tdiv_to_l_@exp1,w
  4882  08AA  1C03               	skipc
  4883  08AB  28C0               	goto	l463
  4884  08AC  3000               	movlw	0
  4885  08AD  00F3               	movwf	?__tdiv_to_l_+3
  4886  08AE  3000               	movlw	0
  4887  08AF  00F2               	movwf	?__tdiv_to_l_+2
  4888  08B0  3000               	movlw	0
  4889  08B1  00F1               	movwf	?__tdiv_to_l_+1
  4890  08B2  3000               	movlw	0
  4891  08B3  00F0               	movwf	?__tdiv_to_l_
  4892  08B4  0008               	return
  4893  08B5                     l1810:	
  4894  08B5  3001               	movlw	1
  4895  08B6  00F6               	movwf	??__tdiv_to_l_
  4896  08B7                     u2745:	
  4897  08B7  1003               	clrc
  4898  08B8  0DA0               	rlf	__tdiv_to_l_@quot,f
  4899  08B9  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4900  08BA  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4901  08BB  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4902  08BC  0BF6               	decfsz	??__tdiv_to_l_,f
  4903  08BD  28B7               	goto	u2745
  4904  08BE  3001               	movlw	1
  4905  08BF  02A5               	subwf	__tdiv_to_l_@exp1,f
  4906  08C0                     l463:	
  4907  08C0  0825               	movf	__tdiv_to_l_@exp1,w
  4908  08C1  1D03               	btfss	3,2
  4909  08C2  28B5               	goto	l1810
  4910  08C3                     l1812:	
  4911  08C3  0823               	movf	__tdiv_to_l_@quot+3,w
  4912  08C4  00F3               	movwf	?__tdiv_to_l_+3
  4913  08C5  0822               	movf	__tdiv_to_l_@quot+2,w
  4914  08C6  00F2               	movwf	?__tdiv_to_l_+2
  4915  08C7  0821               	movf	__tdiv_to_l_@quot+1,w
  4916  08C8  00F1               	movwf	?__tdiv_to_l_+1
  4917  08C9  0820               	movf	__tdiv_to_l_@quot,w
  4918  08CA  00F0               	movwf	?__tdiv_to_l_
  4919  08CB  0008               	return
  4920  08CC                     __end_of__tdiv_to_l_:	
  4921                           
  4922                           	psect	text10
  4923  0AA8                     __ptext10:	
  4924 ;; *************** function __div_to_l_ *****************
  4925 ;; Defined at:
  4926 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fldivl.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  f1              3    0[COMMON] unsigned long 
  4929 ;;  f2              3    3[COMMON] unsigned long 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  quot            4    0[BANK0 ] unsigned long 
  4932 ;;  exp1            1    5[BANK0 ] unsigned char 
  4933 ;;  cntr            1    4[BANK0 ] unsigned char 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  4    0[COMMON] unsigned long 
  4936 ;; Registers used:
  4937 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4943 ;;      Params:         6       0       0       0       0
  4944 ;;      Locals:         0       6       0       0       0
  4945 ;;      Temps:          8       0       0       0       0
  4946 ;;      Totals:        14       6       0       0       0
  4947 ;;Total ram usage:       20 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_printf
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           
  4957                           ;psect for function __div_to_l_
  4958  0AA8                     __div_to_l_:	
  4959                           
  4960                           ;incstack = 0
  4961                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  4962  0AA8  3070               	movlw	low (__div_to_l_@f1| 0)
  4963  0AA9  0084               	movwf	4
  4964  0AAA  0800               	movf	0,w
  4965  0AAB  00F6               	movwf	??__div_to_l_
  4966  0AAC  0A84               	incf	4,f
  4967  0AAD  0800               	movf	0,w
  4968  0AAE  00F7               	movwf	??__div_to_l_+1
  4969  0AAF  0A84               	incf	4,f
  4970  0AB0  0800               	movf	0,w
  4971  0AB1  00F8               	movwf	??__div_to_l_+2
  4972  0AB2  0A84               	incf	4,f
  4973  0AB3  0800               	movf	0,w
  4974  0AB4  00F9               	movwf	??__div_to_l_+3
  4975  0AB5  1003               	clrc
  4976  0AB6  0D78               	rlf	??__div_to_l_+2,w
  4977  0AB7  0D79               	rlf	??__div_to_l_+3,w
  4978  0AB8  00FA               	movwf	??__div_to_l_+4
  4979  0AB9  087A               	movf	??__div_to_l_+4,w
  4980  0ABA  1283               	bcf	3,5	;RP0=0, select bank0
  4981  0ABB  1303               	bcf	3,6	;RP1=0, select bank0
  4982  0ABC  00A5               	movwf	__div_to_l_@exp1
  4983  0ABD  0825               	movf	__div_to_l_@exp1,w
  4984  0ABE  1D03               	btfss	3,2
  4985  0ABF  2AC9               	goto	l1822
  4986  0AC0  3000               	movlw	0
  4987  0AC1  00F3               	movwf	?__div_to_l_+3
  4988  0AC2  3000               	movlw	0
  4989  0AC3  00F2               	movwf	?__div_to_l_+2
  4990  0AC4  3000               	movlw	0
  4991  0AC5  00F1               	movwf	?__div_to_l_+1
  4992  0AC6  3000               	movlw	0
  4993  0AC7  00F0               	movwf	?__div_to_l_
  4994  0AC8  0008               	return
  4995  0AC9                     l1822:	
  4996  0AC9  3073               	movlw	low (__div_to_l_@f2| 0)
  4997  0ACA  0084               	movwf	4
  4998  0ACB  0800               	movf	0,w
  4999  0ACC  00F6               	movwf	??__div_to_l_
  5000  0ACD  0A84               	incf	4,f
  5001  0ACE  0800               	movf	0,w
  5002  0ACF  00F7               	movwf	??__div_to_l_+1
  5003  0AD0  0A84               	incf	4,f
  5004  0AD1  0800               	movf	0,w
  5005  0AD2  00F8               	movwf	??__div_to_l_+2
  5006  0AD3  0A84               	incf	4,f
  5007  0AD4  0800               	movf	0,w
  5008  0AD5  00F9               	movwf	??__div_to_l_+3
  5009  0AD6  1003               	clrc
  5010  0AD7  0D78               	rlf	??__div_to_l_+2,w
  5011  0AD8  0D79               	rlf	??__div_to_l_+3,w
  5012  0AD9  00FA               	movwf	??__div_to_l_+4
  5013  0ADA  087A               	movf	??__div_to_l_+4,w
  5014  0ADB  00A4               	movwf	__div_to_l_@cntr
  5015  0ADC  0824               	movf	__div_to_l_@cntr,w
  5016  0ADD  1D03               	btfss	3,2
  5017  0ADE  2AE8               	goto	l1828
  5018  0ADF  3000               	movlw	0
  5019  0AE0  00F3               	movwf	?__div_to_l_+3
  5020  0AE1  3000               	movlw	0
  5021  0AE2  00F2               	movwf	?__div_to_l_+2
  5022  0AE3  3000               	movlw	0
  5023  0AE4  00F1               	movwf	?__div_to_l_+1
  5024  0AE5  3000               	movlw	0
  5025  0AE6  00F0               	movwf	?__div_to_l_
  5026  0AE7  0008               	return
  5027  0AE8                     l1828:	
  5028  0AE8  3070               	movlw	low (__div_to_l_@f1| 0)
  5029  0AE9  0084               	movwf	4
  5030  0AEA  3000               	movlw	0
  5031  0AEB  0480               	iorwf	0,f
  5032  0AEC  0A84               	incf	4,f
  5033  0AED  3000               	movlw	0
  5034  0AEE  0480               	iorwf	0,f
  5035  0AEF  0A84               	incf	4,f
  5036  0AF0  3080               	movlw	128
  5037  0AF1  0480               	iorwf	0,f
  5038  0AF2  0A84               	incf	4,f
  5039  0AF3  3000               	movlw	0
  5040  0AF4  0480               	iorwf	0,f
  5041  0AF5  3070               	movlw	low (__div_to_l_@f1| 0)
  5042  0AF6  0084               	movwf	4
  5043  0AF7  30FF               	movlw	255
  5044  0AF8  0580               	andwf	0,f
  5045  0AF9  0A84               	incf	4,f
  5046  0AFA  30FF               	movlw	255
  5047  0AFB  0580               	andwf	0,f
  5048  0AFC  0A84               	incf	4,f
  5049  0AFD  30FF               	movlw	255
  5050  0AFE  0580               	andwf	0,f
  5051  0AFF  0A84               	incf	4,f
  5052  0B00  3000               	movlw	0
  5053  0B01  0580               	andwf	0,f
  5054  0B02  3073               	movlw	low (__div_to_l_@f2| 0)
  5055  0B03  0084               	movwf	4
  5056  0B04  3000               	movlw	0
  5057  0B05  0480               	iorwf	0,f
  5058  0B06  0A84               	incf	4,f
  5059  0B07  3000               	movlw	0
  5060  0B08  0480               	iorwf	0,f
  5061  0B09  0A84               	incf	4,f
  5062  0B0A  3080               	movlw	128
  5063  0B0B  0480               	iorwf	0,f
  5064  0B0C  0A84               	incf	4,f
  5065  0B0D  3000               	movlw	0
  5066  0B0E  0480               	iorwf	0,f
  5067  0B0F  3073               	movlw	low (__div_to_l_@f2| 0)
  5068  0B10  0084               	movwf	4
  5069  0B11  30FF               	movlw	255
  5070  0B12  0580               	andwf	0,f
  5071  0B13  0A84               	incf	4,f
  5072  0B14  30FF               	movlw	255
  5073  0B15  0580               	andwf	0,f
  5074  0B16  0A84               	incf	4,f
  5075  0B17  30FF               	movlw	255
  5076  0B18  0580               	andwf	0,f
  5077  0B19  0A84               	incf	4,f
  5078  0B1A  3000               	movlw	0
  5079  0B1B  0580               	andwf	0,f
  5080  0B1C  3000               	movlw	0
  5081  0B1D  00A3               	movwf	__div_to_l_@quot+3
  5082  0B1E  3000               	movlw	0
  5083  0B1F  00A2               	movwf	__div_to_l_@quot+2
  5084  0B20  3000               	movlw	0
  5085  0B21  00A1               	movwf	__div_to_l_@quot+1
  5086  0B22  3000               	movlw	0
  5087  0B23  00A0               	movwf	__div_to_l_@quot
  5088  0B24  307F               	movlw	127
  5089  0B25  02A5               	subwf	__div_to_l_@exp1,f
  5090  0B26  30A0               	movlw	160
  5091  0B27  0724               	addwf	__div_to_l_@cntr,w
  5092  0B28  00F6               	movwf	??__div_to_l_
  5093  0B29  0876               	movf	??__div_to_l_,w
  5094  0B2A  02A5               	subwf	__div_to_l_@exp1,f
  5095  0B2B  3020               	movlw	32
  5096  0B2C  00F6               	movwf	??__div_to_l_
  5097  0B2D  0876               	movf	??__div_to_l_,w
  5098  0B2E  00A4               	movwf	__div_to_l_@cntr
  5099  0B2F                     l1838:	
  5100  0B2F  3001               	movlw	1
  5101  0B30  00F6               	movwf	??__div_to_l_
  5102  0B31                     u2785:	
  5103  0B31  1003               	clrc
  5104  0B32  0DA0               	rlf	__div_to_l_@quot,f
  5105  0B33  0DA1               	rlf	__div_to_l_@quot+1,f
  5106  0B34  0DA2               	rlf	__div_to_l_@quot+2,f
  5107  0B35  0DA3               	rlf	__div_to_l_@quot+3,f
  5108  0B36  0BF6               	decfsz	??__div_to_l_,f
  5109  0B37  2B31               	goto	u2785
  5110  0B38  3073               	movlw	low (__div_to_l_@f2| 0)
  5111  0B39  0084               	movwf	4
  5112  0B3A  0800               	movf	0,w
  5113  0B3B  00F6               	movwf	??__div_to_l_
  5114  0B3C  0A84               	incf	4,f
  5115  0B3D  0800               	movf	0,w
  5116  0B3E  00F7               	movwf	??__div_to_l_+1
  5117  0B3F  0A84               	incf	4,f
  5118  0B40  0800               	movf	0,w
  5119  0B41  00F8               	movwf	??__div_to_l_+2
  5120  0B42  0A84               	incf	4,f
  5121  0B43  0800               	movf	0,w
  5122  0B44  00F9               	movwf	??__div_to_l_+3
  5123  0B45  3070               	movlw	low (__div_to_l_@f1| 0)
  5124  0B46  0084               	movwf	4
  5125  0B47  0800               	movf	0,w
  5126  0B48  00FA               	movwf	??__div_to_l_+4
  5127  0B49  0A84               	incf	4,f
  5128  0B4A  0800               	movf	0,w
  5129  0B4B  00FB               	movwf	??__div_to_l_+5
  5130  0B4C  0A84               	incf	4,f
  5131  0B4D  0800               	movf	0,w
  5132  0B4E  00FC               	movwf	??__div_to_l_+6
  5133  0B4F  0A84               	incf	4,f
  5134  0B50  0800               	movf	0,w
  5135  0B51  00FD               	movwf	??__div_to_l_+7
  5136  0B52  0879               	movf	??__div_to_l_+3,w
  5137  0B53  027D               	subwf	??__div_to_l_+7,w
  5138  0B54  1D03               	skipz
  5139  0B55  2B60               	goto	u2795
  5140  0B56  0878               	movf	??__div_to_l_+2,w
  5141  0B57  027C               	subwf	??__div_to_l_+6,w
  5142  0B58  1D03               	skipz
  5143  0B59  2B60               	goto	u2795
  5144  0B5A  0877               	movf	??__div_to_l_+1,w
  5145  0B5B  027B               	subwf	??__div_to_l_+5,w
  5146  0B5C  1D03               	skipz
  5147  0B5D  2B60               	goto	u2795
  5148  0B5E  0876               	movf	??__div_to_l_,w
  5149  0B5F  027A               	subwf	??__div_to_l_+4,w
  5150  0B60                     u2795:	
  5151  0B60  1C03               	skipc
  5152  0B61  2B85               	goto	l376
  5153  0B62  3073               	movlw	low (__div_to_l_@f2| 0)
  5154  0B63  0084               	movwf	4
  5155  0B64  0800               	movf	0,w
  5156  0B65  00F6               	movwf	??__div_to_l_
  5157  0B66  0A84               	incf	4,f
  5158  0B67  0800               	movf	0,w
  5159  0B68  00F7               	movwf	??__div_to_l_+1
  5160  0B69  0A84               	incf	4,f
  5161  0B6A  0800               	movf	0,w
  5162  0B6B  00F8               	movwf	??__div_to_l_+2
  5163  0B6C  0A84               	incf	4,f
  5164  0B6D  0800               	movf	0,w
  5165  0B6E  00F9               	movwf	??__div_to_l_+3
  5166  0B6F  3070               	movlw	low (__div_to_l_@f1| 0)
  5167  0B70  0084               	movwf	4
  5168  0B71  0876               	movf	??__div_to_l_,w
  5169  0B72  0280               	subwf	0,f
  5170  0B73  0A84               	incf	4,f
  5171  0B74  0877               	movf	??__div_to_l_+1,w
  5172  0B75  1C03               	skipc
  5173  0B76  0F77               	incfsz	??__div_to_l_+1,w
  5174  0B77  0280               	subwf	0,f
  5175  0B78  0A84               	incf	4,f
  5176  0B79  0878               	movf	??__div_to_l_+2,w
  5177  0B7A  1C03               	skipc
  5178  0B7B  0F78               	incfsz	??__div_to_l_+2,w
  5179  0B7C  0280               	subwf	0,f
  5180  0B7D  0A84               	incf	4,f
  5181  0B7E  0879               	movf	??__div_to_l_+3,w
  5182  0B7F  1C03               	skipc
  5183  0B80  0A79               	incf	??__div_to_l_+3,w
  5184  0B81  0280               	subwf	0,f
  5185  0B82  3003               	movlw	3
  5186  0B83  0284               	subwf	4,f
  5187  0B84  1420               	bsf	__div_to_l_@quot,0
  5188  0B85                     l376:	
  5189  0B85  3070               	movlw	low (__div_to_l_@f1| 0)
  5190  0B86  0084               	movwf	4
  5191  0B87  1003               	clrc
  5192  0B88  0D80               	rlf	0,f
  5193  0B89  0A84               	incf	4,f
  5194  0B8A  0D80               	rlf	0,f
  5195  0B8B  0A84               	incf	4,f
  5196  0B8C  0D80               	rlf	0,f
  5197  0B8D  0A84               	incf	4,f
  5198  0B8E  0D80               	rlf	0,f
  5199  0B8F  0384               	decf	4,f
  5200  0B90  0384               	decf	4,f
  5201  0B91  0384               	decf	4,f
  5202  0B92  3001               	movlw	1
  5203  0B93  02A4               	subwf	__div_to_l_@cntr,f
  5204  0B94  1D03               	btfss	3,2
  5205  0B95  2B2F               	goto	l1838
  5206  0B96  1FA5               	btfss	__div_to_l_@exp1,7
  5207  0B97  2BB6               	goto	l1856
  5208  0B98  0825               	movf	__div_to_l_@exp1,w
  5209  0B99  3A80               	xorlw	128
  5210  0B9A  3E9F               	addlw	159
  5211  0B9B  1803               	skipnc
  5212  0B9C  2BA6               	goto	l1854
  5213  0B9D  3000               	movlw	0
  5214  0B9E  00F3               	movwf	?__div_to_l_+3
  5215  0B9F  3000               	movlw	0
  5216  0BA0  00F2               	movwf	?__div_to_l_+2
  5217  0BA1  3000               	movlw	0
  5218  0BA2  00F1               	movwf	?__div_to_l_+1
  5219  0BA3  3000               	movlw	0
  5220  0BA4  00F0               	movwf	?__div_to_l_
  5221  0BA5  0008               	return
  5222  0BA6                     l1854:	
  5223  0BA6  3001               	movlw	1
  5224  0BA7                     u2835:	
  5225  0BA7  1003               	clrc
  5226  0BA8  0CA3               	rrf	__div_to_l_@quot+3,f
  5227  0BA9  0CA2               	rrf	__div_to_l_@quot+2,f
  5228  0BAA  0CA1               	rrf	__div_to_l_@quot+1,f
  5229  0BAB  0CA0               	rrf	__div_to_l_@quot,f
  5230  0BAC  3EFF               	addlw	-1
  5231  0BAD  1D03               	skipz
  5232  0BAE  2BA7               	goto	u2835
  5233  0BAF  3001               	movlw	1
  5234  0BB0  00F6               	movwf	??__div_to_l_
  5235  0BB1  0876               	movf	??__div_to_l_,w
  5236  0BB2  07A5               	addwf	__div_to_l_@exp1,f
  5237  0BB3  1903               	btfsc	3,2
  5238  0BB4  2BD1               	goto	l1864
  5239  0BB5  2BA6               	goto	l1854
  5240  0BB6                     l1856:	
  5241  0BB6  3020               	movlw	32
  5242  0BB7  0225               	subwf	__div_to_l_@exp1,w
  5243  0BB8  1C03               	skipc
  5244  0BB9  2BCE               	goto	l384
  5245  0BBA  3000               	movlw	0
  5246  0BBB  00F3               	movwf	?__div_to_l_+3
  5247  0BBC  3000               	movlw	0
  5248  0BBD  00F2               	movwf	?__div_to_l_+2
  5249  0BBE  3000               	movlw	0
  5250  0BBF  00F1               	movwf	?__div_to_l_+1
  5251  0BC0  3000               	movlw	0
  5252  0BC1  00F0               	movwf	?__div_to_l_
  5253  0BC2  0008               	return
  5254  0BC3                     l1862:	
  5255  0BC3  3001               	movlw	1
  5256  0BC4  00F6               	movwf	??__div_to_l_
  5257  0BC5                     u2865:	
  5258  0BC5  1003               	clrc
  5259  0BC6  0DA0               	rlf	__div_to_l_@quot,f
  5260  0BC7  0DA1               	rlf	__div_to_l_@quot+1,f
  5261  0BC8  0DA2               	rlf	__div_to_l_@quot+2,f
  5262  0BC9  0DA3               	rlf	__div_to_l_@quot+3,f
  5263  0BCA  0BF6               	decfsz	??__div_to_l_,f
  5264  0BCB  2BC5               	goto	u2865
  5265  0BCC  3001               	movlw	1
  5266  0BCD  02A5               	subwf	__div_to_l_@exp1,f
  5267  0BCE                     l384:	
  5268  0BCE  0825               	movf	__div_to_l_@exp1,w
  5269  0BCF  1D03               	btfss	3,2
  5270  0BD0  2BC3               	goto	l1862
  5271  0BD1                     l1864:	
  5272  0BD1  0823               	movf	__div_to_l_@quot+3,w
  5273  0BD2  00F3               	movwf	?__div_to_l_+3
  5274  0BD3  0822               	movf	__div_to_l_@quot+2,w
  5275  0BD4  00F2               	movwf	?__div_to_l_+2
  5276  0BD5  0821               	movf	__div_to_l_@quot+1,w
  5277  0BD6  00F1               	movwf	?__div_to_l_+1
  5278  0BD7  0820               	movf	__div_to_l_@quot,w
  5279  0BD8  00F0               	movwf	?__div_to_l_
  5280  0BD9  0008               	return
  5281  0BDA                     __end_of__div_to_l_:	
  5282                           
  5283                           	psect	text11
  5284  0008                     __ptext11:	
  5285 ;; *************** function ___wmul *****************
  5286 ;; Defined at:
  5287 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;  multiplier      2    0[COMMON] unsigned int 
  5290 ;;  multiplicand    2    2[COMMON] unsigned int 
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;  product         2    4[COMMON] unsigned int 
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  2    0[COMMON] unsigned int 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5302 ;;      Params:         4       0       0       0       0
  5303 ;;      Locals:         2       0       0       0       0
  5304 ;;      Temps:          0       0       0       0       0
  5305 ;;      Totals:         6       0       0       0       0
  5306 ;;Total ram usage:        6 bytes
  5307 ;; Hardware stack levels used:    1
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_printf
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           
  5316                           ;psect for function ___wmul
  5317  0008                     ___wmul:	
  5318                           
  5319                           ;incstack = 0
  5320                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5321  0008  01F4               	clrf	___wmul@product
  5322  0009  01F5               	clrf	___wmul@product+1
  5323  000A                     l1870:	
  5324  000A  1C70               	btfss	___wmul@multiplier,0
  5325  000B  2812               	goto	l218
  5326  000C  0872               	movf	___wmul@multiplicand,w
  5327  000D  07F4               	addwf	___wmul@product,f
  5328  000E  1803               	skipnc
  5329  000F  0AF5               	incf	___wmul@product+1,f
  5330  0010  0873               	movf	___wmul@multiplicand+1,w
  5331  0011  07F5               	addwf	___wmul@product+1,f
  5332  0012                     l218:	
  5333  0012  3001               	movlw	1
  5334  0013                     u2895:	
  5335  0013  1003               	clrc
  5336  0014  0DF2               	rlf	___wmul@multiplicand,f
  5337  0015  0DF3               	rlf	___wmul@multiplicand+1,f
  5338  0016  3EFF               	addlw	-1
  5339  0017  1D03               	skipz
  5340  0018  2813               	goto	u2895
  5341  0019  3001               	movlw	1
  5342  001A                     u2905:	
  5343  001A  1003               	clrc
  5344  001B  0CF1               	rrf	___wmul@multiplier+1,f
  5345  001C  0CF0               	rrf	___wmul@multiplier,f
  5346  001D  3EFF               	addlw	-1
  5347  001E  1D03               	skipz
  5348  001F  281A               	goto	u2905
  5349  0020  0870               	movf	___wmul@multiplier,w
  5350  0021  0471               	iorwf	___wmul@multiplier+1,w
  5351  0022  1D03               	btfss	3,2
  5352  0023  280A               	goto	l1870
  5353  0024  0875               	movf	___wmul@product+1,w
  5354  0025  00F1               	movwf	?___wmul+1
  5355  0026  0874               	movf	___wmul@product,w
  5356  0027  00F0               	movwf	?___wmul
  5357  0028  0008               	return
  5358  0029                     __end_of___wmul:	
  5359                           
  5360                           	psect	text12
  5361  1506                     __ptext12:	
  5362 ;; *************** function ___lltoft *****************
  5363 ;; Defined at:
  5364 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lltoft.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  c               4    8[COMMON] unsigned long 
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  exp             1   13[COMMON] unsigned char 
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  3    8[COMMON] float 
  5371 ;; Registers used:
  5372 ;;		wreg, status,2, status,0, pclath, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5378 ;;      Params:         4       0       0       0       0
  5379 ;;      Locals:         1       0       0       0       0
  5380 ;;      Temps:          1       0       0       0       0
  5381 ;;      Totals:         6       0       0       0       0
  5382 ;;Total ram usage:        6 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; Hardware stack levels required when called:    1
  5385 ;; This function calls:
  5386 ;;		___ftpack
  5387 ;; This function is called by:
  5388 ;;		_printf
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           
  5393                           ;psect for function ___lltoft
  5394  1506                     ___lltoft:	
  5395                           
  5396                           ;incstack = 0
  5397                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5398  1506  308E               	movlw	142
  5399  1507  00FC               	movwf	??___lltoft
  5400  1508  087C               	movf	??___lltoft,w
  5401  1509  00FD               	movwf	___lltoft@exp
  5402  150A                     l2008:	
  5403  150A  30FF               	movlw	255
  5404  150B  057B               	andwf	___lltoft@c+3,w
  5405  150C  1903               	btfsc	3,2
  5406  150D  2D1C               	goto	l2010
  5407  150E  3001               	movlw	1
  5408  150F                     u3225:	
  5409  150F  1003               	clrc
  5410  1510  0CFB               	rrf	___lltoft@c+3,f
  5411  1511  0CFA               	rrf	___lltoft@c+2,f
  5412  1512  0CF9               	rrf	___lltoft@c+1,f
  5413  1513  0CF8               	rrf	___lltoft@c,f
  5414  1514  3EFF               	addlw	-1
  5415  1515  1D03               	skipz
  5416  1516  2D0F               	goto	u3225
  5417  1517  3001               	movlw	1
  5418  1518  00FC               	movwf	??___lltoft
  5419  1519  087C               	movf	??___lltoft,w
  5420  151A  07FD               	addwf	___lltoft@exp,f
  5421  151B  2D0A               	goto	l2008
  5422  151C                     l2010:	
  5423  151C  0878               	movf	___lltoft@c,w
  5424  151D  00F0               	movwf	___ftpack@arg
  5425  151E  0879               	movf	___lltoft@c+1,w
  5426  151F  00F1               	movwf	___ftpack@arg+1
  5427  1520  087A               	movf	___lltoft@c+2,w
  5428  1521  00F2               	movwf	___ftpack@arg+2
  5429  1522  087D               	movf	___lltoft@exp,w
  5430  1523  00FC               	movwf	??___lltoft
  5431  1524  087C               	movf	??___lltoft,w
  5432  1525  00F3               	movwf	___ftpack@exp
  5433  1526  01F4               	clrf	___ftpack@sign
  5434  1527  160A  118A  26DE   	fcall	___ftpack
  5435  152A  0870               	movf	?___ftpack,w
  5436  152B  00F8               	movwf	?___lltoft
  5437  152C  0871               	movf	?___ftpack+1,w
  5438  152D  00F9               	movwf	?___lltoft+1
  5439  152E  0872               	movf	?___ftpack+2,w
  5440  152F  00FA               	movwf	?___lltoft+2
  5441  1530  0008               	return
  5442  1531                     __end_of___lltoft:	
  5443                           
  5444                           	psect	text13
  5445  157C                     __ptext13:	
  5446 ;; *************** function ___llmod *****************
  5447 ;; Defined at:
  5448 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\llmod.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  divisor         4    0[COMMON] unsigned long 
  5451 ;;  dividend        4    4[COMMON] unsigned long 
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;  counter         1    9[COMMON] unsigned char 
  5454 ;; Return value:  Size  Location     Type
  5455 ;;                  4    0[COMMON] unsigned long 
  5456 ;; Registers used:
  5457 ;;		wreg, status,2, status,0
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5463 ;;      Params:         8       0       0       0       0
  5464 ;;      Locals:         1       0       0       0       0
  5465 ;;      Temps:          1       0       0       0       0
  5466 ;;      Totals:        10       0       0       0       0
  5467 ;;Total ram usage:       10 bytes
  5468 ;; Hardware stack levels used:    1
  5469 ;; This function calls:
  5470 ;;		Nothing
  5471 ;; This function is called by:
  5472 ;;		_printf
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           
  5477                           ;psect for function ___llmod
  5478  157C                     ___llmod:	
  5479                           
  5480                           ;incstack = 0
  5481                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5482  157C  0873               	movf	___llmod@divisor+3,w
  5483  157D  0472               	iorwf	___llmod@divisor+2,w
  5484  157E  0471               	iorwf	___llmod@divisor+1,w
  5485  157F  0470               	iorwf	___llmod@divisor,w
  5486  1580  1903               	skipnz
  5487  1581  2DBF               	goto	l2000
  5488  1582  01F9               	clrf	___llmod@counter
  5489  1583  0AF9               	incf	___llmod@counter,f
  5490  1584                     l1990:	
  5491  1584  1BF3               	btfsc	___llmod@divisor+3,7
  5492  1585  2D94               	goto	l1992
  5493  1586  3001               	movlw	1
  5494  1587  00F8               	movwf	??___llmod
  5495  1588                     u3175:	
  5496  1588  1003               	clrc
  5497  1589  0DF0               	rlf	___llmod@divisor,f
  5498  158A  0DF1               	rlf	___llmod@divisor+1,f
  5499  158B  0DF2               	rlf	___llmod@divisor+2,f
  5500  158C  0DF3               	rlf	___llmod@divisor+3,f
  5501  158D  0BF8               	decfsz	??___llmod,f
  5502  158E  2D88               	goto	u3175
  5503  158F  3001               	movlw	1
  5504  1590  00F8               	movwf	??___llmod
  5505  1591  0878               	movf	??___llmod,w
  5506  1592  07F9               	addwf	___llmod@counter,f
  5507  1593  2D84               	goto	l1990
  5508  1594                     l1992:	
  5509  1594  0873               	movf	___llmod@divisor+3,w
  5510  1595  0277               	subwf	___llmod@dividend+3,w
  5511  1596  1D03               	skipz
  5512  1597  2DA2               	goto	u3195
  5513  1598  0872               	movf	___llmod@divisor+2,w
  5514  1599  0276               	subwf	___llmod@dividend+2,w
  5515  159A  1D03               	skipz
  5516  159B  2DA2               	goto	u3195
  5517  159C  0871               	movf	___llmod@divisor+1,w
  5518  159D  0275               	subwf	___llmod@dividend+1,w
  5519  159E  1D03               	skipz
  5520  159F  2DA2               	goto	u3195
  5521  15A0  0870               	movf	___llmod@divisor,w
  5522  15A1  0274               	subwf	___llmod@dividend,w
  5523  15A2                     u3195:	
  5524  15A2  1C03               	skipc
  5525  15A3  2DB2               	goto	l1996
  5526  15A4  0870               	movf	___llmod@divisor,w
  5527  15A5  02F4               	subwf	___llmod@dividend,f
  5528  15A6  0871               	movf	___llmod@divisor+1,w
  5529  15A7  1C03               	skipc
  5530  15A8  0F71               	incfsz	___llmod@divisor+1,w
  5531  15A9  02F5               	subwf	___llmod@dividend+1,f
  5532  15AA  0872               	movf	___llmod@divisor+2,w
  5533  15AB  1C03               	skipc
  5534  15AC  0F72               	incfsz	___llmod@divisor+2,w
  5535  15AD  02F6               	subwf	___llmod@dividend+2,f
  5536  15AE  0873               	movf	___llmod@divisor+3,w
  5537  15AF  1C03               	skipc
  5538  15B0  0F73               	incfsz	___llmod@divisor+3,w
  5539  15B1  02F7               	subwf	___llmod@dividend+3,f
  5540  15B2                     l1996:	
  5541  15B2  3001               	movlw	1
  5542  15B3                     u3205:	
  5543  15B3  1003               	clrc
  5544  15B4  0CF3               	rrf	___llmod@divisor+3,f
  5545  15B5  0CF2               	rrf	___llmod@divisor+2,f
  5546  15B6  0CF1               	rrf	___llmod@divisor+1,f
  5547  15B7  0CF0               	rrf	___llmod@divisor,f
  5548  15B8  3EFF               	addlw	-1
  5549  15B9  1D03               	skipz
  5550  15BA  2DB3               	goto	u3205
  5551  15BB  3001               	movlw	1
  5552  15BC  02F9               	subwf	___llmod@counter,f
  5553  15BD  1D03               	btfss	3,2
  5554  15BE  2D94               	goto	l1992
  5555  15BF                     l2000:	
  5556  15BF  0877               	movf	___llmod@dividend+3,w
  5557  15C0  00F3               	movwf	?___llmod+3
  5558  15C1  0876               	movf	___llmod@dividend+2,w
  5559  15C2  00F2               	movwf	?___llmod+2
  5560  15C3  0875               	movf	___llmod@dividend+1,w
  5561  15C4  00F1               	movwf	?___llmod+1
  5562  15C5  0874               	movf	___llmod@dividend,w
  5563  15C6  00F0               	movwf	?___llmod
  5564  15C7  0008               	return
  5565  15C8                     __end_of___llmod:	
  5566                           
  5567                           	psect	text14
  5568  1680                     __ptext14:	
  5569 ;; *************** function ___lldiv *****************
  5570 ;; Defined at:
  5571 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lldiv.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;  divisor         4    0[COMMON] unsigned long 
  5574 ;;  dividend        4    4[COMMON] unsigned long 
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;  quotient        4    9[COMMON] unsigned long 
  5577 ;;  counter         1   13[COMMON] unsigned char 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  4    0[COMMON] unsigned long 
  5580 ;; Registers used:
  5581 ;;		wreg, status,2, status,0
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5587 ;;      Params:         8       0       0       0       0
  5588 ;;      Locals:         5       0       0       0       0
  5589 ;;      Temps:          1       0       0       0       0
  5590 ;;      Totals:        14       0       0       0       0
  5591 ;;Total ram usage:       14 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; This function calls:
  5594 ;;		Nothing
  5595 ;; This function is called by:
  5596 ;;		_printf
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           
  5601                           ;psect for function ___lldiv
  5602  1680                     ___lldiv:	
  5603                           
  5604                           ;incstack = 0
  5605                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5606  1680  3000               	movlw	0
  5607  1681  00FC               	movwf	___lldiv@quotient+3
  5608  1682  3000               	movlw	0
  5609  1683  00FB               	movwf	___lldiv@quotient+2
  5610  1684  3000               	movlw	0
  5611  1685  00FA               	movwf	___lldiv@quotient+1
  5612  1686  3000               	movlw	0
  5613  1687  00F9               	movwf	___lldiv@quotient
  5614  1688  0873               	movf	___lldiv@divisor+3,w
  5615  1689  0472               	iorwf	___lldiv@divisor+2,w
  5616  168A  0471               	iorwf	___lldiv@divisor+1,w
  5617  168B  0470               	iorwf	___lldiv@divisor,w
  5618  168C  1903               	skipnz
  5619  168D  2ED5               	goto	l1980
  5620  168E  01FD               	clrf	___lldiv@counter
  5621  168F  0AFD               	incf	___lldiv@counter,f
  5622  1690                     l1966:	
  5623  1690  1BF3               	btfsc	___lldiv@divisor+3,7
  5624  1691  2EA0               	goto	l1968
  5625  1692  3001               	movlw	1
  5626  1693  00F8               	movwf	??___lldiv
  5627  1694                     u3105:	
  5628  1694  1003               	clrc
  5629  1695  0DF0               	rlf	___lldiv@divisor,f
  5630  1696  0DF1               	rlf	___lldiv@divisor+1,f
  5631  1697  0DF2               	rlf	___lldiv@divisor+2,f
  5632  1698  0DF3               	rlf	___lldiv@divisor+3,f
  5633  1699  0BF8               	decfsz	??___lldiv,f
  5634  169A  2E94               	goto	u3105
  5635  169B  3001               	movlw	1
  5636  169C  00F8               	movwf	??___lldiv
  5637  169D  0878               	movf	??___lldiv,w
  5638  169E  07FD               	addwf	___lldiv@counter,f
  5639  169F  2E90               	goto	l1966
  5640  16A0                     l1968:	
  5641  16A0  3001               	movlw	1
  5642  16A1  00F8               	movwf	??___lldiv
  5643  16A2                     u3125:	
  5644  16A2  1003               	clrc
  5645  16A3  0DF9               	rlf	___lldiv@quotient,f
  5646  16A4  0DFA               	rlf	___lldiv@quotient+1,f
  5647  16A5  0DFB               	rlf	___lldiv@quotient+2,f
  5648  16A6  0DFC               	rlf	___lldiv@quotient+3,f
  5649  16A7  0BF8               	decfsz	??___lldiv,f
  5650  16A8  2EA2               	goto	u3125
  5651  16A9  0873               	movf	___lldiv@divisor+3,w
  5652  16AA  0277               	subwf	___lldiv@dividend+3,w
  5653  16AB  1D03               	skipz
  5654  16AC  2EB7               	goto	u3135
  5655  16AD  0872               	movf	___lldiv@divisor+2,w
  5656  16AE  0276               	subwf	___lldiv@dividend+2,w
  5657  16AF  1D03               	skipz
  5658  16B0  2EB7               	goto	u3135
  5659  16B1  0871               	movf	___lldiv@divisor+1,w
  5660  16B2  0275               	subwf	___lldiv@dividend+1,w
  5661  16B3  1D03               	skipz
  5662  16B4  2EB7               	goto	u3135
  5663  16B5  0870               	movf	___lldiv@divisor,w
  5664  16B6  0274               	subwf	___lldiv@dividend,w
  5665  16B7                     u3135:	
  5666  16B7  1C03               	skipc
  5667  16B8  2EC8               	goto	l1976
  5668  16B9  0870               	movf	___lldiv@divisor,w
  5669  16BA  02F4               	subwf	___lldiv@dividend,f
  5670  16BB  0871               	movf	___lldiv@divisor+1,w
  5671  16BC  1C03               	skipc
  5672  16BD  0F71               	incfsz	___lldiv@divisor+1,w
  5673  16BE  02F5               	subwf	___lldiv@dividend+1,f
  5674  16BF  0872               	movf	___lldiv@divisor+2,w
  5675  16C0  1C03               	skipc
  5676  16C1  0F72               	incfsz	___lldiv@divisor+2,w
  5677  16C2  02F6               	subwf	___lldiv@dividend+2,f
  5678  16C3  0873               	movf	___lldiv@divisor+3,w
  5679  16C4  1C03               	skipc
  5680  16C5  0F73               	incfsz	___lldiv@divisor+3,w
  5681  16C6  02F7               	subwf	___lldiv@dividend+3,f
  5682  16C7  1479               	bsf	___lldiv@quotient,0
  5683  16C8                     l1976:	
  5684  16C8  3001               	movlw	1
  5685  16C9                     u3145:	
  5686  16C9  1003               	clrc
  5687  16CA  0CF3               	rrf	___lldiv@divisor+3,f
  5688  16CB  0CF2               	rrf	___lldiv@divisor+2,f
  5689  16CC  0CF1               	rrf	___lldiv@divisor+1,f
  5690  16CD  0CF0               	rrf	___lldiv@divisor,f
  5691  16CE  3EFF               	addlw	-1
  5692  16CF  1D03               	skipz
  5693  16D0  2EC9               	goto	u3145
  5694  16D1  3001               	movlw	1
  5695  16D2  02FD               	subwf	___lldiv@counter,f
  5696  16D3  1D03               	btfss	3,2
  5697  16D4  2EA0               	goto	l1968
  5698  16D5                     l1980:	
  5699  16D5  087C               	movf	___lldiv@quotient+3,w
  5700  16D6  00F3               	movwf	?___lldiv+3
  5701  16D7  087B               	movf	___lldiv@quotient+2,w
  5702  16D8  00F2               	movwf	?___lldiv+2
  5703  16D9  087A               	movf	___lldiv@quotient+1,w
  5704  16DA  00F1               	movwf	?___lldiv+1
  5705  16DB  0879               	movf	___lldiv@quotient,w
  5706  16DC  00F0               	movwf	?___lldiv
  5707  16DD  0008               	return
  5708  16DE                     __end_of___lldiv:	
  5709                           
  5710                           	psect	text15
  5711  0029                     __ptext15:	
  5712 ;; *************** function ___fttol *****************
  5713 ;; Defined at:
  5714 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  f1              3   32[BANK0 ] float 
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;  lval            4   41[BANK0 ] unsigned long 
  5719 ;;  exp1            1   45[BANK0 ] unsigned char 
  5720 ;;  sign1           1   40[BANK0 ] unsigned char 
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  4   32[BANK0 ] long 
  5723 ;; Registers used:
  5724 ;;		wreg, status,2, status,0
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5730 ;;      Params:         0       4       0       0       0
  5731 ;;      Locals:         0       6       0       0       0
  5732 ;;      Temps:          0       4       0       0       0
  5733 ;;      Totals:         0      14       0       0       0
  5734 ;;Total ram usage:       14 bytes
  5735 ;; Hardware stack levels used:    1
  5736 ;; This function calls:
  5737 ;;		Nothing
  5738 ;; This function is called by:
  5739 ;;		_printf
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           
  5744                           ;psect for function ___fttol
  5745  0029                     ___fttol:	
  5746                           
  5747                           ;incstack = 0
  5748                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5749  0029  1283               	bcf	3,5	;RP0=0, select bank0
  5750  002A  1303               	bcf	3,6	;RP1=0, select bank0
  5751  002B  0840               	movf	___fttol@f1,w
  5752  002C  00C4               	movwf	??___fttol
  5753  002D  0841               	movf	___fttol@f1+1,w
  5754  002E  00C5               	movwf	??___fttol+1
  5755  002F  0842               	movf	___fttol@f1+2,w
  5756  0030  00C6               	movwf	??___fttol+2
  5757  0031  1003               	clrc
  5758  0032  0D45               	rlf	??___fttol+1,w
  5759  0033  0D46               	rlf	??___fttol+2,w
  5760  0034  00C7               	movwf	??___fttol+3
  5761  0035  0847               	movf	??___fttol+3,w
  5762  0036  00CD               	movwf	___fttol@exp1
  5763  0037  084D               	movf	___fttol@exp1,w
  5764  0038  1D03               	btfss	3,2
  5765  0039  2843               	goto	l1924
  5766  003A  3000               	movlw	0
  5767  003B  00C3               	movwf	?___fttol+3
  5768  003C  3000               	movlw	0
  5769  003D  00C2               	movwf	?___fttol+2
  5770  003E  3000               	movlw	0
  5771  003F  00C1               	movwf	?___fttol+1
  5772  0040  3000               	movlw	0
  5773  0041  00C0               	movwf	?___fttol
  5774  0042  0008               	return
  5775  0043                     l1924:	
  5776  0043  0840               	movf	___fttol@f1,w
  5777  0044  00C4               	movwf	??___fttol
  5778  0045  0841               	movf	___fttol@f1+1,w
  5779  0046  00C5               	movwf	??___fttol+1
  5780  0047  0842               	movf	___fttol@f1+2,w
  5781  0048  00C6               	movwf	??___fttol+2
  5782  0049  3017               	movlw	23
  5783  004A                     u3005:	
  5784  004A  1003               	clrc
  5785  004B  0CC6               	rrf	??___fttol+2,f
  5786  004C  0CC5               	rrf	??___fttol+1,f
  5787  004D  0CC4               	rrf	??___fttol,f
  5788  004E  3EFF               	addlw	-1
  5789  004F  1D03               	skipz
  5790  0050  284A               	goto	u3005
  5791  0051  0844               	movf	??___fttol,w
  5792  0052  00C7               	movwf	??___fttol+3
  5793  0053  0847               	movf	??___fttol+3,w
  5794  0054  00C8               	movwf	___fttol@sign1
  5795  0055  17C1               	bsf	___fttol@f1+1,7
  5796  0056  30FF               	movlw	255
  5797  0057  05C0               	andwf	___fttol@f1,f
  5798  0058  30FF               	movlw	255
  5799  0059  05C1               	andwf	___fttol@f1+1,f
  5800  005A  3000               	movlw	0
  5801  005B  05C2               	andwf	___fttol@f1+2,f
  5802  005C  0840               	movf	___fttol@f1,w
  5803  005D  00C9               	movwf	___fttol@lval
  5804  005E  0841               	movf	___fttol@f1+1,w
  5805  005F  00CA               	movwf	___fttol@lval+1
  5806  0060  0842               	movf	___fttol@f1+2,w
  5807  0061  00CB               	movwf	___fttol@lval+2
  5808  0062  01CC               	clrf	___fttol@lval+3
  5809  0063  308E               	movlw	142
  5810  0064  02CD               	subwf	___fttol@exp1,f
  5811  0065  1FCD               	btfss	___fttol@exp1,7
  5812  0066  2885               	goto	l1944
  5813  0067  084D               	movf	___fttol@exp1,w
  5814  0068  3A80               	xorlw	128
  5815  0069  3E8F               	addlw	143
  5816  006A  1803               	skipnc
  5817  006B  2875               	goto	l1942
  5818  006C  3000               	movlw	0
  5819  006D  00C3               	movwf	?___fttol+3
  5820  006E  3000               	movlw	0
  5821  006F  00C2               	movwf	?___fttol+2
  5822  0070  3000               	movlw	0
  5823  0071  00C1               	movwf	?___fttol+1
  5824  0072  3000               	movlw	0
  5825  0073  00C0               	movwf	?___fttol
  5826  0074  0008               	return
  5827  0075                     l1942:	
  5828  0075  3001               	movlw	1
  5829  0076                     u3035:	
  5830  0076  1003               	clrc
  5831  0077  0CCC               	rrf	___fttol@lval+3,f
  5832  0078  0CCB               	rrf	___fttol@lval+2,f
  5833  0079  0CCA               	rrf	___fttol@lval+1,f
  5834  007A  0CC9               	rrf	___fttol@lval,f
  5835  007B  3EFF               	addlw	-1
  5836  007C  1D03               	skipz
  5837  007D  2876               	goto	u3035
  5838  007E  3001               	movlw	1
  5839  007F  00C4               	movwf	??___fttol
  5840  0080  0844               	movf	??___fttol,w
  5841  0081  07CD               	addwf	___fttol@exp1,f
  5842  0082  1903               	btfsc	3,2
  5843  0083  28A0               	goto	l1952
  5844  0084  2875               	goto	l1942
  5845  0085                     l1944:	
  5846  0085  3018               	movlw	24
  5847  0086  024D               	subwf	___fttol@exp1,w
  5848  0087  1C03               	skipc
  5849  0088  289D               	goto	l504
  5850  0089  3000               	movlw	0
  5851  008A  00C3               	movwf	?___fttol+3
  5852  008B  3000               	movlw	0
  5853  008C  00C2               	movwf	?___fttol+2
  5854  008D  3000               	movlw	0
  5855  008E  00C1               	movwf	?___fttol+1
  5856  008F  3000               	movlw	0
  5857  0090  00C0               	movwf	?___fttol
  5858  0091  0008               	return
  5859  0092                     l1950:	
  5860  0092  3001               	movlw	1
  5861  0093  00C4               	movwf	??___fttol
  5862  0094                     u3065:	
  5863  0094  1003               	clrc
  5864  0095  0DC9               	rlf	___fttol@lval,f
  5865  0096  0DCA               	rlf	___fttol@lval+1,f
  5866  0097  0DCB               	rlf	___fttol@lval+2,f
  5867  0098  0DCC               	rlf	___fttol@lval+3,f
  5868  0099  0BC4               	decfsz	??___fttol,f
  5869  009A  2894               	goto	u3065
  5870  009B  3001               	movlw	1
  5871  009C  02CD               	subwf	___fttol@exp1,f
  5872  009D                     l504:	
  5873  009D  084D               	movf	___fttol@exp1,w
  5874  009E  1D03               	btfss	3,2
  5875  009F  2892               	goto	l1950
  5876  00A0                     l1952:	
  5877  00A0  0848               	movf	___fttol@sign1,w
  5878  00A1  1903               	btfsc	3,2
  5879  00A2  28AE               	goto	l1956
  5880  00A3  09C9               	comf	___fttol@lval,f
  5881  00A4  09CA               	comf	___fttol@lval+1,f
  5882  00A5  09CB               	comf	___fttol@lval+2,f
  5883  00A6  09CC               	comf	___fttol@lval+3,f
  5884  00A7  0AC9               	incf	___fttol@lval,f
  5885  00A8  1903               	skipnz
  5886  00A9  0ACA               	incf	___fttol@lval+1,f
  5887  00AA  1903               	skipnz
  5888  00AB  0ACB               	incf	___fttol@lval+2,f
  5889  00AC  1903               	skipnz
  5890  00AD  0ACC               	incf	___fttol@lval+3,f
  5891  00AE                     l1956:	
  5892  00AE  084C               	movf	___fttol@lval+3,w
  5893  00AF  00C3               	movwf	?___fttol+3
  5894  00B0  084B               	movf	___fttol@lval+2,w
  5895  00B1  00C2               	movwf	?___fttol+2
  5896  00B2  084A               	movf	___fttol@lval+1,w
  5897  00B3  00C1               	movwf	?___fttol+1
  5898  00B4  0849               	movf	___fttol@lval,w
  5899  00B5  00C0               	movwf	?___fttol
  5900  00B6  0008               	return
  5901  00B7                     __end_of___fttol:	
  5902                           
  5903                           	psect	text16
  5904  14E5                     __ptext16:	
  5905 ;; *************** function ___ftsub *****************
  5906 ;; Defined at:
  5907 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftsub.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  f2              3   52[BANK0 ] float 
  5910 ;;  f1              3   55[BANK0 ] float 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;		None
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  3   52[BANK0 ] float 
  5915 ;; Registers used:
  5916 ;;		wreg, status,2, status,0, pclath, cstack
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5922 ;;      Params:         0       6       0       0       0
  5923 ;;      Locals:         0       0       0       0       0
  5924 ;;      Temps:          0       0       0       0       0
  5925 ;;      Totals:         0       6       0       0       0
  5926 ;;Total ram usage:        6 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; Hardware stack levels required when called:    2
  5929 ;; This function calls:
  5930 ;;		___ftadd
  5931 ;; This function is called by:
  5932 ;;		_printf
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           
  5937                           ;psect for function ___ftsub
  5938  14E5                     ___ftsub:	
  5939                           
  5940                           ;incstack = 0
  5941                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5942  14E5  1283               	bcf	3,5	;RP0=0, select bank0
  5943  14E6  1303               	bcf	3,6	;RP1=0, select bank0
  5944  14E7  0856               	movf	___ftsub@f2+2,w
  5945  14E8  0455               	iorwf	___ftsub@f2+1,w
  5946  14E9  0454               	iorwf	___ftsub@f2,w
  5947  14EA  1903               	skipnz
  5948  14EB  2CEE               	goto	l1914
  5949  14EC  3080               	movlw	128
  5950  14ED  06D6               	xorwf	___ftsub@f2+2,f
  5951  14EE                     l1914:	
  5952  14EE  0857               	movf	___ftsub@f1,w
  5953  14EF  00C7               	movwf	___ftadd@f1
  5954  14F0  0858               	movf	___ftsub@f1+1,w
  5955  14F1  00C8               	movwf	___ftadd@f1+1
  5956  14F2  0859               	movf	___ftsub@f1+2,w
  5957  14F3  00C9               	movwf	___ftadd@f1+2
  5958  14F4  0854               	movf	___ftsub@f2,w
  5959  14F5  00CA               	movwf	___ftadd@f2
  5960  14F6  0855               	movf	___ftsub@f2+1,w
  5961  14F7  00CB               	movwf	___ftadd@f2+1
  5962  14F8  0856               	movf	___ftsub@f2+2,w
  5963  14F9  00CC               	movwf	___ftadd@f2+2
  5964  14FA  120A  158A  219F   	fcall	___ftadd
  5965  14FD  1283               	bcf	3,5	;RP0=0, select bank0
  5966  14FE  1303               	bcf	3,6	;RP1=0, select bank0
  5967  14FF  0847               	movf	?___ftadd,w
  5968  1500  00D4               	movwf	?___ftsub
  5969  1501  0848               	movf	?___ftadd+1,w
  5970  1502  00D5               	movwf	?___ftsub+1
  5971  1503  0849               	movf	?___ftadd+2,w
  5972  1504  00D6               	movwf	?___ftsub+2
  5973  1505  0008               	return
  5974  1506                     __end_of___ftsub:	
  5975                           
  5976                           	psect	text17
  5977  099F                     __ptext17:	
  5978 ;; *************** function ___ftadd *****************
  5979 ;; Defined at:
  5980 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;  f1              3   39[BANK0 ] float 
  5983 ;;  f2              3   42[BANK0 ] float 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  exp1            1   51[BANK0 ] unsigned char 
  5986 ;;  exp2            1   50[BANK0 ] unsigned char 
  5987 ;;  sign            1   49[BANK0 ] unsigned char 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  3   39[BANK0 ] float 
  5990 ;; Registers used:
  5991 ;;		wreg, status,2, status,0, pclath, cstack
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5997 ;;      Params:         0       6       0       0       0
  5998 ;;      Locals:         0       3       0       0       0
  5999 ;;      Temps:          0       4       0       0       0
  6000 ;;      Totals:         0      13       0       0       0
  6001 ;;Total ram usage:       13 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:    1
  6004 ;; This function calls:
  6005 ;;		___ftpack
  6006 ;; This function is called by:
  6007 ;;		_main
  6008 ;;		_printf
  6009 ;;		___ftsub
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           
  6014                           ;psect for function ___ftadd
  6015  099F                     ___ftadd:	
  6016                           
  6017                           ;incstack = 0
  6018                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6019  099F  1283               	bcf	3,5	;RP0=0, select bank0
  6020  09A0  1303               	bcf	3,6	;RP1=0, select bank0
  6021  09A1  0847               	movf	___ftadd@f1,w
  6022  09A2  00CD               	movwf	??___ftadd
  6023  09A3  0848               	movf	___ftadd@f1+1,w
  6024  09A4  00CE               	movwf	??___ftadd+1
  6025  09A5  0849               	movf	___ftadd@f1+2,w
  6026  09A6  00CF               	movwf	??___ftadd+2
  6027  09A7  1003               	clrc
  6028  09A8  0D4E               	rlf	??___ftadd+1,w
  6029  09A9  0D4F               	rlf	??___ftadd+2,w
  6030  09AA  00D0               	movwf	??___ftadd+3
  6031  09AB  0850               	movf	??___ftadd+3,w
  6032  09AC  00D3               	movwf	___ftadd@exp1
  6033  09AD  084A               	movf	___ftadd@f2,w
  6034  09AE  00CD               	movwf	??___ftadd
  6035  09AF  084B               	movf	___ftadd@f2+1,w
  6036  09B0  00CE               	movwf	??___ftadd+1
  6037  09B1  084C               	movf	___ftadd@f2+2,w
  6038  09B2  00CF               	movwf	??___ftadd+2
  6039  09B3  1003               	clrc
  6040  09B4  0D4E               	rlf	??___ftadd+1,w
  6041  09B5  0D4F               	rlf	??___ftadd+2,w
  6042  09B6  00D0               	movwf	??___ftadd+3
  6043  09B7  0850               	movf	??___ftadd+3,w
  6044  09B8  00D2               	movwf	___ftadd@exp2
  6045  09B9  0853               	movf	___ftadd@exp1,w
  6046  09BA  1903               	btfsc	3,2
  6047  09BB  29C8               	goto	l1584
  6048  09BC  0852               	movf	___ftadd@exp2,w
  6049  09BD  0253               	subwf	___ftadd@exp1,w
  6050  09BE  1803               	skipnc
  6051  09BF  29CF               	goto	l1588
  6052  09C0  0353               	decf	___ftadd@exp1,w
  6053  09C1  3AFF               	xorlw	255
  6054  09C2  0752               	addwf	___ftadd@exp2,w
  6055  09C3  00CD               	movwf	??___ftadd
  6056  09C4  3019               	movlw	25
  6057  09C5  024D               	subwf	??___ftadd,w
  6058  09C6  1C03               	skipc
  6059  09C7  29CF               	goto	l1588
  6060  09C8                     l1584:	
  6061  09C8  084A               	movf	___ftadd@f2,w
  6062  09C9  00C7               	movwf	?___ftadd
  6063  09CA  084B               	movf	___ftadd@f2+1,w
  6064  09CB  00C8               	movwf	?___ftadd+1
  6065  09CC  084C               	movf	___ftadd@f2+2,w
  6066  09CD  00C9               	movwf	?___ftadd+2
  6067  09CE  0008               	return
  6068  09CF                     l1588:	
  6069  09CF  0852               	movf	___ftadd@exp2,w
  6070  09D0  1903               	btfsc	3,2
  6071  09D1  0008               	return
  6072  09D2  0853               	movf	___ftadd@exp1,w
  6073  09D3  0252               	subwf	___ftadd@exp2,w
  6074  09D4  1803               	skipnc
  6075  09D5  29DE               	goto	l1594
  6076  09D6  0352               	decf	___ftadd@exp2,w
  6077  09D7  3AFF               	xorlw	255
  6078  09D8  0753               	addwf	___ftadd@exp1,w
  6079  09D9  00CD               	movwf	??___ftadd
  6080  09DA  3019               	movlw	25
  6081  09DB  024D               	subwf	??___ftadd,w
  6082  09DC  1803               	btfsc	3,0
  6083  09DD  0008               	return
  6084  09DE                     l1594:	
  6085  09DE  3006               	movlw	6
  6086  09DF  00CD               	movwf	??___ftadd
  6087  09E0  084D               	movf	??___ftadd,w
  6088  09E1  00D1               	movwf	___ftadd@sign
  6089  09E2  1BC9               	btfsc	___ftadd@f1+2,7
  6090  09E3  17D1               	bsf	___ftadd@sign,7
  6091  09E4  1BCC               	btfsc	___ftadd@f2+2,7
  6092  09E5  1751               	bsf	___ftadd@sign,6
  6093  09E6  17C8               	bsf	___ftadd@f1+1,7
  6094  09E7  30FF               	movlw	255
  6095  09E8  05C7               	andwf	___ftadd@f1,f
  6096  09E9  30FF               	movlw	255
  6097  09EA  05C8               	andwf	___ftadd@f1+1,f
  6098  09EB  3000               	movlw	0
  6099  09EC  05C9               	andwf	___ftadd@f1+2,f
  6100  09ED  17CB               	bsf	___ftadd@f2+1,7
  6101  09EE  30FF               	movlw	255
  6102  09EF  05CA               	andwf	___ftadd@f2,f
  6103  09F0  30FF               	movlw	255
  6104  09F1  05CB               	andwf	___ftadd@f2+1,f
  6105  09F2  3000               	movlw	0
  6106  09F3  05CC               	andwf	___ftadd@f2+2,f
  6107  09F4  0852               	movf	___ftadd@exp2,w
  6108  09F5  0253               	subwf	___ftadd@exp1,w
  6109  09F6  1803               	skipnc
  6110  09F7  2A1E               	goto	l1616
  6111  09F8                     l1606:	
  6112  09F8  3001               	movlw	1
  6113  09F9                     u2265:	
  6114  09F9  1003               	clrc
  6115  09FA  0DCA               	rlf	___ftadd@f2,f
  6116  09FB  0DCB               	rlf	___ftadd@f2+1,f
  6117  09FC  0DCC               	rlf	___ftadd@f2+2,f
  6118  09FD  3EFF               	addlw	-1
  6119  09FE  1D03               	skipz
  6120  09FF  29F9               	goto	u2265
  6121  0A00  3001               	movlw	1
  6122  0A01  02D2               	subwf	___ftadd@exp2,f
  6123  0A02  0852               	movf	___ftadd@exp2,w
  6124  0A03  0653               	xorwf	___ftadd@exp1,w
  6125  0A04  1903               	skipnz
  6126  0A05  2A19               	goto	l1614
  6127  0A06  3001               	movlw	1
  6128  0A07  02D1               	subwf	___ftadd@sign,f
  6129  0A08  0851               	movf	___ftadd@sign,w
  6130  0A09  3907               	andlw	7
  6131  0A0A  1903               	btfsc	3,2
  6132  0A0B  2A19               	goto	l1614
  6133  0A0C  29F8               	goto	l1606
  6134  0A0D                     l1612:	
  6135  0A0D  3001               	movlw	1
  6136  0A0E                     u2295:	
  6137  0A0E  1003               	clrc
  6138  0A0F  0CC9               	rrf	___ftadd@f1+2,f
  6139  0A10  0CC8               	rrf	___ftadd@f1+1,f
  6140  0A11  0CC7               	rrf	___ftadd@f1,f
  6141  0A12  3EFF               	addlw	-1
  6142  0A13  1D03               	skipz
  6143  0A14  2A0E               	goto	u2295
  6144  0A15  3001               	movlw	1
  6145  0A16  00CD               	movwf	??___ftadd
  6146  0A17  084D               	movf	??___ftadd,w
  6147  0A18  07D3               	addwf	___ftadd@exp1,f
  6148  0A19                     l1614:	
  6149  0A19  0853               	movf	___ftadd@exp1,w
  6150  0A1A  0652               	xorwf	___ftadd@exp2,w
  6151  0A1B  1903               	btfsc	3,2
  6152  0A1C  2A47               	goto	l427
  6153  0A1D  2A0D               	goto	l1612
  6154  0A1E                     l1616:	
  6155  0A1E  0853               	movf	___ftadd@exp1,w
  6156  0A1F  0252               	subwf	___ftadd@exp2,w
  6157  0A20  1803               	skipnc
  6158  0A21  2A47               	goto	l427
  6159  0A22                     l1618:	
  6160  0A22  3001               	movlw	1
  6161  0A23                     u2325:	
  6162  0A23  1003               	clrc
  6163  0A24  0DC7               	rlf	___ftadd@f1,f
  6164  0A25  0DC8               	rlf	___ftadd@f1+1,f
  6165  0A26  0DC9               	rlf	___ftadd@f1+2,f
  6166  0A27  3EFF               	addlw	-1
  6167  0A28  1D03               	skipz
  6168  0A29  2A23               	goto	u2325
  6169  0A2A  3001               	movlw	1
  6170  0A2B  02D3               	subwf	___ftadd@exp1,f
  6171  0A2C  0852               	movf	___ftadd@exp2,w
  6172  0A2D  0653               	xorwf	___ftadd@exp1,w
  6173  0A2E  1903               	skipnz
  6174  0A2F  2A43               	goto	l1626
  6175  0A30  3001               	movlw	1
  6176  0A31  02D1               	subwf	___ftadd@sign,f
  6177  0A32  0851               	movf	___ftadd@sign,w
  6178  0A33  3907               	andlw	7
  6179  0A34  1903               	btfsc	3,2
  6180  0A35  2A43               	goto	l1626
  6181  0A36  2A22               	goto	l1618
  6182  0A37                     l1624:	
  6183  0A37  3001               	movlw	1
  6184  0A38                     u2355:	
  6185  0A38  1003               	clrc
  6186  0A39  0CCC               	rrf	___ftadd@f2+2,f
  6187  0A3A  0CCB               	rrf	___ftadd@f2+1,f
  6188  0A3B  0CCA               	rrf	___ftadd@f2,f
  6189  0A3C  3EFF               	addlw	-1
  6190  0A3D  1D03               	skipz
  6191  0A3E  2A38               	goto	u2355
  6192  0A3F  3001               	movlw	1
  6193  0A40  00CD               	movwf	??___ftadd
  6194  0A41  084D               	movf	??___ftadd,w
  6195  0A42  07D2               	addwf	___ftadd@exp2,f
  6196  0A43                     l1626:	
  6197  0A43  0853               	movf	___ftadd@exp1,w
  6198  0A44  0652               	xorwf	___ftadd@exp2,w
  6199  0A45  1D03               	skipz
  6200  0A46  2A37               	goto	l1624
  6201  0A47                     l427:	
  6202  0A47  1FD1               	btfss	___ftadd@sign,7
  6203  0A48  2A59               	goto	l1630
  6204  0A49  30FF               	movlw	255
  6205  0A4A  06C7               	xorwf	___ftadd@f1,f
  6206  0A4B  30FF               	movlw	255
  6207  0A4C  06C8               	xorwf	___ftadd@f1+1,f
  6208  0A4D  30FF               	movlw	255
  6209  0A4E  06C9               	xorwf	___ftadd@f1+2,f
  6210  0A4F  3001               	movlw	1
  6211  0A50  07C7               	addwf	___ftadd@f1,f
  6212  0A51  3000               	movlw	0
  6213  0A52  1803               	skipnc
  6214  0A53  3001               	movlw	1
  6215  0A54  07C8               	addwf	___ftadd@f1+1,f
  6216  0A55  3000               	movlw	0
  6217  0A56  1803               	skipnc
  6218  0A57  3001               	movlw	1
  6219  0A58  07C9               	addwf	___ftadd@f1+2,f
  6220  0A59                     l1630:	
  6221  0A59  1F51               	btfss	___ftadd@sign,6
  6222  0A5A  2A6B               	goto	l1634
  6223  0A5B  30FF               	movlw	255
  6224  0A5C  06CA               	xorwf	___ftadd@f2,f
  6225  0A5D  30FF               	movlw	255
  6226  0A5E  06CB               	xorwf	___ftadd@f2+1,f
  6227  0A5F  30FF               	movlw	255
  6228  0A60  06CC               	xorwf	___ftadd@f2+2,f
  6229  0A61  3001               	movlw	1
  6230  0A62  07CA               	addwf	___ftadd@f2,f
  6231  0A63  3000               	movlw	0
  6232  0A64  1803               	skipnc
  6233  0A65  3001               	movlw	1
  6234  0A66  07CB               	addwf	___ftadd@f2+1,f
  6235  0A67  3000               	movlw	0
  6236  0A68  1803               	skipnc
  6237  0A69  3001               	movlw	1
  6238  0A6A  07CC               	addwf	___ftadd@f2+2,f
  6239  0A6B                     l1634:	
  6240  0A6B  01D1               	clrf	___ftadd@sign
  6241  0A6C  0847               	movf	___ftadd@f1,w
  6242  0A6D  07CA               	addwf	___ftadd@f2,f
  6243  0A6E  0848               	movf	___ftadd@f1+1,w
  6244  0A6F  1103               	clrz
  6245  0A70  1803               	skipnc
  6246  0A71  0A48               	incf	___ftadd@f1+1,w
  6247  0A72  1D03               	btfss	3,2
  6248  0A73  07CB               	addwf	___ftadd@f2+1,f
  6249  0A74  0849               	movf	___ftadd@f1+2,w
  6250  0A75  1103               	clrz
  6251  0A76  1803               	skipnc
  6252  0A77  0A49               	incf	___ftadd@f1+2,w
  6253  0A78  1D03               	btfss	3,2
  6254  0A79  07CC               	addwf	___ftadd@f2+2,f
  6255  0A7A  1FCC               	btfss	___ftadd@f2+2,7
  6256  0A7B  2A8E               	goto	l1644
  6257  0A7C  30FF               	movlw	255
  6258  0A7D  06CA               	xorwf	___ftadd@f2,f
  6259  0A7E  30FF               	movlw	255
  6260  0A7F  06CB               	xorwf	___ftadd@f2+1,f
  6261  0A80  30FF               	movlw	255
  6262  0A81  06CC               	xorwf	___ftadd@f2+2,f
  6263  0A82  3001               	movlw	1
  6264  0A83  07CA               	addwf	___ftadd@f2,f
  6265  0A84  3000               	movlw	0
  6266  0A85  1803               	skipnc
  6267  0A86  3001               	movlw	1
  6268  0A87  07CB               	addwf	___ftadd@f2+1,f
  6269  0A88  3000               	movlw	0
  6270  0A89  1803               	skipnc
  6271  0A8A  3001               	movlw	1
  6272  0A8B  07CC               	addwf	___ftadd@f2+2,f
  6273  0A8C  01D1               	clrf	___ftadd@sign
  6274  0A8D  0AD1               	incf	___ftadd@sign,f
  6275  0A8E                     l1644:	
  6276  0A8E  084A               	movf	___ftadd@f2,w
  6277  0A8F  00F0               	movwf	___ftpack@arg
  6278  0A90  084B               	movf	___ftadd@f2+1,w
  6279  0A91  00F1               	movwf	___ftpack@arg+1
  6280  0A92  084C               	movf	___ftadd@f2+2,w
  6281  0A93  00F2               	movwf	___ftpack@arg+2
  6282  0A94  0853               	movf	___ftadd@exp1,w
  6283  0A95  00CD               	movwf	??___ftadd
  6284  0A96  084D               	movf	??___ftadd,w
  6285  0A97  00F3               	movwf	___ftpack@exp
  6286  0A98  0851               	movf	___ftadd@sign,w
  6287  0A99  00CE               	movwf	??___ftadd+1
  6288  0A9A  084E               	movf	??___ftadd+1,w
  6289  0A9B  00F4               	movwf	___ftpack@sign
  6290  0A9C  160A  118A  26DE   	fcall	___ftpack
  6291  0A9F  0870               	movf	?___ftpack,w
  6292  0AA0  1283               	bcf	3,5	;RP0=0, select bank0
  6293  0AA1  1303               	bcf	3,6	;RP1=0, select bank0
  6294  0AA2  00C7               	movwf	?___ftadd
  6295  0AA3  0871               	movf	?___ftpack+1,w
  6296  0AA4  00C8               	movwf	?___ftadd+1
  6297  0AA5  0872               	movf	?___ftpack+2,w
  6298  0AA6  00C9               	movwf	?___ftadd+2
  6299  0AA7  0008               	return
  6300  0AA8                     __end_of___ftadd:	
  6301                           
  6302                           	psect	text18
  6303  14CA                     __ptext18:	
  6304 ;; *************** function ___ftneg *****************
  6305 ;; Defined at:
  6306 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftneg.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;  f1              3    0[COMMON] float 
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;		None
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  3    0[COMMON] float 
  6313 ;; Registers used:
  6314 ;;		wreg
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6320 ;;      Params:         3       0       0       0       0
  6321 ;;      Locals:         0       0       0       0       0
  6322 ;;      Temps:          0       0       0       0       0
  6323 ;;      Totals:         3       0       0       0       0
  6324 ;;Total ram usage:        3 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; This function calls:
  6327 ;;		Nothing
  6328 ;; This function is called by:
  6329 ;;		_main
  6330 ;;		_printf
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           
  6335                           ;psect for function ___ftneg
  6336  14CA                     ___ftneg:	
  6337                           
  6338                           ;incstack = 0
  6339                           ; Regs used in ___ftneg: [wreg]
  6340  14CA  0872               	movf	___ftneg@f1+2,w
  6341  14CB  0471               	iorwf	___ftneg@f1+1,w
  6342  14CC  0470               	iorwf	___ftneg@f1,w
  6343  14CD  1903               	skipnz
  6344  14CE  0008               	return
  6345  14CF  3080               	movlw	128
  6346  14D0  06F2               	xorwf	___ftneg@f1+2,f
  6347  14D1  0008               	return
  6348  14D2                     __end_of___ftneg:	
  6349                           
  6350                           	psect	text19
  6351  1623                     __ptext19:	
  6352 ;; *************** function ___ftge *****************
  6353 ;; Defined at:
  6354 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;  ff1             3    0[COMMON] float 
  6357 ;;  ff2             3    3[COMMON] float 
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;		None
  6360 ;; Return value:  Size  Location     Type
  6361 ;;		None               void
  6362 ;; Registers used:
  6363 ;;		wreg, status,2, status,0
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6369 ;;      Params:         6       0       0       0       0
  6370 ;;      Locals:         0       0       0       0       0
  6371 ;;      Temps:          6       0       0       0       0
  6372 ;;      Totals:        12       0       0       0       0
  6373 ;;Total ram usage:       12 bytes
  6374 ;; Hardware stack levels used:    1
  6375 ;; This function calls:
  6376 ;;		Nothing
  6377 ;; This function is called by:
  6378 ;;		_printf
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           
  6383                           ;psect for function ___ftge
  6384  1623                     ___ftge:	
  6385                           
  6386                           ;incstack = 0
  6387                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6388  1623  1FF2               	btfss	___ftge@ff1+2,7
  6389  1624  2E4A               	goto	l1886
  6390  1625  3000               	movlw	0
  6391  1626  00F6               	movwf	??___ftge
  6392  1627  3000               	movlw	0
  6393  1628  00F7               	movwf	??___ftge+1
  6394  1629  3080               	movlw	128
  6395  162A  00F8               	movwf	??___ftge+2
  6396  162B  0970               	comf	___ftge@ff1,w
  6397  162C  00F9               	movwf	??___ftge+3
  6398  162D  0971               	comf	___ftge@ff1+1,w
  6399  162E  00FA               	movwf	??___ftge+4
  6400  162F  0972               	comf	___ftge@ff1+2,w
  6401  1630  00FB               	movwf	??___ftge+5
  6402  1631  0AF9               	incf	??___ftge+3,f
  6403  1632  1903               	skipnz
  6404  1633  0AFA               	incf	??___ftge+4,f
  6405  1634  1903               	skipnz
  6406  1635  0AFB               	incf	??___ftge+5,f
  6407  1636  0879               	movf	??___ftge+3,w
  6408  1637  07F6               	addwf	??___ftge,f
  6409  1638  087A               	movf	??___ftge+4,w
  6410  1639  1803               	skipnc
  6411  163A  0F7A               	incfsz	??___ftge+4,w
  6412  163B  2E3D               	goto	u2931
  6413  163C  2E3E               	goto	u2932
  6414  163D                     u2931:	
  6415  163D  07F7               	addwf	??___ftge+1,f
  6416  163E                     u2932:	
  6417  163E  087B               	movf	??___ftge+5,w
  6418  163F  1803               	skipnc
  6419  1640  0F7B               	incfsz	??___ftge+5,w
  6420  1641  2E43               	goto	u2933
  6421  1642  2E44               	goto	u2934
  6422  1643                     u2933:	
  6423  1643  07F8               	addwf	??___ftge+2,f
  6424  1644                     u2934:	
  6425  1644  0876               	movf	??___ftge,w
  6426  1645  00F0               	movwf	___ftge@ff1
  6427  1646  0877               	movf	??___ftge+1,w
  6428  1647  00F1               	movwf	___ftge@ff1+1
  6429  1648  0878               	movf	??___ftge+2,w
  6430  1649  00F2               	movwf	___ftge@ff1+2
  6431  164A                     l1886:	
  6432  164A  1FF5               	btfss	___ftge@ff2+2,7
  6433  164B  2E71               	goto	l1890
  6434  164C  3000               	movlw	0
  6435  164D  00F6               	movwf	??___ftge
  6436  164E  3000               	movlw	0
  6437  164F  00F7               	movwf	??___ftge+1
  6438  1650  3080               	movlw	128
  6439  1651  00F8               	movwf	??___ftge+2
  6440  1652  0973               	comf	___ftge@ff2,w
  6441  1653  00F9               	movwf	??___ftge+3
  6442  1654  0974               	comf	___ftge@ff2+1,w
  6443  1655  00FA               	movwf	??___ftge+4
  6444  1656  0975               	comf	___ftge@ff2+2,w
  6445  1657  00FB               	movwf	??___ftge+5
  6446  1658  0AF9               	incf	??___ftge+3,f
  6447  1659  1903               	skipnz
  6448  165A  0AFA               	incf	??___ftge+4,f
  6449  165B  1903               	skipnz
  6450  165C  0AFB               	incf	??___ftge+5,f
  6451  165D  0879               	movf	??___ftge+3,w
  6452  165E  07F6               	addwf	??___ftge,f
  6453  165F  087A               	movf	??___ftge+4,w
  6454  1660  1803               	skipnc
  6455  1661  0F7A               	incfsz	??___ftge+4,w
  6456  1662  2E64               	goto	u2951
  6457  1663  2E65               	goto	u2952
  6458  1664                     u2951:	
  6459  1664  07F7               	addwf	??___ftge+1,f
  6460  1665                     u2952:	
  6461  1665  087B               	movf	??___ftge+5,w
  6462  1666  1803               	skipnc
  6463  1667  0F7B               	incfsz	??___ftge+5,w
  6464  1668  2E6A               	goto	u2953
  6465  1669  2E6B               	goto	u2954
  6466  166A                     u2953:	
  6467  166A  07F8               	addwf	??___ftge+2,f
  6468  166B                     u2954:	
  6469  166B  0876               	movf	??___ftge,w
  6470  166C  00F3               	movwf	___ftge@ff2
  6471  166D  0877               	movf	??___ftge+1,w
  6472  166E  00F4               	movwf	___ftge@ff2+1
  6473  166F  0878               	movf	??___ftge+2,w
  6474  1670  00F5               	movwf	___ftge@ff2+2
  6475  1671                     l1890:	
  6476  1671  3080               	movlw	128
  6477  1672  06F2               	xorwf	___ftge@ff1+2,f
  6478  1673  3080               	movlw	128
  6479  1674  06F5               	xorwf	___ftge@ff2+2,f
  6480  1675  0875               	movf	___ftge@ff2+2,w
  6481  1676  0272               	subwf	___ftge@ff1+2,w
  6482  1677  1D03               	skipz
  6483  1678  0008               	return
  6484  1679  0874               	movf	___ftge@ff2+1,w
  6485  167A  0271               	subwf	___ftge@ff1+1,w
  6486  167B  1D03               	skipz
  6487  167C  0008               	return
  6488  167D  0873               	movf	___ftge@ff2,w
  6489  167E  0270               	subwf	___ftge@ff1,w
  6490  167F  0008               	return
  6491  1680                     __end_of___ftge:	
  6492                           
  6493                           	psect	text20
  6494  14C3                     __ptext20:	
  6495 ;; *************** function _iniciar_uart *****************
  6496 ;; Defined at:
  6497 ;;		line 9 in file "config.h"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;		None
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;		None
  6502 ;; Return value:  Size  Location     Type
  6503 ;;                  1    wreg      void 
  6504 ;; Registers used:
  6505 ;;		None
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6511 ;;      Params:         0       0       0       0       0
  6512 ;;      Locals:         0       0       0       0       0
  6513 ;;      Temps:          0       0       0       0       0
  6514 ;;      Totals:         0       0       0       0       0
  6515 ;;Total ram usage:        0 bytes
  6516 ;; Hardware stack levels used:    1
  6517 ;; This function calls:
  6518 ;;		Nothing
  6519 ;; This function is called by:
  6520 ;;		_main
  6521 ;; This function uses a non-reentrant model
  6522 ;;
  6523                           
  6524                           
  6525                           ;psect for function _iniciar_uart
  6526  14C3                     _iniciar_uart:	
  6527                           
  6528                           ;config.h: 10: TXSTAbits.TXEN = 1;
  6529                           
  6530                           ;incstack = 0
  6531                           ; Regs used in _iniciar_uart: []
  6532  14C3  1683               	bsf	3,5	;RP0=1, select bank1
  6533  14C4  1303               	bcf	3,6	;RP1=0, select bank1
  6534  14C5  1698               	bsf	24,5	;volatile
  6535                           
  6536                           ;config.h: 11: RCSTAbits.SPEN = 1;
  6537  14C6  1283               	bcf	3,5	;RP0=0, select bank0
  6538  14C7  1303               	bcf	3,6	;RP1=0, select bank0
  6539  14C8  1798               	bsf	24,7	;volatile
  6540  14C9  0008               	return
  6541  14CA                     __end_of_iniciar_uart:	
  6542                           
  6543                           	psect	text21
  6544  174A                     __ptext21:	
  6545 ;; *************** function ___ftdiv *****************
  6546 ;; Defined at:
  6547 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  f2              3    8[COMMON] float 
  6550 ;;  f1              3   11[COMMON] float 
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;  f3              3    5[BANK0 ] float 
  6553 ;;  sign            1    9[BANK0 ] unsigned char 
  6554 ;;  exp             1    8[BANK0 ] unsigned char 
  6555 ;;  cntr            1    4[BANK0 ] unsigned char 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  3    8[COMMON] float 
  6558 ;; Registers used:
  6559 ;;		wreg, status,2, status,0, pclath, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6565 ;;      Params:         6       0       0       0       0
  6566 ;;      Locals:         0       6       0       0       0
  6567 ;;      Temps:          0       4       0       0       0
  6568 ;;      Totals:         6      10       0       0       0
  6569 ;;Total ram usage:       16 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; Hardware stack levels required when called:    1
  6572 ;; This function calls:
  6573 ;;		___ftpack
  6574 ;; This function is called by:
  6575 ;;		_main
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           
  6580                           ;psect for function ___ftdiv
  6581  174A                     ___ftdiv:	
  6582                           
  6583                           ;incstack = 0
  6584                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6585  174A  087B               	movf	___ftdiv@f1,w
  6586  174B  1283               	bcf	3,5	;RP0=0, select bank0
  6587  174C  1303               	bcf	3,6	;RP1=0, select bank0
  6588  174D  00A0               	movwf	??___ftdiv
  6589  174E  087C               	movf	___ftdiv@f1+1,w
  6590  174F  00A1               	movwf	??___ftdiv+1
  6591  1750  087D               	movf	___ftdiv@f1+2,w
  6592  1751  00A2               	movwf	??___ftdiv+2
  6593  1752  1003               	clrc
  6594  1753  0D21               	rlf	??___ftdiv+1,w
  6595  1754  0D22               	rlf	??___ftdiv+2,w
  6596  1755  00A3               	movwf	??___ftdiv+3
  6597  1756  0823               	movf	??___ftdiv+3,w
  6598  1757  00A8               	movwf	___ftdiv@exp
  6599  1758  0828               	movf	___ftdiv@exp,w
  6600  1759  1D03               	btfss	3,2
  6601  175A  2F62               	goto	l2170
  6602  175B  3000               	movlw	0
  6603  175C  00F8               	movwf	?___ftdiv
  6604  175D  3000               	movlw	0
  6605  175E  00F9               	movwf	?___ftdiv+1
  6606  175F  3000               	movlw	0
  6607  1760  00FA               	movwf	?___ftdiv+2
  6608  1761  0008               	return
  6609  1762                     l2170:	
  6610  1762  0878               	movf	___ftdiv@f2,w
  6611  1763  00A0               	movwf	??___ftdiv
  6612  1764  0879               	movf	___ftdiv@f2+1,w
  6613  1765  00A1               	movwf	??___ftdiv+1
  6614  1766  087A               	movf	___ftdiv@f2+2,w
  6615  1767  00A2               	movwf	??___ftdiv+2
  6616  1768  1003               	clrc
  6617  1769  0D21               	rlf	??___ftdiv+1,w
  6618  176A  0D22               	rlf	??___ftdiv+2,w
  6619  176B  00A3               	movwf	??___ftdiv+3
  6620  176C  0823               	movf	??___ftdiv+3,w
  6621  176D  00A9               	movwf	___ftdiv@sign
  6622  176E  0829               	movf	___ftdiv@sign,w
  6623  176F  1D03               	btfss	3,2
  6624  1770  2F78               	goto	l2176
  6625  1771  3000               	movlw	0
  6626  1772  00F8               	movwf	?___ftdiv
  6627  1773  3000               	movlw	0
  6628  1774  00F9               	movwf	?___ftdiv+1
  6629  1775  3000               	movlw	0
  6630  1776  00FA               	movwf	?___ftdiv+2
  6631  1777  0008               	return
  6632  1778                     l2176:	
  6633  1778  3000               	movlw	0
  6634  1779  00A5               	movwf	___ftdiv@f3
  6635  177A  3000               	movlw	0
  6636  177B  00A6               	movwf	___ftdiv@f3+1
  6637  177C  3000               	movlw	0
  6638  177D  00A7               	movwf	___ftdiv@f3+2
  6639  177E  3089               	movlw	137
  6640  177F  0729               	addwf	___ftdiv@sign,w
  6641  1780  00A0               	movwf	??___ftdiv
  6642  1781  0820               	movf	??___ftdiv,w
  6643  1782  02A8               	subwf	___ftdiv@exp,f
  6644  1783  087B               	movf	___ftdiv@f1,w
  6645  1784  00A0               	movwf	??___ftdiv
  6646  1785  087C               	movf	___ftdiv@f1+1,w
  6647  1786  00A1               	movwf	??___ftdiv+1
  6648  1787  087D               	movf	___ftdiv@f1+2,w
  6649  1788  00A2               	movwf	??___ftdiv+2
  6650  1789  3010               	movlw	16
  6651  178A                     u3565:	
  6652  178A  1003               	clrc
  6653  178B  0CA2               	rrf	??___ftdiv+2,f
  6654  178C  0CA1               	rrf	??___ftdiv+1,f
  6655  178D  0CA0               	rrf	??___ftdiv,f
  6656  178E  3EFF               	addlw	-1
  6657  178F  1D03               	skipz
  6658  1790  2F8A               	goto	u3565
  6659  1791  0820               	movf	??___ftdiv,w
  6660  1792  00A3               	movwf	??___ftdiv+3
  6661  1793  0823               	movf	??___ftdiv+3,w
  6662  1794  00A9               	movwf	___ftdiv@sign
  6663  1795  0878               	movf	___ftdiv@f2,w
  6664  1796  00A0               	movwf	??___ftdiv
  6665  1797  0879               	movf	___ftdiv@f2+1,w
  6666  1798  00A1               	movwf	??___ftdiv+1
  6667  1799  087A               	movf	___ftdiv@f2+2,w
  6668  179A  00A2               	movwf	??___ftdiv+2
  6669  179B  3010               	movlw	16
  6670  179C                     u3575:	
  6671  179C  1003               	clrc
  6672  179D  0CA2               	rrf	??___ftdiv+2,f
  6673  179E  0CA1               	rrf	??___ftdiv+1,f
  6674  179F  0CA0               	rrf	??___ftdiv,f
  6675  17A0  3EFF               	addlw	-1
  6676  17A1  1D03               	skipz
  6677  17A2  2F9C               	goto	u3575
  6678  17A3  0820               	movf	??___ftdiv,w
  6679  17A4  00A3               	movwf	??___ftdiv+3
  6680  17A5  0823               	movf	??___ftdiv+3,w
  6681  17A6  06A9               	xorwf	___ftdiv@sign,f
  6682  17A7  3080               	movlw	128
  6683  17A8  00A0               	movwf	??___ftdiv
  6684  17A9  0820               	movf	??___ftdiv,w
  6685  17AA  05A9               	andwf	___ftdiv@sign,f
  6686  17AB  17FC               	bsf	___ftdiv@f1+1,7
  6687  17AC  30FF               	movlw	255
  6688  17AD  05FB               	andwf	___ftdiv@f1,f
  6689  17AE  30FF               	movlw	255
  6690  17AF  05FC               	andwf	___ftdiv@f1+1,f
  6691  17B0  3000               	movlw	0
  6692  17B1  05FD               	andwf	___ftdiv@f1+2,f
  6693  17B2  17F9               	bsf	___ftdiv@f2+1,7
  6694  17B3  30FF               	movlw	255
  6695  17B4  05F8               	andwf	___ftdiv@f2,f
  6696  17B5  30FF               	movlw	255
  6697  17B6  05F9               	andwf	___ftdiv@f2+1,f
  6698  17B7  3000               	movlw	0
  6699  17B8  05FA               	andwf	___ftdiv@f2+2,f
  6700  17B9  3018               	movlw	24
  6701  17BA  00A0               	movwf	??___ftdiv
  6702  17BB  0820               	movf	??___ftdiv,w
  6703  17BC  00A4               	movwf	___ftdiv@cntr
  6704  17BD                     l2190:	
  6705  17BD  3001               	movlw	1
  6706  17BE                     u3585:	
  6707  17BE  1003               	clrc
  6708  17BF  0DA5               	rlf	___ftdiv@f3,f
  6709  17C0  0DA6               	rlf	___ftdiv@f3+1,f
  6710  17C1  0DA7               	rlf	___ftdiv@f3+2,f
  6711  17C2  3EFF               	addlw	-1
  6712  17C3  1D03               	skipz
  6713  17C4  2FBE               	goto	u3585
  6714  17C5  087A               	movf	___ftdiv@f2+2,w
  6715  17C6  027D               	subwf	___ftdiv@f1+2,w
  6716  17C7  1D03               	skipz
  6717  17C8  2FCF               	goto	u3595
  6718  17C9  0879               	movf	___ftdiv@f2+1,w
  6719  17CA  027C               	subwf	___ftdiv@f1+1,w
  6720  17CB  1D03               	skipz
  6721  17CC  2FCF               	goto	u3595
  6722  17CD  0878               	movf	___ftdiv@f2,w
  6723  17CE  027B               	subwf	___ftdiv@f1,w
  6724  17CF                     u3595:	
  6725  17CF  1C03               	skipc
  6726  17D0  2FDC               	goto	l2198
  6727  17D1  0878               	movf	___ftdiv@f2,w
  6728  17D2  02FB               	subwf	___ftdiv@f1,f
  6729  17D3  0879               	movf	___ftdiv@f2+1,w
  6730  17D4  1C03               	skipc
  6731  17D5  0F79               	incfsz	___ftdiv@f2+1,w
  6732  17D6  02FC               	subwf	___ftdiv@f1+1,f
  6733  17D7  087A               	movf	___ftdiv@f2+2,w
  6734  17D8  1C03               	skipc
  6735  17D9  0A7A               	incf	___ftdiv@f2+2,w
  6736  17DA  02FD               	subwf	___ftdiv@f1+2,f
  6737  17DB  1425               	bsf	___ftdiv@f3,0
  6738  17DC                     l2198:	
  6739  17DC  3001               	movlw	1
  6740  17DD                     u3605:	
  6741  17DD  1003               	clrc
  6742  17DE  0DFB               	rlf	___ftdiv@f1,f
  6743  17DF  0DFC               	rlf	___ftdiv@f1+1,f
  6744  17E0  0DFD               	rlf	___ftdiv@f1+2,f
  6745  17E1  3EFF               	addlw	-1
  6746  17E2  1D03               	skipz
  6747  17E3  2FDD               	goto	u3605
  6748  17E4  3001               	movlw	1
  6749  17E5  02A4               	subwf	___ftdiv@cntr,f
  6750  17E6  1D03               	btfss	3,2
  6751  17E7  2FBD               	goto	l2190
  6752  17E8  0825               	movf	___ftdiv@f3,w
  6753  17E9  00F0               	movwf	___ftpack@arg
  6754  17EA  0826               	movf	___ftdiv@f3+1,w
  6755  17EB  00F1               	movwf	___ftpack@arg+1
  6756  17EC  0827               	movf	___ftdiv@f3+2,w
  6757  17ED  00F2               	movwf	___ftpack@arg+2
  6758  17EE  0828               	movf	___ftdiv@exp,w
  6759  17EF  00A0               	movwf	??___ftdiv
  6760  17F0  0820               	movf	??___ftdiv,w
  6761  17F1  00F3               	movwf	___ftpack@exp
  6762  17F2  0829               	movf	___ftdiv@sign,w
  6763  17F3  00A1               	movwf	??___ftdiv+1
  6764  17F4  0821               	movf	??___ftdiv+1,w
  6765  17F5  00F4               	movwf	___ftpack@sign
  6766  17F6  160A  118A  26DE   	fcall	___ftpack
  6767  17F9  0870               	movf	?___ftpack,w
  6768  17FA  00F8               	movwf	?___ftdiv
  6769  17FB  0871               	movf	?___ftpack+1,w
  6770  17FC  00F9               	movwf	?___ftdiv+1
  6771  17FD  0872               	movf	?___ftpack+2,w
  6772  17FE  00FA               	movwf	?___ftdiv+2
  6773  17FF  0008               	return
  6774  1800                     __end_of___ftdiv:	
  6775                           
  6776                           	psect	text22
  6777  16DE                     __ptext22:	
  6778 ;; *************** function ___ftpack *****************
  6779 ;; Defined at:
  6780 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  6781 ;; Parameters:    Size  Location     Type
  6782 ;;  arg             3    0[COMMON] unsigned um
  6783 ;;  exp             1    3[COMMON] unsigned char 
  6784 ;;  sign            1    4[COMMON] unsigned char 
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;		None
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  3    0[COMMON] float 
  6789 ;; Registers used:
  6790 ;;		wreg, status,2, status,0
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6796 ;;      Params:         5       0       0       0       0
  6797 ;;      Locals:         0       0       0       0       0
  6798 ;;      Temps:          3       0       0       0       0
  6799 ;;      Totals:         8       0       0       0       0
  6800 ;;Total ram usage:        8 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; This function calls:
  6803 ;;		Nothing
  6804 ;; This function is called by:
  6805 ;;		___ftadd
  6806 ;;		___ftdiv
  6807 ;;		___ftmul
  6808 ;;		___lltoft
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           
  6813                           ;psect for function ___ftpack
  6814  16DE                     ___ftpack:	
  6815                           
  6816                           ;incstack = 0
  6817                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6818  16DE  0873               	movf	___ftpack@exp,w
  6819  16DF  1903               	btfsc	3,2
  6820  16E0  2EE6               	goto	l1454
  6821  16E1  0872               	movf	___ftpack@arg+2,w
  6822  16E2  0471               	iorwf	___ftpack@arg+1,w
  6823  16E3  0470               	iorwf	___ftpack@arg,w
  6824  16E4  1D03               	skipz
  6825  16E5  2EF9               	goto	l1460
  6826  16E6                     l1454:	
  6827  16E6  3000               	movlw	0
  6828  16E7  00F0               	movwf	?___ftpack
  6829  16E8  3000               	movlw	0
  6830  16E9  00F1               	movwf	?___ftpack+1
  6831  16EA  3000               	movlw	0
  6832  16EB  00F2               	movwf	?___ftpack+2
  6833  16EC  0008               	return
  6834  16ED                     l1458:	
  6835  16ED  3001               	movlw	1
  6836  16EE  00F5               	movwf	??___ftpack
  6837  16EF  0875               	movf	??___ftpack,w
  6838  16F0  07F3               	addwf	___ftpack@exp,f
  6839  16F1  3001               	movlw	1
  6840  16F2                     u1865:	
  6841  16F2  1003               	clrc
  6842  16F3  0CF2               	rrf	___ftpack@arg+2,f
  6843  16F4  0CF1               	rrf	___ftpack@arg+1,f
  6844  16F5  0CF0               	rrf	___ftpack@arg,f
  6845  16F6  3EFF               	addlw	-1
  6846  16F7  1D03               	skipz
  6847  16F8  2EF2               	goto	u1865
  6848  16F9                     l1460:	
  6849  16F9  30FE               	movlw	254
  6850  16FA  0572               	andwf	___ftpack@arg+2,w
  6851  16FB  1903               	btfsc	3,2
  6852  16FC  2F14               	goto	l396
  6853  16FD  2EED               	goto	l1458
  6854  16FE                     l1462:	
  6855  16FE  3001               	movlw	1
  6856  16FF  00F5               	movwf	??___ftpack
  6857  1700  0875               	movf	??___ftpack,w
  6858  1701  07F3               	addwf	___ftpack@exp,f
  6859  1702  3001               	movlw	1
  6860  1703  07F0               	addwf	___ftpack@arg,f
  6861  1704  3000               	movlw	0
  6862  1705  1803               	skipnc
  6863  1706  3001               	movlw	1
  6864  1707  07F1               	addwf	___ftpack@arg+1,f
  6865  1708  3000               	movlw	0
  6866  1709  1803               	skipnc
  6867  170A  3001               	movlw	1
  6868  170B  07F2               	addwf	___ftpack@arg+2,f
  6869  170C  3001               	movlw	1
  6870  170D                     u1885:	
  6871  170D  1003               	clrc
  6872  170E  0CF2               	rrf	___ftpack@arg+2,f
  6873  170F  0CF1               	rrf	___ftpack@arg+1,f
  6874  1710  0CF0               	rrf	___ftpack@arg,f
  6875  1711  3EFF               	addlw	-1
  6876  1712  1D03               	skipz
  6877  1713  2F0D               	goto	u1885
  6878  1714                     l396:	
  6879  1714  30FF               	movlw	255
  6880  1715  0572               	andwf	___ftpack@arg+2,w
  6881  1716  1903               	btfsc	3,2
  6882  1717  2F23               	goto	l1470
  6883  1718  2EFE               	goto	l1462
  6884  1719                     l1468:	
  6885  1719  3001               	movlw	1
  6886  171A  02F3               	subwf	___ftpack@exp,f
  6887  171B  3001               	movlw	1
  6888  171C                     u1905:	
  6889  171C  1003               	clrc
  6890  171D  0DF0               	rlf	___ftpack@arg,f
  6891  171E  0DF1               	rlf	___ftpack@arg+1,f
  6892  171F  0DF2               	rlf	___ftpack@arg+2,f
  6893  1720  3EFF               	addlw	-1
  6894  1721  1D03               	skipz
  6895  1722  2F1C               	goto	u1905
  6896  1723                     l1470:	
  6897  1723  1BF1               	btfsc	___ftpack@arg+1,7
  6898  1724  2F29               	goto	l403
  6899  1725  3002               	movlw	2
  6900  1726  0273               	subwf	___ftpack@exp,w
  6901  1727  1803               	skipnc
  6902  1728  2F19               	goto	l1468
  6903  1729                     l403:	
  6904  1729  1873               	btfsc	___ftpack@exp,0
  6905  172A  2F31               	goto	l404
  6906  172B  30FF               	movlw	255
  6907  172C  05F0               	andwf	___ftpack@arg,f
  6908  172D  307F               	movlw	127
  6909  172E  05F1               	andwf	___ftpack@arg+1,f
  6910  172F  30FF               	movlw	255
  6911  1730  05F2               	andwf	___ftpack@arg+2,f
  6912  1731                     l404:	
  6913  1731  1003               	clrc
  6914  1732  0CF3               	rrf	___ftpack@exp,f
  6915  1733  0873               	movf	___ftpack@exp,w
  6916  1734  00F5               	movwf	??___ftpack
  6917  1735  01F6               	clrf	??___ftpack+1
  6918  1736  01F7               	clrf	??___ftpack+2
  6919  1737  3010               	movlw	16
  6920  1738                     u1945:	
  6921  1738  1003               	clrc
  6922  1739  0DF5               	rlf	??___ftpack,f
  6923  173A  0DF6               	rlf	??___ftpack+1,f
  6924  173B  0DF7               	rlf	??___ftpack+2,f
  6925  173C  3EFF               	addlw	-1
  6926  173D  1D03               	skipz
  6927  173E  2F38               	goto	u1945
  6928  173F  0875               	movf	??___ftpack,w
  6929  1740  04F0               	iorwf	___ftpack@arg,f
  6930  1741  0876               	movf	??___ftpack+1,w
  6931  1742  04F1               	iorwf	___ftpack@arg+1,f
  6932  1743  0877               	movf	??___ftpack+2,w
  6933  1744  04F2               	iorwf	___ftpack@arg+2,f
  6934  1745  0874               	movf	___ftpack@sign,w
  6935  1746  1903               	btfsc	3,2
  6936  1747  0008               	return
  6937  1748  17F2               	bsf	___ftpack@arg+2,7
  6938  1749  0008               	return
  6939  174A                     __end_of___ftpack:	
  6940  007E                     btemp	set	126	;btemp
  6941  007E                     wtemp0	set	126


Data Sizes:
    Strings     392
    Constant    118
    Data        6
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     69      78
    BANK1            80     22      31
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_11(CODE[36]), STR_10(CODE[39]), STR_9(CODE[42]), STR_8(CODE[33]), 
		 -> STR_7(CODE[32]), STR_6(CODE[42]), STR_5(CODE[42]), STR_4(CODE[42]), 
		 -> STR_3(CODE[42]), STR_2(CODE[42]), STR_1(CODE[42]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->___ftdiv
    _printf->___lldiv
    _printf->___lltoft
    _printf->__div_to_l_
    _scale->___bmul
    _fround->___bmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___ftsub->___lltoft
    ___ftdiv->___ftpack

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   42227
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                       _iniciar_uart
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              40    35      5   33389
                                             58 BANK0     11     6      5
                                              0 BANK1     22    22      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               12     9      3    7282
                                             23 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              19    16      3    7084
                                             23 BANK0     16    13      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3623
                                              7 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                             12 COMMON     1     1      0
                                              4 BANK0      3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1250
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1360
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1170
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1829
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     477
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             32 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3144
                                             52 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2971
                                             39 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     151
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     560
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (1) _iniciar_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2093
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftadd
     ___ftneg (ARG)
     ___ftpack (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
   ___ftdiv
     ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___ftpack (ARG)
   ___ftneg
   _iniciar_uart
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftneg (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftneg (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     16      1F       7       38.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     45      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7B      12        0.0%
ABS                  0      0      7B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sun Sep 03 10:23:11 2017

                      _a 0068                        _b 0065                        pc 0002  
         ___bmul@product 0025                       l19 0802                       l92 029B  
           ___awdiv@sign 0021                       fsr 0004      ___wmul@multiplicand 0072  
           ___ftadd@exp1 0053             ___ftadd@exp2 0052             ___ftadd@sign 0051  
                    l134 07C9                      l218 0012                      l403 1729  
                    l404 1731                      l504 009D                      l427 0A47  
                    l453 083B                      l463 08C0                      l384 0BCE  
                    l376 0B85                      l396 1714                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076             ___ftdiv@cntr 0024  
           ___ftdiv@sign 0029                     l2000 15BF                     l2010 151C  
                   l2100 054E                     l2022 0296                     l2008 150A  
                   l2112 05A8                     l2122 05BE                     l2106 0554  
                   l2042 030E                     l2026 029D                     l2210 0BE1  
                   l2140 067E                     l2124 0630                     l2028 02B9  
                   l1510 15DF                     l2134 0658                     l2070 0402  
                   l1520 15E7                     l1504 15D4                     l2152 079D  
                   l2128 063E                     l2240 0CE5                     l2170 1762  
                   l1522 15F5                     l2082 0486                     l2074 0448  
                   l2066 03E5                     l2058 0378                     l2162 0271  
                   l2250 0D17                     l1460 16F9                     l1612 0A0D  
                   l1532 1616                     l2156 07AB                     l2244 0D04  
                   l2236 0CC6                     l1470 1723                     l1462 16FE  
                   l1454 16E6                     l2190 17BD                     l1630 0A59  
                   l1614 0A19                     l1606 09F8                     l2086 049D  
                   l2158 07B0                     l2176 1778                     l1624 0A37  
                   l1616 0A1E                     l1536 161E                     l1528 160B  
                   l1560 1548                     l1552 1542                     l1720 0233  
                   l1712 01A1                     l2096 04DF                     l1458 16ED  
                   l1634 0A6B                     l1626 0A43                     l1618 0A22  
                   l1810 08B5                     l1802 0898                     l1562 1556  
                   l1570 156F                     l1468 1719                     l1644 0A8E  
                   l1812 08C3                     l1804 08A8                     l1548 153B  
                   l1484 14D6                     l1660 08FA                     l2198 17DC  
                   l1822 0AC9                     l1574 1577                     l1566 1564  
                   l1654 08E4                     l1742 0E7B                     l1584 09C8  
                   l1488 14DC                     l1672 0939                     l1760 0FDD  
                   l1736 0E05                     l1594 09DE                     l1914 14EE  
                   l1770 0823                     l1754 0F67                     l1746 0E9E  
                   l1588 09CF                     l1924 0043                     l1828 0AE8  
                   l1684 0961                     l1676 0949                     l1950 0092  
                   l1942 0075                     l1870 000A                     l1862 0BC3  
                   l1854 0BA6                     l1838 0B2F                     l1952 00A0  
                   l1944 0085                     l1864 0BD1                     l1856 0BB6  
                   l1792 087C                     l1784 085C                     l1688 0971  
                   l1890 1671                     l1956 00AE                     l1980 16D5  
                   l1886 164A                     l1966 1690                     l1990 1584  
                   l1976 16C8                     l1968 16A0                     l1992 1594  
                   l1996 15B2                     STR_1 1130                     STR_2 10B2  
                   STR_3 10DC                     STR_4 1088                     STR_5 1106  
                   STR_6 1130                     STR_7 11F0                     STR_8 11CF  
                   STR_9 115A                     u2015 15EA                     u2035 15F6  
                   u2115 154B                     u3005 004A                     u2045 1602  
                   u2055 160C                     u2135 155C                     u3105 1694  
                   u2145 1565                     u3035 0076                     u2325 0A23  
                   u3125 16A2                     u3205 15B3                     u3135 16B7  
                   u2265 09F9                     u3065 0094                     u3145 16C9  
                   u3225 150F                     u2355 0A38                     u2435 0906  
                   u2525 0972                     u2445 0918                     u3405 059A  
                   u3325 040D                     u2295 0A0E                     u3175 1588  
                   u2535 097A                     u3335 0453                     u1905 171C  
                   u3195 15A2                     u2715 0899                     u2475 094A  
                   u3435 05D0             printf@tmpval 00AE                     u3605 17DD  
                   u2485 0952                     u3365 0484                     u3285 0328  
                   u2655 085E                     u3455 0647                     u1945 1738  
                   u1865 16F2                     u2905 001A                     u2745 08B7  
                   u2665 086F                     u3465 0654                     u2931 163D  
                   u2835 0BA7                     u2675 087D                     u3395 0559  
                   u2932 163E                     u1885 170D                     u3565 178A  
                   u2933 1643                     u3485 06F4                     u2934 1644  
                   u3575 179C                     u2951 1664                     u3495 075F  
                   u2952 1665                     u3585 17BE                     u2953 166A  
                   u2865 0BC5                     u2785 0B31                     u2954 166B  
                   u3595 17CF                     u2795 0B60                     u2895 0013  
                   _main 0BDA             ___ftpack@arg 0070             ___ftpack@exp 0073  
                   _suma 006B                     btemp 007E                     start 0000  
      ___bmul@multiplier 0026             ___ftmul@cntr 0035             ___ftmul@sign 0036  
           ___fttol@exp1 004D             ___fttol@lval 0049                    ?_main 0070  
        __end_of___awdiv 1623          __end_of___ftadd 0AA8                    STR_10 1184  
                  STR_11 11AB          __end_of___awmod 157C          __end_of___ftdiv 1800  
        __end_of___ftneg 14D2          __end_of___lldiv 16DE          __end_of___ftmul 099F  
        ___awdiv@divisor 0077          __end_of___llmod 15C8          __end_of___ftsub 1506  
        __end_of___fttol 00B7          ___awdiv@counter 0020                    _PORTB 0006  
                  _TRISB 0086                    _TXREG 0019             ___lltoft@exp 007D  
        __end_of_dpowers 103A                    _scale 0D35                    _resta 00BC  
          ___ftpack@sign 0074                    _putch 0801                    pclath 000A  
                  status 0003                    wtemp0 007E            ?_iniciar_uart 0070  
        __initialization 07CA             __end_of_main 0D35                   ??_main 007E  
          ___fttol@sign1 0048     __size_of__tdiv_to_l_ 00C3         ___llmod@dividend 0074  
                 ?_scale 0037         ___awdiv@dividend 0079                   ?_putch 0070  
       __end_of___ftpack 174A         __end_of___lltoft 1531           ??_iniciar_uart 0070  
       __end_of__powers_ 1061                   ___bmul 14D2                   ___ftge 1623  
                 ___wmul 0008                ??___awdiv 007B                ??___ftadd 004D  
              ??___awmod 0074                ??___ftdiv 0020                ??___ftneg 0073  
              ??___lldiv 0078                ??___ftmul 002D                ??___llmod 0078  
              ??___ftsub 007E                ??___fttol 0044                   _fround 00B7  
       ___awdiv@quotient 0022          ___awmod@divisor 0070          ___awmod@counter 0075  
                 _printf 0269    ___ftmul@f3_as_product 0032  __end_of__initialization 07FC  
             ___ftadd@f1 0047               ___ftadd@f2 004A               ___ftge@ff1 0070  
             ___ftge@ff2 0073               ___ftdiv@f1 007B               ___ftdiv@f2 0078  
             ___ftdiv@f3 0025               ___ftneg@f1 0070      ___bmul@multiplicand 0024  
             ___ftmul@f1 0027               ___ftmul@f2 002A               ___ftsub@f1 0057  
             ___ftsub@f2 0054               ___fttol@f1 0040           __pcstackCOMMON 0070  
           __pidataBANK0 14BD               ___lltoft@c 0078            __end_of_scale 1000  
          __end_of_putch 0809               __div_to_l_ 0AA8          __div_to_l_@exp1 0025  
        __div_to_l_@cntr 0024                  ??_scale 003A          __div_to_l_@quot 0020  
                ??_putch 0070               __pbssBANK0 006B               __pbssBANK1 00B6  
          __div_to_l_@f1 0070            __div_to_l_@f2 0073               __pmaintext 0BDA  
                ?___bmul 0024                  ?___ftge 0070                  ?___wmul 0070  
                ?_fround 0037                ?___ftpack 0070                  ?_printf 005A  
              ?___lltoft 0078     __end_of_iniciar_uart 14CA               __stringtab 1000  
      __end_of__npowers_ 1088          __size_of___bmul 0013          __size_of___ftge 005D  
                ___awdiv 15C8                  ___ftadd 099F                  ___awmod 1531  
                ___ftdiv 174A                  ___ftneg 14CA                  ___lldiv 1680  
        __size_of___wmul 0021                  ___ftmul 08CC                  ___llmod 157C  
                ___ftsub 14E5                  ___fttol 0029               _fround$658 0043  
             _fround$659 0040               ??___ftpack 0075          __size_of_fround 01B2  
             ??___lltoft 007C                  __ptext1 0269                  __ptext2 0D35  
                __ptext3 0801                  __ptext4 00B7                  __ptext5 08CC  
                __ptext6 14D2                  __ptext7 1531                  __ptext8 15C8  
                __ptext9 0809          __size_of_printf 0561              ?__div_to_l_ 0070  
                _dpowers 1012         ___awmod@dividend 0072     end_of_initialization 07FC  
        ___lldiv@divisor 0070          ___lldiv@counter 007D                _RCSTAbits 0018  
                printf@c 00B5                  printf@f 005A             __pstringtext 1000  
         __tdiv_to_l_@f1 0070           __tdiv_to_l_@f2 0073               _printf$661 00A0  
          ??__tdiv_to_l_ 0076                _PORTBbits 0006              ___ftdiv@exp 0028  
              _TXSTAbits 0098      __size_of__div_to_l_ 0132              ___ftmul@exp 0031  
         __end_of___bmul 14E5           __end_of___ftge 1680           __end_of___wmul 0029  
  __size_of_iniciar_uart 0007           __end_of_fround 0269           __end_of_printf 07CA  
    start_initialization 07CA      __end_of__tdiv_to_l_ 08CC          ___llmod@divisor 0070  
        ___llmod@counter 0079             _iniciar_uart 14C3                 ??___bmul 007C  
               ??___ftge 0076                 ??___wmul 0074              __pdataBANK0 0065  
               ??_fround 003A                 ??_printf 005F               fround@prec 0046  
      __size_of___ftpack 006C        __size_of___lltoft 002B                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0                 ?___awdiv 0077  
               ?___ftadd 0047                 ?___awmod 0070                 ?___ftdiv 0078  
               ?___ftneg 0070                 ?___lldiv 0070                 ?___ftmul 0027  
               ?___llmod 0070                 ?___ftsub 0054                __npowers_ 1061  
               ?___fttol 0040              __tdiv_to_l_ 0809             ??__div_to_l_ 0076  
              _scale$660 003C           __size_of_scale 02CB           __size_of_putch 0008  
         ___wmul@product 0074                 _PIR1bits 000C       __end_of__div_to_l_ 0BDA  
            __stringbase 1012        ___wmul@multiplier 0070               printf@flag 00A4  
             printf@fval 00B2               printf@prec 00A6         __size_of___awdiv 005B  
       __size_of___ftadd 0109         __size_of___awmod 004B         __size_of___ftdiv 00B6  
       __size_of___ftneg 0008         __size_of___lldiv 005E         __size_of___ftmul 00D3  
       __size_of___llmod 004C         __size_of___ftsub 0021         __size_of___fttol 008E  
               ___ftpack 16DE       __end_of__stringtab 1012                 ___lltoft 1506  
               __ptext10 0AA8                 __ptext11 0008                 __ptext20 14C3  
               __ptext12 1506                 __ptext21 174A                 __ptext13 157C  
               __ptext22 16DE                 __ptext14 1680                 __ptext15 0029  
               __ptext16 14E5                 __ptext17 099F                 __ptext18 14CA  
               __ptext19 1623                 __powers_ 103A           _multiplicacion 00B9  
               _division 00B6            __size_of_main 015B                printf@exp 00AC  
              printf@val 00A8                putch@dato 0070                 scale@scl 003F  
       __tdiv_to_l_@exp1 0025         __tdiv_to_l_@cntr 0024         __tdiv_to_l_@quot 0020  
       ___lldiv@dividend 0074                stringcode 100A                 printf@ap 00A3  
           ?__tdiv_to_l_ 0070         ___lldiv@quotient 0079                 stringtab 1000  
